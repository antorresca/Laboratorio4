

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri May 19 11:25:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Generated 09/02/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   0017DC                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _n2c
    82   0017DC  20                 	db	32
    83                           
    84                           ;initializer for _n1c
    85   0017DD  20                 	db	32
    86                           
    87                           ;initializer for _op
    88   0017DE  20                 	db	32
    89                           
    90                           ;initializer for _interfaz
    91   0017DF  08                 	db	8
    92   000000                     _LATC	set	3979
    93   000000                     _TRISC	set	3988
    94   000000                     _LATE2	set	31850
    95   000000                     _RB7	set	31759
    96   000000                     _RB6	set	31758
    97   000000                     _RB5	set	31757
    98   000000                     _PD	set	32386
    99   000000                     _RI	set	32388
   100   000000                     _TMR0ON	set	32431
   101   000000                     _GIE	set	32663
   102   000000                     _TMR0IE	set	32661
   103   000000                     _LATE1	set	31849
   104   000000                     _LATB	set	3978
   105   000000                     _LATD	set	3980
   106   000000                     _RB4	set	31756
   107   000000                     _TRISB	set	3987
   108   000000                     _TRISD	set	3989
   109   000000                     _ADCON1	set	4033
   110   000000                     _LATE0	set	31848
   111   000000                     _OSCCON	set	4051
   112   000000                     _T0CON	set	4053
   113   000000                     _TO	set	32387
   114   000000                     _RBPU	set	32655
   115   000000                     _TRISE	set	3990
   116   000000                     _TMR0IF	set	32658
   117   000000                     _TMR0	set	4054
   118   000000                     _RC6	set	31766
   119                           
   120                           	psect	smallconst
   121   000800                     __psmallconst:
   122                           	callstack 0
   123   000800  00                 	db	0
   124   000801                     STR_3:
   125   000801  20                 	db	32
   126   000802  20                 	db	32
   127   000803  20                 	db	32
   128   000804  20                 	db	32
   129   000805  20                 	db	32
   130   000806  20                 	db	32
   131   000807  20                 	db	32
   132   000808  20                 	db	32
   133   000809  20                 	db	32
   134   00080A  20                 	db	32
   135   00080B  20                 	db	32
   136   00080C  20                 	db	32
   137   00080D  20                 	db	32
   138   00080E  20                 	db	32
   139   00080F  20                 	db	32
   140   000810  20                 	db	32
   141   000811  00                 	db	0
   142   000812                     STR_6:
   143   000812  45                 	db	69	;'E'
   144   000813  6E                 	db	110	;'n'
   145   000814  20                 	db	32
   146   000815  52                 	db	82	;'R'
   147   000816  65                 	db	101	;'e'
   148   000817  73                 	db	115	;'s'
   149   000818  70                 	db	112	;'p'
   150   000819  6F                 	db	111	;'o'
   151   00081A  73                 	db	115	;'s'
   152   00081B  6F                 	db	111	;'o'
   153   00081C  00                 	db	0
   154   00081D                     STR_1:
   155   00081D  45                 	db	69	;'E'
   156   00081E  6E                 	db	110	;'n'
   157   00081F  65                 	db	101	;'e'
   158   000820  72                 	db	114	;'r'
   159   000821  67                 	db	103	;'g'
   160   000822  69                 	db	105	;'i'
   161   000823  61                 	db	97	;'a'
   162   000824  00                 	db	0
   163   000825                     STR_5:
   164   000825  49                 	db	73	;'I'
   165   000826  6E                 	db	110	;'n'
   166   000827  64                 	db	100	;'d'
   167   000828  2E                 	db	46
   168   000829  00                 	db	0
   169   00082A                     STR_4:
   170   00082A  49                 	db	73	;'I'
   171   00082B  6E                 	db	110	;'n'
   172   00082C  66                 	db	102	;'f'
   173   00082D  2E                 	db	46
   174   00082E  00                 	db	0
   175   00082F                     STR_2:
   176   00082F  4D                 	db	77	;'M'
   177   000830  43                 	db	67	;'C'
   178   000831  4C                 	db	76	;'L'
   179   000832  52                 	db	82	;'R'
   180   000833  00                 	db	0
   181   000834  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   0016F6                     __pcinit:
   187                           	callstack 0
   188   0016F6                     start_initialization:
   189                           	callstack 0
   190   0016F6                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to COMRAM (4 bytes)
   194                           ; load TBLPTR registers with __pidataCOMRAM
   195   0016F6  0EDC               	movlw	low __pidataCOMRAM
   196   0016F8  6EF6               	movwf	tblptrl,c
   197   0016FA  0E17               	movlw	high __pidataCOMRAM
   198   0016FC  6EF7               	movwf	tblptrh,c
   199   0016FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   200   001700  6EF8               	movwf	tblptru,c
   201   001702  EE00  F03F         	lfsr	0,__pdataCOMRAM
   202   001706  EE10 F004          	lfsr	1,4
   203   00170A                     copy_data0:
   204   00170A  0009               	tblrd		*+
   205   00170C  CFF5 FFEE          	movff	tablat,postinc0
   206   001710  50E5               	movf	postdec1,w,c
   207   001712  50E1               	movf	fsr1l,w,c
   208   001714  E1FA               	bnz	copy_data0
   209                           
   210                           ; Clear objects allocated to COMRAM (26 bytes)
   211   001716  EE00  F025         	lfsr	0,__pbssCOMRAM
   212   00171A  0E1A               	movlw	26
   213   00171C                     clear_0:
   214   00171C  6AEE               	clrf	postinc0,c
   215   00171E  06E8               	decf	wreg,f,c
   216   001720  E1FD               	bnz	clear_0
   217   001722                     end_of_initialization:
   218                           	callstack 0
   219   001722                     __end_of__initialization:
   220                           	callstack 0
   221   001722  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   222   001724  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   223   001726  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224   001728  6EF8               	movwf	tblptru,c
   225   00172A  0100               	movlb	0
   226   00172C  EF1B  F004         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000025                     __pbssCOMRAM:
   230                           	callstack 0
   231   000025                     _r:
   232                           	callstack 0
   233   000025                     	ds	4
   234   000029                     _partdecl:
   235                           	callstack 0
   236   000029                     	ds	4
   237   00002D                     _verificador:
   238                           	callstack 0
   239   00002D                     	ds	2
   240   00002F                     _contador:
   241                           	callstack 0
   242   00002F                     	ds	2
   243   000031                     _color:
   244                           	callstack 0
   245   000031                     	ds	2
   246   000033                     _i:
   247                           	callstack 0
   248   000033                     	ds	2
   249   000035                     _n2:
   250                           	callstack 0
   251   000035                     	ds	2
   252   000037                     _n1:
   253                           	callstack 0
   254   000037                     	ds	2
   255   000039                     _flag:
   256                           	callstack 0
   257   000039                     	ds	1
   258   00003A                     _Tecla:
   259                           	callstack 0
   260   00003A                     	ds	1
   261   00003B                     _m:
   262                           	callstack 0
   263   00003B                     	ds	4
   264                           
   265                           	psect	dataCOMRAM
   266   00003F                     __pdataCOMRAM:
   267                           	callstack 0
   268   00003F                     _n2c:
   269                           	callstack 0
   270   00003F                     	ds	1
   271   000040                     _n1c:
   272                           	callstack 0
   273   000040                     	ds	1
   274   000041                     _op:
   275                           	callstack 0
   276   000041                     	ds	1
   277   000042                     _interfaz:
   278                           	callstack 0
   279   000042                     	ds	1
   280                           
   281                           	psect	cstackCOMRAM
   282   000001                     __pcstackCOMRAM:
   283                           	callstack 0
   284   000001                     ??i2_RetardoLCD:
   285                           
   286                           ; 1 bytes @ 0x0
   287   000001                     	ds	1
   288   000002                     i2RetardoLCD@a:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x1
   292   000002                     	ds	1
   293   000003                     ??i2_EnviaDato:
   294                           
   295                           ; 1 bytes @ 0x2
   296   000003                     	ds	1
   297   000004                     i2EnviaDato@a:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x3
   301   000004                     	ds	1
   302   000005                     i2EscribeLCD_c@a:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x4
   306   000005                     	ds	1
   307   000006                     i2MensajeLCD_Word@a:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x5
   311   000006                     	ds	1
   312   000007                     ??i2_MensajeLCD_Word:
   313                           
   314                           ; 1 bytes @ 0x6
   315   000007                     	ds	1
   316   000008                     i2MensajeLCD_Word@i:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x7
   320   000008                     	ds	2
   321   00000A                     ??_ISR:
   322                           
   323                           ; 1 bytes @ 0x9
   324   00000A                     	ds	4
   325   00000E                     ??_RetardoLCD:
   326   00000E                     ??_LeerTeclado:
   327   00000E                     ??_ColorRGB:
   328   00000E                     ?___wmul:
   329                           	callstack 0
   330   00000E                     ?___lwmod:
   331                           	callstack 0
   332   00000E                     ?___lmul:
   333                           	callstack 0
   334   00000E                     ?___lldiv:
   335                           	callstack 0
   336   00000E                     ?___llmod:
   337                           	callstack 0
   338   00000E                     ___wmul@multiplier:
   339                           	callstack 0
   340   00000E                     ___lwmod@dividend:
   341                           	callstack 0
   342   00000E                     ___lmul@multiplier:
   343                           	callstack 0
   344   00000E                     ___lldiv@dividend:
   345                           	callstack 0
   346   00000E                     ___llmod@dividend:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0xD
   350   00000E                     	ds	1
   351   00000F                     RetardoLCD@a:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xE
   355   00000F                     	ds	1
   356   000010                     ??_EnviaDato:
   357   000010                     ___wmul@multiplicand:
   358                           	callstack 0
   359   000010                     ___lwmod@divisor:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0xF
   363   000010                     	ds	1
   364   000011                     EnviaDato@a:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x10
   368   000011                     	ds	1
   369   000012                     EscribeLCD_c@a:
   370                           	callstack 0
   371   000012                     DireccionaLCD@a:
   372                           	callstack 0
   373   000012                     ___lwmod@counter:
   374                           	callstack 0
   375   000012                     ___wmul@product:
   376                           	callstack 0
   377   000012                     ___lmul@multiplicand:
   378                           	callstack 0
   379   000012                     ___lldiv@divisor:
   380                           	callstack 0
   381   000012                     ___llmod@divisor:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x11
   385   000012                     	ds	1
   386   000013                     MensajeLCD_Word@a:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x12
   390   000013                     	ds	1
   391   000014                     ??_MensajeLCD_Word:
   392   000014                     ?___lwdiv:
   393                           	callstack 0
   394   000014                     ___lwdiv@dividend:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x13
   398   000014                     	ds	1
   399   000015                     MensajeLCD_Word@i:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x14
   403   000015                     	ds	1
   404   000016                     ___llmod@counter:
   405                           	callstack 0
   406   000016                     ___lwdiv@divisor:
   407                           	callstack 0
   408   000016                     ___lmul@product:
   409                           	callstack 0
   410   000016                     ___lldiv@quotient:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x15
   414   000016                     	ds	2
   415   000018                     ___lwdiv@quotient:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x17
   419   000018                     	ds	2
   420   00001A                     ___lldiv@counter:
   421                           	callstack 0
   422   00001A                     ___lwdiv@counter:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x19
   426   00001A                     	ds	1
   427   00001B                     ??_main:
   428                           
   429                           ; 1 bytes @ 0x1A
   430   00001B                     	ds	4
   431   00001F                     main@k:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x1E
   435   00001F                     	ds	2
   436   000021                     main@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x20
   440   000021                     	ds	2
   441   000023                     main@j:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x22
   445   000023                     	ds	2
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 31 in file "Laboratorio4.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  k               2   30[COMRAM] int 
   457 ;;  j               2   34[COMRAM] int 
   458 ;;  i               2   32[COMRAM] int 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   468 ;;      Params:         0       0       0       0       0       0       0       0       0
   469 ;;      Locals:         6       0       0       0       0       0       0       0       0
   470 ;;      Temps:          4       0       0       0       0       0       0       0       0
   471 ;;      Totals:        10       0       0       0       0       0       0       0       0
   472 ;;Total ram usage:       10 bytes
   473 ;; Hardware stack levels required when called: 9
   474 ;; This function calls:
   475 ;;		_BorraLCD
   476 ;;		_ColorRGB
   477 ;;		_DireccionaLCD
   478 ;;		_EscribeLCD_c
   479 ;;		_InicializaLCD
   480 ;;		_LeerTeclado
   481 ;;		_MensajeLCD_Word
   482 ;;		___lldiv
   483 ;;		___llmod
   484 ;;		___lmul
   485 ;;		___lwdiv
   486 ;;		___lwmod
   487 ;;		___wmul
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text0
   494   000836                     __ptext0:
   495                           	callstack 0
   496   000836                     _main:
   497                           	callstack 22
   498                           
   499                           ;Laboratorio4.c: 32: ADCON1=15;
   500                           
   501                           ;incstack = 0
   502   000836  0E0F               	movlw	15
   503   000838  6EC1               	movwf	193,c	;volatile
   504                           
   505                           ;Laboratorio4.c: 33: TRISD=0;
   506   00083A  0E00               	movlw	0
   507   00083C  6E95               	movwf	149,c	;volatile
   508                           
   509                           ;Laboratorio4.c: 34: TRISB=0b11110000;
   510   00083E  0EF0               	movlw	240
   511   000840  6E93               	movwf	147,c	;volatile
   512                           
   513                           ;Laboratorio4.c: 35: TRISE=0;
   514   000842  0E00               	movlw	0
   515   000844  6E96               	movwf	150,c	;volatile
   516                           
   517                           ;Laboratorio4.c: 36: TRISC=0b11110000;
   518   000846  0EF0               	movlw	240
   519   000848  6E94               	movwf	148,c	;volatile
   520                           
   521                           ;Laboratorio4.c: 37: RBPU=0;
   522   00084A  9EF1               	bcf	4081,7,c	;volatile
   523                           
   524                           ;Laboratorio4.c: 38: InicializaLCD();
   525   00084C  ECDE  F008         	call	_InicializaLCD	;wreg free
   526                           
   527                           ;Laboratorio4.c: 40: T0CON=0b10000010;
   528   000850  0E82               	movlw	130
   529   000852  6ED5               	movwf	213,c	;volatile
   530                           
   531                           ;Laboratorio4.c: 41: TMR0IF=0;
   532   000854  94F2               	bcf	4082,2,c	;volatile
   533                           
   534                           ;Laboratorio4.c: 42: TMR0=49911;
   535   000856  0EC2               	movlw	194
   536   000858  6ED7               	movwf	215,c	;volatile
   537   00085A  0EF7               	movlw	247
   538   00085C  6ED6               	movwf	214,c	;volatile
   539                           
   540                           ;Laboratorio4.c: 44: TMR0IE=1;
   541   00085E  8AF2               	bsf	4082,5,c	;volatile
   542                           
   543                           ;Laboratorio4.c: 45: GIE=1;
   544   000860  8EF2               	bsf	4082,7,c	;volatile
   545                           
   546                           ;Laboratorio4.c: 46: TMR0ON=1;
   547   000862  8ED5               	bsf	4053,7,c	;volatile
   548                           
   549                           ;Laboratorio4.c: 49: OSCCON = 0b11000100;
   550   000864  0EC4               	movlw	196
   551   000866  6ED3               	movwf	211,c	;volatile
   552                           
   553                           ;Laboratorio4.c: 51: BorraLCD();
   554   000868  ECCC  F00B         	call	_BorraLCD	;wreg free
   555                           
   556                           ;Laboratorio4.c: 52: if(TO == 1 & RI == 1){
   557   00086C  0E01               	movlw	1
   558   00086E  A6D0               	btfss	4048,3,c	;volatile
   559   000870  0E00               	movlw	0
   560   000872  A8D0               	btfss	4048,4,c	;volatile
   561   000874  0E00               	movlw	0
   562   000876  A0E8               	btfss	wreg,0,c
   563   000878  D008               	goto	l2073
   564                           
   565                           ;Laboratorio4.c: 53: BorraLCD();
   566   00087A  ECCC  F00B         	call	_BorraLCD	;wreg free
   567                           
   568                           ;Laboratorio4.c: 54: RI = 0;
   569   00087E  98D0               	bcf	4048,4,c	;volatile
   570                           
   571                           ;Laboratorio4.c: 55: MensajeLCD_Word("Energia");
   572   000880  0E1D               	movlw	low STR_1
   573   000882  6E13               	movwf	MensajeLCD_Word@a^0,c
   574   000884  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   575                           
   576                           ;Laboratorio4.c: 56: }else{
   577   000888  D014               	goto	l2079
   578   00088A                     l2073:
   579                           
   580                           ;Laboratorio4.c: 57: if(TO == 1 | PD == 0 ){
   581   00088A  A6D0               	btfss	4048,3,c	;volatile
   582   00088C  D002               	goto	u1610
   583   00088E  0E01               	movlw	1
   584   000890  D001               	goto	u1612
   585   000892                     u1610:
   586   000892  0E00               	movlw	0
   587   000894                     u1612:
   588   000894  6E1B               	movwf	??_main^0,c
   589   000896  B4D0               	btfsc	4048,2,c	;volatile
   590   000898  D002               	goto	u1620
   591   00089A  0E01               	movlw	1
   592   00089C  D001               	goto	u1622
   593   00089E                     u1620:
   594   00089E  0E00               	movlw	0
   595   0008A0                     u1622:
   596   0008A0  101B               	iorwf	??_main^0,w,c
   597   0008A2  A0E8               	btfss	wreg,0,c
   598   0008A4  D006               	goto	l2079
   599                           
   600                           ;Laboratorio4.c: 58: BorraLCD();
   601   0008A6  ECCC  F00B         	call	_BorraLCD	;wreg free
   602                           
   603                           ;Laboratorio4.c: 59: MensajeLCD_Word("MCLR");
   604   0008AA  0E2F               	movlw	low STR_2
   605   0008AC  6E13               	movwf	MensajeLCD_Word@a^0,c
   606   0008AE  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   607   0008B2                     l2079:
   608                           
   609                           ;Laboratorio4.c: 60: };Laboratorio4.c: 61: };Laboratorio4.c: 62: _delay((unsigned long)(
      +                          (2000)*(1000000/4000.0)));
   610   0008B2  0E03               	movlw	3
   611   0008B4  6E1C               	movwf	(??_main+1)^0,c
   612   0008B6  0E8A               	movlw	138
   613   0008B8  6E1B               	movwf	??_main^0,c
   614   0008BA  0E56               	movlw	86
   615   0008BC                     u2427:
   616   0008BC  2EE8               	decfsz	wreg,f,c
   617   0008BE  D7FE               	bra	u2427
   618   0008C0  2E1B               	decfsz	??_main^0,f,c
   619   0008C2  D7FC               	bra	u2427
   620   0008C4  2E1C               	decfsz	(??_main+1)^0,f,c
   621   0008C6  D7FA               	bra	u2427
   622                           
   623                           ;Laboratorio4.c: 63: BorraLCD();
   624   0008C8  ECCC  F00B         	call	_BorraLCD	;wreg free
   625   0008CC                     l2083:
   626                           
   627                           ;Laboratorio4.c: 65: LATB=0B00000000;
   628   0008CC  0E00               	movlw	0
   629   0008CE  6E8A               	movwf	138,c	;volatile
   630                           
   631                           ;Laboratorio4.c: 66: verificador = 0;
   632   0008D0  0E00               	movlw	0
   633   0008D2  6E2E               	movwf	(_verificador+1)^0,c
   634   0008D4  0E00               	movlw	0
   635   0008D6  6E2D               	movwf	_verificador^0,c
   636                           
   637                           ;Laboratorio4.c: 67: Tecla = LeerTeclado();
   638   0008D8  EC51  F008         	call	_LeerTeclado	;wreg free
   639   0008DC  6E3A               	movwf	_Tecla^0,c
   640                           
   641                           ;Laboratorio4.c: 68: ColorRGB();
   642   0008DE  ECAC  F009         	call	_ColorRGB	;wreg free
   643                           
   644                           ;Laboratorio4.c: 69: if(Tecla=='C'){
   645   0008E2  0E43               	movlw	67
   646   0008E4  183A               	xorwf	_Tecla^0,w,c
   647   0008E6  A4D8               	btfss	status,2,c
   648   0008E8  D02D               	goto	l2117
   649                           
   650                           ;Laboratorio4.c: 70: DireccionaLCD(0xC0);
   651   0008EA  0EC0               	movlw	192
   652   0008EC  ECB6  F00B         	call	_DireccionaLCD
   653                           
   654                           ;Laboratorio4.c: 72: op = ' ';
   655   0008F0  0E20               	movlw	32
   656   0008F2  6E41               	movwf	_op^0,c
   657                           
   658                           ;Laboratorio4.c: 73: n1c = ' ';
   659   0008F4  0E20               	movlw	32
   660   0008F6  6E40               	movwf	_n1c^0,c
   661                           
   662                           ;Laboratorio4.c: 74: n2c = ' ';
   663   0008F8  0E20               	movlw	32
   664   0008FA  6E3F               	movwf	_n2c^0,c
   665                           
   666                           ;Laboratorio4.c: 75: n1 = 0;
   667   0008FC  0E00               	movlw	0
   668   0008FE  6E38               	movwf	(_n1+1)^0,c
   669   000900  0E00               	movlw	0
   670   000902  6E37               	movwf	_n1^0,c
   671                           
   672                           ;Laboratorio4.c: 76: n2 = 0;
   673   000904  0E00               	movlw	0
   674   000906  6E36               	movwf	(_n2+1)^0,c
   675   000908  0E00               	movlw	0
   676   00090A  6E35               	movwf	_n2^0,c
   677                           
   678                           ;Laboratorio4.c: 77: i = 0;
   679   00090C  0E00               	movlw	0
   680   00090E  6E34               	movwf	(_i+1)^0,c
   681   000910  0E00               	movlw	0
   682   000912  6E33               	movwf	_i^0,c
   683                           
   684                           ;Laboratorio4.c: 78: partdecl = 0;
   685   000914  0E00               	movlw	0
   686   000916  6E29               	movwf	_partdecl^0,c
   687   000918  0E00               	movlw	0
   688   00091A  6E2A               	movwf	(_partdecl+1)^0,c
   689   00091C  0E00               	movlw	0
   690   00091E  6E2B               	movwf	(_partdecl+2)^0,c
   691   000920  0E00               	movlw	0
   692   000922  6E2C               	movwf	(_partdecl+3)^0,c
   693                           
   694                           ;Laboratorio4.c: 79: flag = 0;
   695   000924  0E00               	movlw	0
   696   000926  6E39               	movwf	_flag^0,c
   697                           
   698                           ;Laboratorio4.c: 80: DireccionaLCD(0x80);
   699   000928  0E80               	movlw	128
   700   00092A  ECB6  F00B         	call	_DireccionaLCD
   701                           
   702                           ;Laboratorio4.c: 81: MensajeLCD_Word("                ");
   703   00092E  0E01               	movlw	low STR_3
   704   000930  6E13               	movwf	MensajeLCD_Word@a^0,c
   705   000932  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   706                           
   707                           ;Laboratorio4.c: 82: DireccionaLCD(0xC0);
   708   000936  0EC0               	movlw	192
   709   000938  ECB6  F00B         	call	_DireccionaLCD
   710                           
   711                           ;Laboratorio4.c: 83: DireccionaLCD(0x80);
   712   00093C  0E80               	movlw	128
   713   00093E  ECB6  F00B         	call	_DireccionaLCD
   714                           
   715                           ;Laboratorio4.c: 84: }else{
   716   000942  D7C4               	goto	l2083
   717   000944                     l2117:
   718                           
   719                           ;Laboratorio4.c: 85: if(n1c==' '|n2c==' '|op==' '){
   720   000944  0E20               	movlw	32
   721   000946  1840               	xorwf	_n1c^0,w,c
   722   000948  B4D8               	btfsc	status,2,c
   723   00094A  D008               	goto	u1670
   724   00094C  0E20               	movlw	32
   725   00094E  183F               	xorwf	_n2c^0,w,c
   726   000950  B4D8               	btfsc	status,2,c
   727   000952  D004               	goto	u1670
   728   000954  0E20               	movlw	32
   729   000956  1841               	xorwf	_op^0,w,c
   730   000958  A4D8               	btfss	status,2,c
   731   00095A  D0AD               	goto	l2207
   732   00095C                     u1670:
   733                           
   734                           ;Laboratorio4.c: 86: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla!='=
      +                          ') & n1c != ' ' & n2c ==' '){
   735   00095C  0E20               	movlw	32
   736   00095E  1841               	xorwf	_op^0,w,c
   737   000960  A4D8               	btfss	status,2,c
   738   000962  D02B               	goto	l2147
   739   000964  0E2B               	movlw	43
   740   000966  183A               	xorwf	_Tecla^0,w,c
   741   000968  B4D8               	btfsc	status,2,c
   742   00096A  D010               	goto	u1730
   743   00096C  0E2D               	movlw	45
   744   00096E  183A               	xorwf	_Tecla^0,w,c
   745   000970  B4D8               	btfsc	status,2,c
   746   000972  D00C               	goto	u1730
   747   000974  0E2F               	movlw	47
   748   000976  183A               	xorwf	_Tecla^0,w,c
   749   000978  B4D8               	btfsc	status,2,c
   750   00097A  D008               	goto	u1730
   751   00097C  0E78               	movlw	120
   752   00097E  183A               	xorwf	_Tecla^0,w,c
   753   000980  B4D8               	btfsc	status,2,c
   754   000982  D004               	goto	u1730
   755   000984  0E3D               	movlw	61
   756   000986  183A               	xorwf	_Tecla^0,w,c
   757   000988  B4D8               	btfsc	status,2,c
   758   00098A  D017               	goto	l2147
   759   00098C                     u1730:
   760   00098C  0E20               	movlw	32
   761   00098E  1840               	xorwf	_n1c^0,w,c
   762   000990  B4D8               	btfsc	status,2,c
   763   000992  D013               	goto	l2147
   764   000994  0E20               	movlw	32
   765   000996  183F               	xorwf	_n2c^0,w,c
   766   000998  A4D8               	btfss	status,2,c
   767   00099A  D00F               	goto	l2147
   768                           
   769                           ;Laboratorio4.c: 87: DireccionaLCD(0x81);
   770   00099C  0E81               	movlw	129
   771   00099E  ECB6  F00B         	call	_DireccionaLCD
   772                           
   773                           ;Laboratorio4.c: 88: EscribeLCD_c(Tecla);
   774   0009A2  503A               	movf	_Tecla^0,w,c
   775   0009A4  ECAB  F00B         	call	_EscribeLCD_c
   776                           
   777                           ;Laboratorio4.c: 89: op = Tecla;
   778   0009A8  C03A  F041         	movff	_Tecla,_op
   779                           
   780                           ;Laboratorio4.c: 90: if(Tecla=='!') n2c = 'A';
   781   0009AC  0E21               	movlw	33
   782   0009AE  183A               	xorwf	_Tecla^0,w,c
   783   0009B0  A4D8               	btfss	status,2,c
   784   0009B2  D36E               	goto	l2387
   785   0009B4  0E41               	movlw	65
   786   0009B6  6E3F               	movwf	_n2c^0,c
   787   0009B8  D36B               	goto	l2387
   788   0009BA                     l2147:
   789   0009BA  0E20               	movlw	32
   790   0009BC  1840               	xorwf	_n1c^0,w,c
   791   0009BE  A4D8               	btfss	status,2,c
   792   0009C0  D037               	goto	l2175
   793   0009C2  0E2B               	movlw	43
   794   0009C4  183A               	xorwf	_Tecla^0,w,c
   795   0009C6  A4D8               	btfss	status,2,c
   796   0009C8  D020               	goto	u1860
   797   0009CA  0E2D               	movlw	45
   798   0009CC  183A               	xorwf	_Tecla^0,w,c
   799   0009CE  A4D8               	btfss	status,2,c
   800   0009D0  D01C               	goto	u1860
   801   0009D2  0E2F               	movlw	47
   802   0009D4  183A               	xorwf	_Tecla^0,w,c
   803   0009D6  A4D8               	btfss	status,2,c
   804   0009D8  D018               	goto	u1860
   805   0009DA  0E78               	movlw	120
   806   0009DC  183A               	xorwf	_Tecla^0,w,c
   807   0009DE  A4D8               	btfss	status,2,c
   808   0009E0  D014               	goto	u1860
   809   0009E2  0E3D               	movlw	61
   810   0009E4  183A               	xorwf	_Tecla^0,w,c
   811   0009E6  A4D8               	btfss	status,2,c
   812   0009E8  D010               	goto	u1860
   813   0009EA  0E43               	movlw	67
   814   0009EC  183A               	xorwf	_Tecla^0,w,c
   815   0009EE  A4D8               	btfss	status,2,c
   816   0009F0  D00C               	goto	u1860
   817   0009F2  0E21               	movlw	33
   818   0009F4  183A               	xorwf	_Tecla^0,w,c
   819   0009F6  A4D8               	btfss	status,2,c
   820   0009F8  D008               	goto	u1860
   821   0009FA  0E5E               	movlw	94
   822   0009FC  183A               	xorwf	_Tecla^0,w,c
   823   0009FE  A4D8               	btfss	status,2,c
   824   000A00  D004               	goto	u1860
   825   000A02  0E3D               	movlw	61
   826   000A04  183A               	xorwf	_Tecla^0,w,c
   827   000A06  B4D8               	btfsc	status,2,c
   828   000A08  D013               	goto	l2175
   829   000A0A                     u1860:
   830   000A0A  0E20               	movlw	32
   831   000A0C  1841               	xorwf	_op^0,w,c
   832   000A0E  A4D8               	btfss	status,2,c
   833   000A10  D00F               	goto	l2175
   834                           
   835                           ;Laboratorio4.c: 92: DireccionaLCD(0x80);
   836   000A12  0E80               	movlw	128
   837   000A14  ECB6  F00B         	call	_DireccionaLCD
   838                           
   839                           ;Laboratorio4.c: 93: EscribeLCD_c(Tecla);
   840   000A18  503A               	movf	_Tecla^0,w,c
   841   000A1A  ECAB  F00B         	call	_EscribeLCD_c
   842                           
   843                           ;Laboratorio4.c: 94: n1c=Tecla;
   844   000A1E  C03A  F040         	movff	_Tecla,_n1c
   845                           
   846                           ;Laboratorio4.c: 95: n1 = Tecla-'0';
   847   000A22  0ED0               	movlw	208
   848   000A24  243A               	addwf	_Tecla^0,w,c
   849   000A26  6E37               	movwf	_n1^0,c
   850   000A28  6A38               	clrf	(_n1+1)^0,c
   851   000A2A  0EFF               	movlw	255
   852   000A2C  2238               	addwfc	(_n1+1)^0,f,c
   853                           
   854                           ;Laboratorio4.c: 96: }else if(n2c==' ' & op!=' ' & op!='!' & n1c != ' ' & (Tecla!='+'|Te
      +                          cla!='-'|Tecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='!'|Tecla!='^'|Tecla!='=')){
   855   000A2E  D330               	goto	l2387
   856   000A30                     l2175:
   857   000A30  0E20               	movlw	32
   858   000A32  183F               	xorwf	_n2c^0,w,c
   859   000A34  A4D8               	btfss	status,2,c
   860   000A36  D32C               	goto	l2387
   861   000A38  0E20               	movlw	32
   862   000A3A  1841               	xorwf	_op^0,w,c
   863   000A3C  B4D8               	btfsc	status,2,c
   864   000A3E  D328               	goto	l2387
   865   000A40  0E21               	movlw	33
   866   000A42  1841               	xorwf	_op^0,w,c
   867   000A44  B4D8               	btfsc	status,2,c
   868   000A46  D324               	goto	l2387
   869   000A48  0E20               	movlw	32
   870   000A4A  1840               	xorwf	_n1c^0,w,c
   871   000A4C  B4D8               	btfsc	status,2,c
   872   000A4E  D320               	goto	l2387
   873   000A50  0E2B               	movlw	43
   874   000A52  183A               	xorwf	_Tecla^0,w,c
   875   000A54  A4D8               	btfss	status,2,c
   876   000A56  D020               	goto	u2000
   877   000A58  0E2D               	movlw	45
   878   000A5A  183A               	xorwf	_Tecla^0,w,c
   879   000A5C  A4D8               	btfss	status,2,c
   880   000A5E  D01C               	goto	u2000
   881   000A60  0E2F               	movlw	47
   882   000A62  183A               	xorwf	_Tecla^0,w,c
   883   000A64  A4D8               	btfss	status,2,c
   884   000A66  D018               	goto	u2000
   885   000A68  0E78               	movlw	120
   886   000A6A  183A               	xorwf	_Tecla^0,w,c
   887   000A6C  A4D8               	btfss	status,2,c
   888   000A6E  D014               	goto	u2000
   889   000A70  0E3D               	movlw	61
   890   000A72  183A               	xorwf	_Tecla^0,w,c
   891   000A74  A4D8               	btfss	status,2,c
   892   000A76  D010               	goto	u2000
   893   000A78  0E43               	movlw	67
   894   000A7A  183A               	xorwf	_Tecla^0,w,c
   895   000A7C  A4D8               	btfss	status,2,c
   896   000A7E  D00C               	goto	u2000
   897   000A80  0E21               	movlw	33
   898   000A82  183A               	xorwf	_Tecla^0,w,c
   899   000A84  A4D8               	btfss	status,2,c
   900   000A86  D008               	goto	u2000
   901   000A88  0E5E               	movlw	94
   902   000A8A  183A               	xorwf	_Tecla^0,w,c
   903   000A8C  A4D8               	btfss	status,2,c
   904   000A8E  D004               	goto	u2000
   905   000A90  0E3D               	movlw	61
   906   000A92  183A               	xorwf	_Tecla^0,w,c
   907   000A94  B4D8               	btfsc	status,2,c
   908   000A96  D2FC               	goto	l2387
   909   000A98                     u2000:
   910                           
   911                           ;Laboratorio4.c: 97: DireccionaLCD(0x82);
   912   000A98  0E82               	movlw	130
   913   000A9A  ECB6  F00B         	call	_DireccionaLCD
   914                           
   915                           ;Laboratorio4.c: 98: EscribeLCD_c(Tecla);
   916   000A9E  503A               	movf	_Tecla^0,w,c
   917   000AA0  ECAB  F00B         	call	_EscribeLCD_c
   918                           
   919                           ;Laboratorio4.c: 99: n2c=Tecla;
   920   000AA4  C03A  F03F         	movff	_Tecla,_n2c
   921                           
   922                           ;Laboratorio4.c: 100: n2 = Tecla-'0';
   923   000AA8  0ED0               	movlw	208
   924   000AAA  243A               	addwf	_Tecla^0,w,c
   925   000AAC  6E35               	movwf	_n2^0,c
   926   000AAE  6A36               	clrf	(_n2+1)^0,c
   927   000AB0  0EFF               	movlw	255
   928   000AB2  2236               	addwfc	(_n2+1)^0,f,c
   929                           
   930                           ;Laboratorio4.c: 101: };Laboratorio4.c: 102: }else if(Tecla=='=' & n1c != ' ' & op!=' ' 
      +                          & n2c!=' '){
   931   000AB4  D2ED               	goto	l2387
   932   000AB6                     l2207:
   933   000AB6  0E3D               	movlw	61
   934   000AB8  183A               	xorwf	_Tecla^0,w,c
   935   000ABA  A4D8               	btfss	status,2,c
   936   000ABC  D2E6               	goto	l2385
   937   000ABE  0E20               	movlw	32
   938   000AC0  1840               	xorwf	_n1c^0,w,c
   939   000AC2  B4D8               	btfsc	status,2,c
   940   000AC4  D2E2               	goto	l2385
   941   000AC6  0E20               	movlw	32
   942   000AC8  1841               	xorwf	_op^0,w,c
   943   000ACA  B4D8               	btfsc	status,2,c
   944   000ACC  D2DE               	goto	l2385
   945   000ACE  0E20               	movlw	32
   946   000AD0  183F               	xorwf	_n2c^0,w,c
   947   000AD2  B4D8               	btfsc	status,2,c
   948   000AD4  D2DA               	goto	l2385
   949                           
   950                           ;Laboratorio4.c: 103: if(op=='!') DireccionaLCD(0x82);
   951   000AD6  0E21               	movlw	33
   952   000AD8  1841               	xorwf	_op^0,w,c
   953   000ADA  A4D8               	btfss	status,2,c
   954   000ADC  D004               	goto	l2219
   955   000ADE  0E82               	movlw	130
   956   000AE0  ECB6  F00B         	call	_DireccionaLCD
   957   000AE4  D003               	goto	l175
   958   000AE6                     l2219:
   959                           
   960                           ;Laboratorio4.c: 104: else DireccionaLCD(0x83);
   961   000AE6  0E83               	movlw	131
   962   000AE8  ECB6  F00B         	call	_DireccionaLCD
   963   000AEC                     l175:
   964                           
   965                           ;Laboratorio4.c: 105: EscribeLCD_c('=');
   966   000AEC  0E3D               	movlw	61
   967   000AEE  ECAB  F00B         	call	_EscribeLCD_c
   968                           
   969                           ;Laboratorio4.c: 106: switch(op){
   970   000AF2  D0EF               	goto	l2281
   971   000AF4                     l2221:
   972                           
   973                           ;Laboratorio4.c: 108: r = n1 + n2;
   974   000AF4  5035               	movf	_n2^0,w,c
   975   000AF6  2437               	addwf	_n1^0,w,c
   976   000AF8  6E1B               	movwf	??_main^0,c
   977   000AFA  5036               	movf	(_n2+1)^0,w,c
   978   000AFC  2038               	addwfc	(_n1+1)^0,w,c
   979   000AFE  6E1C               	movwf	(??_main+1)^0,c
   980   000B00  C01B  F025         	movff	??_main,_r
   981   000B04  C01C  F026         	movff	??_main+1,_r+1
   982   000B08  6A27               	clrf	(_r+2)^0,c
   983   000B0A  6A28               	clrf	(_r+3)^0,c
   984   000B0C                     l2223:
   985                           
   986                           ;Laboratorio4.c: 109: partdecl = r*100;
   987   000B0C  C025  F00E         	movff	_r,___lmul@multiplier
   988   000B10  C026  F00F         	movff	_r+1,___lmul@multiplier+1
   989   000B14  C027  F010         	movff	_r+2,___lmul@multiplier+2
   990   000B18  C028  F011         	movff	_r+3,___lmul@multiplier+3
   991   000B1C  0E64               	movlw	100
   992   000B1E  6E12               	movwf	___lmul@multiplicand^0,c
   993   000B20  0E00               	movlw	0
   994   000B22  6E13               	movwf	(___lmul@multiplicand+1)^0,c
   995   000B24  0E00               	movlw	0
   996   000B26  6E14               	movwf	(___lmul@multiplicand+2)^0,c
   997   000B28  0E00               	movlw	0
   998   000B2A  6E15               	movwf	(___lmul@multiplicand+3)^0,c
   999   000B2C  EC1C  F00A         	call	___lmul	;wreg free
  1000   000B30  C00E  F029         	movff	?___lmul,_partdecl
  1001   000B34  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1002   000B38  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1003   000B3C  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1004                           
  1005                           ;Laboratorio4.c: 110: break;
  1006   000B40  D0DC               	goto	l2283
  1007   000B42                     l2225:
  1008                           
  1009                           ;Laboratorio4.c: 112: r = n1 - n2;
  1010   000B42  5035               	movf	_n2^0,w,c
  1011   000B44  5C37               	subwf	_n1^0,w,c
  1012   000B46  6E1B               	movwf	??_main^0,c
  1013   000B48  5036               	movf	(_n2+1)^0,w,c
  1014   000B4A  5838               	subwfb	(_n1+1)^0,w,c
  1015   000B4C  D7D8               	goto	L1
  1016   000B4E                     l2229:
  1017                           
  1018                           ;Laboratorio4.c: 116: r = n1*n2;
  1019   000B4E  C037  F00E         	movff	_n1,___wmul@multiplier
  1020   000B52  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1021   000B56  C035  F010         	movff	_n2,___wmul@multiplicand
  1022   000B5A  C036  F011         	movff	_n2+1,___wmul@multiplicand+1
  1023   000B5E  EC98  F00B         	call	___wmul	;wreg free
  1024   000B62  C00E  F025         	movff	?___wmul,_r
  1025   000B66  C00F  F026         	movff	?___wmul+1,_r+1
  1026   000B6A  D7CE               	goto	L2
  1027   000B6C                     l2233:
  1028                           
  1029                           ;Laboratorio4.c: 120: if(n2!=0){
  1030   000B6C  5035               	movf	_n2^0,w,c
  1031   000B6E  1036               	iorwf	(_n2+1)^0,w,c
  1032   000B70  B4D8               	btfsc	status,2,c
  1033   000B72  D02F               	goto	l2241
  1034                           
  1035                           ;Laboratorio4.c: 121: if(n1!=0){
  1036   000B74  5037               	movf	_n1^0,w,c
  1037   000B76  1038               	iorwf	(_n1+1)^0,w,c
  1038   000B78  B4D8               	btfsc	status,2,c
  1039   000B7A  D0BF               	goto	l2283
  1040                           
  1041                           ;Laboratorio4.c: 122: r = n1/n2;
  1042   000B7C  C037  F014         	movff	_n1,___lwdiv@dividend
  1043   000B80  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1044   000B84  C035  F016         	movff	_n2,___lwdiv@divisor
  1045   000B88  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1046   000B8C  EC9D  F00A         	call	___lwdiv	;wreg free
  1047   000B90  C014  F025         	movff	?___lwdiv,_r
  1048   000B94  C015  F026         	movff	?___lwdiv+1,_r+1
  1049   000B98  6A27               	clrf	(_r+2)^0,c
  1050   000B9A  6A28               	clrf	(_r+3)^0,c
  1051                           
  1052                           ;Laboratorio4.c: 123: partdecl = (n1*100)/n2;
  1053   000B9C  C037  F00E         	movff	_n1,___wmul@multiplier
  1054   000BA0  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1055   000BA4  0E00               	movlw	0
  1056   000BA6  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1057   000BA8  0E64               	movlw	100
  1058   000BAA  6E10               	movwf	___wmul@multiplicand^0,c
  1059   000BAC  EC98  F00B         	call	___wmul	;wreg free
  1060   000BB0  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1061   000BB4  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1062   000BB8  C035  F016         	movff	_n2,___lwdiv@divisor
  1063   000BBC  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1064   000BC0  EC9D  F00A         	call	___lwdiv	;wreg free
  1065   000BC4  C014  F029         	movff	?___lwdiv,_partdecl
  1066   000BC8  C015  F02A         	movff	?___lwdiv+1,_partdecl+1
  1067   000BCC  6A2B               	clrf	(_partdecl+2)^0,c
  1068   000BCE  6A2C               	clrf	(_partdecl+3)^0,c
  1069   000BD0  D094               	goto	l2283
  1070   000BD2                     l2241:
  1071                           
  1072                           ;Laboratorio4.c: 126: if(n1 != 0 & n2 == 0) r = 1000;
  1073   000BD2  5037               	movf	_n1^0,w,c
  1074   000BD4  1038               	iorwf	(_n1+1)^0,w,c
  1075   000BD6  B4D8               	btfsc	status,2,c
  1076   000BD8  D006               	goto	l2247
  1077   000BDA  5035               	movf	_n2^0,w,c
  1078   000BDC  1036               	iorwf	(_n2+1)^0,w,c
  1079   000BDE  A4D8               	btfss	status,2,c
  1080   000BE0  D002               	goto	l2247
  1081   000BE2  0EE8               	movlw	232
  1082   000BE4  D009               	goto	L3
  1083   000BE6                     l2247:
  1084                           
  1085                           ;Laboratorio4.c: 127: else if(n1 == 0 & n2 == 0) r = 1001;
  1086   000BE6  5037               	movf	_n1^0,w,c
  1087   000BE8  1038               	iorwf	(_n1+1)^0,w,c
  1088   000BEA  A4D8               	btfss	status,2,c
  1089   000BEC  D78F               	goto	l2223
  1090   000BEE  5035               	movf	_n2^0,w,c
  1091   000BF0  1036               	iorwf	(_n2+1)^0,w,c
  1092   000BF2  A4D8               	btfss	status,2,c
  1093   000BF4  D78B               	goto	l2223
  1094   000BF6  0EE9               	movlw	233
  1095   000BF8                     L3:
  1096   000BF8  6E25               	movwf	_r^0,c
  1097   000BFA  0E03               	movlw	3
  1098   000BFC  6E26               	movwf	(_r+1)^0,c
  1099   000BFE  0E00               	movlw	0
  1100   000C00  6E27               	movwf	(_r+2)^0,c
  1101   000C02  0E00               	movlw	0
  1102   000C04  6E28               	movwf	(_r+3)^0,c
  1103   000C06  D782               	goto	l2223
  1104   000C08                     l2255:
  1105                           
  1106                           ;Laboratorio4.c: 132: r = n1;
  1107   000C08  C037  F025         	movff	_n1,_r
  1108   000C0C  C038  F026         	movff	_n1+1,_r+1
  1109   000C10  6A27               	clrf	(_r+2)^0,c
  1110   000C12  6A28               	clrf	(_r+3)^0,c
  1111   000C14  D021               	goto	l2261
  1112   000C16                     l2257:
  1113                           
  1114                           ;Laboratorio4.c: 134: r = r * (n1-1);
  1115   000C16  0EFF               	movlw	255
  1116   000C18  2437               	addwf	_n1^0,w,c
  1117   000C1A  6E1B               	movwf	??_main^0,c
  1118   000C1C  0EFF               	movlw	255
  1119   000C1E  2038               	addwfc	(_n1+1)^0,w,c
  1120   000C20  6E1C               	movwf	(??_main+1)^0,c
  1121   000C22  C01B  F00E         	movff	??_main,___lmul@multiplier
  1122   000C26  C01C  F00F         	movff	??_main+1,___lmul@multiplier+1
  1123   000C2A  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1124   000C2C  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1125   000C2E  C025  F012         	movff	_r,___lmul@multiplicand
  1126   000C32  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1127   000C36  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1128   000C3A  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1129   000C3E  EC1C  F00A         	call	___lmul	;wreg free
  1130   000C42  C00E  F025         	movff	?___lmul,_r
  1131   000C46  C00F  F026         	movff	?___lmul+1,_r+1
  1132   000C4A  C010  F027         	movff	?___lmul+2,_r+2
  1133   000C4E  C011  F028         	movff	?___lmul+3,_r+3
  1134   000C52  0637               	decf	_n1^0,f,c
  1135   000C54  A0D8               	btfss	status,0,c
  1136   000C56  0638               	decf	(_n1+1)^0,f,c
  1137   000C58                     l2261:
  1138   000C58  5038               	movf	(_n1+1)^0,w,c
  1139   000C5A  E1DD               	bnz	l2257
  1140   000C5C  0E02               	movlw	2
  1141   000C5E  5C37               	subwf	_n1^0,w,c
  1142   000C60  A0D8               	btfss	status,0,c
  1143   000C62  D754               	goto	l2223
  1144   000C64  D7D8               	goto	l2257
  1145   000C66                     l2265:
  1146                           
  1147                           ;Laboratorio4.c: 139: r = n1;
  1148   000C66  C037  F025         	movff	_n1,_r
  1149   000C6A  C038  F026         	movff	_n1+1,_r+1
  1150   000C6E  6A27               	clrf	(_r+2)^0,c
  1151   000C70  6A28               	clrf	(_r+3)^0,c
  1152                           
  1153                           ;Laboratorio4.c: 140: n2 = n2-1;
  1154   000C72  0EFF               	movlw	255
  1155   000C74  2435               	addwf	_n2^0,w,c
  1156   000C76  6E35               	movwf	_n2^0,c
  1157   000C78  0EFF               	movlw	255
  1158   000C7A  2036               	addwfc	(_n2+1)^0,w,c
  1159   000C7C  6E36               	movwf	(_n2+1)^0,c
  1160   000C7E  D01B               	goto	l2273
  1161   000C80                     l2269:
  1162                           
  1163                           ;Laboratorio4.c: 142: r = r * n1;
  1164   000C80  C037  F00E         	movff	_n1,___lmul@multiplier
  1165   000C84  C038  F00F         	movff	_n1+1,___lmul@multiplier+1
  1166   000C88  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1167   000C8A  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1168   000C8C  C025  F012         	movff	_r,___lmul@multiplicand
  1169   000C90  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1170   000C94  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1171   000C98  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1172   000C9C  EC1C  F00A         	call	___lmul	;wreg free
  1173   000CA0  C00E  F025         	movff	?___lmul,_r
  1174   000CA4  C00F  F026         	movff	?___lmul+1,_r+1
  1175   000CA8  C010  F027         	movff	?___lmul+2,_r+2
  1176   000CAC  C011  F028         	movff	?___lmul+3,_r+3
  1177   000CB0  0635               	decf	_n2^0,f,c
  1178   000CB2  A0D8               	btfss	status,0,c
  1179   000CB4  0636               	decf	(_n2+1)^0,f,c
  1180   000CB6                     l2273:
  1181   000CB6  5035               	movf	_n2^0,w,c
  1182   000CB8  1036               	iorwf	(_n2+1)^0,w,c
  1183   000CBA  B4D8               	btfsc	status,2,c
  1184   000CBC  D727               	goto	l2223
  1185   000CBE  D7E0               	goto	l2269
  1186   000CC0                     l2277:
  1187                           
  1188                           ;Laboratorio4.c: 147: r = 0;
  1189   000CC0  0E00               	movlw	0
  1190   000CC2  6E25               	movwf	_r^0,c
  1191   000CC4  0E00               	movlw	0
  1192   000CC6  6E26               	movwf	(_r+1)^0,c
  1193   000CC8  0E00               	movlw	0
  1194   000CCA  6E27               	movwf	(_r+2)^0,c
  1195   000CCC  0E00               	movlw	0
  1196   000CCE  6E28               	movwf	(_r+3)^0,c
  1197                           
  1198                           ;Laboratorio4.c: 148: break;
  1199   000CD0  D014               	goto	l2283
  1200   000CD2                     l2281:
  1201   000CD2  5041               	movf	_op^0,w,c
  1202                           
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 6, Range of values is 33 to 120
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte           19    10 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209   000CD4  0A21               	xorlw	33	; case 33
  1210   000CD6  B4D8               	btfsc	status,2,c
  1211   000CD8  D797               	goto	l2255
  1212   000CDA  0A0A               	xorlw	10	; case 43
  1213   000CDC  B4D8               	btfsc	status,2,c
  1214   000CDE  D70A               	goto	l2221
  1215   000CE0  0A06               	xorlw	6	; case 45
  1216   000CE2  B4D8               	btfsc	status,2,c
  1217   000CE4  D72E               	goto	l2225
  1218   000CE6  0A02               	xorlw	2	; case 47
  1219   000CE8  B4D8               	btfsc	status,2,c
  1220   000CEA  D740               	goto	l2233
  1221   000CEC  0A71               	xorlw	113	; case 94
  1222   000CEE  B4D8               	btfsc	status,2,c
  1223   000CF0  D7BA               	goto	l2265
  1224   000CF2  0A26               	xorlw	38	; case 120
  1225   000CF4  B4D8               	btfsc	status,2,c
  1226   000CF6  D72B               	goto	l2229
  1227   000CF8  D7E3               	goto	l2277
  1228   000CFA                     l2283:
  1229                           
  1230                           ;Laboratorio4.c: 150: if(op=='!') DireccionaLCD(0x83);
  1231   000CFA  0E21               	movlw	33
  1232   000CFC  1841               	xorwf	_op^0,w,c
  1233   000CFE  A4D8               	btfss	status,2,c
  1234   000D00  D004               	goto	l2287
  1235   000D02  0E83               	movlw	131
  1236   000D04  ECB6  F00B         	call	_DireccionaLCD
  1237   000D08  D003               	goto	l198
  1238   000D0A                     l2287:
  1239                           
  1240                           ;Laboratorio4.c: 151: else DireccionaLCD(0x84);
  1241   000D0A  0E84               	movlw	132
  1242   000D0C  ECB6  F00B         	call	_DireccionaLCD
  1243   000D10                     l198:
  1244                           
  1245                           ;Laboratorio4.c: 152: if ((partdecl-(r*100))!= 0 & (partdecl-(r*100))>0){
  1246   000D10  C025  F00E         	movff	_r,___lmul@multiplier
  1247   000D14  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1248   000D18  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1249   000D1C  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1250   000D20  0E9C               	movlw	156
  1251   000D22  6E12               	movwf	___lmul@multiplicand^0,c
  1252   000D24  0EFF               	movlw	255
  1253   000D26  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1254   000D28  0EFF               	movlw	255
  1255   000D2A  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1256   000D2C  0EFF               	movlw	255
  1257   000D2E  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1258   000D30  EC1C  F00A         	call	___lmul	;wreg free
  1259   000D34  5029               	movf	_partdecl^0,w,c
  1260   000D36  240E               	addwf	?___lmul^0,w,c
  1261   000D38  6E1B               	movwf	??_main^0,c
  1262   000D3A  502A               	movf	(_partdecl+1)^0,w,c
  1263   000D3C  200F               	addwfc	(?___lmul+1)^0,w,c
  1264   000D3E  6E1C               	movwf	(??_main+1)^0,c
  1265   000D40  502B               	movf	(_partdecl+2)^0,w,c
  1266   000D42  2010               	addwfc	(?___lmul+2)^0,w,c
  1267   000D44  6E1D               	movwf	(??_main+2)^0,c
  1268   000D46  502C               	movf	(_partdecl+3)^0,w,c
  1269   000D48  2011               	addwfc	(?___lmul+3)^0,w,c
  1270   000D4A  6E1E               	movwf	(??_main+3)^0,c
  1271   000D4C  501B               	movf	??_main^0,w,c
  1272   000D4E  101C               	iorwf	(??_main+1)^0,w,c
  1273   000D50  101D               	iorwf	(??_main+2)^0,w,c
  1274   000D52  101E               	iorwf	(??_main+3)^0,w,c
  1275   000D54  B4D8               	btfsc	status,2,c
  1276   000D56  D07A               	goto	l2313
  1277   000D58  C025  F00E         	movff	_r,___lmul@multiplier
  1278   000D5C  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1279   000D60  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1280   000D64  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1281   000D68  0E9C               	movlw	156
  1282   000D6A  6E12               	movwf	___lmul@multiplicand^0,c
  1283   000D6C  0EFF               	movlw	255
  1284   000D6E  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1285   000D70  0EFF               	movlw	255
  1286   000D72  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1287   000D74  0EFF               	movlw	255
  1288   000D76  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1289   000D78  EC1C  F00A         	call	___lmul	;wreg free
  1290   000D7C  5029               	movf	_partdecl^0,w,c
  1291   000D7E  240E               	addwf	?___lmul^0,w,c
  1292   000D80  6E1B               	movwf	??_main^0,c
  1293   000D82  502A               	movf	(_partdecl+1)^0,w,c
  1294   000D84  200F               	addwfc	(?___lmul+1)^0,w,c
  1295   000D86  6E1C               	movwf	(??_main+1)^0,c
  1296   000D88  502B               	movf	(_partdecl+2)^0,w,c
  1297   000D8A  2010               	addwfc	(?___lmul+2)^0,w,c
  1298   000D8C  6E1D               	movwf	(??_main+2)^0,c
  1299   000D8E  502C               	movf	(_partdecl+3)^0,w,c
  1300   000D90  2011               	addwfc	(?___lmul+3)^0,w,c
  1301   000D92  6E1E               	movwf	(??_main+3)^0,c
  1302   000D94  501B               	movf	??_main^0,w,c
  1303   000D96  101C               	iorwf	(??_main+1)^0,w,c
  1304   000D98  101D               	iorwf	(??_main+2)^0,w,c
  1305   000D9A  101E               	iorwf	(??_main+3)^0,w,c
  1306   000D9C  B4D8               	btfsc	status,2,c
  1307   000D9E  D056               	goto	l2313
  1308                           
  1309                           ;Laboratorio4.c: 153: for (int i = 0; i < 3; i++) {
  1310   000DA0  0E00               	movlw	0
  1311   000DA2  6E22               	movwf	(main@i+1)^0,c
  1312   000DA4  0E00               	movlw	0
  1313   000DA6  6E21               	movwf	main@i^0,c
  1314   000DA8                     l2293:
  1315   000DA8  BE22               	btfsc	(main@i+1)^0,7,c
  1316   000DAA  D008               	goto	l2297
  1317   000DAC  5022               	movf	(main@i+1)^0,w,c
  1318   000DAE  E105               	bnz	u2170
  1319   000DB0  0E03               	movlw	3
  1320   000DB2  5C21               	subwf	main@i^0,w,c
  1321   000DB4  B0D8               	btfsc	status,0,c
  1322   000DB6  D16C               	goto	l2387
  1323   000DB8  D001               	goto	l2297
  1324   000DBA                     u2170:
  1325   000DBA  D16A               	goto	l2387
  1326   000DBC                     l2297:
  1327                           
  1328                           ;Laboratorio4.c: 154: r = n1 / n2;
  1329   000DBC  C037  F014         	movff	_n1,___lwdiv@dividend
  1330   000DC0  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1331   000DC4  C035  F016         	movff	_n2,___lwdiv@divisor
  1332   000DC8  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1333   000DCC  EC9D  F00A         	call	___lwdiv	;wreg free
  1334   000DD0  C014  F025         	movff	?___lwdiv,_r
  1335   000DD4  C015  F026         	movff	?___lwdiv+1,_r+1
  1336   000DD8  6A27               	clrf	(_r+2)^0,c
  1337   000DDA  6A28               	clrf	(_r+3)^0,c
  1338                           
  1339                           ;Laboratorio4.c: 155: m = n1 % n2;
  1340   000DDC  C037  F00E         	movff	_n1,___lwmod@dividend
  1341   000DE0  C038  F00F         	movff	_n1+1,___lwmod@dividend+1
  1342   000DE4  C035  F010         	movff	_n2,___lwmod@divisor
  1343   000DE8  C036  F011         	movff	_n2+1,___lwmod@divisor+1
  1344   000DEC  EC5A  F00B         	call	___lwmod	;wreg free
  1345   000DF0  C00E  F03B         	movff	?___lwmod,_m
  1346   000DF4  C00F  F03C         	movff	?___lwmod+1,_m+1
  1347   000DF8  6A3D               	clrf	(_m+2)^0,c
  1348   000DFA  6A3E               	clrf	(_m+3)^0,c
  1349                           
  1350                           ;Laboratorio4.c: 156: EscribeLCD_c(r+'0');
  1351   000DFC  5025               	movf	_r^0,w,c
  1352   000DFE  0F30               	addlw	48
  1353   000E00  ECAB  F00B         	call	_EscribeLCD_c
  1354                           
  1355                           ;Laboratorio4.c: 157: if(i == 0 && m != 0) {
  1356   000E04  5021               	movf	main@i^0,w,c
  1357   000E06  1022               	iorwf	(main@i+1)^0,w,c
  1358   000E08  A4D8               	btfss	status,2,c
  1359   000E0A  D009               	goto	l2305
  1360   000E0C  503B               	movf	_m^0,w,c
  1361   000E0E  103C               	iorwf	(_m+1)^0,w,c
  1362   000E10  103D               	iorwf	(_m+2)^0,w,c
  1363   000E12  103E               	iorwf	(_m+3)^0,w,c
  1364   000E14  B4D8               	btfsc	status,2,c
  1365   000E16  D003               	goto	l2305
  1366                           
  1367                           ;Laboratorio4.c: 158: EscribeLCD_c(',');
  1368   000E18  0E2C               	movlw	44
  1369   000E1A  ECAB  F00B         	call	_EscribeLCD_c
  1370   000E1E                     l2305:
  1371                           
  1372                           ;Laboratorio4.c: 159: };Laboratorio4.c: 160: if (m != 0) {
  1373   000E1E  503B               	movf	_m^0,w,c
  1374   000E20  103C               	iorwf	(_m+1)^0,w,c
  1375   000E22  103D               	iorwf	(_m+2)^0,w,c
  1376   000E24  103E               	iorwf	(_m+3)^0,w,c
  1377   000E26  B4D8               	btfsc	status,2,c
  1378   000E28  D133               	goto	l2387
  1379                           
  1380                           ;Laboratorio4.c: 161: n1 = m * 10;
  1381   000E2A  C03B  F00E         	movff	_m,___wmul@multiplier
  1382   000E2E  C03C  F00F         	movff	_m+1,___wmul@multiplier+1
  1383   000E32  0E00               	movlw	0
  1384   000E34  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1385   000E36  0E0A               	movlw	10
  1386   000E38  6E10               	movwf	___wmul@multiplicand^0,c
  1387   000E3A  EC98  F00B         	call	___wmul	;wreg free
  1388   000E3E  C00E  F037         	movff	?___wmul,_n1
  1389   000E42  C00F  F038         	movff	?___wmul+1,_n1+1
  1390                           
  1391                           ;Laboratorio4.c: 162: } else {
  1392   000E46  4A21               	infsnz	main@i^0,f,c
  1393   000E48  2A22               	incf	(main@i+1)^0,f,c
  1394   000E4A  D7AE               	goto	l2293
  1395   000E4C                     l2313:
  1396   000E4C  5028               	movf	(_r+3)^0,w,c
  1397   000E4E  1027               	iorwf	(_r+2)^0,w,c
  1398   000E50  1026               	iorwf	(_r+1)^0,w,c
  1399   000E52  E104               	bnz	u2210
  1400   000E54  0E52               	movlw	82
  1401   000E56  5C25               	subwf	_r^0,w,c
  1402   000E58  A0D8               	btfss	status,0,c
  1403   000E5A  D029               	goto	l2327
  1404   000E5C                     u2210:
  1405   000E5C  0EE8               	movlw	232
  1406   000E5E  1825               	xorwf	_r^0,w,c
  1407   000E60  E106               	bnz	u2220
  1408   000E62  0E03               	movlw	3
  1409   000E64  1826               	xorwf	(_r+1)^0,w,c
  1410   000E66  1027               	iorwf	(_r+2)^0,w,c
  1411   000E68  1028               	iorwf	(_r+3)^0,w,c
  1412   000E6A  B4D8               	btfsc	status,2,c
  1413   000E6C  D020               	goto	l2327
  1414   000E6E                     u2220:
  1415   000E6E  0EE9               	movlw	233
  1416   000E70  1825               	xorwf	_r^0,w,c
  1417   000E72  E106               	bnz	u2230
  1418   000E74  0E03               	movlw	3
  1419   000E76  1826               	xorwf	(_r+1)^0,w,c
  1420   000E78  1027               	iorwf	(_r+2)^0,w,c
  1421   000E7A  1028               	iorwf	(_r+3)^0,w,c
  1422   000E7C  B4D8               	btfsc	status,2,c
  1423   000E7E  D017               	goto	l2327
  1424   000E80                     u2230:
  1425   000E80  0E2D               	movlw	45
  1426   000E82  1841               	xorwf	_op^0,w,c
  1427   000E84  A4D8               	btfss	status,2,c
  1428   000E86  D013               	goto	l2327
  1429                           
  1430                           ;Laboratorio4.c: 168: EscribeLCD_c('-');
  1431   000E88  0E2D               	movlw	45
  1432   000E8A  ECAB  F00B         	call	_EscribeLCD_c
  1433                           
  1434                           ;Laboratorio4.c: 169: DireccionaLCD(0x85);
  1435   000E8E  0E85               	movlw	133
  1436   000E90  ECB6  F00B         	call	_DireccionaLCD
  1437                           
  1438                           ;Laboratorio4.c: 170: r = ~r+1;
  1439   000E94  1E28               	comf	(_r+3)^0,f,c
  1440   000E96  1E27               	comf	(_r+2)^0,f,c
  1441   000E98  1E26               	comf	(_r+1)^0,f,c
  1442   000E9A  6C25               	negf	_r^0,c
  1443   000E9C  0E00               	movlw	0
  1444   000E9E  2226               	addwfc	(_r+1)^0,f,c
  1445   000EA0  2227               	addwfc	(_r+2)^0,f,c
  1446   000EA2  2228               	addwfc	(_r+3)^0,f,c
  1447                           
  1448                           ;Laboratorio4.c: 171: EscribeLCD_c(r+'0');
  1449   000EA4  5025               	movf	_r^0,w,c
  1450   000EA6  0F30               	addlw	48
  1451   000EA8  ECAB  F00B         	call	_EscribeLCD_c
  1452                           
  1453                           ;Laboratorio4.c: 172: }else{
  1454   000EAC  D0F1               	goto	l2387
  1455   000EAE                     l2327:
  1456                           
  1457                           ;Laboratorio4.c: 173: if(r==1000){
  1458   000EAE  0EE8               	movlw	232
  1459   000EB0  1825               	xorwf	_r^0,w,c
  1460   000EB2  E10B               	bnz	l2331
  1461   000EB4  0E03               	movlw	3
  1462   000EB6  1826               	xorwf	(_r+1)^0,w,c
  1463   000EB8  1027               	iorwf	(_r+2)^0,w,c
  1464   000EBA  1028               	iorwf	(_r+3)^0,w,c
  1465   000EBC  A4D8               	btfss	status,2,c
  1466   000EBE  D005               	goto	l2331
  1467                           
  1468                           ;Laboratorio4.c: 174: MensajeLCD_Word("Inf.");
  1469   000EC0  0E2A               	movlw	low STR_4
  1470   000EC2  6E13               	movwf	MensajeLCD_Word@a^0,c
  1471   000EC4  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
  1472                           
  1473                           ;Laboratorio4.c: 175: }else{
  1474   000EC8  D0E3               	goto	l2387
  1475   000ECA                     l2331:
  1476                           
  1477                           ;Laboratorio4.c: 176: if(r==1001){
  1478   000ECA  0EE9               	movlw	233
  1479   000ECC  1825               	xorwf	_r^0,w,c
  1480   000ECE  E10B               	bnz	l2335
  1481   000ED0  0E03               	movlw	3
  1482   000ED2  1826               	xorwf	(_r+1)^0,w,c
  1483   000ED4  1027               	iorwf	(_r+2)^0,w,c
  1484   000ED6  1028               	iorwf	(_r+3)^0,w,c
  1485   000ED8  A4D8               	btfss	status,2,c
  1486   000EDA  D005               	goto	l2335
  1487                           
  1488                           ;Laboratorio4.c: 177: MensajeLCD_Word("Ind.");
  1489   000EDC  0E25               	movlw	low STR_5
  1490   000EDE  6E13               	movwf	MensajeLCD_Word@a^0,c
  1491   000EE0  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
  1492                           
  1493                           ;Laboratorio4.c: 178: }else{
  1494   000EE4  D0D5               	goto	l2387
  1495   000EE6                     l2335:
  1496                           
  1497                           ;Laboratorio4.c: 179: if(r>=0xA & r!=1000 & r !=1001){
  1498   000EE6  5028               	movf	(_r+3)^0,w,c
  1499   000EE8  1027               	iorwf	(_r+2)^0,w,c
  1500   000EEA  1026               	iorwf	(_r+1)^0,w,c
  1501   000EEC  E104               	bnz	u2270
  1502   000EEE  0E0A               	movlw	10
  1503   000EF0  5C25               	subwf	_r^0,w,c
  1504   000EF2  A0D8               	btfss	status,0,c
  1505   000EF4  D0C5               	goto	l2383
  1506   000EF6                     u2270:
  1507   000EF6  0EE8               	movlw	232
  1508   000EF8  1825               	xorwf	_r^0,w,c
  1509   000EFA  E106               	bnz	u2280
  1510   000EFC  0E03               	movlw	3
  1511   000EFE  1826               	xorwf	(_r+1)^0,w,c
  1512   000F00  1027               	iorwf	(_r+2)^0,w,c
  1513   000F02  1028               	iorwf	(_r+3)^0,w,c
  1514   000F04  B4D8               	btfsc	status,2,c
  1515   000F06  D0BC               	goto	l2383
  1516   000F08                     u2280:
  1517   000F08  0EE9               	movlw	233
  1518   000F0A  1825               	xorwf	_r^0,w,c
  1519   000F0C  E106               	bnz	u2290
  1520   000F0E  0E03               	movlw	3
  1521   000F10  1826               	xorwf	(_r+1)^0,w,c
  1522   000F12  1027               	iorwf	(_r+2)^0,w,c
  1523   000F14  1028               	iorwf	(_r+3)^0,w,c
  1524   000F16  B4D8               	btfsc	status,2,c
  1525   000F18  D0B3               	goto	l2383
  1526   000F1A                     u2290:
  1527                           
  1528                           ;Laboratorio4.c: 180: for(int j=9;j>=0;j--){
  1529   000F1A  0E00               	movlw	0
  1530   000F1C  6E24               	movwf	(main@j+1)^0,c
  1531   000F1E  0E09               	movlw	9
  1532   000F20  6E23               	movwf	main@j^0,c
  1533   000F22                     l2343:
  1534   000F22  BE24               	btfsc	(main@j+1)^0,7,c
  1535   000F24  D0B5               	goto	l2387
  1536                           
  1537                           ;Laboratorio4.c: 181: partdecl = 10;
  1538   000F26  0E0A               	movlw	10
  1539   000F28  6E29               	movwf	_partdecl^0,c
  1540   000F2A  0E00               	movlw	0
  1541   000F2C  6E2A               	movwf	(_partdecl+1)^0,c
  1542   000F2E  0E00               	movlw	0
  1543   000F30  6E2B               	movwf	(_partdecl+2)^0,c
  1544   000F32  0E00               	movlw	0
  1545   000F34  6E2C               	movwf	(_partdecl+3)^0,c
  1546                           
  1547                           ;Laboratorio4.c: 182: for(int k=j-1;k>0;k--){
  1548   000F36  0EFF               	movlw	255
  1549   000F38  2423               	addwf	main@j^0,w,c
  1550   000F3A  6E1F               	movwf	main@k^0,c
  1551   000F3C  0EFF               	movlw	255
  1552   000F3E  2024               	addwfc	(main@j+1)^0,w,c
  1553   000F40  6E20               	movwf	(main@k+1)^0,c
  1554   000F42                     l2351:
  1555   000F42  BE20               	btfsc	(main@k+1)^0,7,c
  1556   000F44  D023               	goto	l2361
  1557   000F46  5020               	movf	(main@k+1)^0,w,c
  1558   000F48  E103               	bnz	l2355
  1559   000F4A  041F               	decf	main@k^0,w,c
  1560   000F4C  A0D8               	btfss	status,0,c
  1561   000F4E  D01E               	goto	l2361
  1562   000F50                     l2355:
  1563                           
  1564                           ;Laboratorio4.c: 183: partdecl = partdecl*10;
  1565   000F50  C029  F00E         	movff	_partdecl,___lmul@multiplier
  1566   000F54  C02A  F00F         	movff	_partdecl+1,___lmul@multiplier+1
  1567   000F58  C02B  F010         	movff	_partdecl+2,___lmul@multiplier+2
  1568   000F5C  C02C  F011         	movff	_partdecl+3,___lmul@multiplier+3
  1569   000F60  0E0A               	movlw	10
  1570   000F62  6E12               	movwf	___lmul@multiplicand^0,c
  1571   000F64  0E00               	movlw	0
  1572   000F66  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1573   000F68  0E00               	movlw	0
  1574   000F6A  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1575   000F6C  0E00               	movlw	0
  1576   000F6E  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1577   000F70  EC1C  F00A         	call	___lmul	;wreg free
  1578   000F74  C00E  F029         	movff	?___lmul,_partdecl
  1579   000F78  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1580   000F7C  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1581   000F80  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1582   000F84  061F               	decf	main@k^0,f,c
  1583   000F86  A0D8               	btfss	status,0,c
  1584   000F88  0620               	decf	(main@k+1)^0,f,c
  1585   000F8A  D7DB               	goto	l2351
  1586   000F8C                     l2361:
  1587                           
  1588                           ;Laboratorio4.c: 184: };Laboratorio4.c: 185: if(r/partdecl>0){
  1589   000F8C  C025  F00E         	movff	_r,___lldiv@dividend
  1590   000F90  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1591   000F94  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1592   000F98  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1593   000F9C  C029  F012         	movff	_partdecl,___lldiv@divisor
  1594   000FA0  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1595   000FA4  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1596   000FA8  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1597   000FAC  EC2C  F009         	call	___lldiv	;wreg free
  1598   000FB0  500E               	movf	?___lldiv^0,w,c
  1599   000FB2  100F               	iorwf	(?___lldiv+1)^0,w,c
  1600   000FB4  1010               	iorwf	(?___lldiv+2)^0,w,c
  1601   000FB6  1011               	iorwf	(?___lldiv+3)^0,w,c
  1602   000FB8  B4D8               	btfsc	status,2,c
  1603   000FBA  D033               	goto	l2369
  1604                           
  1605                           ;Laboratorio4.c: 186: flag = 1;
  1606   000FBC  0E01               	movlw	1
  1607   000FBE  6E39               	movwf	_flag^0,c
  1608                           
  1609                           ;Laboratorio4.c: 187: EscribeLCD_c(r/partdecl+48);
  1610   000FC0  C025  F00E         	movff	_r,___lldiv@dividend
  1611   000FC4  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1612   000FC8  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1613   000FCC  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1614   000FD0  C029  F012         	movff	_partdecl,___lldiv@divisor
  1615   000FD4  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1616   000FD8  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1617   000FDC  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1618   000FE0  EC2C  F009         	call	___lldiv	;wreg free
  1619   000FE4  500E               	movf	?___lldiv^0,w,c
  1620   000FE6  0F30               	addlw	48
  1621   000FE8  ECAB  F00B         	call	_EscribeLCD_c
  1622                           
  1623                           ;Laboratorio4.c: 188: r=r%partdecl;
  1624   000FEC  C025  F00E         	movff	_r,___llmod@dividend
  1625   000FF0  C026  F00F         	movff	_r+1,___llmod@dividend+1
  1626   000FF4  C027  F010         	movff	_r+2,___llmod@dividend+2
  1627   000FF8  C028  F011         	movff	_r+3,___llmod@dividend+3
  1628   000FFC  C029  F012         	movff	_partdecl,___llmod@divisor
  1629   001000  C02A  F013         	movff	_partdecl+1,___llmod@divisor+1
  1630   001004  C02B  F014         	movff	_partdecl+2,___llmod@divisor+2
  1631   001008  C02C  F015         	movff	_partdecl+3,___llmod@divisor+3
  1632   00100C  ECE9  F009         	call	___llmod	;wreg free
  1633   001010  C00E  F025         	movff	?___llmod,_r
  1634   001014  C00F  F026         	movff	?___llmod+1,_r+1
  1635   001018  C010  F027         	movff	?___llmod+2,_r+2
  1636   00101C  C011  F028         	movff	?___llmod+3,_r+3
  1637                           
  1638                           ;Laboratorio4.c: 189: }else if( (r/partdecl)==0 && flag){
  1639   001020  D02B               	goto	l2379
  1640   001022                     l2369:
  1641   001022  C025  F00E         	movff	_r,___lldiv@dividend
  1642   001026  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1643   00102A  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1644   00102E  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1645   001032  C029  F012         	movff	_partdecl,___lldiv@divisor
  1646   001036  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1647   00103A  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1648   00103E  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1649   001042  EC2C  F009         	call	___lldiv	;wreg free
  1650   001046  500E               	movf	?___lldiv^0,w,c
  1651   001048  100F               	iorwf	(?___lldiv+1)^0,w,c
  1652   00104A  1010               	iorwf	(?___lldiv+2)^0,w,c
  1653   00104C  1011               	iorwf	(?___lldiv+3)^0,w,c
  1654   00104E  A4D8               	btfss	status,2,c
  1655   001050  D013               	goto	l2379
  1656   001052  5039               	movf	_flag^0,w,c
  1657   001054  B4D8               	btfsc	status,2,c
  1658   001056  D010               	goto	l2379
  1659                           
  1660                           ;Laboratorio4.c: 190: if(r<10) EscribeLCD_c(r+48);
  1661   001058  5028               	movf	(_r+3)^0,w,c
  1662   00105A  1027               	iorwf	(_r+2)^0,w,c
  1663   00105C  1026               	iorwf	(_r+1)^0,w,c
  1664   00105E  E109               	bnz	l2377
  1665   001060  0E0A               	movlw	10
  1666   001062  5C25               	subwf	_r^0,w,c
  1667   001064  B0D8               	btfsc	status,0,c
  1668   001066  D005               	goto	l2377
  1669   001068  5025               	movf	_r^0,w,c
  1670   00106A  0F30               	addlw	48
  1671   00106C  ECAB  F00B         	call	_EscribeLCD_c
  1672   001070  D003               	goto	l2379
  1673   001072                     l2377:
  1674                           
  1675                           ;Laboratorio4.c: 191: else EscribeLCD_c(48);
  1676   001072  0E30               	movlw	48
  1677   001074  ECAB  F00B         	call	_EscribeLCD_c
  1678   001078                     l2379:
  1679   001078  0623               	decf	main@j^0,f,c
  1680   00107A  A0D8               	btfss	status,0,c
  1681   00107C  0624               	decf	(main@j+1)^0,f,c
  1682   00107E  D751               	goto	l2343
  1683   001080                     l2383:
  1684                           
  1685                           ;Laboratorio4.c: 195: EscribeLCD_c(r+'0');
  1686   001080  5025               	movf	_r^0,w,c
  1687   001082  0F30               	addlw	48
  1688   001084  ECAB  F00B         	call	_EscribeLCD_c
  1689   001088  D003               	goto	l2387
  1690   00108A                     l2385:
  1691                           
  1692                           ;Laboratorio4.c: 201: EscribeLCD_c(' ');
  1693   00108A  0E20               	movlw	32
  1694   00108C  ECAB  F00B         	call	_EscribeLCD_c
  1695   001090                     l2387:
  1696                           
  1697                           ;Laboratorio4.c: 202: };Laboratorio4.c: 203: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1698   001090  0EE4               	movlw	228
  1699   001092  6E1B               	movwf	??_main^0,c
  1700   001094  0E44               	movlw	68
  1701   001096                     u2437:
  1702   001096  2EE8               	decfsz	wreg,f,c
  1703   001098  D7FE               	bra	u2437
  1704   00109A  2E1B               	decfsz	??_main^0,f,c
  1705   00109C  D7FC               	bra	u2437
  1706   00109E  D000               	nop2	
  1707   0010A0  D415               	goto	l2083
  1708   0010A2                     __end_of_main:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function ___wmul *****************
  1712 ;; Defined at:
  1713 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  multiplier      2   13[COMRAM] unsigned int 
  1716 ;;  multiplicand    2   15[COMRAM] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  product         2   17[COMRAM] unsigned int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2   13[COMRAM] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, prodl, prodh
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1728 ;;      Params:         4       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1731 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 5
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text1
  1743   001730                     __ptext1:
  1744                           	callstack 0
  1745   001730                     ___wmul:
  1746                           	callstack 25
  1747                           
  1748                           ;incstack = 0
  1749   001730  500E               	movf	___wmul@multiplier^0,w,c
  1750   001732  0210               	mulwf	___wmul@multiplicand^0,c
  1751   001734  CFF3 F012          	movff	prodl,___wmul@product
  1752   001738  CFF4 F013          	movff	prodh,___wmul@product+1
  1753   00173C  500E               	movf	___wmul@multiplier^0,w,c
  1754   00173E  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  1755   001740  50F3               	movf	243,w,c
  1756   001742  2613               	addwf	(___wmul@product+1)^0,f,c
  1757   001744  500F               	movf	(___wmul@multiplier+1)^0,w,c
  1758   001746  0210               	mulwf	___wmul@multiplicand^0,c
  1759   001748  50F3               	movf	243,w,c
  1760   00174A  2613               	addwf	(___wmul@product+1)^0,f,c
  1761   00174C  C012  F00E         	movff	___wmul@product,?___wmul
  1762   001750  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  1763   001754  0012               	return		;funcret
  1764   001756                     __end_of___wmul:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function ___lwmod *****************
  1768 ;; Defined at:
  1769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  dividend        2   13[COMRAM] unsigned int 
  1772 ;;  divisor         2   15[COMRAM] unsigned int 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  counter         1   17[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2   13[COMRAM] unsigned int 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1784 ;;      Params:         4       0       0       0       0       0       0       0       0
  1785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1787 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1788 ;;Total ram usage:        5 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 5
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text2
  1799   0016B4                     __ptext2:
  1800                           	callstack 0
  1801   0016B4                     ___lwmod:
  1802                           	callstack 25
  1803                           
  1804                           ;incstack = 0
  1805   0016B4  5010               	movf	___lwmod@divisor^0,w,c
  1806   0016B6  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1807   0016B8  B4D8               	btfsc	status,2,c
  1808   0016BA  D018               	goto	l789
  1809   0016BC  0E01               	movlw	1
  1810   0016BE  6E12               	movwf	___lwmod@counter^0,c
  1811   0016C0  D004               	goto	l2011
  1812   0016C2                     l2009:
  1813   0016C2  90D8               	bcf	status,0,c
  1814   0016C4  3610               	rlcf	___lwmod@divisor^0,f,c
  1815   0016C6  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1816   0016C8  2A12               	incf	___lwmod@counter^0,f,c
  1817   0016CA                     l2011:
  1818   0016CA  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1819   0016CC  D7FA               	goto	l2009
  1820   0016CE                     u1560:
  1821   0016CE  5010               	movf	___lwmod@divisor^0,w,c
  1822   0016D0  5C0E               	subwf	___lwmod@dividend^0,w,c
  1823   0016D2  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1824   0016D4  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1825   0016D6  A0D8               	btfss	status,0,c
  1826   0016D8  D004               	goto	l2017
  1827   0016DA  5010               	movf	___lwmod@divisor^0,w,c
  1828   0016DC  5E0E               	subwf	___lwmod@dividend^0,f,c
  1829   0016DE  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1830   0016E0  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1831   0016E2                     l2017:
  1832   0016E2  90D8               	bcf	status,0,c
  1833   0016E4  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1834   0016E6  3210               	rrcf	___lwmod@divisor^0,f,c
  1835   0016E8  2E12               	decfsz	___lwmod@counter^0,f,c
  1836   0016EA  D7F1               	goto	u1560
  1837   0016EC                     l789:
  1838   0016EC  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1839   0016F0  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1840   0016F4  0012               	return		;funcret
  1841   0016F6                     __end_of___lwmod:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function ___lwdiv *****************
  1845 ;; Defined at:
  1846 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  dividend        2   19[COMRAM] unsigned int 
  1849 ;;  divisor         2   21[COMRAM] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  quotient        2   23[COMRAM] unsigned int 
  1852 ;;  counter         1   25[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   19[COMRAM] unsigned int 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         4       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        7 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 5
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text3
  1877   00153A                     __ptext3:
  1878                           	callstack 0
  1879   00153A                     ___lwdiv:
  1880                           	callstack 25
  1881                           
  1882                           ;incstack = 0
  1883   00153A  0E00               	movlw	0
  1884   00153C  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  1885   00153E  0E00               	movlw	0
  1886   001540  6E18               	movwf	___lwdiv@quotient^0,c
  1887   001542  5016               	movf	___lwdiv@divisor^0,w,c
  1888   001544  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1889   001546  B4D8               	btfsc	status,2,c
  1890   001548  D01C               	goto	l779
  1891   00154A  0E01               	movlw	1
  1892   00154C  6E1A               	movwf	___lwdiv@counter^0,c
  1893   00154E  D004               	goto	l1991
  1894   001550                     l1989:
  1895   001550  90D8               	bcf	status,0,c
  1896   001552  3616               	rlcf	___lwdiv@divisor^0,f,c
  1897   001554  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1898   001556  2A1A               	incf	___lwdiv@counter^0,f,c
  1899   001558                     l1991:
  1900   001558  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1901   00155A  D7FA               	goto	l1989
  1902   00155C                     u1530:
  1903   00155C  90D8               	bcf	status,0,c
  1904   00155E  3618               	rlcf	___lwdiv@quotient^0,f,c
  1905   001560  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1906   001562  5016               	movf	___lwdiv@divisor^0,w,c
  1907   001564  5C14               	subwf	___lwdiv@dividend^0,w,c
  1908   001566  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1909   001568  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1910   00156A  A0D8               	btfss	status,0,c
  1911   00156C  D005               	goto	l2001
  1912   00156E  5016               	movf	___lwdiv@divisor^0,w,c
  1913   001570  5E14               	subwf	___lwdiv@dividend^0,f,c
  1914   001572  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1915   001574  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1916   001576  8018               	bsf	___lwdiv@quotient^0,0,c
  1917   001578                     l2001:
  1918   001578  90D8               	bcf	status,0,c
  1919   00157A  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1920   00157C  3216               	rrcf	___lwdiv@divisor^0,f,c
  1921   00157E  2E1A               	decfsz	___lwdiv@counter^0,f,c
  1922   001580  D7ED               	goto	u1530
  1923   001582                     l779:
  1924   001582  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1925   001586  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1926   00158A  0012               	return		;funcret
  1927   00158C                     __end_of___lwdiv:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function ___lmul *****************
  1931 ;; Defined at:
  1932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  multiplier      4   13[COMRAM] unsigned long 
  1935 ;;  multiplicand    4   17[COMRAM] unsigned long 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  product         4   21[COMRAM] unsigned long 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  4   13[COMRAM] unsigned long 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         8       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:       12 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 5
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text4
  1962   001438                     __ptext4:
  1963                           	callstack 0
  1964   001438                     ___lmul:
  1965                           	callstack 25
  1966                           
  1967                           ;incstack = 0
  1968   001438  0E00               	movlw	0
  1969   00143A  6E16               	movwf	___lmul@product^0,c
  1970   00143C  0E00               	movlw	0
  1971   00143E  6E17               	movwf	(___lmul@product+1)^0,c
  1972   001440  0E00               	movlw	0
  1973   001442  6E18               	movwf	(___lmul@product+2)^0,c
  1974   001444  0E00               	movlw	0
  1975   001446  6E19               	movwf	(___lmul@product+3)^0,c
  1976   001448                     l1937:
  1977   001448  A00E               	btfss	___lmul@multiplier^0,0,c
  1978   00144A  D008               	goto	l1941
  1979   00144C  5012               	movf	___lmul@multiplicand^0,w,c
  1980   00144E  2616               	addwf	___lmul@product^0,f,c
  1981   001450  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  1982   001452  2217               	addwfc	(___lmul@product+1)^0,f,c
  1983   001454  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  1984   001456  2218               	addwfc	(___lmul@product+2)^0,f,c
  1985   001458  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  1986   00145A  2219               	addwfc	(___lmul@product+3)^0,f,c
  1987   00145C                     l1941:
  1988   00145C  90D8               	bcf	status,0,c
  1989   00145E  3612               	rlcf	___lmul@multiplicand^0,f,c
  1990   001460  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1991   001462  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1992   001464  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1993   001466  90D8               	bcf	status,0,c
  1994   001468  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  1995   00146A  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  1996   00146C  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  1997   00146E  320E               	rrcf	___lmul@multiplier^0,f,c
  1998   001470  500E               	movf	___lmul@multiplier^0,w,c
  1999   001472  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2000   001474  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2001   001476  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2002   001478  A4D8               	btfss	status,2,c
  2003   00147A  D7E6               	goto	l1937
  2004   00147C  C016  F00E         	movff	___lmul@product,?___lmul
  2005   001480  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2006   001484  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2007   001488  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2008   00148C  0012               	return		;funcret
  2009   00148E                     __end_of___lmul:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function ___llmod *****************
  2013 ;; Defined at:
  2014 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  dividend        4   13[COMRAM] unsigned long 
  2017 ;;  divisor         4   17[COMRAM] unsigned long 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  counter         1   21[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  4   13[COMRAM] unsigned long 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:         8       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2032 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:        9 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 5
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text5
  2044   0013D2                     __ptext5:
  2045                           	callstack 0
  2046   0013D2                     ___llmod:
  2047                           	callstack 25
  2048                           
  2049                           ;incstack = 0
  2050   0013D2  5012               	movf	___llmod@divisor^0,w,c
  2051   0013D4  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2052   0013D6  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2053   0013D8  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2054   0013DA  B4D8               	btfsc	status,2,c
  2055   0013DC  D024               	goto	l708
  2056   0013DE  0E01               	movlw	1
  2057   0013E0  6E16               	movwf	___llmod@counter^0,c
  2058   0013E2  D006               	goto	l1973
  2059   0013E4                     l1971:
  2060   0013E4  90D8               	bcf	status,0,c
  2061   0013E6  3612               	rlcf	___llmod@divisor^0,f,c
  2062   0013E8  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2063   0013EA  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2064   0013EC  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2065   0013EE  2A16               	incf	___llmod@counter^0,f,c
  2066   0013F0                     l1973:
  2067   0013F0  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2068   0013F2  D7F8               	goto	l1971
  2069   0013F4                     u1500:
  2070   0013F4  5012               	movf	___llmod@divisor^0,w,c
  2071   0013F6  5C0E               	subwf	___llmod@dividend^0,w,c
  2072   0013F8  5013               	movf	(___llmod@divisor+1)^0,w,c
  2073   0013FA  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2074   0013FC  5014               	movf	(___llmod@divisor+2)^0,w,c
  2075   0013FE  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2076   001400  5015               	movf	(___llmod@divisor+3)^0,w,c
  2077   001402  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2078   001404  A0D8               	btfss	status,0,c
  2079   001406  D008               	goto	l1979
  2080   001408  5012               	movf	___llmod@divisor^0,w,c
  2081   00140A  5E0E               	subwf	___llmod@dividend^0,f,c
  2082   00140C  5013               	movf	(___llmod@divisor+1)^0,w,c
  2083   00140E  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2084   001410  5014               	movf	(___llmod@divisor+2)^0,w,c
  2085   001412  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2086   001414  5015               	movf	(___llmod@divisor+3)^0,w,c
  2087   001416  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2088   001418                     l1979:
  2089   001418  90D8               	bcf	status,0,c
  2090   00141A  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2091   00141C  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2092   00141E  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2093   001420  3212               	rrcf	___llmod@divisor^0,f,c
  2094   001422  2E16               	decfsz	___llmod@counter^0,f,c
  2095   001424  D7E7               	goto	u1500
  2096   001426                     l708:
  2097   001426  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2098   00142A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2099   00142E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2100   001432  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2101   001436  0012               	return		;funcret
  2102   001438                     __end_of___llmod:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function ___lldiv *****************
  2106 ;; Defined at:
  2107 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  dividend        4   13[COMRAM] unsigned long 
  2110 ;;  divisor         4   17[COMRAM] unsigned long 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  quotient        4   21[COMRAM] unsigned long 
  2113 ;;  counter         1   25[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  4   13[COMRAM] unsigned long 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         8       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:       13 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 5
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text6
  2138   001258                     __ptext6:
  2139                           	callstack 0
  2140   001258                     ___lldiv:
  2141                           	callstack 25
  2142                           
  2143                           ;incstack = 0
  2144   001258  0E00               	movlw	0
  2145   00125A  6E16               	movwf	___lldiv@quotient^0,c
  2146   00125C  0E00               	movlw	0
  2147   00125E  6E17               	movwf	(___lldiv@quotient+1)^0,c
  2148   001260  0E00               	movlw	0
  2149   001262  6E18               	movwf	(___lldiv@quotient+2)^0,c
  2150   001264  0E00               	movlw	0
  2151   001266  6E19               	movwf	(___lldiv@quotient+3)^0,c
  2152   001268  5012               	movf	___lldiv@divisor^0,w,c
  2153   00126A  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  2154   00126C  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  2155   00126E  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  2156   001270  B4D8               	btfsc	status,2,c
  2157   001272  D02A               	goto	l327
  2158   001274  0E01               	movlw	1
  2159   001276  6E1A               	movwf	___lldiv@counter^0,c
  2160   001278  D006               	goto	l1953
  2161   00127A                     l1951:
  2162   00127A  90D8               	bcf	status,0,c
  2163   00127C  3612               	rlcf	___lldiv@divisor^0,f,c
  2164   00127E  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  2165   001280  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  2166   001282  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  2167   001284  2A1A               	incf	___lldiv@counter^0,f,c
  2168   001286                     l1953:
  2169   001286  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  2170   001288  D7F8               	goto	l1951
  2171   00128A                     u1470:
  2172   00128A  90D8               	bcf	status,0,c
  2173   00128C  3616               	rlcf	___lldiv@quotient^0,f,c
  2174   00128E  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  2175   001290  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  2176   001292  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  2177   001294  5012               	movf	___lldiv@divisor^0,w,c
  2178   001296  5C0E               	subwf	___lldiv@dividend^0,w,c
  2179   001298  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2180   00129A  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  2181   00129C  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2182   00129E  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  2183   0012A0  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2184   0012A2  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  2185   0012A4  A0D8               	btfss	status,0,c
  2186   0012A6  D009               	goto	l1963
  2187   0012A8  5012               	movf	___lldiv@divisor^0,w,c
  2188   0012AA  5E0E               	subwf	___lldiv@dividend^0,f,c
  2189   0012AC  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2190   0012AE  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  2191   0012B0  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2192   0012B2  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  2193   0012B4  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2194   0012B6  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  2195   0012B8  8016               	bsf	___lldiv@quotient^0,0,c
  2196   0012BA                     l1963:
  2197   0012BA  90D8               	bcf	status,0,c
  2198   0012BC  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  2199   0012BE  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  2200   0012C0  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  2201   0012C2  3212               	rrcf	___lldiv@divisor^0,f,c
  2202   0012C4  2E1A               	decfsz	___lldiv@counter^0,f,c
  2203   0012C6  D7E1               	goto	u1470
  2204   0012C8                     l327:
  2205   0012C8  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  2206   0012CC  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  2207   0012D0  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  2208   0012D4  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  2209   0012D8  0012               	return		;funcret
  2210   0012DA                     __end_of___lldiv:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _MensajeLCD_Word *****************
  2214 ;; Defined at:
  2215 ;;		line 245 in file "LibLCDXC8.h"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  a               1   18[COMRAM] PTR unsigned char 
  2218 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  2219 ;;		 -> STR_2(5), STR_1(8), 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  i               2   20[COMRAM] int 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         1       0       0       0       0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2233 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        4 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 8
  2238 ;; This function calls:
  2239 ;;		_EscribeLCD_c
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text7
  2246   00158C                     __ptext7:
  2247                           	callstack 0
  2248   00158C                     _MensajeLCD_Word:
  2249                           	callstack 22
  2250                           
  2251                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  2252                           
  2253                           ;incstack = 0
  2254   00158C  0E00               	movlw	0
  2255   00158E  6E16               	movwf	(MensajeLCD_Word@i+1)^0,c
  2256   001590  0E00               	movlw	0
  2257   001592  6E15               	movwf	MensajeLCD_Word@i^0,c
  2258   001594                     l1919:
  2259                           
  2260                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  2261   001594  5013               	movf	MensajeLCD_Word@a^0,w,c
  2262   001596  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2263   001598  6E14               	movwf	??_MensajeLCD_Word^0,c
  2264   00159A  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2265   00159E                     	if	1	;There is more than 1 active tblptr byte
  2266   00159E  0E08               	movlw	high __smallconst
  2267   0015A0  6EF7               	movwf	tblptrh,c
  2268   0015A2                     	endif
  2269   0015A2                     	if	0	;tblptru may be non-zero
  2270   0015A2                     	endif
  2271   0015A2                     	if	0	;tblptru may be non-zero
  2272   0015A2                     	endif
  2273   0015A2  0008               	tblrd		*
  2274   0015A4  50F5               	movf	tablat,w,c
  2275   0015A6  0900               	iorlw	0
  2276   0015A8  B4D8               	btfsc	status,2,c
  2277   0015AA  0012               	return	
  2278                           
  2279                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  2280   0015AC  5013               	movf	MensajeLCD_Word@a^0,w,c
  2281   0015AE  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2282   0015B0  6E14               	movwf	??_MensajeLCD_Word^0,c
  2283   0015B2  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2284   0015B6                     	if	1	;There is more than 1 active tblptr byte
  2285   0015B6  0E08               	movlw	high __smallconst
  2286   0015B8  6EF7               	movwf	tblptrh,c
  2287   0015BA                     	endif
  2288   0015BA                     	if	0	;tblptru may be non-zero
  2289   0015BA                     	endif
  2290   0015BA                     	if	0	;tblptru may be non-zero
  2291   0015BA                     	endif
  2292   0015BA  0008               	tblrd		*
  2293   0015BC  50F5               	movf	tablat,w,c
  2294   0015BE  ECAB  F00B         	call	_EscribeLCD_c
  2295   0015C2  4A15               	infsnz	MensajeLCD_Word@i^0,f,c
  2296   0015C4  2A16               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2297   0015C6  BE16               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2298   0015C8  D7E5               	goto	l1919
  2299   0015CA  5016               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2300   0015CC  E105               	bnz	u1430
  2301   0015CE  0E10               	movlw	16
  2302   0015D0  5C15               	subwf	MensajeLCD_Word@i^0,w,c
  2303   0015D2  B0D8               	btfsc	status,0,c
  2304   0015D4  0012               	return	
  2305   0015D6  D7DE               	goto	l1919
  2306   0015D8                     u1430:
  2307   0015D8  0012               	return		;funcret
  2308   0015DA                     __end_of_MensajeLCD_Word:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _EscribeLCD_c *****************
  2312 ;; Defined at:
  2313 ;;		line 146 in file "LibLCDXC8.h"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  a               1    wreg     unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  a               1   17[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 7
  2334 ;; This function calls:
  2335 ;;		_EnviaDato
  2336 ;;		_HabilitaLCD
  2337 ;;		_RetardoLCD
  2338 ;; This function is called by:
  2339 ;;		_MensajeLCD_Word
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text8
  2345   001756                     __ptext8:
  2346                           	callstack 0
  2347   001756                     _EscribeLCD_c:
  2348                           	callstack 22
  2349                           
  2350                           ;incstack = 0
  2351                           ;EscribeLCD_c@a stored from wreg
  2352   001756  6E12               	movwf	EscribeLCD_c@a^0,c
  2353                           
  2354                           ;LibLCDXC8.h: 150: LATE0=1;
  2355   001758  808D               	bsf	3981,0,c	;volatile
  2356                           
  2357                           ;LibLCDXC8.h: 151: EnviaDato(a);
  2358   00175A  5012               	movf	EscribeLCD_c@a^0,w,c
  2359   00175C  EC14  F00B         	call	_EnviaDato
  2360                           
  2361                           ;LibLCDXC8.h: 152: HabilitaLCD();
  2362   001760  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2363                           
  2364                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  2365   001764  0E04               	movlw	4
  2366   001766  EC47  F00A         	call	_RetardoLCD
  2367   00176A  0012               	return		;funcret
  2368   00176C                     __end_of_EscribeLCD_c:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _LeerTeclado *****************
  2372 ;; Defined at:
  2373 ;;		line 209 in file "Laboratorio4.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      unsigned char 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2389 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2390 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2391 ;;Total ram usage:        1 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 5
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text9
  2402   0010A2                     __ptext9:
  2403                           	callstack 0
  2404   0010A2                     _LeerTeclado:
  2405                           	callstack 25
  2406                           
  2407                           ;Laboratorio4.c: 210: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2408                           
  2409                           ;incstack = 0
  2410   0010A2  B881               	btfsc	3969,4,c	;volatile
  2411   0010A4  AA81               	btfss	3969,5,c	;volatile
  2412   0010A6  D004               	goto	u140
  2413   0010A8  AC81               	btfss	3969,6,c	;volatile
  2414   0010AA  D002               	goto	u140
  2415   0010AC  BE81               	btfsc	3969,7,c	;volatile
  2416   0010AE  D7F9               	goto	__ptext9
  2417   0010B0                     u140:
  2418                           
  2419                           ;Laboratorio4.c: 211: verificador = 1;
  2420   0010B0  0E00               	movlw	0
  2421   0010B2  6E2E               	movwf	(_verificador+1)^0,c
  2422   0010B4  0E01               	movlw	1
  2423   0010B6  6E2D               	movwf	_verificador^0,c
  2424                           
  2425                           ;Laboratorio4.c: 212: LATB=0b11111110;
  2426   0010B8  0EFE               	movlw	254
  2427   0010BA  6E8A               	movwf	138,c	;volatile
  2428                           
  2429                           ;Laboratorio4.c: 213: if(RB4==0) return '1';
  2430   0010BC  B881               	btfsc	3969,4,c	;volatile
  2431   0010BE  D002               	goto	l234
  2432   0010C0  0E31               	movlw	49
  2433   0010C2  0012               	return	
  2434   0010C4                     l234:
  2435                           
  2436                           ;Laboratorio4.c: 214: else if(RB5==0) return '2';
  2437   0010C4  BA81               	btfsc	3969,5,c	;volatile
  2438   0010C6  D002               	goto	l237
  2439   0010C8  0E32               	movlw	50
  2440   0010CA  0012               	return	
  2441   0010CC                     l237:
  2442                           
  2443                           ;Laboratorio4.c: 215: else if(RB6==0) return '3';
  2444   0010CC  BC81               	btfsc	3969,6,c	;volatile
  2445   0010CE  D002               	goto	l1245
  2446   0010D0  0E33               	movlw	51
  2447   0010D2  0012               	return	
  2448   0010D4                     l1245:
  2449                           
  2450                           ;Laboratorio4.c: 216: else if(RB7==0 & RC6==0) return '+';
  2451   0010D4  BC82               	btfsc	3970,6,c	;volatile
  2452   0010D6  D002               	goto	u180
  2453   0010D8  0E01               	movlw	1
  2454   0010DA  D001               	goto	u182
  2455   0010DC                     u180:
  2456   0010DC  0E00               	movlw	0
  2457   0010DE                     u182:
  2458   0010DE  6E0E               	movwf	??_LeerTeclado^0,c
  2459   0010E0  BE81               	btfsc	3969,7,c	;volatile
  2460   0010E2  D002               	goto	u190
  2461   0010E4  0E01               	movlw	1
  2462   0010E6  D001               	goto	u192
  2463   0010E8                     u190:
  2464   0010E8  0E00               	movlw	0
  2465   0010EA                     u192:
  2466   0010EA  140E               	andwf	??_LeerTeclado^0,w,c
  2467   0010EC  A0E8               	btfss	wreg,0,c
  2468   0010EE  D002               	goto	l1253
  2469   0010F0  0E2B               	movlw	43
  2470   0010F2  0012               	return	
  2471   0010F4                     l1253:
  2472                           
  2473                           ;Laboratorio4.c: 217: else if(RB7==0 & RC6==1) return '!';
  2474   0010F4  AC82               	btfss	3970,6,c	;volatile
  2475   0010F6  D002               	goto	u210
  2476   0010F8  0E01               	movlw	1
  2477   0010FA  D001               	goto	u212
  2478   0010FC                     u210:
  2479   0010FC  0E00               	movlw	0
  2480   0010FE                     u212:
  2481   0010FE  6E0E               	movwf	??_LeerTeclado^0,c
  2482   001100  BE81               	btfsc	3969,7,c	;volatile
  2483   001102  D002               	goto	u220
  2484   001104  0E01               	movlw	1
  2485   001106  D001               	goto	u222
  2486   001108                     u220:
  2487   001108  0E00               	movlw	0
  2488   00110A                     u222:
  2489   00110A  140E               	andwf	??_LeerTeclado^0,w,c
  2490   00110C  A0E8               	btfss	wreg,0,c
  2491   00110E  D002               	goto	l1261
  2492   001110  0E21               	movlw	33
  2493   001112  0012               	return	
  2494   001114                     l1261:
  2495                           
  2496                           ;Laboratorio4.c: 218: else{;Laboratorio4.c: 219: LATB=0b11111101;
  2497   001114  0EFD               	movlw	253
  2498   001116  6E8A               	movwf	138,c	;volatile
  2499                           
  2500                           ;Laboratorio4.c: 220: if(RB4==0) return '4';
  2501   001118  B881               	btfsc	3969,4,c	;volatile
  2502   00111A  D002               	goto	l245
  2503   00111C  0E34               	movlw	52
  2504   00111E  0012               	return	
  2505   001120                     l245:
  2506                           
  2507                           ;Laboratorio4.c: 221: else if(RB5==0) return '5';
  2508   001120  BA81               	btfsc	3969,5,c	;volatile
  2509   001122  D002               	goto	l247
  2510   001124  0E35               	movlw	53
  2511   001126  0012               	return	
  2512   001128                     l247:
  2513                           
  2514                           ;Laboratorio4.c: 222: else if(RB6==0) return '6';
  2515   001128  BC81               	btfsc	3969,6,c	;volatile
  2516   00112A  D002               	goto	l1283
  2517   00112C  0E36               	movlw	54
  2518   00112E  0012               	return	
  2519   001130                     l1283:
  2520                           
  2521                           ;Laboratorio4.c: 223: else if(RB7==0 & RC6==0) return '-';
  2522   001130  BC82               	btfsc	3970,6,c	;volatile
  2523   001132  D002               	goto	u270
  2524   001134  0E01               	movlw	1
  2525   001136  D001               	goto	u272
  2526   001138                     u270:
  2527   001138  0E00               	movlw	0
  2528   00113A                     u272:
  2529   00113A  6E0E               	movwf	??_LeerTeclado^0,c
  2530   00113C  BE81               	btfsc	3969,7,c	;volatile
  2531   00113E  D002               	goto	u280
  2532   001140  0E01               	movlw	1
  2533   001142  D001               	goto	u282
  2534   001144                     u280:
  2535   001144  0E00               	movlw	0
  2536   001146                     u282:
  2537   001146  140E               	andwf	??_LeerTeclado^0,w,c
  2538   001148  A0E8               	btfss	wreg,0,c
  2539   00114A  D002               	goto	l1291
  2540   00114C  0E2D               	movlw	45
  2541   00114E  0012               	return	
  2542   001150                     l1291:
  2543                           
  2544                           ;Laboratorio4.c: 224: else if(RB7==0 & RC6==1) return '^';
  2545   001150  AC82               	btfss	3970,6,c	;volatile
  2546   001152  D002               	goto	u300
  2547   001154  0E01               	movlw	1
  2548   001156  D001               	goto	u302
  2549   001158                     u300:
  2550   001158  0E00               	movlw	0
  2551   00115A                     u302:
  2552   00115A  6E0E               	movwf	??_LeerTeclado^0,c
  2553   00115C  BE81               	btfsc	3969,7,c	;volatile
  2554   00115E  D002               	goto	u310
  2555   001160  0E01               	movlw	1
  2556   001162  D001               	goto	u312
  2557   001164                     u310:
  2558   001164  0E00               	movlw	0
  2559   001166                     u312:
  2560   001166  140E               	andwf	??_LeerTeclado^0,w,c
  2561   001168  A0E8               	btfss	wreg,0,c
  2562   00116A  D002               	goto	l1299
  2563   00116C  0E5E               	movlw	94
  2564   00116E  0012               	return	
  2565   001170                     l1299:
  2566                           
  2567                           ;Laboratorio4.c: 225: else{;Laboratorio4.c: 226: LATB=0b11111011;
  2568   001170  0EFB               	movlw	251
  2569   001172  6E8A               	movwf	138,c	;volatile
  2570                           
  2571                           ;Laboratorio4.c: 227: if(RB4==0) return '7';
  2572   001174  B881               	btfsc	3969,4,c	;volatile
  2573   001176  D002               	goto	l255
  2574   001178  0E37               	movlw	55
  2575   00117A  0012               	return	
  2576   00117C                     l255:
  2577                           
  2578                           ;Laboratorio4.c: 228: else if(RB5==0) return '8';
  2579   00117C  BA81               	btfsc	3969,5,c	;volatile
  2580   00117E  D002               	goto	l257
  2581   001180  0E38               	movlw	56
  2582   001182  0012               	return	
  2583   001184                     l257:
  2584                           
  2585                           ;Laboratorio4.c: 229: else if(RB6==0) return '9';
  2586   001184  BC81               	btfsc	3969,6,c	;volatile
  2587   001186  D002               	goto	l259
  2588   001188  0E39               	movlw	57
  2589   00118A  0012               	return	
  2590   00118C                     l259:
  2591                           
  2592                           ;Laboratorio4.c: 230: else if(RB7==0) return '/';
  2593   00118C  BE81               	btfsc	3969,7,c	;volatile
  2594   00118E  D002               	goto	l1327
  2595   001190  0E2F               	movlw	47
  2596   001192  0012               	return	
  2597   001194                     l1327:
  2598                           
  2599                           ;Laboratorio4.c: 231: else{;Laboratorio4.c: 232: LATB=0b11110111;
  2600   001194  0EF7               	movlw	247
  2601   001196  6E8A               	movwf	138,c	;volatile
  2602                           
  2603                           ;Laboratorio4.c: 233: if(RB4==0) return 'C';
  2604   001198  B881               	btfsc	3969,4,c	;volatile
  2605   00119A  D002               	goto	l263
  2606   00119C  0E43               	movlw	67
  2607   00119E  0012               	return	
  2608   0011A0                     l263:
  2609                           
  2610                           ;Laboratorio4.c: 234: else if(RB5==0) return '0';
  2611   0011A0  BA81               	btfsc	3969,5,c	;volatile
  2612   0011A2  D002               	goto	l265
  2613   0011A4  0E30               	movlw	48
  2614   0011A6  0012               	return	
  2615   0011A8                     l265:
  2616                           
  2617                           ;Laboratorio4.c: 235: else if(RB6==0) return '=';
  2618   0011A8  BC81               	btfsc	3969,6,c	;volatile
  2619   0011AA  D002               	goto	l267
  2620   0011AC  0E3D               	movlw	61
  2621   0011AE  0012               	return	
  2622   0011B0                     l267:
  2623                           
  2624                           ;Laboratorio4.c: 236: else if(RB7==0) return 'x';
  2625   0011B0  BE81               	btfsc	3969,7,c	;volatile
  2626   0011B2  D002               	goto	l264
  2627   0011B4  0E78               	movlw	120
  2628   0011B6  0012               	return	
  2629   0011B8                     l264:
  2630                           
  2631                           ;Laboratorio4.c: 237: };Laboratorio4.c: 238: };Laboratorio4.c: 239: };Laboratorio4.c: 24
      +                          0: return '?';
  2632   0011B8  0E3F               	movlw	63
  2633   0011BA  0012               	return		;funcret
  2634   0011BC                     __end_of_LeerTeclado:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _InicializaLCD *****************
  2638 ;; Defined at:
  2639 ;;		line 72 in file "LibLCDXC8.h"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 8
  2660 ;; This function calls:
  2661 ;;		_BorraLCD
  2662 ;;		_EnviaDato
  2663 ;;		_HabilitaLCD
  2664 ;;		_RetardoLCD
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text10
  2671   0011BC                     __ptext10:
  2672                           	callstack 0
  2673   0011BC                     _InicializaLCD:
  2674                           	callstack 22
  2675                           
  2676                           ;LibLCDXC8.h: 74: LATE0=0;
  2677                           
  2678                           ;incstack = 0
  2679   0011BC  908D               	bcf	3981,0,c	;volatile
  2680                           
  2681                           ;LibLCDXC8.h: 75: if(interfaz==4)
  2682   0011BE  0E04               	movlw	4
  2683   0011C0  1842               	xorwf	_interfaz^0,w,c
  2684   0011C2  A4D8               	btfss	status,2,c
  2685   0011C4  D004               	goto	l1143
  2686                           
  2687                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2688   0011C6  508C               	movf	140,w,c	;volatile
  2689   0011C8  0B0F               	andlw	15
  2690   0011CA  0930               	iorlw	48
  2691   0011CC  D001               	goto	L4
  2692   0011CE                     l1143:
  2693                           
  2694                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  2695   0011CE  0E3F               	movlw	63
  2696   0011D0                     L4:
  2697   0011D0  6E8C               	movwf	140,c	;volatile
  2698                           
  2699                           ;LibLCDXC8.h: 79: HabilitaLCD();
  2700   0011D2  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2701                           
  2702                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  2703   0011D6  0E01               	movlw	1
  2704   0011D8  EC47  F00A         	call	_RetardoLCD
  2705                           
  2706                           ;LibLCDXC8.h: 81: if(interfaz==4)
  2707   0011DC  0E04               	movlw	4
  2708   0011DE  1842               	xorwf	_interfaz^0,w,c
  2709   0011E0  A4D8               	btfss	status,2,c
  2710   0011E2  D004               	goto	l1153
  2711                           
  2712                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2713   0011E4  508C               	movf	140,w,c	;volatile
  2714   0011E6  0B0F               	andlw	15
  2715   0011E8  0930               	iorlw	48
  2716   0011EA  D001               	goto	L5
  2717   0011EC                     l1153:
  2718                           
  2719                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  2720   0011EC  0E3F               	movlw	63
  2721   0011EE                     L5:
  2722   0011EE  6E8C               	movwf	140,c	;volatile
  2723                           
  2724                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2725   0011F0  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2726                           
  2727                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  2728   0011F4  0E03               	movlw	3
  2729   0011F6  EC47  F00A         	call	_RetardoLCD
  2730                           
  2731                           ;LibLCDXC8.h: 87: if(interfaz==4)
  2732   0011FA  0E04               	movlw	4
  2733   0011FC  1842               	xorwf	_interfaz^0,w,c
  2734   0011FE  A4D8               	btfss	status,2,c
  2735   001200  D004               	goto	l1163
  2736                           
  2737                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  2738   001202  508C               	movf	140,w,c	;volatile
  2739   001204  0B0F               	andlw	15
  2740   001206  0930               	iorlw	48
  2741   001208  D001               	goto	L6
  2742   00120A                     l1163:
  2743                           
  2744                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  2745   00120A  0E3F               	movlw	63
  2746   00120C                     L6:
  2747   00120C  6E8C               	movwf	140,c	;volatile
  2748                           
  2749                           ;LibLCDXC8.h: 91: HabilitaLCD();
  2750   00120E  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2751                           
  2752                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  2753   001212  0E04               	movlw	4
  2754   001214  EC47  F00A         	call	_RetardoLCD
  2755                           
  2756                           ;LibLCDXC8.h: 93: if(interfaz==4){
  2757   001218  0E04               	movlw	4
  2758   00121A  1842               	xorwf	_interfaz^0,w,c
  2759   00121C  A4D8               	btfss	status,2,c
  2760   00121E  D011               	goto	l1183
  2761                           
  2762                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  2763   001220  508C               	movf	140,w,c	;volatile
  2764   001222  0B0F               	andlw	15
  2765   001224  0920               	iorlw	32
  2766   001226  6E8C               	movwf	140,c	;volatile
  2767                           
  2768                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2769   001228  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2770                           
  2771                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2772   00122C  0E04               	movlw	4
  2773   00122E  EC47  F00A         	call	_RetardoLCD
  2774                           
  2775                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  2776   001232  0E2F               	movlw	47
  2777   001234  EC14  F00B         	call	_EnviaDato
  2778                           
  2779                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2780   001238  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2781                           
  2782                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2783   00123C  0E04               	movlw	4
  2784   00123E  EC47  F00A         	call	_RetardoLCD
  2785   001242                     l1183:
  2786                           
  2787                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  2788   001242  ECCC  F00B         	call	_BorraLCD	;wreg free
  2789                           
  2790                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  2791   001246  0E0F               	movlw	15
  2792   001248  EC14  F00B         	call	_EnviaDato
  2793                           
  2794                           ;LibLCDXC8.h: 103: HabilitaLCD();
  2795   00124C  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2796                           
  2797                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  2798   001250  0E04               	movlw	4
  2799   001252  EC47  F00A         	call	_RetardoLCD
  2800   001256  0012               	return		;funcret
  2801   001258                     __end_of_InicializaLCD:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _BorraLCD *****************
  2805 ;; Defined at:
  2806 ;;		line 113 in file "LibLCDXC8.h"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 7
  2827 ;; This function calls:
  2828 ;;		_EnviaDato
  2829 ;;		_HabilitaLCD
  2830 ;;		_RetardoLCD
  2831 ;; This function is called by:
  2832 ;;		_InicializaLCD
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text11
  2838   001798                     __ptext11:
  2839                           	callstack 0
  2840   001798                     _BorraLCD:
  2841                           	callstack 22
  2842                           
  2843                           ;LibLCDXC8.h: 115: LATE0=0;
  2844                           
  2845                           ;incstack = 0
  2846   001798  908D               	bcf	3981,0,c	;volatile
  2847                           
  2848                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  2849   00179A  0E01               	movlw	1
  2850   00179C  EC14  F00B         	call	_EnviaDato
  2851                           
  2852                           ;LibLCDXC8.h: 117: HabilitaLCD();
  2853   0017A0  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2854                           
  2855                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  2856   0017A4  0E02               	movlw	2
  2857   0017A6  EC47  F00A         	call	_RetardoLCD
  2858   0017AA  0012               	return		;funcret
  2859   0017AC                     __end_of_BorraLCD:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _DireccionaLCD *****************
  2863 ;; Defined at:
  2864 ;;		line 257 in file "LibLCDXC8.h"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  a               1    wreg     unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  a               1   17[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2881 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 7
  2885 ;; This function calls:
  2886 ;;		_EnviaDato
  2887 ;;		_HabilitaLCD
  2888 ;;		_RetardoLCD
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text12
  2895   00176C                     __ptext12:
  2896                           	callstack 0
  2897   00176C                     _DireccionaLCD:
  2898                           	callstack 23
  2899                           
  2900                           ;incstack = 0
  2901                           ;DireccionaLCD@a stored from wreg
  2902   00176C  6E12               	movwf	DireccionaLCD@a^0,c
  2903                           
  2904                           ;LibLCDXC8.h: 260: LATE0=0;
  2905   00176E  908D               	bcf	3981,0,c	;volatile
  2906                           
  2907                           ;LibLCDXC8.h: 261: EnviaDato(a);
  2908   001770  5012               	movf	DireccionaLCD@a^0,w,c
  2909   001772  EC14  F00B         	call	_EnviaDato
  2910                           
  2911                           ;LibLCDXC8.h: 262: HabilitaLCD();
  2912   001776  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2913                           
  2914                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  2915   00177A  0E04               	movlw	4
  2916   00177C  EC47  F00A         	call	_RetardoLCD
  2917   001780  0012               	return		;funcret
  2918   001782                     __end_of_DireccionaLCD:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _EnviaDato *****************
  2922 ;; Defined at:
  2923 ;;		line 60 in file "LibLCDXC8.h"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  a               1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  a               1   16[COMRAM] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0
  2938 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2940 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2941 ;;Total ram usage:        2 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 6
  2944 ;; This function calls:
  2945 ;;		_HabilitaLCD
  2946 ;;		_RetardoLCD
  2947 ;; This function is called by:
  2948 ;;		_InicializaLCD
  2949 ;;		_BorraLCD
  2950 ;;		_EscribeLCD_c
  2951 ;;		_DireccionaLCD
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text13
  2956   001628                     __ptext13:
  2957                           	callstack 0
  2958   001628                     _EnviaDato:
  2959                           	callstack 22
  2960                           
  2961                           ;incstack = 0
  2962                           ;EnviaDato@a stored from wreg
  2963   001628  6E11               	movwf	EnviaDato@a^0,c
  2964                           
  2965                           ;LibLCDXC8.h: 61: if(interfaz==4){
  2966   00162A  0E04               	movlw	4
  2967   00162C  1842               	xorwf	_interfaz^0,w,c
  2968   00162E  A4D8               	btfss	status,2,c
  2969   001630  D017               	goto	l1095
  2970                           
  2971                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2972   001632  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  2973   001636  0EF0               	movlw	240
  2974   001638  1610               	andwf	??_EnviaDato^0,f,c
  2975   00163A  508C               	movf	140,w,c	;volatile
  2976   00163C  0B0F               	andlw	15
  2977   00163E  1010               	iorwf	??_EnviaDato^0,w,c
  2978   001640  6E8C               	movwf	140,c	;volatile
  2979                           
  2980                           ;LibLCDXC8.h: 63: HabilitaLCD();
  2981   001642  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2982                           
  2983                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  2984   001646  0E01               	movlw	1
  2985   001648  EC47  F00A         	call	_RetardoLCD
  2986                           
  2987                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  2988   00164C  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  2989   001650  3A10               	swapf	??_EnviaDato^0,f,c
  2990   001652  0EF0               	movlw	240
  2991   001654  1610               	andwf	??_EnviaDato^0,f,c
  2992   001656  508C               	movf	140,w,c	;volatile
  2993   001658  0B0F               	andlw	15
  2994   00165A  1010               	iorwf	??_EnviaDato^0,w,c
  2995   00165C  6E8C               	movwf	140,c	;volatile
  2996                           
  2997                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  2998   00165E  0012               	return	
  2999   001660                     l1095:
  3000   001660  0E08               	movlw	8
  3001   001662  1842               	xorwf	_interfaz^0,w,c
  3002   001664  A4D8               	btfss	status,2,c
  3003   001666  0012               	return	
  3004                           
  3005                           ;LibLCDXC8.h: 69: LATD=a;
  3006   001668  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3007   00166C  0012               	return		;funcret
  3008   00166E                     __end_of_EnviaDato:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _RetardoLCD *****************
  3012 ;; Defined at:
  3013 ;;		line 293 in file "LibLCDXC8.h"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  a               1    wreg     unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  a               1   14[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3029 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 5
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_EnviaDato
  3038 ;;		_InicializaLCD
  3039 ;;		_BorraLCD
  3040 ;;		_EscribeLCD_c
  3041 ;;		_DireccionaLCD
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text14
  3046   00148E                     __ptext14:
  3047                           	callstack 0
  3048   00148E                     _RetardoLCD:
  3049                           	callstack 23
  3050                           
  3051                           ;incstack = 0
  3052                           ;RetardoLCD@a stored from wreg
  3053   00148E  6E0F               	movwf	RetardoLCD@a^0,c
  3054                           
  3055                           ;LibLCDXC8.h: 294: switch(a){
  3056   001490  D01B               	goto	l1063
  3057   001492                     l1053:
  3058   001492  0E05               	movlw	5
  3059   001494  6E0E               	movwf	??_RetardoLCD^0,c
  3060   001496  0EDE               	movlw	222
  3061   001498                     u2447:
  3062   001498  2EE8               	decfsz	wreg,f,c
  3063   00149A  D7FE               	bra	u2447
  3064   00149C  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3065   00149E  D7FC               	bra	u2447
  3066                           
  3067                           ;LibLCDXC8.h: 297: break;
  3068   0014A0  0012               	return	
  3069   0014A2                     l1055:
  3070   0014A2  0E53               	movlw	83
  3071   0014A4                     u2457:
  3072   0014A4  2EE8               	decfsz	wreg,f,c
  3073   0014A6  D7FE               	bra	u2457
  3074   0014A8  F000               	nop	
  3075                           
  3076                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3077   0014AA  0E35               	movlw	53
  3078   0014AC                     u2467:
  3079   0014AC  2EE8               	decfsz	wreg,f,c
  3080   0014AE  D7FE               	bra	u2467
  3081   0014B0  F000               	nop	
  3082                           
  3083                           ;LibLCDXC8.h: 301: break;
  3084   0014B2  0012               	return	
  3085   0014B4                     l1057:
  3086   0014B4  0E08               	movlw	8
  3087   0014B6                     u2477:
  3088   0014B6  2EE8               	decfsz	wreg,f,c
  3089   0014B8  D7FE               	bra	u2477
  3090   0014BA  F000               	nop	
  3091                           
  3092                           ;LibLCDXC8.h: 304: break;
  3093   0014BC  0012               	return	
  3094   0014BE                     l1059:
  3095   0014BE  0E03               	movlw	3
  3096   0014C0                     u2487:
  3097   0014C0  2EE8               	decfsz	wreg,f,c
  3098   0014C2  D7FE               	bra	u2487
  3099   0014C4  F000               	nop	
  3100                           
  3101                           ;LibLCDXC8.h: 307: break;
  3102   0014C6  0012               	return	
  3103   0014C8                     l1063:
  3104   0014C8  500F               	movf	RetardoLCD@a^0,w,c
  3105                           
  3106                           ; Switch size 1, requested type "simple"
  3107                           ; Number of cases is 4, Range of values is 1 to 4
  3108                           ; switch strategies available:
  3109                           ; Name         Instructions Cycles
  3110                           ; simple_byte           13     7 (average)
  3111                           ;	Chosen strategy is simple_byte
  3112   0014CA  0A01               	xorlw	1	; case 1
  3113   0014CC  B4D8               	btfsc	status,2,c
  3114   0014CE  D7E1               	goto	l1053
  3115   0014D0  0A03               	xorlw	3	; case 2
  3116   0014D2  B4D8               	btfsc	status,2,c
  3117   0014D4  D7E6               	goto	l1055
  3118   0014D6  0A01               	xorlw	1	; case 3
  3119   0014D8  B4D8               	btfsc	status,2,c
  3120   0014DA  D7EC               	goto	l1057
  3121   0014DC  0A07               	xorlw	7	; case 4
  3122   0014DE  A4D8               	btfss	status,2,c
  3123   0014E0  0012               	return	
  3124   0014E2  D7ED               	goto	l1059
  3125   0014E4                     __end_of_RetardoLCD:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _HabilitaLCD *****************
  3129 ;; Defined at:
  3130 ;;		line 106 in file "LibLCDXC8.h"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 5
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_EnviaDato
  3155 ;;		_InicializaLCD
  3156 ;;		_BorraLCD
  3157 ;;		_EscribeLCD_c
  3158 ;;		_DireccionaLCD
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text15
  3163   0017C0                     __ptext15:
  3164                           	callstack 0
  3165   0017C0                     _HabilitaLCD:
  3166                           	callstack 23
  3167                           
  3168                           ;LibLCDXC8.h: 108: LATE1=1;
  3169                           
  3170                           ;incstack = 0
  3171   0017C0  828D               	bsf	3981,1,c	;volatile
  3172                           
  3173                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3174   0017C2  0E03               	movlw	3
  3175   0017C4                     u2497:
  3176   0017C4  2EE8               	decfsz	wreg,f,c
  3177   0017C6  D7FE               	bra	u2497
  3178   0017C8  F000               	nop	
  3179                           
  3180                           ;LibLCDXC8.h: 111: LATE1=0;
  3181   0017CA  928D               	bcf	3981,1,c	;volatile
  3182   0017CC  0012               	return		;funcret
  3183   0017CE                     __end_of_HabilitaLCD:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _ColorRGB *****************
  3187 ;; Defined at:
  3188 ;;		line 243 in file "Laboratorio4.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3202 ;;      Params:         0       0       0       0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3204 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3205 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 5
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text16
  3217   001358                     __ptext16:
  3218                           	callstack 0
  3219   001358                     _ColorRGB:
  3220                           	callstack 25
  3221                           
  3222                           ;Laboratorio4.c: 244: if(color==8) color = 0;
  3223                           
  3224                           ;incstack = 0
  3225   001358  0E08               	movlw	8
  3226   00135A  1831               	xorwf	_color^0,w,c
  3227   00135C  1032               	iorwf	(_color+1)^0,w,c
  3228   00135E  A4D8               	btfss	status,2,c
  3229   001360  D014               	goto	l1379
  3230   001362  0E00               	movlw	0
  3231   001364  6E32               	movwf	(_color+1)^0,c
  3232   001366  0E00               	movlw	0
  3233   001368  6E31               	movwf	_color^0,c
  3234   00136A  D00F               	goto	l1379
  3235   00136C                     l1361:
  3236                           
  3237                           ;Laboratorio4.c: 247: LATC = 0b00000000;
  3238   00136C  0E00               	movlw	0
  3239   00136E  D00B               	goto	L12
  3240   001370                     l1363:
  3241                           
  3242                           ;Laboratorio4.c: 250: LATC = 0b00000101;
  3243   001370  0E05               	movlw	5
  3244   001372  D009               	goto	L12
  3245   001374                     l1365:
  3246                           
  3247                           ;Laboratorio4.c: 253: LATC = 0b00000110;
  3248   001374  0E06               	movlw	6
  3249   001376  D007               	goto	L12
  3250   001378                     l1367:
  3251                           
  3252                           ;Laboratorio4.c: 256: LATC = 0b00000011;
  3253   001378  0E03               	movlw	3
  3254   00137A  D005               	goto	L12
  3255   00137C                     l1369:
  3256                           
  3257                           ;Laboratorio4.c: 259: LATC = 0b00000010;
  3258   00137C  0E02               	movlw	2
  3259   00137E  D003               	goto	L12
  3260   001380                     l1373:
  3261                           
  3262                           ;Laboratorio4.c: 265: LATC = 0b00000100;
  3263   001380  0E04               	movlw	4
  3264   001382  D001               	goto	L12
  3265   001384                     l1375:
  3266                           
  3267                           ;Laboratorio4.c: 268: LATC = 0b00000111;
  3268   001384  0E07               	movlw	7
  3269   001386                     L12:
  3270   001386  6E8B               	movwf	139,c	;volatile
  3271                           
  3272                           ;Laboratorio4.c: 269: break;
  3273   001388  D021               	goto	l1381
  3274   00138A                     l1379:
  3275   00138A  C031  F00E         	movff	_color,??_ColorRGB
  3276   00138E  C032  F00F         	movff	_color+1,??_ColorRGB+1
  3277                           
  3278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3279                           ; Switch size 1, requested type "simple"
  3280                           ; Number of cases is 1, Range of values is 0 to 0
  3281                           ; switch strategies available:
  3282                           ; Name         Instructions Cycles
  3283                           ; simple_byte            4     3 (average)
  3284                           ;	Chosen strategy is simple_byte
  3285   001392  500F               	movf	(??_ColorRGB+1)^0,w,c
  3286   001394  0A00               	xorlw	0	; case 0
  3287   001396  A4D8               	btfss	status,2,c
  3288   001398  D019               	goto	l1381
  3289                           
  3290                           ; Switch size 1, requested type "simple"
  3291                           ; Number of cases is 8, Range of values is 0 to 7
  3292                           ; switch strategies available:
  3293                           ; Name         Instructions Cycles
  3294                           ; simple_byte           25    13 (average)
  3295                           ;	Chosen strategy is simple_byte
  3296   00139A  500E               	movf	??_ColorRGB^0,w,c
  3297   00139C  0A00               	xorlw	0	; case 0
  3298   00139E  B4D8               	btfsc	status,2,c
  3299   0013A0  D7E5               	goto	l1361
  3300   0013A2  0A01               	xorlw	1	; case 1
  3301   0013A4  B4D8               	btfsc	status,2,c
  3302   0013A6  D7E4               	goto	l1363
  3303   0013A8  0A03               	xorlw	3	; case 2
  3304   0013AA  B4D8               	btfsc	status,2,c
  3305   0013AC  D7E3               	goto	l1365
  3306   0013AE  0A01               	xorlw	1	; case 3
  3307   0013B0  B4D8               	btfsc	status,2,c
  3308   0013B2  D7E2               	goto	l1367
  3309   0013B4  0A07               	xorlw	7	; case 4
  3310   0013B6  B4D8               	btfsc	status,2,c
  3311   0013B8  D7E1               	goto	l1369
  3312   0013BA  0A01               	xorlw	1	; case 5
  3313   0013BC  B4D8               	btfsc	status,2,c
  3314   0013BE  D7DA               	goto	l1365
  3315   0013C0  0A03               	xorlw	3	; case 6
  3316   0013C2  B4D8               	btfsc	status,2,c
  3317   0013C4  D7DD               	goto	l1373
  3318   0013C6  0A01               	xorlw	1	; case 7
  3319   0013C8  B4D8               	btfsc	status,2,c
  3320   0013CA  D7DC               	goto	l1375
  3321   0013CC                     l1381:
  3322                           
  3323                           ;Laboratorio4.c: 273: color += 1;
  3324   0013CC  4A31               	infsnz	_color^0,f,c
  3325   0013CE  2A32               	incf	(_color+1)^0,f,c
  3326   0013D0  0012               	return		;funcret
  3327   0013D2                     __end_of_ColorRGB:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _ISR *****************
  3331 ;; Defined at:
  3332 ;;		line 276 in file "Laboratorio4.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        4 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 4
  3353 ;; This function calls:
  3354 ;;		i2_BorraLCD
  3355 ;;		i2_MensajeLCD_Word
  3356 ;; This function is called by:
  3357 ;;		Interrupt level 2
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	intcode
  3362   000008                     __pintcode:
  3363                           	callstack 0
  3364   000008                     _ISR:
  3365                           	callstack 22
  3366                           
  3367                           ;incstack = 0
  3368   000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3369   00000A  ED6D  F009         	call	int_func,f	;refresh shadow registers
  3370                           
  3371                           	psect	intcode_body
  3372   0012DA                     __pintcode_body:
  3373                           	callstack 22
  3374   0012DA                     int_func:
  3375                           	callstack 22
  3376   0012DA  0006               	pop		; remove dummy address from shadow register refresh
  3377   0012DC  CFF6 F00A          	movff	tblptrl,??_ISR
  3378   0012E0  CFF7 F00B          	movff	tblptrh,??_ISR+1
  3379   0012E4  CFF8 F00C          	movff	tblptru,??_ISR+2
  3380   0012E8  CFF5 F00D          	movff	tablat,??_ISR+3
  3381                           
  3382                           ;Laboratorio4.c: 277: if(TMR0IF==1){
  3383   0012EC  A4F2               	btfss	4082,2,c	;volatile
  3384   0012EE  D019               	goto	i2l2401
  3385                           
  3386                           ;Laboratorio4.c: 278: if(!verificador) contador = contador +1;
  3387   0012F0  502D               	movf	_verificador^0,w,c
  3388   0012F2  102E               	iorwf	(_verificador+1)^0,w,c
  3389   0012F4  A4D8               	btfss	status,2,c
  3390   0012F6  D007               	goto	i2l2395
  3391   0012F8  0E01               	movlw	1
  3392   0012FA  242F               	addwf	_contador^0,w,c
  3393   0012FC  6E2F               	movwf	_contador^0,c
  3394   0012FE  0E00               	movlw	0
  3395   001300  2030               	addwfc	(_contador+1)^0,w,c
  3396   001302  6E30               	movwf	(_contador+1)^0,c
  3397   001304  D004               	goto	i2l2397
  3398   001306                     i2l2395:
  3399                           
  3400                           ;Laboratorio4.c: 279: else contador = 0;
  3401   001306  0E00               	movlw	0
  3402   001308  6E30               	movwf	(_contador+1)^0,c
  3403   00130A  0E00               	movlw	0
  3404   00130C  6E2F               	movwf	_contador^0,c
  3405   00130E                     i2l2397:
  3406                           
  3407                           ;Laboratorio4.c: 280: TMR0IF=0;
  3408   00130E  94F2               	bcf	4082,2,c	;volatile
  3409                           
  3410                           ;Laboratorio4.c: 281: LATE2 = !LATE2;
  3411   001310  B48D               	btfsc	3981,2,c	;volatile
  3412   001312  D002               	goto	i2u238_40
  3413   001314  848D               	bsf	3981,2,c	;volatile
  3414   001316  D001               	goto	i2u239_45
  3415   001318                     i2u238_40:
  3416   001318  948D               	bcf	3981,2,c	;volatile
  3417   00131A                     i2u239_45:
  3418                           
  3419                           ;Laboratorio4.c: 282: TMR0 = 49911;
  3420   00131A  0EC2               	movlw	194
  3421   00131C  6ED7               	movwf	215,c	;volatile
  3422   00131E  0EF7               	movlw	247
  3423   001320  6ED6               	movwf	214,c	;volatile
  3424   001322                     i2l2401:
  3425                           
  3426                           ;Laboratorio4.c: 285: };Laboratorio4.c: 287: if(contador == 20){
  3427   001322  0E14               	movlw	20
  3428   001324  182F               	xorwf	_contador^0,w,c
  3429   001326  1030               	iorwf	(_contador+1)^0,w,c
  3430   001328  A4D8               	btfss	status,2,c
  3431   00132A  D00C               	goto	i2l297
  3432                           
  3433                           ;Laboratorio4.c: 288: if(!verificador){
  3434   00132C  502D               	movf	_verificador^0,w,c
  3435   00132E  102E               	iorwf	(_verificador+1)^0,w,c
  3436   001330  A4D8               	btfss	status,2,c
  3437   001332  D008               	goto	i2l297
  3438                           
  3439                           ;Laboratorio4.c: 289: BorraLCD();
  3440   001334  ECD6  F00B         	call	i2_BorraLCD	;wreg free
  3441                           
  3442                           ;Laboratorio4.c: 290: MensajeLCD_Word("En Resposo");
  3443   001338  0E12               	movlw	low STR_6
  3444   00133A  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3445   00133C  ECED  F00A         	call	i2_MensajeLCD_Word	;wreg free
  3446   001340  0003               	sleep		;# 
  3447   001342                     i2l294:
  3448   001342  D7FF               	goto	i2l294
  3449   001344                     i2l297:
  3450   001344  C00D  FFF5         	movff	??_ISR+3,tablat
  3451   001348  C00C  FFF8         	movff	??_ISR+2,tblptru
  3452   00134C  C00B  FFF7         	movff	??_ISR+1,tblptrh
  3453   001350  C00A  FFF6         	movff	??_ISR,tblptrl
  3454   001354  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3455   001356  0011               	retfie		f
  3456   001358                     __end_of_ISR:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function i2_MensajeLCD_Word *****************
  3460 ;; Defined at:
  3461 ;;		line 245 in file "LibLCDXC8.h"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  a               1    5[COMRAM] PTR unsigned char 
  3464 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  3465 ;;		 -> STR_2(5), STR_1(8), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  i               2    7[COMRAM] int 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3477 ;;      Params:         1       0       0       0       0       0       0       0       0
  3478 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3479 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3480 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        4 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 3
  3484 ;; This function calls:
  3485 ;;		i2_EscribeLCD_c
  3486 ;; This function is called by:
  3487 ;;		_ISR
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text18
  3492   0015DA                     __ptext18:
  3493                           	callstack 0
  3494   0015DA                     i2_MensajeLCD_Word:
  3495                           	callstack 22
  3496                           
  3497                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  3498                           
  3499                           ;incstack = 0
  3500   0015DA  0E00               	movlw	0
  3501   0015DC  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  3502   0015DE  0E00               	movlw	0
  3503   0015E0  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  3504   0015E2                     i2l2035:
  3505                           
  3506                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  3507   0015E2  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3508   0015E4  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3509   0015E6  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3510   0015E8  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3511   0015EC                     	if	1	;There is more than 1 active tblptr byte
  3512   0015EC  0E08               	movlw	high __smallconst
  3513   0015EE  6EF7               	movwf	tblptrh,c
  3514   0015F0                     	endif
  3515   0015F0                     	if	0	;tblptru may be non-zero
  3516   0015F0                     	endif
  3517   0015F0                     	if	0	;tblptru may be non-zero
  3518   0015F0                     	endif
  3519   0015F0  0008               	tblrd		*
  3520   0015F2  50F5               	movf	tablat,w,c
  3521   0015F4  0900               	iorlw	0
  3522   0015F6  B4D8               	btfsc	status,2,c
  3523   0015F8  0012               	return	
  3524                           
  3525                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  3526   0015FA  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3527   0015FC  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3528   0015FE  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3529   001600  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3530   001604                     	if	1	;There is more than 1 active tblptr byte
  3531   001604  0E08               	movlw	high __smallconst
  3532   001606  6EF7               	movwf	tblptrh,c
  3533   001608                     	endif
  3534   001608                     	if	0	;tblptru may be non-zero
  3535   001608                     	endif
  3536   001608                     	if	0	;tblptru may be non-zero
  3537   001608                     	endif
  3538   001608  0008               	tblrd		*
  3539   00160A  50F5               	movf	tablat,w,c
  3540   00160C  ECC1  F00B         	call	i2_EscribeLCD_c
  3541   001610  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  3542   001612  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  3543   001614  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  3544   001616  D7E5               	goto	i2l2035
  3545   001618  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  3546   00161A  E105               	bnz	i2u159_40
  3547   00161C  0E10               	movlw	16
  3548   00161E  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  3549   001620  B0D8               	btfsc	status,0,c
  3550   001622  0012               	return	
  3551   001624  D7DE               	goto	i2l2035
  3552   001626                     i2u159_40:
  3553   001626  0012               	return		;funcret
  3554   001628                     __end_ofi2_MensajeLCD_Word:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function i2_EscribeLCD_c *****************
  3558 ;; Defined at:
  3559 ;;		line 146 in file "LibLCDXC8.h"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  a               1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  a               1    4[COMRAM] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0
  3574 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3576 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 2
  3580 ;; This function calls:
  3581 ;;		i2_EnviaDato
  3582 ;;		i2_HabilitaLCD
  3583 ;;		i2_RetardoLCD
  3584 ;; This function is called by:
  3585 ;;		i2_MensajeLCD_Word
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text19
  3590   001782                     __ptext19:
  3591                           	callstack 0
  3592   001782                     i2_EscribeLCD_c:
  3593                           	callstack 22
  3594                           
  3595                           ;incstack = 0
  3596                           ;i2EscribeLCD_c@a stored from wreg
  3597   001782  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3598                           
  3599                           ;LibLCDXC8.h: 150: LATE0=1;
  3600   001784  808D               	bsf	3981,0,c	;volatile
  3601                           
  3602                           ;LibLCDXC8.h: 151: EnviaDato(a);
  3603   001786  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3604   001788  EC37  F00B         	call	i2_EnviaDato
  3605                           
  3606                           ;LibLCDXC8.h: 152: HabilitaLCD();
  3607   00178C  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3608                           
  3609                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  3610   001790  0E04               	movlw	4
  3611   001792  EC72  F00A         	call	i2_RetardoLCD
  3612   001796  0012               	return		;funcret
  3613   001798                     __end_ofi2_EscribeLCD_c:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function i2_BorraLCD *****************
  3617 ;; Defined at:
  3618 ;;		line 113 in file "LibLCDXC8.h"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 2
  3639 ;; This function calls:
  3640 ;;		i2_EnviaDato
  3641 ;;		i2_HabilitaLCD
  3642 ;;		i2_RetardoLCD
  3643 ;; This function is called by:
  3644 ;;		_ISR
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text20
  3649   0017AC                     __ptext20:
  3650                           	callstack 0
  3651   0017AC                     i2_BorraLCD:
  3652                           	callstack 23
  3653                           
  3654                           ;LibLCDXC8.h: 115: LATE0=0;
  3655                           
  3656                           ;incstack = 0
  3657   0017AC  908D               	bcf	3981,0,c	;volatile
  3658                           
  3659                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3660   0017AE  0E01               	movlw	1
  3661   0017B0  EC37  F00B         	call	i2_EnviaDato
  3662                           
  3663                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3664   0017B4  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3665                           
  3666                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3667   0017B8  0E02               	movlw	2
  3668   0017BA  EC72  F00A         	call	i2_RetardoLCD
  3669   0017BE  0012               	return		;funcret
  3670   0017C0                     __end_ofi2_BorraLCD:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function i2_EnviaDato *****************
  3674 ;; Defined at:
  3675 ;;		line 60 in file "LibLCDXC8.h"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  a               1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  a               1    3[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3691 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 1
  3696 ;; This function calls:
  3697 ;;		i2_HabilitaLCD
  3698 ;;		i2_RetardoLCD
  3699 ;; This function is called by:
  3700 ;;		i2_BorraLCD
  3701 ;;		i2_EscribeLCD_c
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text21
  3706   00166E                     __ptext21:
  3707                           	callstack 0
  3708   00166E                     i2_EnviaDato:
  3709                           	callstack 22
  3710                           
  3711                           ;incstack = 0
  3712                           ;i2EnviaDato@a stored from wreg
  3713   00166E  6E04               	movwf	i2EnviaDato@a^0,c
  3714                           
  3715                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3716   001670  0E04               	movlw	4
  3717   001672  1842               	xorwf	_interfaz^0,w,c
  3718   001674  A4D8               	btfss	status,2,c
  3719   001676  D017               	goto	i2l1901
  3720                           
  3721                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3722   001678  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3723   00167C  0EF0               	movlw	240
  3724   00167E  1603               	andwf	??i2_EnviaDato^0,f,c
  3725   001680  508C               	movf	140,w,c	;volatile
  3726   001682  0B0F               	andlw	15
  3727   001684  1003               	iorwf	??i2_EnviaDato^0,w,c
  3728   001686  6E8C               	movwf	140,c	;volatile
  3729                           
  3730                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3731   001688  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3732                           
  3733                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3734   00168C  0E01               	movlw	1
  3735   00168E  EC72  F00A         	call	i2_RetardoLCD
  3736                           
  3737                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3738   001692  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3739   001696  3A03               	swapf	??i2_EnviaDato^0,f,c
  3740   001698  0EF0               	movlw	240
  3741   00169A  1603               	andwf	??i2_EnviaDato^0,f,c
  3742   00169C  508C               	movf	140,w,c	;volatile
  3743   00169E  0B0F               	andlw	15
  3744   0016A0  1003               	iorwf	??i2_EnviaDato^0,w,c
  3745   0016A2  6E8C               	movwf	140,c	;volatile
  3746                           
  3747                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  3748   0016A4  0012               	return	
  3749   0016A6                     i2l1901:
  3750   0016A6  0E08               	movlw	8
  3751   0016A8  1842               	xorwf	_interfaz^0,w,c
  3752   0016AA  A4D8               	btfss	status,2,c
  3753   0016AC  0012               	return	
  3754                           
  3755                           ;LibLCDXC8.h: 69: LATD=a;
  3756   0016AE  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3757   0016B2  0012               	return		;funcret
  3758   0016B4                     __end_ofi2_EnviaDato:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function i2_RetardoLCD *****************
  3762 ;; Defined at:
  3763 ;;		line 293 in file "LibLCDXC8.h"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  a               1    wreg     unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  a               1    1[COMRAM] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0
  3778 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3779 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3780 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3781 ;;Total ram usage:        2 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		i2_EnviaDato
  3787 ;;		i2_BorraLCD
  3788 ;;		i2_EscribeLCD_c
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text22
  3793   0014E4                     __ptext22:
  3794                           	callstack 0
  3795   0014E4                     i2_RetardoLCD:
  3796                           	callstack 23
  3797                           
  3798                           ;incstack = 0
  3799                           ;i2RetardoLCD@a stored from wreg
  3800   0014E4  6E02               	movwf	i2RetardoLCD@a^0,c
  3801                           
  3802                           ;LibLCDXC8.h: 294: switch(a){
  3803   0014E6  D01B               	goto	i2l1889
  3804   0014E8                     i2l1879:
  3805   0014E8  0E05               	movlw	5
  3806   0014EA  6E01               	movwf	??i2_RetardoLCD^0,c
  3807   0014EC  0EDE               	movlw	222
  3808   0014EE                     i2u250_47:
  3809   0014EE  2EE8               	decfsz	wreg,f,c
  3810   0014F0  D7FE               	bra	i2u250_47
  3811   0014F2  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3812   0014F4  D7FC               	bra	i2u250_47
  3813                           
  3814                           ;LibLCDXC8.h: 297: break;
  3815   0014F6  0012               	return	
  3816   0014F8                     i2l1881:
  3817   0014F8  0E53               	movlw	83
  3818   0014FA                     i2u251_47:
  3819   0014FA  2EE8               	decfsz	wreg,f,c
  3820   0014FC  D7FE               	bra	i2u251_47
  3821   0014FE  F000               	nop	
  3822                           
  3823                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3824   001500  0E35               	movlw	53
  3825   001502                     i2u252_47:
  3826   001502  2EE8               	decfsz	wreg,f,c
  3827   001504  D7FE               	bra	i2u252_47
  3828   001506  F000               	nop	
  3829                           
  3830                           ;LibLCDXC8.h: 301: break;
  3831   001508  0012               	return	
  3832   00150A                     i2l1883:
  3833   00150A  0E08               	movlw	8
  3834   00150C                     i2u253_47:
  3835   00150C  2EE8               	decfsz	wreg,f,c
  3836   00150E  D7FE               	bra	i2u253_47
  3837   001510  F000               	nop	
  3838                           
  3839                           ;LibLCDXC8.h: 304: break;
  3840   001512  0012               	return	
  3841   001514                     i2l1885:
  3842   001514  0E03               	movlw	3
  3843   001516                     i2u254_47:
  3844   001516  2EE8               	decfsz	wreg,f,c
  3845   001518  D7FE               	bra	i2u254_47
  3846   00151A  F000               	nop	
  3847                           
  3848                           ;LibLCDXC8.h: 307: break;
  3849   00151C  0012               	return	
  3850   00151E                     i2l1889:
  3851   00151E  5002               	movf	i2RetardoLCD@a^0,w,c
  3852                           
  3853                           ; Switch size 1, requested type "simple"
  3854                           ; Number of cases is 4, Range of values is 1 to 4
  3855                           ; switch strategies available:
  3856                           ; Name         Instructions Cycles
  3857                           ; simple_byte           13     7 (average)
  3858                           ;	Chosen strategy is simple_byte
  3859   001520  0A01               	xorlw	1	; case 1
  3860   001522  B4D8               	btfsc	status,2,c
  3861   001524  D7E1               	goto	i2l1879
  3862   001526  0A03               	xorlw	3	; case 2
  3863   001528  B4D8               	btfsc	status,2,c
  3864   00152A  D7E6               	goto	i2l1881
  3865   00152C  0A01               	xorlw	1	; case 3
  3866   00152E  B4D8               	btfsc	status,2,c
  3867   001530  D7EC               	goto	i2l1883
  3868   001532  0A07               	xorlw	7	; case 4
  3869   001534  A4D8               	btfss	status,2,c
  3870   001536  0012               	return	
  3871   001538  D7ED               	goto	i2l1885
  3872   00153A                     __end_ofi2_RetardoLCD:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function i2_HabilitaLCD *****************
  3876 ;; Defined at:
  3877 ;;		line 106 in file "LibLCDXC8.h"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		i2_EnviaDato
  3901 ;;		i2_BorraLCD
  3902 ;;		i2_EscribeLCD_c
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text23
  3907   0017CE                     __ptext23:
  3908                           	callstack 0
  3909   0017CE                     i2_HabilitaLCD:
  3910                           	callstack 23
  3911                           
  3912                           ;LibLCDXC8.h: 108: LATE1=1;
  3913                           
  3914                           ;incstack = 0
  3915   0017CE  828D               	bsf	3981,1,c	;volatile
  3916                           
  3917                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3918   0017D0  0E03               	movlw	3
  3919   0017D2                     i2u255_47:
  3920   0017D2  2EE8               	decfsz	wreg,f,c
  3921   0017D4  D7FE               	bra	i2u255_47
  3922   0017D6  F000               	nop	
  3923                           
  3924                           ;LibLCDXC8.h: 111: LATE1=0;
  3925   0017D8  928D               	bcf	3981,1,c	;volatile
  3926   0017DA  0012               	return		;funcret
  3927   0017DC                     __end_ofi2_HabilitaLCD:
  3928                           	callstack 0
  3929                           
  3930                           	psect	rparam
  3931   000000                     
  3932                           	psect	temp
  3933   000043                     btemp:
  3934                           	callstack 0
  3935   000043                     	ds	1
  3936   000000                     int$flags	set	btemp
  3937   000000                     wtemp8	set	btemp+1
  3938   000000                     ttemp5	set	btemp+1
  3939   000000                     ttemp6	set	btemp+4
  3940   000000                     ttemp7	set	btemp+8
  3941                           
  3942                           	psect	idloc
  3943                           
  3944                           ;Config register IDLOC0 @ 0x200000
  3945                           ;	unspecified, using default values
  3946   200000                     	org	2097152
  3947   200000  FF                 	db	255
  3948                           
  3949                           ;Config register IDLOC1 @ 0x200001
  3950                           ;	unspecified, using default values
  3951   200001                     	org	2097153
  3952   200001  FF                 	db	255
  3953                           
  3954                           ;Config register IDLOC2 @ 0x200002
  3955                           ;	unspecified, using default values
  3956   200002                     	org	2097154
  3957   200002  FF                 	db	255
  3958                           
  3959                           ;Config register IDLOC3 @ 0x200003
  3960                           ;	unspecified, using default values
  3961   200003                     	org	2097155
  3962   200003  FF                 	db	255
  3963                           
  3964                           ;Config register IDLOC4 @ 0x200004
  3965                           ;	unspecified, using default values
  3966   200004                     	org	2097156
  3967   200004  FF                 	db	255
  3968                           
  3969                           ;Config register IDLOC5 @ 0x200005
  3970                           ;	unspecified, using default values
  3971   200005                     	org	2097157
  3972   200005  FF                 	db	255
  3973                           
  3974                           ;Config register IDLOC6 @ 0x200006
  3975                           ;	unspecified, using default values
  3976   200006                     	org	2097158
  3977   200006  FF                 	db	255
  3978                           
  3979                           ;Config register IDLOC7 @ 0x200007
  3980                           ;	unspecified, using default values
  3981   200007                     	org	2097159
  3982   200007  FF                 	db	255
  3983                           
  3984                           	psect	config
  3985                           
  3986                           ;Config register CONFIG1L @ 0x300000
  3987                           ;	unspecified, using default values
  3988                           ;	PLL Prescaler Selection bits
  3989                           ;	PLLDIV = 0x0, unprogrammed default
  3990                           ;	System Clock Postscaler Selection bits
  3991                           ;	CPUDIV = 0x0, unprogrammed default
  3992                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3993                           ;	USBDIV = 0x0, unprogrammed default
  3994   300000                     	org	3145728
  3995   300000  00                 	db	0
  3996                           
  3997                           ;Config register CONFIG1H @ 0x300001
  3998                           ;	Oscillator Selection bits
  3999                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4000                           ;	Fail-Safe Clock Monitor Enable bit
  4001                           ;	FCMEN = 0x0, unprogrammed default
  4002                           ;	Internal/External Oscillator Switchover bit
  4003                           ;	IESO = 0x0, unprogrammed default
  4004   300001                     	org	3145729
  4005   300001  09                 	db	9
  4006                           
  4007                           ;Config register CONFIG2L @ 0x300002
  4008                           ;	unspecified, using default values
  4009                           ;	Power-up Timer Enable bit
  4010                           ;	PWRT = 0x1, unprogrammed default
  4011                           ;	Brown-out Reset Enable bits
  4012                           ;	BOR = 0x3, unprogrammed default
  4013                           ;	Brown-out Reset Voltage bits
  4014                           ;	BORV = 0x3, unprogrammed default
  4015                           ;	USB Voltage Regulator Enable bit
  4016                           ;	VREGEN = 0x0, unprogrammed default
  4017   300002                     	org	3145730
  4018   300002  1F                 	db	31
  4019                           
  4020                           ;Config register CONFIG2H @ 0x300003
  4021                           ;	Watchdog Timer Enable bit
  4022                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4023                           ;	Watchdog Timer Postscale Select bits
  4024                           ;	WDTPS = 0xF, unprogrammed default
  4025   300003                     	org	3145731
  4026   300003  1E                 	db	30
  4027                           
  4028                           ; Padding undefined space
  4029   300004                     	org	3145732
  4030   300004  FF                 	db	255
  4031                           
  4032                           ;Config register CONFIG3H @ 0x300005
  4033                           ;	CCP2 MUX bit
  4034                           ;	CCP2MX = 0x1, unprogrammed default
  4035                           ;	PORTB A/D Enable bit
  4036                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4037                           ;	Low-Power Timer 1 Oscillator Enable bit
  4038                           ;	LPT1OSC = 0x0, unprogrammed default
  4039                           ;	MCLR Pin Enable bit
  4040                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4041   300005                     	org	3145733
  4042   300005  81                 	db	129
  4043                           
  4044                           ;Config register CONFIG4L @ 0x300006
  4045                           ;	Stack Full/Underflow Reset Enable bit
  4046                           ;	STVREN = 0x1, unprogrammed default
  4047                           ;	Single-Supply ICSP Enable bit
  4048                           ;	LVP = OFF, Single-Supply ICSP disabled
  4049                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4050                           ;	ICPRT = 0x0, unprogrammed default
  4051                           ;	Extended Instruction Set Enable bit
  4052                           ;	XINST = 0x0, unprogrammed default
  4053                           ;	Background Debugger Enable bit
  4054                           ;	DEBUG = 0x1, unprogrammed default
  4055   300006                     	org	3145734
  4056   300006  81                 	db	129
  4057                           
  4058                           ; Padding undefined space
  4059   300007                     	org	3145735
  4060   300007  FF                 	db	255
  4061                           
  4062                           ;Config register CONFIG5L @ 0x300008
  4063                           ;	unspecified, using default values
  4064                           ;	Code Protection bit
  4065                           ;	CP0 = 0x1, unprogrammed default
  4066                           ;	Code Protection bit
  4067                           ;	CP1 = 0x1, unprogrammed default
  4068                           ;	Code Protection bit
  4069                           ;	CP2 = 0x1, unprogrammed default
  4070                           ;	Code Protection bit
  4071                           ;	CP3 = 0x1, unprogrammed default
  4072   300008                     	org	3145736
  4073   300008  0F                 	db	15
  4074                           
  4075                           ;Config register CONFIG5H @ 0x300009
  4076                           ;	unspecified, using default values
  4077                           ;	Boot Block Code Protection bit
  4078                           ;	CPB = 0x1, unprogrammed default
  4079                           ;	Data EEPROM Code Protection bit
  4080                           ;	CPD = 0x1, unprogrammed default
  4081   300009                     	org	3145737
  4082   300009  C0                 	db	192
  4083                           
  4084                           ;Config register CONFIG6L @ 0x30000A
  4085                           ;	unspecified, using default values
  4086                           ;	Write Protection bit
  4087                           ;	WRT0 = 0x1, unprogrammed default
  4088                           ;	Write Protection bit
  4089                           ;	WRT1 = 0x1, unprogrammed default
  4090                           ;	Write Protection bit
  4091                           ;	WRT2 = 0x1, unprogrammed default
  4092                           ;	Write Protection bit
  4093                           ;	WRT3 = 0x1, unprogrammed default
  4094   30000A                     	org	3145738
  4095   30000A  0F                 	db	15
  4096                           
  4097                           ;Config register CONFIG6H @ 0x30000B
  4098                           ;	unspecified, using default values
  4099                           ;	Configuration Register Write Protection bit
  4100                           ;	WRTC = 0x1, unprogrammed default
  4101                           ;	Boot Block Write Protection bit
  4102                           ;	WRTB = 0x1, unprogrammed default
  4103                           ;	Data EEPROM Write Protection bit
  4104                           ;	WRTD = 0x1, unprogrammed default
  4105   30000B                     	org	3145739
  4106   30000B  E0                 	db	224
  4107                           
  4108                           ;Config register CONFIG7L @ 0x30000C
  4109                           ;	unspecified, using default values
  4110                           ;	Table Read Protection bit
  4111                           ;	EBTR0 = 0x1, unprogrammed default
  4112                           ;	Table Read Protection bit
  4113                           ;	EBTR1 = 0x1, unprogrammed default
  4114                           ;	Table Read Protection bit
  4115                           ;	EBTR2 = 0x1, unprogrammed default
  4116                           ;	Table Read Protection bit
  4117                           ;	EBTR3 = 0x1, unprogrammed default
  4118   30000C                     	org	3145740
  4119   30000C  0F                 	db	15
  4120                           
  4121                           ;Config register CONFIG7H @ 0x30000D
  4122                           ;	unspecified, using default values
  4123                           ;	Boot Block Table Read Protection bit
  4124                           ;	EBTRB = 0x1, unprogrammed default
  4125   30000D                     	org	3145741
  4126   30000D  40                 	db	64
  4127                           tosu	equ	0xFFF
  4128                           tosh	equ	0xFFE
  4129                           tosl	equ	0xFFD
  4130                           stkptr	equ	0xFFC
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           pcl	equ	0xFF9
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           indf0	equ	0xFEF
  4141                           postinc0	equ	0xFEE
  4142                           postdec0	equ	0xFED
  4143                           preinc0	equ	0xFEC
  4144                           plusw0	equ	0xFEB
  4145                           fsr0h	equ	0xFEA
  4146                           fsr0l	equ	0xFE9
  4147                           wreg	equ	0xFE8
  4148                           indf1	equ	0xFE7
  4149                           postinc1	equ	0xFE6
  4150                           postdec1	equ	0xFE5
  4151                           preinc1	equ	0xFE4
  4152                           plusw1	equ	0xFE3
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           bsr	equ	0xFE0
  4156                           indf2	equ	0xFDF
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           preinc2	equ	0xFDC
  4160                           plusw2	equ	0xFDB
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        4
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[11]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[17]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    5604
                                             26 COMRAM    10    10      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1890
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     654
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     402
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lldiv
   ___llmod
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      42       1       70.2%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         7      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      29        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri May 19 11:25:27 2023

                        _i 0033                          _m 003B                          _r 0025  
                       _PD 7E82                         _RI 7E84                         _TO 7E83  
                       _n1 0037                         _n2 0035                 EnviaDato@a 0011  
                       _op 0041        ___wmul@multiplicand 0010              ??_LeerTeclado 000E  
            _InicializaLCD 11BC                        l234 10C4                        l245 1120  
                      l237 10CC                        l263 11A0                        l255 117C  
                      l247 1128                        l327 12C8                        l175 0AEC  
                      l264 11B8                        l265 11A8                        l257 1184  
                      l267 11B0                        l259 118C                        l198 0D10  
                      l708 1426                        l779 1582                        l789 16EC  
                      _GIE 7F97                        _RB4 7C0C                        _RB5 7C0D  
                      _RB6 7C0E                        _RB7 7C0F                        _RC6 7C16  
                      u210 10FC                        u300 1158                        u220 1108  
                      u212 10FE                        u140 10B0                        u310 1164  
                      u302 115A                        u222 110A                        u312 1166  
                      u180 10DC                        u270 1138                        u190 10E8  
                      u182 10DE                        u280 1144                        u272 113A  
                      u192 10EA                        u282 1146                        _ISR 0008  
                      _n1c 0040                        _n2c 003F                        wreg 0FE8  
                     ?_ISR 0001           ??i2_EscribeLCD_c 0005                       l2001 1578  
                     l2011 16CA                       l1053 1492                       l1055 14A2  
                     l1063 14C8                       l1143 11CE                       l1057 14B4  
                     l1153 11EC                       l2017 16E2                       l2009 16C2  
                     l1059 14BE                       l1163 120A                       l1261 1114  
                     l1253 10F4                       l1245 10D4                       l2221 0AF4  
                     l2117 0944                       l1095 1660                       l1183 1242  
                     l1327 1194                       l2223 0B0C                       l2207 0AB6  
                     l1361 136C                       l2305 0E1E                       l2313 0E4C  
                     l2241 0BD2                       l2233 0B6C                       l2225 0B42  
                     l2073 088A                       l1363 1370                       l1291 1150  
                     l1283 1130                       l2331 0ECA                       l2219 0AE6  
                     l2147 09BA                       l2083 08CC                       l1373 1380  
                     l1365 1374                       l1381 13CC                       l2261 0C58  
                     l2229 0B4E                       l1375 1384                       l1367 1378  
                     l2351 0F42                       l2343 0F22                       l2335 0EE6  
                     l2327 0EAE                       l2255 0C08                       l2247 0BE6  
                     l2175 0A30                       l2079 08B2                       l1369 137C  
                     l2361 0F8C                       l2273 0CB6                       l2265 0C66  
                     l2257 0C16                       l2281 0CD2                       l1379 138A  
                     l1299 1170                       l2355 0F50                       l2283 0CFA  
                     l2293 0DA8                       l2277 0CC0                       l2269 0C80  
                     l2383 1080                       l2287 0D0A                       l2377 1072  
                     l2369 1022                       l2297 0DBC                       l2385 108A  
                     l2379 1078                       l2387 1090                       l1941 145C  
                     l1919 1594                       l1951 127A                       l1953 1286  
                     l1937 1448                       l1963 12BA                       l1971 13E4  
                     l1973 13F0                       l1991 1558                       l1979 1418  
                     l1989 1550                       STR_1 081D                       STR_2 082F  
                     STR_3 0801                       STR_4 082A                       STR_5 0825  
                     STR_6 0812                       u2000 0A98                       u2210 0E5C  
                     u1500 13F4                       u2220 0E6E                       u1430 15D8  
                     u2230 0E80                       _LATB 0F8A                       _LATC 0F8B  
                     _LATD 0F8C                       u1530 155C                       u2170 0DBA  
                     u1610 0892                       u1620 089E                       u1612 0894  
                     u1470 128A                       u2270 0EF6                       u1622 08A0  
                     u1560 16CE                       u2280 0F08                       u2290 0F1A  
                     u1730 098C                       u2427 08BC                       u2437 1096  
                     u1670 095C                       u2447 1498                       u2457 14A4  
                     u2467 14AC                       u1860 0A0A                       u2477 14B6  
                     u2487 14C0                       u2497 17C4                       _RBPU 7F8F  
                     _TMR0 0FD6             ??_EscribeLCD_c 0012                       _flag 0039  
                     _main 0836                       fsr1l 0FE1                       btemp 0043  
                     prodh 0FF4                       prodl 0FF3                       start 000E  
             ___param_bank 0000                      ??_ISR 000A             ?_InicializaLCD 0001  
                    ?_main 0001              EscribeLCD_c@a 0012            __end_of___lldiv 12DA  
                    _T0CON 0FD5            __end_of___llmod 1438                      _LATE0 7C68  
                    _LATE1 7C69                      _LATE2 7C6A            __end_of___lwdiv 158C  
          __end_of___lwmod 16F6                      i2l294 1342                      i2l297 1344  
                    _TRISB 0F93                      _TRISC 0F94                      _TRISD 0F95  
                    _TRISE 0F96        ___lmul@multiplicand 0012                      _Tecla 003A  
      __end_of_LeerTeclado 11BC                      _color 0031                ?i2_BorraLCD 0001  
                    main@i 0021                      main@j 0023                      main@k 001F  
                    tablat 0FF5                _HabilitaLCD 17C0                      ttemp5 0044  
                    ttemp6 0047                      ttemp7 004B                      status 0FD8  
                    wtemp8 0044           __end_of_BorraLCD 17AC           __end_of_ColorRGB 13D2  
          __initialization 16F6               __end_of_main 10A2                     ??_main 001B  
            __activetblptr 0002                     _ADCON1 0FC1           ___llmod@dividend 000E  
           DireccionaLCD@a 0012                     i2l2035 15E2                     i2l2401 1322  
                   i2l1901 16A6                     i2l2395 1306                     i2l2397 130E  
                   i2l1881 14F8                     i2l1883 150A                     i2l1885 1514  
                   i2l1879 14E8                     i2l1889 151E                     _OSCCON 0FD3  
                   _TMR0IE 7F95                     _TMR0IF 7F92                     _TMR0ON 7EAF  
    __end_of_DireccionaLCD 1782                 _RetardoLCD 148E                     ___lmul 1438  
                   ___wmul 1730                  ??___lldiv 0016                  ??___llmod 0016  
                ??___lwdiv 0018                  ??___lwmod 0012            ??_InicializaLCD 0012  
                   clear_0 171C                     isa$std 0001       __end_of_EscribeLCD_c 176C  
              _LeerTeclado 10A2               ?i2_EnviaDato 0001               __pdataCOMRAM 003F  
             __mediumconst 0000                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8      __end_ofi2_HabilitaLCD 17DC                 __accesstop 0060  
  __end_of__initialization 1722              ___rparam_used 0001             __pcstackCOMRAM 0001  
        __end_of_EnviaDato 166E          i2_MensajeLCD_Word 15DA         ?i2_MensajeLCD_Word 0006  
                ?_BorraLCD 0001                  ?_ColorRGB 0001        ??i2_MensajeLCD_Word 0007  
              ?_RetardoLCD 0001                RetardoLCD@a 000F                    ?___lmul 000E  
                  ?___wmul 000E             ___lmul@product 0016  __end_ofi2_MensajeLCD_Word 1628  
             ??i2_BorraLCD 0005                 ??_BorraLCD 0012                 ??_ColorRGB 000E  
        ??_MensajeLCD_Word 0014               ?_HabilitaLCD 0001                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 1258                    ___llmod 13D2  
                  ___lwdiv 153A                    ___lwmod 16B4               __psmallconst 0800  
       __end_ofi2_BorraLCD 17C0                    __pcinit 16F6                    __ramtop 0800  
                  __ptext0 0836                    __ptext1 1730                    __ptext2 16B4  
                  __ptext3 153A                    __ptext4 1438                    __ptext5 13D2  
                  __ptext6 1258                    __ptext7 158C                    __ptext8 1756  
                  __ptext9 10A2             __pintcode_body 12DA       end_of_initialization 1722  
            __Lmediumconst 0000                    int_func 12DA               _EscribeLCD_c 1756  
          ___lldiv@divisor 0012            ___lldiv@counter 001A                    postdec1 0FE5  
                  postinc0 0FEE               ?_LeerTeclado 0001            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001             __end_of___lmul 148E             __end_of___wmul 1756  
            __pidataCOMRAM 17DC      __end_of_InicializaLCD 1258                  _EnviaDato 1628  
      start_initialization 16F6                __end_of_ISR 1358             ??i2_RetardoLCD 0001  
             ??_RetardoLCD 000E            ___llmod@divisor 0012            ___llmod@counter 0016  
                 ??___lmul 0016                   ??___wmul 0012            _MensajeLCD_Word 158C  
               ?_EnviaDato 0001                __pbssCOMRAM 0025         __end_of_RetardoLCD 14E4  
         MensajeLCD_Word@a 0013           MensajeLCD_Word@i 0015              _DireccionaLCD 176C  
           i2_EscribeLCD_c 1782           ___lwdiv@dividend 0014                  __pintcode 0008  
                 ?___lldiv 000E                   ?___llmod 000E                   ?___lwdiv 0014  
                 ?___lwmod 000E                __smallconst 0800           ___lwdiv@quotient 0018  
           ___wmul@product 0012              i2_HabilitaLCD 17CE             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 1798                   i2u250_47 14EE                   i2u251_47 14FA  
                 i2u252_47 1502                   i2u253_47 150C                   i2u238_40 1318  
                 i2u254_47 1516                   i2u159_40 1626                   i2u239_45 131A  
                 i2u255_47 17D2    __end_of_MensajeLCD_Word 15DA          ___wmul@multiplier 000E  
            ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 153A                ??_EnviaDato 0010  
                 _BorraLCD 1798                   _ColorRGB 1358          ___lmul@multiplier 000E  
                copy_data0 170A             ?i2_HabilitaLCD 0001            ?i2_EscribeLCD_c 0001  
                 __Hrparam 0000                   __Lrparam 0000               i2EnviaDato@a 0004  
          ___lwdiv@divisor 0016            ___lwdiv@counter 001A                   __ptext10 11BC  
                 __ptext11 1798                   __ptext20 17AC                   __ptext12 176C  
                 __ptext21 166E                   __ptext13 1628                   __ptext22 14E4  
                 __ptext14 148E                   __ptext23 17CE                   __ptext15 17C0  
                 __ptext16 1358                   __ptext18 15DA                   __ptext19 1782  
      __end_ofi2_EnviaDato 16B4                   _contador 002F            ??_DireccionaLCD 0012  
                 _interfaz 0042                   _partdecl 0029                   isa$xinst 0000  
         ?_MensajeLCD_Word 0013                   int$flags 0043            ??i2_HabilitaLCD 0001  
                 intlevel2 0000              ??_HabilitaLCD 000E           ___lwmod@dividend 000E  
         ___lldiv@dividend 000E              i2RetardoLCD@a 0002                i2_EnviaDato 166E  
         ___lldiv@quotient 0016            ___lwmod@divisor 0010            ___lwmod@counter 0012  
               i2_BorraLCD 17AC         i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008  
            ?_EscribeLCD_c 0001                _verificador 002D               i2_RetardoLCD 14E4  
      __end_of_HabilitaLCD 17CE  



Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 16 08:26:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 09/02/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001488                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75   001488  20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78   001489  20                 	db	32
    79                           
    80                           ;initializer for _op
    81   00148A  20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84   00148B  08                 	db	8
    85   000000                     _RB7	set	31759
    86   000000                     _RB6	set	31758
    87   000000                     _RB5	set	31757
    88   000000                     _LATE1	set	31849
    89   000000                     _LATB	set	3978
    90   000000                     _LATD	set	3980
    91   000000                     _RB4	set	31756
    92   000000                     _TRISB	set	3987
    93   000000                     _TRISD	set	3989
    94   000000                     _ADCON1	set	4033
    95   000000                     _LATE0	set	31848
    96   000000                     _RBPU	set	32655
    97   000000                     _TRISE	set	3990
    98                           
    99                           	psect	smallconst
   100   000800                     __psmallconst:
   101                           	callstack 0
   102   000800  00                 	db	0
   103   000801                     STR_2:
   104   000801  20                 	db	32
   105   000802  20                 	db	32
   106   000803  20                 	db	32
   107   000804  20                 	db	32
   108   000805  20                 	db	32
   109   000806  20                 	db	32
   110   000807  20                 	db	32
   111   000808  20                 	db	32
   112   000809  20                 	db	32
   113   00080A  20                 	db	32
   114   00080B  20                 	db	32
   115   00080C  20                 	db	32
   116   00080D  20                 	db	32
   117   00080E  20                 	db	32
   118   00080F  20                 	db	32
   119   000810  20                 	db	32
   120   000811  00                 	db	0
   121   000812                     STR_1:
   122   000812  48                 	db	72	;'H'
   123   000813  6F                 	db	111	;'o'
   124   000814  6C                 	db	108	;'l'
   125   000815  61                 	db	97	;'a'
   126   000816  20                 	db	32
   127   000817  6D                 	db	109	;'m'
   128   000818  75                 	db	117	;'u'
   129   000819  6E                 	db	110	;'n'
   130   00081A  64                 	db	100	;'d'
   131   00081B  6F                 	db	111	;'o'
   132   00081C  00                 	db	0
   133   00081D  00                 	db	0	; dummy byte at the end
   134   000000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138   0013B2                     __pcinit:
   139                           	callstack 0
   140   0013B2                     start_initialization:
   141                           	callstack 0
   142   0013B2                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (4 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147   0013B2  0E88               	movlw	low __pidataCOMRAM
   148   0013B4  6EF6               	movwf	tblptrl,c
   149   0013B6  0E14               	movlw	high __pidataCOMRAM
   150   0013B8  6EF7               	movwf	tblptrh,c
   151   0013BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152   0013BC  6EF8               	movwf	tblptru,c
   153   0013BE  EE00  F04D         	lfsr	0,__pdataCOMRAM
   154   0013C2  EE10 F004          	lfsr	1,4
   155   0013C6                     copy_data0:
   156   0013C6  0009               	tblrd		*+
   157   0013C8  CFF5 FFEE          	movff	tablat,postinc0
   158   0013CC  50E5               	movf	postdec1,w,c
   159   0013CE  50E1               	movf	fsr1l,w,c
   160   0013D0  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to COMRAM (18 bytes)
   163   0013D2  EE00  F03B         	lfsr	0,__pbssCOMRAM
   164   0013D6  0E12               	movlw	18
   165   0013D8                     clear_0:
   166   0013D8  6AEE               	clrf	postinc0,c
   167   0013DA  06E8               	decf	wreg,f,c
   168   0013DC  E1FD               	bnz	clear_0
   169   0013DE                     end_of_initialization:
   170                           	callstack 0
   171   0013DE                     __end_of__initialization:
   172                           	callstack 0
   173   0013DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174   0013E0  6EF8               	movwf	tblptru,c
   175   0013E2  0100               	movlb	0
   176   0013E4  EF0F  F004         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   00003B                     __pbssCOMRAM:
   180                           	callstack 0
   181   00003B                     _r:
   182                           	callstack 0
   183   00003B                     	ds	4
   184   00003F                     _partdecl:
   185                           	callstack 0
   186   00003F                     	ds	4
   187   000043                     _nodec:
   188                           	callstack 0
   189   000043                     	ds	3
   190   000046                     _i:
   191                           	callstack 0
   192   000046                     	ds	2
   193   000048                     _n2:
   194                           	callstack 0
   195   000048                     	ds	2
   196   00004A                     _n1:
   197                           	callstack 0
   198   00004A                     	ds	2
   199   00004C                     _Tecla:
   200                           	callstack 0
   201   00004C                     	ds	1
   202                           
   203                           	psect	dataCOMRAM
   204   00004D                     __pdataCOMRAM:
   205                           	callstack 0
   206   00004D                     _n2c:
   207                           	callstack 0
   208   00004D                     	ds	1
   209   00004E                     _n1c:
   210                           	callstack 0
   211   00004E                     	ds	1
   212   00004F                     _op:
   213                           	callstack 0
   214   00004F                     	ds	1
   215   000050                     _interfaz:
   216                           	callstack 0
   217   000050                     	ds	1
   218                           
   219                           	psect	cstackCOMRAM
   220   000001                     __pcstackCOMRAM:
   221                           	callstack 0
   222   000001                     ??_RetardoLCD:
   223   000001                     ?___wmul:
   224                           	callstack 0
   225   000001                     ?___lwdiv:
   226                           	callstack 0
   227   000001                     ?___ftpack:
   228                           	callstack 0
   229   000001                     ___wmul@multiplier:
   230                           	callstack 0
   231   000001                     ___lwdiv@dividend:
   232                           	callstack 0
   233   000001                     ___ftpack@arg:
   234                           	callstack 0
   235                           
   236                           ; 3 bytes @ 0x0
   237   000001                     	ds	1
   238   000002                     RetardoLCD@a:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1
   242   000002                     	ds	1
   243   000003                     EnviaDato@a:
   244                           	callstack 0
   245   000003                     ___wmul@multiplicand:
   246                           	callstack 0
   247   000003                     ___lwdiv@divisor:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251   000003                     	ds	1
   252   000004                     EscribeLCD_c@a:
   253                           	callstack 0
   254   000004                     DireccionaLCD@a:
   255                           	callstack 0
   256   000004                     ___ftpack@exp:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x3
   260   000004                     	ds	1
   261   000005                     MensajeLCD_Word@a:
   262                           	callstack 0
   263   000005                     ___ftpack@sign:
   264                           	callstack 0
   265   000005                     ___wmul@product:
   266                           	callstack 0
   267   000005                     ___lwdiv@quotient:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271   000005                     	ds	1
   272   000006                     ??___ftpack:
   273   000006                     ??_MensajeLCD_Word:
   274                           
   275                           ; 1 bytes @ 0x5
   276   000006                     	ds	1
   277   000007                     ___lwdiv@counter:
   278                           	callstack 0
   279   000007                     MensajeLCD_Word@i:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283   000007                     	ds	2
   284   000009                     ?___ftadd:
   285                           	callstack 0
   286   000009                     ?___lltoft:
   287                           	callstack 0
   288   000009                     ?___lwtoft:
   289                           	callstack 0
   290   000009                     ___lwtoft@c:
   291                           	callstack 0
   292   000009                     ___ftadd@f1:
   293                           	callstack 0
   294   000009                     ___lltoft@c:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x8
   298   000009                     	ds	3
   299   00000C                     ___ftadd@f2:
   300                           	callstack 0
   301                           
   302                           ; 3 bytes @ 0xB
   303   00000C                     	ds	1
   304   00000D                     ??___lltoft:
   305                           
   306                           ; 1 bytes @ 0xC
   307   00000D                     	ds	2
   308   00000F                     ??___ftadd:
   309                           
   310                           ; 1 bytes @ 0xE
   311   00000F                     	ds	2
   312   000011                     ___lltoft@exp:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x10
   316   000011                     	ds	1
   317   000012                     ___ftadd@sign:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x11
   321   000012                     	ds	1
   322   000013                     ___ftadd@exp2:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x12
   326   000013                     	ds	1
   327   000014                     ___ftadd@exp1:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331   000014                     	ds	1
   332   000015                     ?___ftsub:
   333                           	callstack 0
   334   000015                     ___ftsub@f1:
   335                           	callstack 0
   336                           
   337                           ; 3 bytes @ 0x14
   338   000015                     	ds	3
   339   000018                     ___ftsub@f2:
   340                           	callstack 0
   341                           
   342                           ; 3 bytes @ 0x17
   343   000018                     	ds	3
   344   00001B                     ?___ftmul:
   345                           	callstack 0
   346   00001B                     ___ftmul@f1:
   347                           	callstack 0
   348                           
   349                           ; 3 bytes @ 0x1A
   350   00001B                     	ds	3
   351   00001E                     ___ftmul@f2:
   352                           	callstack 0
   353                           
   354                           ; 3 bytes @ 0x1D
   355   00001E                     	ds	3
   356   000021                     ??___ftmul:
   357                           
   358                           ; 1 bytes @ 0x20
   359   000021                     	ds	3
   360   000024                     ___ftmul@exp:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x23
   364   000024                     	ds	1
   365   000025                     ___ftmul@f3_as_product:
   366                           	callstack 0
   367                           
   368                           ; 3 bytes @ 0x24
   369   000025                     	ds	3
   370   000028                     ___ftmul@cntr:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x27
   374   000028                     	ds	1
   375   000029                     ___ftmul@sign:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x28
   379   000029                     	ds	1
   380   00002A                     ?___fttol:
   381                           	callstack 0
   382   00002A                     ___fttol@f1:
   383                           	callstack 0
   384                           
   385                           ; 3 bytes @ 0x29
   386   00002A                     	ds	4
   387   00002E                     ??___fttol:
   388                           
   389                           ; 1 bytes @ 0x2D
   390   00002E                     	ds	5
   391   000033                     ___fttol@sign1:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x32
   395   000033                     	ds	1
   396   000034                     ___fttol@lval:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x33
   400   000034                     	ds	4
   401   000038                     ___fttol@exp1:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x37
   405   000038                     	ds	1
   406   000039                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x38
   409   000039                     	ds	2
   410                           
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 20 in file "Laboratorio4.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 4
   436 ;; This function calls:
   437 ;;		_BorraLCD
   438 ;;		_DireccionaLCD
   439 ;;		_EscribeLCD_c
   440 ;;		_InicializaLCD
   441 ;;		_LeerTeclado
   442 ;;		_MensajeLCD_Word
   443 ;;		___ftmul
   444 ;;		___ftsub
   445 ;;		___fttol
   446 ;;		___lltoft
   447 ;;		___lwdiv
   448 ;;		___lwtoft
   449 ;;		___wmul
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text0
   456   00081E                     __ptext0:
   457                           	callstack 0
   458   00081E                     _main:
   459                           	callstack 27
   460                           
   461                           ;Laboratorio4.c: 21: ADCON1=15;
   462                           
   463                           ;incstack = 0
   464   00081E  0E0F               	movlw	15
   465   000820  6EC1               	movwf	193,c	;volatile
   466                           
   467                           ;Laboratorio4.c: 22: TRISD=0;
   468   000822  0E00               	movlw	0
   469   000824  6E95               	movwf	149,c	;volatile
   470                           
   471                           ;Laboratorio4.c: 23: TRISB=0b11110000;
   472   000826  0EF0               	movlw	240
   473   000828  6E93               	movwf	147,c	;volatile
   474                           
   475                           ;Laboratorio4.c: 24: TRISE=0;
   476   00082A  0E00               	movlw	0
   477   00082C  6E96               	movwf	150,c	;volatile
   478                           
   479                           ;Laboratorio4.c: 25: RBPU=0;
   480   00082E  9EF1               	bcf	4081,7,c	;volatile
   481                           
   482                           ;Laboratorio4.c: 26: InicializaLCD();
   483   000830  EC98  F009         	call	_InicializaLCD	;wreg free
   484                           
   485                           ;Laboratorio4.c: 27: BorraLCD();
   486   000834  EC2F  F00A         	call	_BorraLCD	;wreg free
   487                           
   488                           ;Laboratorio4.c: 28: MensajeLCD_Word("Hola mundo");
   489   000838  0E12               	movlw	low STR_1
   490   00083A  6E05               	movwf	MensajeLCD_Word@a^0,c
   491   00083C  EC71  F009         	call	_MensajeLCD_Word	;wreg free
   492                           
   493                           ;Laboratorio4.c: 29: _delay((unsigned long)((2000)*(1000000/4000.0)));
   494   000840  0E03               	movlw	3
   495   000842  6E3A               	movwf	(??_main+1)^0,c
   496   000844  0E8A               	movlw	138
   497   000846  6E39               	movwf	??_main^0,c
   498   000848  0E56               	movlw	86
   499   00084A                     u2097:
   500   00084A  2EE8               	decfsz	wreg,f,c
   501   00084C  D7FE               	bra	u2097
   502   00084E  2E39               	decfsz	??_main^0,f,c
   503   000850  D7FC               	bra	u2097
   504   000852  2E3A               	decfsz	(??_main+1)^0,f,c
   505   000854  D7FA               	bra	u2097
   506                           
   507                           ;Laboratorio4.c: 30: BorraLCD();
   508   000856  EC2F  F00A         	call	_BorraLCD	;wreg free
   509   00085A                     l1899:
   510                           
   511                           ;Laboratorio4.c: 32: LATB=0B00000000;
   512   00085A  0E00               	movlw	0
   513   00085C  6E8A               	movwf	138,c	;volatile
   514                           
   515                           ;Laboratorio4.c: 33: Tecla = LeerTeclado();
   516   00085E  EC9E  F008         	call	_LeerTeclado	;wreg free
   517   000862  6E4C               	movwf	_Tecla^0,c
   518                           
   519                           ;Laboratorio4.c: 34: if(Tecla=='C'){
   520   000864  0E43               	movlw	67
   521   000866  184C               	xorwf	_Tecla^0,w,c
   522   000868  A4D8               	btfss	status,2,c
   523   00086A  D023               	goto	l1925
   524                           
   525                           ;Laboratorio4.c: 35: DireccionaLCD(0xC0);
   526   00086C  0EC0               	movlw	192
   527   00086E  EC24  F00A         	call	_DireccionaLCD
   528                           
   529                           ;Laboratorio4.c: 37: op = ' ';
   530   000872  0E20               	movlw	32
   531   000874  6E4F               	movwf	_op^0,c
   532                           
   533                           ;Laboratorio4.c: 38: n1c = ' ';
   534   000876  0E20               	movlw	32
   535   000878  6E4E               	movwf	_n1c^0,c
   536                           
   537                           ;Laboratorio4.c: 39: n2c = ' ';
   538   00087A  0E20               	movlw	32
   539   00087C  6E4D               	movwf	_n2c^0,c
   540                           
   541                           ;Laboratorio4.c: 40: n1 = 0;
   542   00087E  0E00               	movlw	0
   543   000880  6E4B               	movwf	(_n1+1)^0,c
   544   000882  0E00               	movlw	0
   545   000884  6E4A               	movwf	_n1^0,c
   546                           
   547                           ;Laboratorio4.c: 41: n2 = 0;
   548   000886  0E00               	movlw	0
   549   000888  6E49               	movwf	(_n2+1)^0,c
   550   00088A  0E00               	movlw	0
   551   00088C  6E48               	movwf	_n2^0,c
   552                           
   553                           ;Laboratorio4.c: 42: i = 0;
   554   00088E  0E00               	movlw	0
   555   000890  6E47               	movwf	(_i+1)^0,c
   556   000892  0E00               	movlw	0
   557   000894  6E46               	movwf	_i^0,c
   558                           
   559                           ;Laboratorio4.c: 43: DireccionaLCD(0x80);
   560   000896  0E80               	movlw	128
   561   000898  EC24  F00A         	call	_DireccionaLCD
   562                           
   563                           ;Laboratorio4.c: 44: MensajeLCD_Word("                ");
   564   00089C  0E01               	movlw	low STR_2
   565   00089E  6E05               	movwf	MensajeLCD_Word@a^0,c
   566   0008A0  EC71  F009         	call	_MensajeLCD_Word	;wreg free
   567                           
   568                           ;Laboratorio4.c: 45: DireccionaLCD(0xC0);
   569   0008A4  0EC0               	movlw	192
   570   0008A6  EC24  F00A         	call	_DireccionaLCD
   571                           
   572                           ;Laboratorio4.c: 46: DireccionaLCD(0x80);
   573   0008AA  0E80               	movlw	128
   574   0008AC  EC24  F00A         	call	_DireccionaLCD
   575                           
   576                           ;Laboratorio4.c: 47: }else{
   577   0008B0  D7D4               	goto	l1899
   578   0008B2                     l1925:
   579                           
   580                           ;Laboratorio4.c: 48: if(n1c==' '|n2c==' '|op==' '){
   581   0008B2  0E20               	movlw	32
   582   0008B4  184E               	xorwf	_n1c^0,w,c
   583   0008B6  B4D8               	btfsc	status,2,c
   584   0008B8  D008               	goto	u1680
   585   0008BA  0E20               	movlw	32
   586   0008BC  184D               	xorwf	_n2c^0,w,c
   587   0008BE  B4D8               	btfsc	status,2,c
   588   0008C0  D004               	goto	u1680
   589   0008C2  0E20               	movlw	32
   590   0008C4  184F               	xorwf	_op^0,w,c
   591   0008C6  A4D8               	btfss	status,2,c
   592   0008C8  D083               	goto	l1993
   593   0008CA                     u1680:
   594                           
   595                           ;Laboratorio4.c: 49: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   596   0008CA  0E20               	movlw	32
   597   0008CC  184F               	xorwf	_op^0,w,c
   598   0008CE  A4D8               	btfss	status,2,c
   599   0008D0  D021               	goto	l1949
   600   0008D2  0E2B               	movlw	43
   601   0008D4  184C               	xorwf	_Tecla^0,w,c
   602   0008D6  B4D8               	btfsc	status,2,c
   603   0008D8  D00C               	goto	u1730
   604   0008DA  0E2D               	movlw	45
   605   0008DC  184C               	xorwf	_Tecla^0,w,c
   606   0008DE  B4D8               	btfsc	status,2,c
   607   0008E0  D008               	goto	u1730
   608   0008E2  0E2F               	movlw	47
   609   0008E4  184C               	xorwf	_Tecla^0,w,c
   610   0008E6  B4D8               	btfsc	status,2,c
   611   0008E8  D004               	goto	u1730
   612   0008EA  0E78               	movlw	120
   613   0008EC  184C               	xorwf	_Tecla^0,w,c
   614   0008EE  A4D8               	btfss	status,2,c
   615   0008F0  D011               	goto	l1949
   616   0008F2                     u1730:
   617   0008F2  0E20               	movlw	32
   618   0008F4  184E               	xorwf	_n1c^0,w,c
   619   0008F6  B4D8               	btfsc	status,2,c
   620   0008F8  D00D               	goto	l1949
   621   0008FA  0E20               	movlw	32
   622   0008FC  184D               	xorwf	_n2c^0,w,c
   623   0008FE  A4D8               	btfss	status,2,c
   624   000900  D009               	goto	l1949
   625                           
   626                           ;Laboratorio4.c: 50: DireccionaLCD(0x81);
   627   000902  0E81               	movlw	129
   628   000904  EC24  F00A         	call	_DireccionaLCD
   629                           
   630                           ;Laboratorio4.c: 51: EscribeLCD_c(Tecla);
   631   000908  504C               	movf	_Tecla^0,w,c
   632   00090A  EC19  F00A         	call	_EscribeLCD_c
   633                           
   634                           ;Laboratorio4.c: 52: op = Tecla;
   635   00090E  C04C  F04F         	movff	_Tecla,_op
   636                           
   637                           ;Laboratorio4.c: 53: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   638   000912  D1FD               	goto	l2073
   639   000914                     l1949:
   640   000914  0E20               	movlw	32
   641   000916  184E               	xorwf	_n1c^0,w,c
   642   000918  A4D8               	btfss	status,2,c
   643   00091A  D027               	goto	l1969
   644   00091C  0E2B               	movlw	43
   645   00091E  184C               	xorwf	_Tecla^0,w,c
   646   000920  A4D8               	btfss	status,2,c
   647   000922  D014               	goto	u1820
   648   000924  0E2D               	movlw	45
   649   000926  184C               	xorwf	_Tecla^0,w,c
   650   000928  A4D8               	btfss	status,2,c
   651   00092A  D010               	goto	u1820
   652   00092C  0E2F               	movlw	47
   653   00092E  184C               	xorwf	_Tecla^0,w,c
   654   000930  A4D8               	btfss	status,2,c
   655   000932  D00C               	goto	u1820
   656   000934  0E78               	movlw	120
   657   000936  184C               	xorwf	_Tecla^0,w,c
   658   000938  A4D8               	btfss	status,2,c
   659   00093A  D008               	goto	u1820
   660   00093C  0E3D               	movlw	61
   661   00093E  184C               	xorwf	_Tecla^0,w,c
   662   000940  A4D8               	btfss	status,2,c
   663   000942  D004               	goto	u1820
   664   000944  0E43               	movlw	67
   665   000946  184C               	xorwf	_Tecla^0,w,c
   666   000948  B4D8               	btfsc	status,2,c
   667   00094A  D00F               	goto	l1969
   668   00094C                     u1820:
   669                           
   670                           ;Laboratorio4.c: 54: DireccionaLCD(0x80);
   671   00094C  0E80               	movlw	128
   672   00094E  EC24  F00A         	call	_DireccionaLCD
   673                           
   674                           ;Laboratorio4.c: 55: EscribeLCD_c(Tecla);
   675   000952  504C               	movf	_Tecla^0,w,c
   676   000954  EC19  F00A         	call	_EscribeLCD_c
   677                           
   678                           ;Laboratorio4.c: 56: n1c=Tecla;
   679   000958  C04C  F04E         	movff	_Tecla,_n1c
   680                           
   681                           ;Laboratorio4.c: 57: n1 = Tecla-'0';
   682   00095C  0ED0               	movlw	208
   683   00095E  244C               	addwf	_Tecla^0,w,c
   684   000960  6E4A               	movwf	_n1^0,c
   685   000962  6A4B               	clrf	(_n1+1)^0,c
   686   000964  0EFF               	movlw	255
   687   000966  224B               	addwfc	(_n1+1)^0,f,c
   688                           
   689                           ;Laboratorio4.c: 58: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   690   000968  D1D2               	goto	l2073
   691   00096A                     l1969:
   692   00096A  0E20               	movlw	32
   693   00096C  184D               	xorwf	_n2c^0,w,c
   694   00096E  A4D8               	btfss	status,2,c
   695   000970  D1CE               	goto	l2073
   696   000972  0E20               	movlw	32
   697   000974  184F               	xorwf	_op^0,w,c
   698   000976  B4D8               	btfsc	status,2,c
   699   000978  D1CA               	goto	l2073
   700   00097A  0E20               	movlw	32
   701   00097C  184E               	xorwf	_n1c^0,w,c
   702   00097E  B4D8               	btfsc	status,2,c
   703   000980  D1C6               	goto	l2073
   704   000982  0E2B               	movlw	43
   705   000984  184C               	xorwf	_Tecla^0,w,c
   706   000986  A4D8               	btfss	status,2,c
   707   000988  D014               	goto	u1910
   708   00098A  0E2D               	movlw	45
   709   00098C  184C               	xorwf	_Tecla^0,w,c
   710   00098E  A4D8               	btfss	status,2,c
   711   000990  D010               	goto	u1910
   712   000992  0E2F               	movlw	47
   713   000994  184C               	xorwf	_Tecla^0,w,c
   714   000996  A4D8               	btfss	status,2,c
   715   000998  D00C               	goto	u1910
   716   00099A  0E78               	movlw	120
   717   00099C  184C               	xorwf	_Tecla^0,w,c
   718   00099E  A4D8               	btfss	status,2,c
   719   0009A0  D008               	goto	u1910
   720   0009A2  0E3D               	movlw	61
   721   0009A4  184C               	xorwf	_Tecla^0,w,c
   722   0009A6  A4D8               	btfss	status,2,c
   723   0009A8  D004               	goto	u1910
   724   0009AA  0E43               	movlw	67
   725   0009AC  184C               	xorwf	_Tecla^0,w,c
   726   0009AE  B4D8               	btfsc	status,2,c
   727   0009B0  D1AE               	goto	l2073
   728   0009B2                     u1910:
   729                           
   730                           ;Laboratorio4.c: 59: DireccionaLCD(0x82);
   731   0009B2  0E82               	movlw	130
   732   0009B4  EC24  F00A         	call	_DireccionaLCD
   733                           
   734                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   735   0009B8  504C               	movf	_Tecla^0,w,c
   736   0009BA  EC19  F00A         	call	_EscribeLCD_c
   737                           
   738                           ;Laboratorio4.c: 61: n2c=Tecla;
   739   0009BE  C04C  F04D         	movff	_Tecla,_n2c
   740                           
   741                           ;Laboratorio4.c: 62: n2 = Tecla-'0';
   742   0009C2  0ED0               	movlw	208
   743   0009C4  244C               	addwf	_Tecla^0,w,c
   744   0009C6  6E48               	movwf	_n2^0,c
   745   0009C8  6A49               	clrf	(_n2+1)^0,c
   746   0009CA  0EFF               	movlw	255
   747   0009CC  2249               	addwfc	(_n2+1)^0,f,c
   748   0009CE  D19F               	goto	l2073
   749   0009D0                     l1993:
   750   0009D0  0E3D               	movlw	61
   751   0009D2  184C               	xorwf	_Tecla^0,w,c
   752   0009D4  A4D8               	btfss	status,2,c
   753   0009D6  D198               	goto	l2071
   754                           
   755                           ;Laboratorio4.c: 65: DireccionaLCD(0x83);
   756   0009D8  0E83               	movlw	131
   757   0009DA  EC24  F00A         	call	_DireccionaLCD
   758                           
   759                           ;Laboratorio4.c: 66: EscribeLCD_c('=');
   760   0009DE  0E3D               	movlw	61
   761   0009E0  EC19  F00A         	call	_EscribeLCD_c
   762                           
   763                           ;Laboratorio4.c: 67: switch(op){
   764   0009E4  D085               	goto	l2033
   765   0009E6                     l1997:
   766                           
   767                           ;Laboratorio4.c: 69: r = n1 + n2;
   768   0009E6  5048               	movf	_n2^0,w,c
   769   0009E8  244A               	addwf	_n1^0,w,c
   770   0009EA  6E39               	movwf	??_main^0,c
   771   0009EC  5049               	movf	(_n2+1)^0,w,c
   772   0009EE  204B               	addwfc	(_n1+1)^0,w,c
   773   0009F0  6E3A               	movwf	(??_main+1)^0,c
   774   0009F2  C039  F03B         	movff	??_main,_r
   775   0009F6  C03A  F03C         	movff	??_main+1,_r+1
   776   0009FA  6A3D               	clrf	(_r+2)^0,c
   777   0009FC  6A3E               	clrf	(_r+3)^0,c
   778   0009FE                     l1999:
   779                           
   780                           ;Laboratorio4.c: 70: nodec = r;
   781   0009FE  C03B  F009         	movff	_r,___lltoft@c
   782   000A02  C03C  F00A         	movff	_r+1,___lltoft@c+1
   783   000A06  C03D  F00B         	movff	_r+2,___lltoft@c+2
   784   000A0A  C03E  F00C         	movff	_r+3,___lltoft@c+3
   785   000A0E  ECEF  F008         	call	___lltoft	;wreg free
   786   000A12  C009  F043         	movff	?___lltoft,_nodec
   787   000A16  C00A  F044         	movff	?___lltoft+1,_nodec+1
   788   000A1A  C00B  F045         	movff	?___lltoft+2,_nodec+2
   789                           
   790                           ;Laboratorio4.c: 71: break;
   791   000A1E  D076               	goto	l2035
   792   000A20                     l2001:
   793                           
   794                           ;Laboratorio4.c: 73: r = n1 - n2;
   795   000A20  5048               	movf	_n2^0,w,c
   796   000A22  5C4A               	subwf	_n1^0,w,c
   797   000A24  6E39               	movwf	??_main^0,c
   798   000A26  5049               	movf	(_n2+1)^0,w,c
   799   000A28  584B               	subwfb	(_n1+1)^0,w,c
   800   000A2A  D7E2               	goto	L1
   801   000A2C                     l2005:
   802                           
   803                           ;Laboratorio4.c: 77: r = n1*n2;
   804   000A2C  C04A  F001         	movff	_n1,___wmul@multiplier
   805   000A30  C04B  F002         	movff	_n1+1,___wmul@multiplier+1
   806   000A34  C048  F003         	movff	_n2,___wmul@multiplicand
   807   000A38  C049  F004         	movff	_n2+1,___wmul@multiplicand+1
   808   000A3C  ECF4  F009         	call	___wmul	;wreg free
   809   000A40  C001  F03B         	movff	?___wmul,_r
   810   000A44  C002  F03C         	movff	?___wmul+1,_r+1
   811   000A48  D7D8               	goto	L2
   812   000A4A                     l2009:
   813                           
   814                           ;Laboratorio4.c: 81: if(n2!=0){
   815   000A4A  5048               	movf	_n2^0,w,c
   816   000A4C  1049               	iorwf	(_n2+1)^0,w,c
   817   000A4E  B4D8               	btfsc	status,2,c
   818   000A50  D02B               	goto	l2015
   819                           
   820                           ;Laboratorio4.c: 82: if(n1!=0){
   821   000A52  504A               	movf	_n1^0,w,c
   822   000A54  104B               	iorwf	(_n1+1)^0,w,c
   823   000A56  B4D8               	btfsc	status,2,c
   824   000A58  D059               	goto	l2035
   825                           
   826                           ;Laboratorio4.c: 83: r = n1/n2;
   827   000A5A  C04A  F001         	movff	_n1,___lwdiv@dividend
   828   000A5E  C04B  F002         	movff	_n1+1,___lwdiv@dividend+1
   829   000A62  C048  F003         	movff	_n2,___lwdiv@divisor
   830   000A66  C049  F004         	movff	_n2+1,___lwdiv@divisor+1
   831   000A6A  EC48  F009         	call	___lwdiv	;wreg free
   832   000A6E  C001  F03B         	movff	?___lwdiv,_r
   833   000A72  C002  F03C         	movff	?___lwdiv+1,_r+1
   834   000A76  6A3D               	clrf	(_r+2)^0,c
   835   000A78  6A3E               	clrf	(_r+3)^0,c
   836                           
   837                           ;Laboratorio4.c: 84: nodec = n1/n2;
   838   000A7A  C048  F003         	movff	_n2,___lwdiv@divisor
   839   000A7E  C049  F004         	movff	_n2+1,___lwdiv@divisor+1
   840   000A82  C04A  F001         	movff	_n1,___lwdiv@dividend
   841   000A86  C04B  F002         	movff	_n1+1,___lwdiv@dividend+1
   842   000A8A  EC48  F009         	call	___lwdiv	;wreg free
   843   000A8E  C001  F009         	movff	?___lwdiv,___lwtoft@c
   844   000A92  C002  F00A         	movff	?___lwdiv+1,___lwtoft@c+1
   845   000A96  EC07  F00A         	call	___lwtoft	;wreg free
   846   000A9A  C009  F043         	movff	?___lwtoft,_nodec
   847   000A9E  C00A  F044         	movff	?___lwtoft+1,_nodec+1
   848   000AA2  C00B  F045         	movff	?___lwtoft+2,_nodec+2
   849   000AA6  D032               	goto	l2035
   850   000AA8                     l2015:
   851                           
   852                           ;Laboratorio4.c: 87: if(n1 != 0 & n2 == 0) r = 1000;
   853   000AA8  504A               	movf	_n1^0,w,c
   854   000AAA  104B               	iorwf	(_n1+1)^0,w,c
   855   000AAC  B4D8               	btfsc	status,2,c
   856   000AAE  D006               	goto	l2021
   857   000AB0  5048               	movf	_n2^0,w,c
   858   000AB2  1049               	iorwf	(_n2+1)^0,w,c
   859   000AB4  A4D8               	btfss	status,2,c
   860   000AB6  D002               	goto	l2021
   861   000AB8  0EE8               	movlw	232
   862   000ABA  D009               	goto	L3
   863   000ABC                     l2021:
   864                           
   865                           ;Laboratorio4.c: 88: else if(n1 == 0 & n2 == 0) r = 1001;
   866   000ABC  504A               	movf	_n1^0,w,c
   867   000ABE  104B               	iorwf	(_n1+1)^0,w,c
   868   000AC0  A4D8               	btfss	status,2,c
   869   000AC2  D79D               	goto	l1999
   870   000AC4  5048               	movf	_n2^0,w,c
   871   000AC6  1049               	iorwf	(_n2+1)^0,w,c
   872   000AC8  A4D8               	btfss	status,2,c
   873   000ACA  D799               	goto	l1999
   874   000ACC  0EE9               	movlw	233
   875   000ACE                     L3:
   876   000ACE  6E3B               	movwf	_r^0,c
   877   000AD0  0E03               	movlw	3
   878   000AD2  6E3C               	movwf	(_r+1)^0,c
   879   000AD4  0E00               	movlw	0
   880   000AD6  6E3D               	movwf	(_r+2)^0,c
   881   000AD8  0E00               	movlw	0
   882   000ADA  6E3E               	movwf	(_r+3)^0,c
   883   000ADC  D790               	goto	l1999
   884   000ADE                     l2029:
   885                           
   886                           ;Laboratorio4.c: 93: r = 0;
   887   000ADE  0E00               	movlw	0
   888   000AE0  6E3B               	movwf	_r^0,c
   889   000AE2  0E00               	movlw	0
   890   000AE4  6E3C               	movwf	(_r+1)^0,c
   891   000AE6  0E00               	movlw	0
   892   000AE8  6E3D               	movwf	(_r+2)^0,c
   893   000AEA  0E00               	movlw	0
   894   000AEC  6E3E               	movwf	(_r+3)^0,c
   895                           
   896                           ;Laboratorio4.c: 94: break;
   897   000AEE  D00E               	goto	l2035
   898   000AF0                     l2033:
   899   000AF0  504F               	movf	_op^0,w,c
   900                           
   901                           ; Switch size 1, requested type "simple"
   902                           ; Number of cases is 4, Range of values is 43 to 120
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           13     7 (average)
   906                           ;	Chosen strategy is simple_byte
   907   000AF2  0A2B               	xorlw	43	; case 43
   908   000AF4  B4D8               	btfsc	status,2,c
   909   000AF6  D777               	goto	l1997
   910   000AF8  0A06               	xorlw	6	; case 45
   911   000AFA  B4D8               	btfsc	status,2,c
   912   000AFC  D791               	goto	l2001
   913   000AFE  0A02               	xorlw	2	; case 47
   914   000B00  B4D8               	btfsc	status,2,c
   915   000B02  D7A3               	goto	l2009
   916   000B04  0A57               	xorlw	87	; case 120
   917   000B06  B4D8               	btfsc	status,2,c
   918   000B08  D791               	goto	l2005
   919   000B0A  D7E9               	goto	l2029
   920   000B0C                     l2035:
   921                           
   922                           ;Laboratorio4.c: 96: EscribeLCD_c(r+'0');
   923   000B0C  503B               	movf	_r^0,w,c
   924   000B0E  0F30               	addlw	48
   925   000B10  EC19  F00A         	call	_EscribeLCD_c
   926                           
   927                           ;Laboratorio4.c: 97: DireccionaLCD(0x84);
   928   000B14  0E84               	movlw	132
   929   000B16  EC24  F00A         	call	_DireccionaLCD
   930                           
   931                           ;Laboratorio4.c: 98: if (nodec-r != 0){
   932   000B1A  C043  F015         	movff	_nodec,___ftsub@f1
   933   000B1E  C044  F016         	movff	_nodec+1,___ftsub@f1+1
   934   000B22  C045  F017         	movff	_nodec+2,___ftsub@f1+2
   935   000B26  C03B  F009         	movff	_r,___lltoft@c
   936   000B2A  C03C  F00A         	movff	_r+1,___lltoft@c+1
   937   000B2E  C03D  F00B         	movff	_r+2,___lltoft@c+2
   938   000B32  C03E  F00C         	movff	_r+3,___lltoft@c+3
   939   000B36  ECEF  F008         	call	___lltoft	;wreg free
   940   000B3A  C009  F018         	movff	?___lltoft,___ftsub@f2
   941   000B3E  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   942   000B42  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   943   000B46  ECB9  F009         	call	___ftsub	;wreg free
   944   000B4A  5015               	movf	?___ftsub^0,w,c
   945   000B4C  1016               	iorwf	(?___ftsub+1)^0,w,c
   946   000B4E  1017               	iorwf	(?___ftsub+2)^0,w,c
   947   000B50  B4D8               	btfsc	status,2,c
   948   000B52  D042               	goto	l2039
   949                           
   950                           ;Laboratorio4.c: 99: partdecl = (nodec-r)*100;
   951   000B54  0E00               	movlw	0
   952   000B56  6E1E               	movwf	___ftmul@f2^0,c
   953   000B58  0EC8               	movlw	200
   954   000B5A  6E1F               	movwf	(___ftmul@f2+1)^0,c
   955   000B5C  0E42               	movlw	66
   956   000B5E  6E20               	movwf	(___ftmul@f2+2)^0,c
   957   000B60  C03B  F009         	movff	_r,___lltoft@c
   958   000B64  C03C  F00A         	movff	_r+1,___lltoft@c+1
   959   000B68  C03D  F00B         	movff	_r+2,___lltoft@c+2
   960   000B6C  C03E  F00C         	movff	_r+3,___lltoft@c+3
   961   000B70  ECEF  F008         	call	___lltoft	;wreg free
   962   000B74  C009  F018         	movff	?___lltoft,___ftsub@f2
   963   000B78  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   964   000B7C  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   965   000B80  C043  F015         	movff	_nodec,___ftsub@f1
   966   000B84  C044  F016         	movff	_nodec+1,___ftsub@f1+1
   967   000B88  C045  F017         	movff	_nodec+2,___ftsub@f1+2
   968   000B8C  ECB9  F009         	call	___ftsub	;wreg free
   969   000B90  C015  F01B         	movff	?___ftsub,___ftmul@f1
   970   000B94  C016  F01C         	movff	?___ftsub+1,___ftmul@f1+1
   971   000B98  C017  F01D         	movff	?___ftsub+2,___ftmul@f1+2
   972   000B9C  EC64  F007         	call	___ftmul	;wreg free
   973   000BA0  C01B  F02A         	movff	?___ftmul,___fttol@f1
   974   000BA4  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   975   000BA8  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   976   000BAC  ECDE  F007         	call	___fttol	;wreg free
   977   000BB0  C02A  F03F         	movff	?___fttol,_partdecl
   978   000BB4  C02B  F040         	movff	?___fttol+1,_partdecl+1
   979   000BB8  C02C  F041         	movff	?___fttol+2,_partdecl+2
   980   000BBC  C02D  F042         	movff	?___fttol+3,_partdecl+3
   981                           
   982                           ;Laboratorio4.c: 100: EscribeLCD_c(r+'0');
   983   000BC0  503B               	movf	_r^0,w,c
   984   000BC2  0F30               	addlw	48
   985   000BC4  EC19  F00A         	call	_EscribeLCD_c
   986                           
   987                           ;Laboratorio4.c: 101: EscribeLCD_c('.');
   988   000BC8  0E2E               	movlw	46
   989   000BCA  EC19  F00A         	call	_EscribeLCD_c
   990                           
   991                           ;Laboratorio4.c: 102: EscribeLCD_c(partdecl+'0');
   992   000BCE  503F               	movf	_partdecl^0,w,c
   993   000BD0  0F30               	addlw	48
   994   000BD2  EC19  F00A         	call	_EscribeLCD_c
   995                           
   996                           ;Laboratorio4.c: 103: }else if(r>0x51 & r!=1000 & r !=1001){
   997   000BD6  D09B               	goto	l2073
   998   000BD8                     l2039:
   999   000BD8  503E               	movf	(_r+3)^0,w,c
  1000   000BDA  103D               	iorwf	(_r+2)^0,w,c
  1001   000BDC  103C               	iorwf	(_r+1)^0,w,c
  1002   000BDE  E104               	bnz	u2000
  1003   000BE0  0E52               	movlw	82
  1004   000BE2  5C3B               	subwf	_r^0,w,c
  1005   000BE4  A0D8               	btfss	status,0,c
  1006   000BE6  D025               	goto	l2051
  1007   000BE8                     u2000:
  1008   000BE8  0EE8               	movlw	232
  1009   000BEA  183B               	xorwf	_r^0,w,c
  1010   000BEC  E106               	bnz	u2010
  1011   000BEE  0E03               	movlw	3
  1012   000BF0  183C               	xorwf	(_r+1)^0,w,c
  1013   000BF2  103D               	iorwf	(_r+2)^0,w,c
  1014   000BF4  103E               	iorwf	(_r+3)^0,w,c
  1015   000BF6  B4D8               	btfsc	status,2,c
  1016   000BF8  D01C               	goto	l2051
  1017   000BFA                     u2010:
  1018   000BFA  0EE9               	movlw	233
  1019   000BFC  183B               	xorwf	_r^0,w,c
  1020   000BFE  E106               	bnz	u2020
  1021   000C00  0E03               	movlw	3
  1022   000C02  183C               	xorwf	(_r+1)^0,w,c
  1023   000C04  103D               	iorwf	(_r+2)^0,w,c
  1024   000C06  103E               	iorwf	(_r+3)^0,w,c
  1025   000C08  B4D8               	btfsc	status,2,c
  1026   000C0A  D013               	goto	l2051
  1027   000C0C                     u2020:
  1028                           
  1029                           ;Laboratorio4.c: 104: EscribeLCD_c('-');
  1030   000C0C  0E2D               	movlw	45
  1031   000C0E  EC19  F00A         	call	_EscribeLCD_c
  1032                           
  1033                           ;Laboratorio4.c: 105: DireccionaLCD(0x85);
  1034   000C12  0E85               	movlw	133
  1035   000C14  EC24  F00A         	call	_DireccionaLCD
  1036                           
  1037                           ;Laboratorio4.c: 106: r = ~r+1;
  1038   000C18  1E3E               	comf	(_r+3)^0,f,c
  1039   000C1A  1E3D               	comf	(_r+2)^0,f,c
  1040   000C1C  1E3C               	comf	(_r+1)^0,f,c
  1041   000C1E  6C3B               	negf	_r^0,c
  1042   000C20  0E00               	movlw	0
  1043   000C22  223C               	addwfc	(_r+1)^0,f,c
  1044   000C24  223D               	addwfc	(_r+2)^0,f,c
  1045   000C26  223E               	addwfc	(_r+3)^0,f,c
  1046                           
  1047                           ;Laboratorio4.c: 107: EscribeLCD_c(r+'0');
  1048   000C28  503B               	movf	_r^0,w,c
  1049   000C2A  0F30               	addlw	48
  1050   000C2C  EC19  F00A         	call	_EscribeLCD_c
  1051                           
  1052                           ;Laboratorio4.c: 108: }else{
  1053   000C30  D06E               	goto	l2073
  1054   000C32                     l2051:
  1055                           
  1056                           ;Laboratorio4.c: 109: if(r>0xA & r!=1000 & r !=1001){
  1057   000C32  503E               	movf	(_r+3)^0,w,c
  1058   000C34  103D               	iorwf	(_r+2)^0,w,c
  1059   000C36  103C               	iorwf	(_r+1)^0,w,c
  1060   000C38  E104               	bnz	u2030
  1061   000C3A  0E0B               	movlw	11
  1062   000C3C  5C3B               	subwf	_r^0,w,c
  1063   000C3E  A0D8               	btfss	status,0,c
  1064   000C40  D038               	goto	l2061
  1065   000C42                     u2030:
  1066   000C42  0EE8               	movlw	232
  1067   000C44  183B               	xorwf	_r^0,w,c
  1068   000C46  E106               	bnz	u2040
  1069   000C48  0E03               	movlw	3
  1070   000C4A  183C               	xorwf	(_r+1)^0,w,c
  1071   000C4C  103D               	iorwf	(_r+2)^0,w,c
  1072   000C4E  103E               	iorwf	(_r+3)^0,w,c
  1073   000C50  B4D8               	btfsc	status,2,c
  1074   000C52  D02F               	goto	l2061
  1075   000C54                     u2040:
  1076   000C54  0EE9               	movlw	233
  1077   000C56  183B               	xorwf	_r^0,w,c
  1078   000C58  E106               	bnz	u2050
  1079   000C5A  0E03               	movlw	3
  1080   000C5C  183C               	xorwf	(_r+1)^0,w,c
  1081   000C5E  103D               	iorwf	(_r+2)^0,w,c
  1082   000C60  103E               	iorwf	(_r+3)^0,w,c
  1083   000C62  B4D8               	btfsc	status,2,c
  1084   000C64  D026               	goto	l2061
  1085   000C66                     u2050:
  1086   000C66                     l2057:
  1087                           
  1088                           ;Laboratorio4.c: 111: i = i+1;
  1089   000C66  0E01               	movlw	1
  1090   000C68  2446               	addwf	_i^0,w,c
  1091   000C6A  6E46               	movwf	_i^0,c
  1092   000C6C  0E00               	movlw	0
  1093   000C6E  2047               	addwfc	(_i+1)^0,w,c
  1094   000C70  6E47               	movwf	(_i+1)^0,c
  1095                           
  1096                           ;Laboratorio4.c: 112: r = r - 10;
  1097   000C72  0EF6               	movlw	246
  1098   000C74  243B               	addwf	_r^0,w,c
  1099   000C76  6E3B               	movwf	_r^0,c
  1100   000C78  0EFF               	movlw	255
  1101   000C7A  203C               	addwfc	(_r+1)^0,w,c
  1102   000C7C  6E3C               	movwf	(_r+1)^0,c
  1103   000C7E  0EFF               	movlw	255
  1104   000C80  203D               	addwfc	(_r+2)^0,w,c
  1105   000C82  6E3D               	movwf	(_r+2)^0,c
  1106   000C84  0EFF               	movlw	255
  1107   000C86  203E               	addwfc	(_r+3)^0,w,c
  1108   000C88  6E3E               	movwf	(_r+3)^0,c
  1109                           
  1110                           ;Laboratorio4.c: 113: }while(r>0xA);
  1111   000C8A  503E               	movf	(_r+3)^0,w,c
  1112   000C8C  103D               	iorwf	(_r+2)^0,w,c
  1113   000C8E  103C               	iorwf	(_r+1)^0,w,c
  1114   000C90  E1EA               	bnz	l2057
  1115   000C92  0E0B               	movlw	11
  1116   000C94  5C3B               	subwf	_r^0,w,c
  1117   000C96  B0D8               	btfsc	status,0,c
  1118   000C98  D7E6               	goto	u2050
  1119                           
  1120                           ;Laboratorio4.c: 114: EscribeLCD_c(i+'0');
  1121   000C9A  5046               	movf	_i^0,w,c
  1122   000C9C  0F30               	addlw	48
  1123   000C9E  EC19  F00A         	call	_EscribeLCD_c
  1124                           
  1125                           ;Laboratorio4.c: 115: DireccionaLCD(0x85);
  1126   000CA2  0E85               	movlw	133
  1127   000CA4  EC24  F00A         	call	_DireccionaLCD
  1128                           
  1129                           ;Laboratorio4.c: 116: EscribeLCD_c(r+'0');
  1130   000CA8  503B               	movf	_r^0,w,c
  1131   000CAA  0F30               	addlw	48
  1132   000CAC  EC19  F00A         	call	_EscribeLCD_c
  1133                           
  1134                           ;Laboratorio4.c: 117: }else{
  1135   000CB0  D02E               	goto	l2073
  1136   000CB2                     l2061:
  1137                           
  1138                           ;Laboratorio4.c: 118: if(r==1000){
  1139   000CB2  0EE8               	movlw	232
  1140   000CB4  183B               	xorwf	_r^0,w,c
  1141   000CB6  E110               	bnz	l2065
  1142   000CB8  0E03               	movlw	3
  1143   000CBA  183C               	xorwf	(_r+1)^0,w,c
  1144   000CBC  103D               	iorwf	(_r+2)^0,w,c
  1145   000CBE  103E               	iorwf	(_r+3)^0,w,c
  1146   000CC0  A4D8               	btfss	status,2,c
  1147   000CC2  D00A               	goto	l2065
  1148                           
  1149                           ;Laboratorio4.c: 119: EscribeLCD_c('I');
  1150   000CC4  0E49               	movlw	73
  1151   000CC6  EC19  F00A         	call	_EscribeLCD_c
  1152                           
  1153                           ;Laboratorio4.c: 120: EscribeLCD_c('N');
  1154   000CCA  0E4E               	movlw	78
  1155   000CCC  EC19  F00A         	call	_EscribeLCD_c
  1156                           
  1157                           ;Laboratorio4.c: 121: EscribeLCD_c('F');
  1158   000CD0  0E46               	movlw	70
  1159   000CD2  EC19  F00A         	call	_EscribeLCD_c
  1160                           
  1161                           ;Laboratorio4.c: 122: }else{
  1162   000CD6  D01B               	goto	l2073
  1163   000CD8                     l2065:
  1164                           
  1165                           ;Laboratorio4.c: 123: if(r==1001){
  1166   000CD8  0EE9               	movlw	233
  1167   000CDA  183B               	xorwf	_r^0,w,c
  1168   000CDC  E110               	bnz	l2069
  1169   000CDE  0E03               	movlw	3
  1170   000CE0  183C               	xorwf	(_r+1)^0,w,c
  1171   000CE2  103D               	iorwf	(_r+2)^0,w,c
  1172   000CE4  103E               	iorwf	(_r+3)^0,w,c
  1173   000CE6  A4D8               	btfss	status,2,c
  1174   000CE8  D00A               	goto	l2069
  1175                           
  1176                           ;Laboratorio4.c: 124: EscribeLCD_c('I');
  1177   000CEA  0E49               	movlw	73
  1178   000CEC  EC19  F00A         	call	_EscribeLCD_c
  1179                           
  1180                           ;Laboratorio4.c: 125: EscribeLCD_c('N');
  1181   000CF0  0E4E               	movlw	78
  1182   000CF2  EC19  F00A         	call	_EscribeLCD_c
  1183                           
  1184                           ;Laboratorio4.c: 126: EscribeLCD_c('D');
  1185   000CF6  0E44               	movlw	68
  1186   000CF8  EC19  F00A         	call	_EscribeLCD_c
  1187                           
  1188                           ;Laboratorio4.c: 127: }else{
  1189   000CFC  D008               	goto	l2073
  1190   000CFE                     l2069:
  1191                           
  1192                           ;Laboratorio4.c: 128: EscribeLCD_c(r+'0');
  1193   000CFE  503B               	movf	_r^0,w,c
  1194   000D00  0F30               	addlw	48
  1195   000D02  EC19  F00A         	call	_EscribeLCD_c
  1196   000D06  D003               	goto	l2073
  1197   000D08                     l2071:
  1198                           
  1199                           ;Laboratorio4.c: 134: EscribeLCD_c('W');
  1200   000D08  0E57               	movlw	87
  1201   000D0A  EC19  F00A         	call	_EscribeLCD_c
  1202   000D0E                     l2073:
  1203                           
  1204                           ;Laboratorio4.c: 135: };Laboratorio4.c: 136: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1205   000D0E  0EE4               	movlw	228
  1206   000D10  6E39               	movwf	??_main^0,c
  1207   000D12  0E44               	movlw	68
  1208   000D14                     u2107:
  1209   000D14  2EE8               	decfsz	wreg,f,c
  1210   000D16  D7FE               	bra	u2107
  1211   000D18  2E39               	decfsz	??_main^0,f,c
  1212   000D1A  D7FC               	bra	u2107
  1213   000D1C  D000               	nop2	
  1214   000D1E  D59D               	goto	l1899
  1215   000D20                     __end_of_main:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function ___wmul *****************
  1219 ;; Defined at:
  1220 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  multiplier      2    0[COMRAM] unsigned int 
  1223 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  product         2    4[COMRAM] unsigned int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2    0[COMRAM] unsigned int 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, prodl, prodh
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         4       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1239 ;;Total ram usage:        6 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text1
  1249   0013E8                     __ptext1:
  1250                           	callstack 0
  1251   0013E8                     ___wmul:
  1252                           	callstack 30
  1253                           
  1254                           ;incstack = 0
  1255   0013E8  5001               	movf	___wmul@multiplier^0,w,c
  1256   0013EA  0203               	mulwf	___wmul@multiplicand^0,c
  1257   0013EC  CFF3 F005          	movff	prodl,___wmul@product
  1258   0013F0  CFF4 F006          	movff	prodh,___wmul@product+1
  1259   0013F4  5001               	movf	___wmul@multiplier^0,w,c
  1260   0013F6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1261   0013F8  50F3               	movf	243,w,c
  1262   0013FA  2606               	addwf	(___wmul@product+1)^0,f,c
  1263   0013FC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1264   0013FE  0203               	mulwf	___wmul@multiplicand^0,c
  1265   001400  50F3               	movf	243,w,c
  1266   001402  2606               	addwf	(___wmul@product+1)^0,f,c
  1267   001404  C005  F001         	movff	___wmul@product,?___wmul
  1268   001408  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1269   00140C  0012               	return		;funcret
  1270   00140E                     __end_of___wmul:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function ___lwtoft *****************
  1274 ;; Defined at:
  1275 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  c               2    8[COMRAM] unsigned int 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  3    8[COMRAM] float 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         3       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        3 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		___ftpack
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text2
  1304   00140E                     __ptext2:
  1305                           	callstack 0
  1306   00140E                     ___lwtoft:
  1307                           	callstack 29
  1308                           
  1309                           ;incstack = 0
  1310   00140E  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1311   001412  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1312   001416  6A03               	clrf	(___ftpack@arg+2)^0,c
  1313   001418  0E8E               	movlw	142
  1314   00141A  6E04               	movwf	___ftpack@exp^0,c
  1315   00141C  0E00               	movlw	0
  1316   00141E  6E05               	movwf	___ftpack@sign^0,c
  1317   001420  EC47  F008         	call	___ftpack	;wreg free
  1318   001424  C001  F009         	movff	?___ftpack,?___lwtoft
  1319   001428  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1320   00142C  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1321   001430  0012               	return		;funcret
  1322   001432                     __end_of___lwtoft:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function ___lwdiv *****************
  1326 ;; Defined at:
  1327 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  dividend        2    0[COMRAM] unsigned int 
  1330 ;;  divisor         2    2[COMRAM] unsigned int 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  quotient        2    4[COMRAM] unsigned int 
  1333 ;;  counter         1    6[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  2    0[COMRAM] unsigned int 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         4       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:        7 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text3
  1357   001290                     __ptext3:
  1358                           	callstack 0
  1359   001290                     ___lwdiv:
  1360                           	callstack 30
  1361                           
  1362                           ;incstack = 0
  1363   001290  0E00               	movlw	0
  1364   001292  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1365   001294  0E00               	movlw	0
  1366   001296  6E05               	movwf	___lwdiv@quotient^0,c
  1367   001298  5003               	movf	___lwdiv@divisor^0,w,c
  1368   00129A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1369   00129C  B4D8               	btfsc	status,2,c
  1370   00129E  D01C               	goto	l681
  1371   0012A0  0E01               	movlw	1
  1372   0012A2  6E07               	movwf	___lwdiv@counter^0,c
  1373   0012A4  D004               	goto	l1867
  1374   0012A6                     l1865:
  1375   0012A6  90D8               	bcf	status,0,c
  1376   0012A8  3603               	rlcf	___lwdiv@divisor^0,f,c
  1377   0012AA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1378   0012AC  2A07               	incf	___lwdiv@counter^0,f,c
  1379   0012AE                     l1867:
  1380   0012AE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1381   0012B0  D7FA               	goto	l1865
  1382   0012B2                     u1630:
  1383   0012B2  90D8               	bcf	status,0,c
  1384   0012B4  3605               	rlcf	___lwdiv@quotient^0,f,c
  1385   0012B6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1386   0012B8  5003               	movf	___lwdiv@divisor^0,w,c
  1387   0012BA  5C01               	subwf	___lwdiv@dividend^0,w,c
  1388   0012BC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1389   0012BE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1390   0012C0  A0D8               	btfss	status,0,c
  1391   0012C2  D005               	goto	l1877
  1392   0012C4  5003               	movf	___lwdiv@divisor^0,w,c
  1393   0012C6  5E01               	subwf	___lwdiv@dividend^0,f,c
  1394   0012C8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1395   0012CA  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1396   0012CC  8005               	bsf	___lwdiv@quotient^0,0,c
  1397   0012CE                     l1877:
  1398   0012CE  90D8               	bcf	status,0,c
  1399   0012D0  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1400   0012D2  3203               	rrcf	___lwdiv@divisor^0,f,c
  1401   0012D4  2E07               	decfsz	___lwdiv@counter^0,f,c
  1402   0012D6  D7ED               	goto	u1630
  1403   0012D8                     l681:
  1404   0012D8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1405   0012DC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1406   0012E0  0012               	return		;funcret
  1407   0012E2                     __end_of___lwdiv:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function ___lltoft *****************
  1411 ;; Defined at:
  1412 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  c               4    8[COMRAM] unsigned long 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  exp             1   16[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  3    8[COMRAM] float 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         4       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        9 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 1
  1433 ;; This function calls:
  1434 ;;		___ftpack
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text4
  1441   0011DE                     __ptext4:
  1442                           	callstack 0
  1443   0011DE                     ___lltoft:
  1444                           	callstack 29
  1445                           
  1446                           ;incstack = 0
  1447   0011DE  0E8E               	movlw	142
  1448   0011E0  6E11               	movwf	___lltoft@exp^0,c
  1449   0011E2  D006               	goto	l1853
  1450   0011E4                     l1851:
  1451   0011E4  90D8               	bcf	status,0,c
  1452   0011E6  320C               	rrcf	(___lltoft@c+3)^0,f,c
  1453   0011E8  320B               	rrcf	(___lltoft@c+2)^0,f,c
  1454   0011EA  320A               	rrcf	(___lltoft@c+1)^0,f,c
  1455   0011EC  3209               	rrcf	___lltoft@c^0,f,c
  1456   0011EE  2A11               	incf	___lltoft@exp^0,f,c
  1457   0011F0                     l1853:
  1458   0011F0  0E00               	movlw	0
  1459   0011F2  1409               	andwf	___lltoft@c^0,w,c
  1460   0011F4  6E0D               	movwf	??___lltoft^0,c
  1461   0011F6  0E00               	movlw	0
  1462   0011F8  140A               	andwf	(___lltoft@c+1)^0,w,c
  1463   0011FA  6E0E               	movwf	(??___lltoft+1)^0,c
  1464   0011FC  0E00               	movlw	0
  1465   0011FE  140B               	andwf	(___lltoft@c+2)^0,w,c
  1466   001200  6E0F               	movwf	(??___lltoft+2)^0,c
  1467   001202  0EFF               	movlw	255
  1468   001204  140C               	andwf	(___lltoft@c+3)^0,w,c
  1469   001206  6E10               	movwf	(??___lltoft+3)^0,c
  1470   001208  500D               	movf	??___lltoft^0,w,c
  1471   00120A  100E               	iorwf	(??___lltoft+1)^0,w,c
  1472   00120C  100F               	iorwf	(??___lltoft+2)^0,w,c
  1473   00120E  1010               	iorwf	(??___lltoft+3)^0,w,c
  1474   001210  A4D8               	btfss	status,2,c
  1475   001212  D7E8               	goto	l1851
  1476   001214  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1477   001218  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1478   00121C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1479   001220  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1480   001224  0E00               	movlw	0
  1481   001226  6E05               	movwf	___ftpack@sign^0,c
  1482   001228  EC47  F008         	call	___ftpack	;wreg free
  1483   00122C  C001  F009         	movff	?___ftpack,?___lltoft
  1484   001230  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1485   001234  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1486   001238  0012               	return		;funcret
  1487   00123A                     __end_of___lltoft:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function ___fttol *****************
  1491 ;; Defined at:
  1492 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  f1              3   41[COMRAM] float 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  lval            4   51[COMRAM] unsigned long 
  1497 ;;  exp1            1   55[COMRAM] unsigned char 
  1498 ;;  sign1           1   50[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  4   41[COMRAM] long 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         4       0       0       0       0       0       0       0       0
  1509 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1510 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1511 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1512 ;;Total ram usage:       15 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text5
  1522   000FBC                     __ptext5:
  1523                           	callstack 0
  1524   000FBC                     ___fttol:
  1525                           	callstack 30
  1526                           
  1527                           ;incstack = 0
  1528   000FBC  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  1529   000FC0  6A2F               	clrf	(??___fttol+1)^0,c
  1530   000FC2  6A30               	clrf	(??___fttol+2)^0,c
  1531   000FC4  342B               	rlcf	(___fttol@f1+1)^0,w,c
  1532   000FC6  362E               	rlcf	??___fttol^0,f,c
  1533   000FC8  E301               	bnc	u1531
  1534   000FCA  802F               	bsf	(??___fttol+1)^0,0,c
  1535   000FCC                     u1531:
  1536   000FCC  502E               	movf	??___fttol^0,w,c
  1537   000FCE  6E38               	movwf	___fttol@exp1^0,c
  1538   000FD0  5038               	movf	___fttol@exp1^0,w,c
  1539   000FD2  A4D8               	btfss	status,2,c
  1540   000FD4  D009               	goto	l1809
  1541   000FD6                     u1540:
  1542   000FD6  0E00               	movlw	0
  1543   000FD8  6E2A               	movwf	?___fttol^0,c
  1544   000FDA  0E00               	movlw	0
  1545   000FDC  6E2B               	movwf	(?___fttol+1)^0,c
  1546   000FDE  0E00               	movlw	0
  1547   000FE0  6E2C               	movwf	(?___fttol+2)^0,c
  1548   000FE2  0E00               	movlw	0
  1549   000FE4  6E2D               	movwf	(?___fttol+3)^0,c
  1550   000FE6  0012               	return	
  1551   000FE8                     l1809:
  1552   000FE8  0E17               	movlw	23
  1553   000FEA  6E2E               	movwf	??___fttol^0,c
  1554   000FEC  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  1555   000FF0  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  1556   000FF4  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  1557   000FF8  282E               	incf	??___fttol^0,w,c
  1558   000FFA  6E32               	movwf	(??___fttol+4)^0,c
  1559   000FFC  D004               	goto	u1550
  1560   000FFE                     u1555:
  1561   000FFE  90D8               	bcf	status,0,c
  1562   001000  3231               	rrcf	(??___fttol+3)^0,f,c
  1563   001002  3230               	rrcf	(??___fttol+2)^0,f,c
  1564   001004  322F               	rrcf	(??___fttol+1)^0,f,c
  1565   001006                     u1550:
  1566   001006  2E32               	decfsz	(??___fttol+4)^0,f,c
  1567   001008  D7FA               	goto	u1555
  1568   00100A  502F               	movf	(??___fttol+1)^0,w,c
  1569   00100C  6E33               	movwf	___fttol@sign1^0,c
  1570   00100E  8E2B               	bsf	(___fttol@f1+1)^0,7,c
  1571   001010  0EFF               	movlw	255
  1572   001012  162A               	andwf	___fttol@f1^0,f,c
  1573   001014  0EFF               	movlw	255
  1574   001016  162B               	andwf	(___fttol@f1+1)^0,f,c
  1575   001018  0E00               	movlw	0
  1576   00101A  162C               	andwf	(___fttol@f1+2)^0,f,c
  1577   00101C  502A               	movf	___fttol@f1^0,w,c
  1578   00101E  6E34               	movwf	___fttol@lval^0,c
  1579   001020  502B               	movf	(___fttol@f1+1)^0,w,c
  1580   001022  6E35               	movwf	(___fttol@lval+1)^0,c
  1581   001024  502C               	movf	(___fttol@f1+2)^0,w,c
  1582   001026  6E36               	movwf	(___fttol@lval+2)^0,c
  1583   001028  6A37               	clrf	(___fttol@lval+3)^0,c
  1584   00102A  0E8E               	movlw	142
  1585   00102C  5E38               	subwf	___fttol@exp1^0,f,c
  1586   00102E  AE38               	btfss	___fttol@exp1^0,7,c
  1587   001030  D00D               	goto	l1831
  1588   001032  5038               	movf	___fttol@exp1^0,w,c
  1589   001034  0A80               	xorlw	128
  1590   001036  0F8F               	addlw	143
  1591   001038  A0D8               	btfss	status,0,c
  1592   00103A  D7CD               	goto	u1540
  1593   00103C                     l1827:
  1594   00103C  90D8               	bcf	status,0,c
  1595   00103E  3237               	rrcf	(___fttol@lval+3)^0,f,c
  1596   001040  3236               	rrcf	(___fttol@lval+2)^0,f,c
  1597   001042  3235               	rrcf	(___fttol@lval+1)^0,f,c
  1598   001044  3234               	rrcf	___fttol@lval^0,f,c
  1599   001046  3E38               	incfsz	___fttol@exp1^0,f,c
  1600   001048  D7F9               	goto	l1827
  1601   00104A  D00D               	goto	u1590
  1602   00104C                     l1831:
  1603   00104C  0E17               	movlw	23
  1604   00104E  6438               	cpfsgt	___fttol@exp1^0,c
  1605   001050  D007               	goto	l1839
  1606   001052  D7C1               	goto	u1540
  1607   001054                     l1837:
  1608   001054  90D8               	bcf	status,0,c
  1609   001056  3634               	rlcf	___fttol@lval^0,f,c
  1610   001058  3635               	rlcf	(___fttol@lval+1)^0,f,c
  1611   00105A  3636               	rlcf	(___fttol@lval+2)^0,f,c
  1612   00105C  3637               	rlcf	(___fttol@lval+3)^0,f,c
  1613   00105E  0638               	decf	___fttol@exp1^0,f,c
  1614   001060                     l1839:
  1615   001060  5038               	movf	___fttol@exp1^0,w,c
  1616   001062  A4D8               	btfss	status,2,c
  1617   001064  D7F7               	goto	l1837
  1618   001066                     u1590:
  1619   001066  5033               	movf	___fttol@sign1^0,w,c
  1620   001068  B4D8               	btfsc	status,2,c
  1621   00106A  D008               	goto	l1845
  1622   00106C  1E37               	comf	(___fttol@lval+3)^0,f,c
  1623   00106E  1E36               	comf	(___fttol@lval+2)^0,f,c
  1624   001070  1E35               	comf	(___fttol@lval+1)^0,f,c
  1625   001072  6C34               	negf	___fttol@lval^0,c
  1626   001074  0E00               	movlw	0
  1627   001076  2235               	addwfc	(___fttol@lval+1)^0,f,c
  1628   001078  2236               	addwfc	(___fttol@lval+2)^0,f,c
  1629   00107A  2237               	addwfc	(___fttol@lval+3)^0,f,c
  1630   00107C                     l1845:
  1631   00107C  C034  F02A         	movff	___fttol@lval,?___fttol
  1632   001080  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1633   001084  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1634   001088  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1635   00108C  0012               	return		;funcret
  1636   00108E                     __end_of___fttol:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function ___ftsub *****************
  1640 ;; Defined at:
  1641 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftsub.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  f1              3   20[COMRAM] float 
  1644 ;;  f2              3   23[COMRAM] float 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  3   20[COMRAM] float 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         6       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        6 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 2
  1663 ;; This function calls:
  1664 ;;		___ftadd
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text6
  1671   001372                     __ptext6:
  1672                           	callstack 0
  1673   001372                     ___ftsub:
  1674                           	callstack 28
  1675                           
  1676                           ;incstack = 0
  1677   001372  5018               	movf	___ftsub@f2^0,w,c
  1678   001374  1019               	iorwf	(___ftsub@f2+1)^0,w,c
  1679   001376  101A               	iorwf	(___ftsub@f2+2)^0,w,c
  1680   001378  B4D8               	btfsc	status,2,c
  1681   00137A  D006               	goto	l1799
  1682   00137C  0E00               	movlw	0
  1683   00137E  1A18               	xorwf	___ftsub@f2^0,f,c
  1684   001380  0E00               	movlw	0
  1685   001382  1A19               	xorwf	(___ftsub@f2+1)^0,f,c
  1686   001384  0E80               	movlw	128
  1687   001386  1A1A               	xorwf	(___ftsub@f2+2)^0,f,c
  1688   001388                     l1799:
  1689   001388  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  1690   00138C  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  1691   001390  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  1692   001394  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  1693   001398  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  1694   00139C  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  1695   0013A0  EC90  F006         	call	___ftadd	;wreg free
  1696   0013A4  C009  F015         	movff	?___ftadd,?___ftsub
  1697   0013A8  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  1698   0013AC  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  1699   0013B0  0012               	return		;funcret
  1700   0013B2                     __end_of___ftsub:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function ___ftadd *****************
  1704 ;; Defined at:
  1705 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  f1              3    8[COMRAM] float 
  1708 ;;  f2              3   11[COMRAM] float 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  exp1            1   19[COMRAM] unsigned char 
  1711 ;;  exp2            1   18[COMRAM] unsigned char 
  1712 ;;  sign            1   17[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  3    8[COMRAM] float 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         6       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1725 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:       12 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		___ftpack
  1731 ;; This function is called by:
  1732 ;;		___ftsub
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text7
  1737   000D20                     __ptext7:
  1738                           	callstack 0
  1739   000D20                     ___ftadd:
  1740                           	callstack 28
  1741                           
  1742                           ;incstack = 0
  1743   000D20  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  1744   000D24  6A10               	clrf	(??___ftadd+1)^0,c
  1745   000D26  6A11               	clrf	(??___ftadd+2)^0,c
  1746   000D28  340A               	rlcf	(___ftadd@f1+1)^0,w,c
  1747   000D2A  360F               	rlcf	??___ftadd^0,f,c
  1748   000D2C  E301               	bnc	u1231
  1749   000D2E  8010               	bsf	(??___ftadd+1)^0,0,c
  1750   000D30                     u1231:
  1751   000D30  500F               	movf	??___ftadd^0,w,c
  1752   000D32  6E14               	movwf	___ftadd@exp1^0,c
  1753   000D34  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  1754   000D38  6A10               	clrf	(??___ftadd+1)^0,c
  1755   000D3A  6A11               	clrf	(??___ftadd+2)^0,c
  1756   000D3C  340D               	rlcf	(___ftadd@f2+1)^0,w,c
  1757   000D3E  360F               	rlcf	??___ftadd^0,f,c
  1758   000D40  E301               	bnc	u1241
  1759   000D42  8010               	bsf	(??___ftadd+1)^0,0,c
  1760   000D44                     u1241:
  1761   000D44  500F               	movf	??___ftadd^0,w,c
  1762   000D46  6E13               	movwf	___ftadd@exp2^0,c
  1763   000D48  5014               	movf	___ftadd@exp1^0,w,c
  1764   000D4A  B4D8               	btfsc	status,2,c
  1765   000D4C  D00A               	goto	u1270
  1766   000D4E  5013               	movf	___ftadd@exp2^0,w,c
  1767   000D50  5C14               	subwf	___ftadd@exp1^0,w,c
  1768   000D52  B0D8               	btfsc	status,0,c
  1769   000D54  D00D               	goto	l1665
  1770   000D56  5014               	movf	___ftadd@exp1^0,w,c
  1771   000D58  5C13               	subwf	___ftadd@exp2^0,w,c
  1772   000D5A  6E0F               	movwf	??___ftadd^0,c
  1773   000D5C  0E18               	movlw	24
  1774   000D5E  640F               	cpfsgt	??___ftadd^0,c
  1775   000D60  D007               	goto	l1665
  1776   000D62                     u1270:
  1777   000D62  C00C  F009         	movff	___ftadd@f2,?___ftadd
  1778   000D66  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  1779   000D6A  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  1780   000D6E  0012               	return	
  1781   000D70                     l1665:
  1782   000D70  5013               	movf	___ftadd@exp2^0,w,c
  1783   000D72  B4D8               	btfsc	status,2,c
  1784   000D74  D00A               	goto	u1300
  1785   000D76  5014               	movf	___ftadd@exp1^0,w,c
  1786   000D78  5C13               	subwf	___ftadd@exp2^0,w,c
  1787   000D7A  B0D8               	btfsc	status,0,c
  1788   000D7C  D00D               	goto	l1671
  1789   000D7E  5013               	movf	___ftadd@exp2^0,w,c
  1790   000D80  5C14               	subwf	___ftadd@exp1^0,w,c
  1791   000D82  6E0F               	movwf	??___ftadd^0,c
  1792   000D84  0E18               	movlw	24
  1793   000D86  640F               	cpfsgt	??___ftadd^0,c
  1794   000D88  D007               	goto	l1671
  1795   000D8A                     u1300:
  1796   000D8A  C009  F009         	movff	___ftadd@f1,?___ftadd
  1797   000D8E  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  1798   000D92  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  1799   000D96  0012               	return	
  1800   000D98                     l1671:
  1801   000D98  0E06               	movlw	6
  1802   000D9A  6E12               	movwf	___ftadd@sign^0,c
  1803   000D9C  BE0B               	btfsc	(___ftadd@f1+2)^0,7,c
  1804   000D9E  8E12               	bsf	___ftadd@sign^0,7,c
  1805   000DA0  BE0E               	btfsc	(___ftadd@f2+2)^0,7,c
  1806   000DA2  8C12               	bsf	___ftadd@sign^0,6,c
  1807   000DA4  8E0A               	bsf	(___ftadd@f1+1)^0,7,c
  1808   000DA6  0EFF               	movlw	255
  1809   000DA8  1609               	andwf	___ftadd@f1^0,f,c
  1810   000DAA  0EFF               	movlw	255
  1811   000DAC  160A               	andwf	(___ftadd@f1+1)^0,f,c
  1812   000DAE  0E00               	movlw	0
  1813   000DB0  160B               	andwf	(___ftadd@f1+2)^0,f,c
  1814   000DB2  8E0D               	bsf	(___ftadd@f2+1)^0,7,c
  1815   000DB4  0EFF               	movlw	255
  1816   000DB6  160C               	andwf	___ftadd@f2^0,f,c
  1817   000DB8  0EFF               	movlw	255
  1818   000DBA  160D               	andwf	(___ftadd@f2+1)^0,f,c
  1819   000DBC  0E00               	movlw	0
  1820   000DBE  160E               	andwf	(___ftadd@f2+2)^0,f,c
  1821   000DC0  5013               	movf	___ftadd@exp2^0,w,c
  1822   000DC2  5C14               	subwf	___ftadd@exp1^0,w,c
  1823   000DC4  B0D8               	btfsc	status,0,c
  1824   000DC6  D01B               	goto	l1697
  1825   000DC8                     u1330:
  1826   000DC8  90D8               	bcf	status,0,c
  1827   000DCA  360C               	rlcf	___ftadd@f2^0,f,c
  1828   000DCC  360D               	rlcf	(___ftadd@f2+1)^0,f,c
  1829   000DCE  360E               	rlcf	(___ftadd@f2+2)^0,f,c
  1830   000DD0  0613               	decf	___ftadd@exp2^0,f,c
  1831   000DD2  5014               	movf	___ftadd@exp1^0,w,c
  1832   000DD4  1813               	xorwf	___ftadd@exp2^0,w,c
  1833   000DD6  B4D8               	btfsc	status,2,c
  1834   000DD8  D00D               	goto	l1695
  1835   000DDA  0612               	decf	___ftadd@sign^0,f,c
  1836   000DDC  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1837   000DE0  0E07               	movlw	7
  1838   000DE2  160F               	andwf	??___ftadd^0,f,c
  1839   000DE4  B4D8               	btfsc	status,2,c
  1840   000DE6  D006               	goto	l1695
  1841   000DE8  D7EF               	goto	u1330
  1842   000DEA                     l1693:
  1843   000DEA  90D8               	bcf	status,0,c
  1844   000DEC  320B               	rrcf	(___ftadd@f1+2)^0,f,c
  1845   000DEE  320A               	rrcf	(___ftadd@f1+1)^0,f,c
  1846   000DF0  3209               	rrcf	___ftadd@f1^0,f,c
  1847   000DF2  2A14               	incf	___ftadd@exp1^0,f,c
  1848   000DF4                     l1695:
  1849   000DF4  5013               	movf	___ftadd@exp2^0,w,c
  1850   000DF6  1814               	xorwf	___ftadd@exp1^0,w,c
  1851   000DF8  B4D8               	btfsc	status,2,c
  1852   000DFA  D01F               	goto	u1400
  1853   000DFC  D7F6               	goto	l1693
  1854   000DFE                     l1697:
  1855   000DFE  5014               	movf	___ftadd@exp1^0,w,c
  1856   000E00  5C13               	subwf	___ftadd@exp2^0,w,c
  1857   000E02  B0D8               	btfsc	status,0,c
  1858   000E04  D01A               	goto	u1400
  1859   000E06                     u1370:
  1860   000E06  90D8               	bcf	status,0,c
  1861   000E08  3609               	rlcf	___ftadd@f1^0,f,c
  1862   000E0A  360A               	rlcf	(___ftadd@f1+1)^0,f,c
  1863   000E0C  360B               	rlcf	(___ftadd@f1+2)^0,f,c
  1864   000E0E  0614               	decf	___ftadd@exp1^0,f,c
  1865   000E10  5014               	movf	___ftadd@exp1^0,w,c
  1866   000E12  1813               	xorwf	___ftadd@exp2^0,w,c
  1867   000E14  B4D8               	btfsc	status,2,c
  1868   000E16  D00D               	goto	l1707
  1869   000E18  0612               	decf	___ftadd@sign^0,f,c
  1870   000E1A  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1871   000E1E  0E07               	movlw	7
  1872   000E20  160F               	andwf	??___ftadd^0,f,c
  1873   000E22  B4D8               	btfsc	status,2,c
  1874   000E24  D006               	goto	l1707
  1875   000E26  D7EF               	goto	u1370
  1876   000E28                     l1705:
  1877   000E28  90D8               	bcf	status,0,c
  1878   000E2A  320E               	rrcf	(___ftadd@f2+2)^0,f,c
  1879   000E2C  320D               	rrcf	(___ftadd@f2+1)^0,f,c
  1880   000E2E  320C               	rrcf	___ftadd@f2^0,f,c
  1881   000E30  2A13               	incf	___ftadd@exp2^0,f,c
  1882   000E32                     l1707:
  1883   000E32  5013               	movf	___ftadd@exp2^0,w,c
  1884   000E34  1814               	xorwf	___ftadd@exp1^0,w,c
  1885   000E36  A4D8               	btfss	status,2,c
  1886   000E38  D7F7               	goto	l1705
  1887   000E3A                     u1400:
  1888   000E3A  AE12               	btfss	___ftadd@sign^0,7,c
  1889   000E3C  D00C               	goto	l532
  1890   000E3E  0EFF               	movlw	255
  1891   000E40  1A09               	xorwf	___ftadd@f1^0,f,c
  1892   000E42  0EFF               	movlw	255
  1893   000E44  1A0A               	xorwf	(___ftadd@f1+1)^0,f,c
  1894   000E46  0EFF               	movlw	255
  1895   000E48  1A0B               	xorwf	(___ftadd@f1+2)^0,f,c
  1896   000E4A  0E01               	movlw	1
  1897   000E4C  2609               	addwf	___ftadd@f1^0,f,c
  1898   000E4E  0E00               	movlw	0
  1899   000E50  220A               	addwfc	(___ftadd@f1+1)^0,f,c
  1900   000E52  0E00               	movlw	0
  1901   000E54  220B               	addwfc	(___ftadd@f1+2)^0,f,c
  1902   000E56                     l532:
  1903   000E56  AC12               	btfss	___ftadd@sign^0,6,c
  1904   000E58  D00C               	goto	l1713
  1905   000E5A  0EFF               	movlw	255
  1906   000E5C  1A0C               	xorwf	___ftadd@f2^0,f,c
  1907   000E5E  0EFF               	movlw	255
  1908   000E60  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1909   000E62  0EFF               	movlw	255
  1910   000E64  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1911   000E66  0E01               	movlw	1
  1912   000E68  260C               	addwf	___ftadd@f2^0,f,c
  1913   000E6A  0E00               	movlw	0
  1914   000E6C  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1915   000E6E  0E00               	movlw	0
  1916   000E70  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1917   000E72                     l1713:
  1918   000E72  0E00               	movlw	0
  1919   000E74  6E12               	movwf	___ftadd@sign^0,c
  1920   000E76  5009               	movf	___ftadd@f1^0,w,c
  1921   000E78  260C               	addwf	___ftadd@f2^0,f,c
  1922   000E7A  500A               	movf	(___ftadd@f1+1)^0,w,c
  1923   000E7C  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1924   000E7E  500B               	movf	(___ftadd@f1+2)^0,w,c
  1925   000E80  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1926   000E82  AE0E               	btfss	(___ftadd@f2+2)^0,7,c
  1927   000E84  D00E               	goto	l1723
  1928   000E86  0EFF               	movlw	255
  1929   000E88  1A0C               	xorwf	___ftadd@f2^0,f,c
  1930   000E8A  0EFF               	movlw	255
  1931   000E8C  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1932   000E8E  0EFF               	movlw	255
  1933   000E90  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1934   000E92  0E01               	movlw	1
  1935   000E94  260C               	addwf	___ftadd@f2^0,f,c
  1936   000E96  0E00               	movlw	0
  1937   000E98  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1938   000E9A  0E00               	movlw	0
  1939   000E9C  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1940   000E9E  0E01               	movlw	1
  1941   000EA0  6E12               	movwf	___ftadd@sign^0,c
  1942   000EA2                     l1723:
  1943   000EA2  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  1944   000EA6  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1945   000EAA  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1946   000EAE  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  1947   000EB2  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  1948   000EB6  EC47  F008         	call	___ftpack	;wreg free
  1949   000EBA  C001  F009         	movff	?___ftpack,?___ftadd
  1950   000EBE  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  1951   000EC2  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  1952   000EC6  0012               	return		;funcret
  1953   000EC8                     __end_of___ftadd:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function ___ftmul *****************
  1957 ;; Defined at:
  1958 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  f1              3   26[COMRAM] float 
  1961 ;;  f2              3   29[COMRAM] float 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1964 ;;  sign            1   40[COMRAM] unsigned char 
  1965 ;;  cntr            1   39[COMRAM] unsigned char 
  1966 ;;  exp             1   35[COMRAM] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  3   26[COMRAM] float 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1976 ;;      Params:         6       0       0       0       0       0       0       0       0
  1977 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1978 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1979 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1980 ;;Total ram usage:       15 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 1
  1983 ;; This function calls:
  1984 ;;		___ftpack
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text8
  1991   000EC8                     __ptext8:
  1992                           	callstack 0
  1993   000EC8                     ___ftmul:
  1994                           	callstack 29
  1995                           
  1996                           ;incstack = 0
  1997   000EC8  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1998   000ECC  6A22               	clrf	(??___ftmul+1)^0,c
  1999   000ECE  6A23               	clrf	(??___ftmul+2)^0,c
  2000   000ED0  341C               	rlcf	(___ftmul@f1+1)^0,w,c
  2001   000ED2  3621               	rlcf	??___ftmul^0,f,c
  2002   000ED4  E301               	bnc	u1461
  2003   000ED6  8022               	bsf	(??___ftmul+1)^0,0,c
  2004   000ED8                     u1461:
  2005   000ED8  5021               	movf	??___ftmul^0,w,c
  2006   000EDA  6E24               	movwf	___ftmul@exp^0,c
  2007   000EDC  5024               	movf	___ftmul@exp^0,w,c
  2008   000EDE  A4D8               	btfss	status,2,c
  2009   000EE0  D007               	goto	l1753
  2010   000EE2  0E00               	movlw	0
  2011   000EE4  6E1B               	movwf	?___ftmul^0,c
  2012   000EE6  0E00               	movlw	0
  2013   000EE8  6E1C               	movwf	(?___ftmul+1)^0,c
  2014   000EEA  0E00               	movlw	0
  2015   000EEC  6E1D               	movwf	(?___ftmul+2)^0,c
  2016   000EEE  0012               	return	
  2017   000EF0                     l1753:
  2018   000EF0  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  2019   000EF4  6A22               	clrf	(??___ftmul+1)^0,c
  2020   000EF6  6A23               	clrf	(??___ftmul+2)^0,c
  2021   000EF8  341F               	rlcf	(___ftmul@f2+1)^0,w,c
  2022   000EFA  3621               	rlcf	??___ftmul^0,f,c
  2023   000EFC  E301               	bnc	u1481
  2024   000EFE  8022               	bsf	(??___ftmul+1)^0,0,c
  2025   000F00                     u1481:
  2026   000F00  5021               	movf	??___ftmul^0,w,c
  2027   000F02  6E29               	movwf	___ftmul@sign^0,c
  2028   000F04  5029               	movf	___ftmul@sign^0,w,c
  2029   000F06  A4D8               	btfss	status,2,c
  2030   000F08  D007               	goto	l1759
  2031   000F0A  0E00               	movlw	0
  2032   000F0C  6E1B               	movwf	?___ftmul^0,c
  2033   000F0E  0E00               	movlw	0
  2034   000F10  6E1C               	movwf	(?___ftmul+1)^0,c
  2035   000F12  0E00               	movlw	0
  2036   000F14  6E1D               	movwf	(?___ftmul+2)^0,c
  2037   000F16  0012               	return	
  2038   000F18                     l1759:
  2039   000F18  5029               	movf	___ftmul@sign^0,w,c
  2040   000F1A  0F7B               	addlw	123
  2041   000F1C  2624               	addwf	___ftmul@exp^0,f,c
  2042   000F1E  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  2043   000F22  5020               	movf	(___ftmul@f2+2)^0,w,c
  2044   000F24  1A29               	xorwf	___ftmul@sign^0,f,c
  2045   000F26  0E80               	movlw	128
  2046   000F28  1629               	andwf	___ftmul@sign^0,f,c
  2047   000F2A  8E1C               	bsf	(___ftmul@f1+1)^0,7,c
  2048   000F2C  8E1F               	bsf	(___ftmul@f2+1)^0,7,c
  2049   000F2E  0EFF               	movlw	255
  2050   000F30  161E               	andwf	___ftmul@f2^0,f,c
  2051   000F32  0EFF               	movlw	255
  2052   000F34  161F               	andwf	(___ftmul@f2+1)^0,f,c
  2053   000F36  0E00               	movlw	0
  2054   000F38  1620               	andwf	(___ftmul@f2+2)^0,f,c
  2055   000F3A  0E00               	movlw	0
  2056   000F3C  6E25               	movwf	___ftmul@f3_as_product^0,c
  2057   000F3E  0E00               	movlw	0
  2058   000F40  6E26               	movwf	(___ftmul@f3_as_product+1)^0,c
  2059   000F42  0E00               	movlw	0
  2060   000F44  6E27               	movwf	(___ftmul@f3_as_product+2)^0,c
  2061   000F46  0E07               	movlw	7
  2062   000F48  6E28               	movwf	___ftmul@cntr^0,c
  2063   000F4A                     l1773:
  2064   000F4A  A01B               	btfss	___ftmul@f1^0,0,c
  2065   000F4C  D006               	goto	l1777
  2066   000F4E  501E               	movf	___ftmul@f2^0,w,c
  2067   000F50  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2068   000F52  501F               	movf	(___ftmul@f2+1)^0,w,c
  2069   000F54  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2070   000F56  5020               	movf	(___ftmul@f2+2)^0,w,c
  2071   000F58  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2072   000F5A                     l1777:
  2073   000F5A  90D8               	bcf	status,0,c
  2074   000F5C  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2075   000F5E  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2076   000F60  321B               	rrcf	___ftmul@f1^0,f,c
  2077   000F62  90D8               	bcf	status,0,c
  2078   000F64  361E               	rlcf	___ftmul@f2^0,f,c
  2079   000F66  361F               	rlcf	(___ftmul@f2+1)^0,f,c
  2080   000F68  3620               	rlcf	(___ftmul@f2+2)^0,f,c
  2081   000F6A  2E28               	decfsz	___ftmul@cntr^0,f,c
  2082   000F6C  D7EE               	goto	l1773
  2083   000F6E  0E09               	movlw	9
  2084   000F70  6E28               	movwf	___ftmul@cntr^0,c
  2085   000F72                     l1783:
  2086   000F72  A01B               	btfss	___ftmul@f1^0,0,c
  2087   000F74  D006               	goto	l1787
  2088   000F76  501E               	movf	___ftmul@f2^0,w,c
  2089   000F78  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2090   000F7A  501F               	movf	(___ftmul@f2+1)^0,w,c
  2091   000F7C  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2092   000F7E  5020               	movf	(___ftmul@f2+2)^0,w,c
  2093   000F80  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2094   000F82                     l1787:
  2095   000F82  90D8               	bcf	status,0,c
  2096   000F84  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2097   000F86  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2098   000F88  321B               	rrcf	___ftmul@f1^0,f,c
  2099   000F8A  90D8               	bcf	status,0,c
  2100   000F8C  3227               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  2101   000F8E  3226               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  2102   000F90  3225               	rrcf	___ftmul@f3_as_product^0,f,c
  2103   000F92  2E28               	decfsz	___ftmul@cntr^0,f,c
  2104   000F94  D7EE               	goto	l1783
  2105   000F96  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2106   000F9A  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2107   000F9E  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2108   000FA2  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  2109   000FA6  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  2110   000FAA  EC47  F008         	call	___ftpack	;wreg free
  2111   000FAE  C001  F01B         	movff	?___ftpack,?___ftmul
  2112   000FB2  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  2113   000FB6  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  2114   000FBA  0012               	return		;funcret
  2115   000FBC                     __end_of___ftmul:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function ___ftpack *****************
  2119 ;; Defined at:
  2120 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  arg             3    0[COMRAM] unsigned um
  2123 ;;  exp             1    3[COMRAM] unsigned char 
  2124 ;;  sign            1    4[COMRAM] unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  3    0[COMRAM] float 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         5       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		___ftadd
  2146 ;;		___ftmul
  2147 ;;		___lltoft
  2148 ;;		___lwtoft
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text9
  2153   00108E                     __ptext9:
  2154                           	callstack 0
  2155   00108E                     ___ftpack:
  2156                           	callstack 29
  2157                           
  2158                           ;incstack = 0
  2159   00108E  5004               	movf	___ftpack@exp^0,w,c
  2160   001090  B4D8               	btfsc	status,2,c
  2161   001092  D005               	goto	u1160
  2162   001094  5001               	movf	___ftpack@arg^0,w,c
  2163   001096  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  2164   001098  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  2165   00109A  A4D8               	btfss	status,2,c
  2166   00109C  D00C               	goto	l1631
  2167   00109E                     u1160:
  2168   00109E  0E00               	movlw	0
  2169   0010A0  6E01               	movwf	?___ftpack^0,c
  2170   0010A2  0E00               	movlw	0
  2171   0010A4  6E02               	movwf	(?___ftpack+1)^0,c
  2172   0010A6  0E00               	movlw	0
  2173   0010A8  6E03               	movwf	(?___ftpack+2)^0,c
  2174   0010AA  0012               	return	
  2175   0010AC                     l1629:
  2176   0010AC  2A04               	incf	___ftpack@exp^0,f,c
  2177   0010AE  90D8               	bcf	status,0,c
  2178   0010B0  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2179   0010B2  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2180   0010B4  3201               	rrcf	___ftpack@arg^0,f,c
  2181   0010B6                     l1631:
  2182   0010B6  0E00               	movlw	0
  2183   0010B8  1401               	andwf	___ftpack@arg^0,w,c
  2184   0010BA  6E06               	movwf	??___ftpack^0,c
  2185   0010BC  0E00               	movlw	0
  2186   0010BE  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2187   0010C0  6E07               	movwf	(??___ftpack+1)^0,c
  2188   0010C2  0EFE               	movlw	254
  2189   0010C4  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2190   0010C6  6E08               	movwf	(??___ftpack+2)^0,c
  2191   0010C8  5006               	movf	??___ftpack^0,w,c
  2192   0010CA  1007               	iorwf	(??___ftpack+1)^0,w,c
  2193   0010CC  1008               	iorwf	(??___ftpack+2)^0,w,c
  2194   0010CE  B4D8               	btfsc	status,2,c
  2195   0010D0  D00C               	goto	l1637
  2196   0010D2  D7EC               	goto	l1629
  2197   0010D4                     l1633:
  2198   0010D4  2A04               	incf	___ftpack@exp^0,f,c
  2199   0010D6  0E01               	movlw	1
  2200   0010D8  2601               	addwf	___ftpack@arg^0,f,c
  2201   0010DA  0E00               	movlw	0
  2202   0010DC  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2203   0010DE  0E00               	movlw	0
  2204   0010E0  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2205   0010E2  90D8               	bcf	status,0,c
  2206   0010E4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2207   0010E6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2208   0010E8  3201               	rrcf	___ftpack@arg^0,f,c
  2209   0010EA                     l1637:
  2210   0010EA  0E00               	movlw	0
  2211   0010EC  1401               	andwf	___ftpack@arg^0,w,c
  2212   0010EE  6E06               	movwf	??___ftpack^0,c
  2213   0010F0  0E00               	movlw	0
  2214   0010F2  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2215   0010F4  6E07               	movwf	(??___ftpack+1)^0,c
  2216   0010F6  0EFF               	movlw	255
  2217   0010F8  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2218   0010FA  6E08               	movwf	(??___ftpack+2)^0,c
  2219   0010FC  5006               	movf	??___ftpack^0,w,c
  2220   0010FE  1007               	iorwf	(??___ftpack+1)^0,w,c
  2221   001100  1008               	iorwf	(??___ftpack+2)^0,w,c
  2222   001102  B4D8               	btfsc	status,2,c
  2223   001104  D006               	goto	l1641
  2224   001106  D7E6               	goto	l1633
  2225   001108                     l1639:
  2226   001108  0604               	decf	___ftpack@exp^0,f,c
  2227   00110A  90D8               	bcf	status,0,c
  2228   00110C  3601               	rlcf	___ftpack@arg^0,f,c
  2229   00110E  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  2230   001110  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  2231   001112                     l1641:
  2232   001112  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  2233   001114  D003               	goto	u1200
  2234   001116  0E02               	movlw	2
  2235   001118  6004               	cpfslt	___ftpack@exp^0,c
  2236   00111A  D7F6               	goto	l1639
  2237   00111C                     u1200:
  2238   00111C  A004               	btfss	___ftpack@exp^0,0,c
  2239   00111E  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  2240   001120  90D8               	bcf	status,0,c
  2241   001122  3204               	rrcf	___ftpack@exp^0,f,c
  2242   001124  5004               	movf	___ftpack@exp^0,w,c
  2243   001126  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  2244   001128  5005               	movf	___ftpack@sign^0,w,c
  2245   00112A  A4D8               	btfss	status,2,c
  2246   00112C  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  2247   00112E  C001  F001         	movff	___ftpack@arg,?___ftpack
  2248   001132  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2249   001136  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2250   00113A  0012               	return		;funcret
  2251   00113C                     __end_of___ftpack:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _MensajeLCD_Word *****************
  2255 ;; Defined at:
  2256 ;;		line 239 in file "LibLCDXC8.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  a               1    4[COMRAM] PTR unsigned char 
  2259 ;;		 -> STR_2(17), STR_1(11), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  i               2    6[COMRAM] int 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2271 ;;      Params:         1       0       0       0       0       0       0       0       0
  2272 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2273 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2274 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2275 ;;Total ram usage:        4 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 3
  2278 ;; This function calls:
  2279 ;;		_EscribeLCD_c
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text10
  2286   0012E2                     __ptext10:
  2287                           	callstack 0
  2288   0012E2                     _MensajeLCD_Word:
  2289                           	callstack 27
  2290                           
  2291                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  2292                           
  2293                           ;incstack = 0
  2294   0012E2  0E00               	movlw	0
  2295   0012E4  6E08               	movwf	(MensajeLCD_Word@i+1)^0,c
  2296   0012E6  0E00               	movlw	0
  2297   0012E8  6E07               	movwf	MensajeLCD_Word@i^0,c
  2298   0012EA                     l1733:
  2299                           
  2300                           ;LibLCDXC8.h: 244: if(a[i]!=0){
  2301   0012EA  5005               	movf	MensajeLCD_Word@a^0,w,c
  2302   0012EC  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2303   0012EE  6E06               	movwf	??_MensajeLCD_Word^0,c
  2304   0012F0  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2305   0012F4                     	if	1	;There is more than 1 active tblptr byte
  2306   0012F4  0E08               	movlw	high __smallconst
  2307   0012F6  6EF7               	movwf	tblptrh,c
  2308   0012F8                     	endif
  2309   0012F8                     	if	0	;tblptru may be non-zero
  2310   0012F8                     	endif
  2311   0012F8                     	if	0	;tblptru may be non-zero
  2312   0012F8                     	endif
  2313   0012F8  0008               	tblrd		*
  2314   0012FA  50F5               	movf	tablat,w,c
  2315   0012FC  0900               	iorlw	0
  2316   0012FE  B4D8               	btfsc	status,2,c
  2317   001300  D00B               	goto	l1737
  2318                           
  2319                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  2320   001302  5005               	movf	MensajeLCD_Word@a^0,w,c
  2321   001304  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2322   001306  6E06               	movwf	??_MensajeLCD_Word^0,c
  2323   001308  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2324   00130C                     	if	1	;There is more than 1 active tblptr byte
  2325   00130C  0E08               	movlw	high __smallconst
  2326   00130E  6EF7               	movwf	tblptrh,c
  2327   001310                     	endif
  2328   001310                     	if	0	;tblptru may be non-zero
  2329   001310                     	endif
  2330   001310                     	if	0	;tblptru may be non-zero
  2331   001310                     	endif
  2332   001310  0008               	tblrd		*
  2333   001312  50F5               	movf	tablat,w,c
  2334   001314  EC19  F00A         	call	_EscribeLCD_c
  2335   001318                     l1737:
  2336   001318  4A07               	infsnz	MensajeLCD_Word@i^0,f,c
  2337   00131A  2A08               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2338   00131C  BE08               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2339   00131E  D7E5               	goto	l1733
  2340   001320  5008               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2341   001322  E105               	bnz	u1450
  2342   001324  0E10               	movlw	16
  2343   001326  5C07               	subwf	MensajeLCD_Word@i^0,w,c
  2344   001328  B0D8               	btfsc	status,0,c
  2345   00132A  0012               	return	
  2346   00132C  D7DE               	goto	l1733
  2347   00132E                     u1450:
  2348   00132E  0012               	return		;funcret
  2349   001330                     __end_of_MensajeLCD_Word:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _EscribeLCD_c *****************
  2353 ;; Defined at:
  2354 ;;		line 140 in file "LibLCDXC8.h"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  a               1    wreg     unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  a               1    3[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        1 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		_EnviaDato
  2377 ;;		_HabilitaLCD
  2378 ;;		_RetardoLCD
  2379 ;; This function is called by:
  2380 ;;		_MensajeLCD_Word
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text11
  2386   001432                     __ptext11:
  2387                           	callstack 0
  2388   001432                     _EscribeLCD_c:
  2389                           	callstack 27
  2390                           
  2391                           ;incstack = 0
  2392                           ;EscribeLCD_c@a stored from wreg
  2393   001432  6E04               	movwf	EscribeLCD_c@a^0,c
  2394                           
  2395                           ;LibLCDXC8.h: 144: LATE0=1;
  2396   001434  808D               	bsf	3981,0,c	;volatile
  2397                           
  2398                           ;LibLCDXC8.h: 145: EnviaDato(a);
  2399   001436  5004               	movf	EscribeLCD_c@a^0,w,c
  2400   001438  EC40  F00A         	call	_EnviaDato
  2401                           
  2402                           ;LibLCDXC8.h: 146: HabilitaLCD();
  2403   00143C  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2404                           
  2405                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  2406   001440  0E04               	movlw	4
  2407   001442  EC1D  F009         	call	_RetardoLCD
  2408   001446  0012               	return		;funcret
  2409   001448                     __end_of_EscribeLCD_c:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _LeerTeclado *****************
  2413 ;; Defined at:
  2414 ;;		line 142 in file "Laboratorio4.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      unsigned char 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text12
  2442   00113C                     __ptext12:
  2443                           	callstack 0
  2444   00113C                     _LeerTeclado:
  2445                           	callstack 30
  2446                           
  2447                           ;Laboratorio4.c: 143: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2448                           
  2449                           ;incstack = 0
  2450   00113C  B881               	btfsc	3969,4,c	;volatile
  2451   00113E  AA81               	btfss	3969,5,c	;volatile
  2452   001140  D004               	goto	u350
  2453   001142  AC81               	btfss	3969,6,c	;volatile
  2454   001144  D002               	goto	u350
  2455   001146  BE81               	btfsc	3969,7,c	;volatile
  2456   001148  D7F9               	goto	__ptext12
  2457   00114A                     u350:
  2458                           
  2459                           ;Laboratorio4.c: 144: LATB=0b11111110;
  2460   00114A  0EFE               	movlw	254
  2461   00114C  6E8A               	movwf	138,c	;volatile
  2462                           
  2463                           ;Laboratorio4.c: 145: if(RB4==0) return '1';
  2464   00114E  B881               	btfsc	3969,4,c	;volatile
  2465   001150  D002               	goto	l168
  2466   001152  0E31               	movlw	49
  2467   001154  0012               	return	
  2468   001156                     l168:
  2469                           
  2470                           ;Laboratorio4.c: 146: else if(RB5==0) return '2';
  2471   001156  BA81               	btfsc	3969,5,c	;volatile
  2472   001158  D002               	goto	l171
  2473   00115A  0E32               	movlw	50
  2474   00115C  0012               	return	
  2475   00115E                     l171:
  2476                           
  2477                           ;Laboratorio4.c: 147: else if(RB6==0) return '3';
  2478   00115E  BC81               	btfsc	3969,6,c	;volatile
  2479   001160  D002               	goto	l173
  2480   001162  0E33               	movlw	51
  2481   001164  0012               	return	
  2482   001166                     l173:
  2483                           
  2484                           ;Laboratorio4.c: 148: else if(RB7==0) return '+';
  2485   001166  BE81               	btfsc	3969,7,c	;volatile
  2486   001168  D002               	goto	l1201
  2487   00116A  0E2B               	movlw	43
  2488   00116C  0012               	return	
  2489   00116E                     l1201:
  2490                           
  2491                           ;Laboratorio4.c: 149: else{;Laboratorio4.c: 150: LATB=0b11111101;
  2492   00116E  0EFD               	movlw	253
  2493   001170  6E8A               	movwf	138,c	;volatile
  2494                           
  2495                           ;Laboratorio4.c: 151: if(RB4==0) return '4';
  2496   001172  B881               	btfsc	3969,4,c	;volatile
  2497   001174  D002               	goto	l177
  2498   001176  0E34               	movlw	52
  2499   001178  0012               	return	
  2500   00117A                     l177:
  2501                           
  2502                           ;Laboratorio4.c: 152: else if(RB5==0) return '5';
  2503   00117A  BA81               	btfsc	3969,5,c	;volatile
  2504   00117C  D002               	goto	l179
  2505   00117E  0E35               	movlw	53
  2506   001180  0012               	return	
  2507   001182                     l179:
  2508                           
  2509                           ;Laboratorio4.c: 153: else if(RB6==0) return '6';
  2510   001182  BC81               	btfsc	3969,6,c	;volatile
  2511   001184  D002               	goto	l181
  2512   001186  0E36               	movlw	54
  2513   001188  0012               	return	
  2514   00118A                     l181:
  2515                           
  2516                           ;Laboratorio4.c: 154: else if(RB7==0) return '-';
  2517   00118A  BE81               	btfsc	3969,7,c	;volatile
  2518   00118C  D002               	goto	l1229
  2519   00118E  0E2D               	movlw	45
  2520   001190  0012               	return	
  2521   001192                     l1229:
  2522                           
  2523                           ;Laboratorio4.c: 155: else{;Laboratorio4.c: 156: LATB=0b11111011;
  2524   001192  0EFB               	movlw	251
  2525   001194  6E8A               	movwf	138,c	;volatile
  2526                           
  2527                           ;Laboratorio4.c: 157: if(RB4==0) return '7';
  2528   001196  B881               	btfsc	3969,4,c	;volatile
  2529   001198  D002               	goto	l185
  2530   00119A  0E37               	movlw	55
  2531   00119C  0012               	return	
  2532   00119E                     l185:
  2533                           
  2534                           ;Laboratorio4.c: 158: else if(RB5==0) return '8';
  2535   00119E  BA81               	btfsc	3969,5,c	;volatile
  2536   0011A0  D002               	goto	l187
  2537   0011A2  0E38               	movlw	56
  2538   0011A4  0012               	return	
  2539   0011A6                     l187:
  2540                           
  2541                           ;Laboratorio4.c: 159: else if(RB6==0) return '9';
  2542   0011A6  BC81               	btfsc	3969,6,c	;volatile
  2543   0011A8  D002               	goto	l189
  2544   0011AA  0E39               	movlw	57
  2545   0011AC  0012               	return	
  2546   0011AE                     l189:
  2547                           
  2548                           ;Laboratorio4.c: 160: else if(RB7==0) return '/';
  2549   0011AE  BE81               	btfsc	3969,7,c	;volatile
  2550   0011B0  D002               	goto	l1257
  2551   0011B2  0E2F               	movlw	47
  2552   0011B4  0012               	return	
  2553   0011B6                     l1257:
  2554                           
  2555                           ;Laboratorio4.c: 161: else{;Laboratorio4.c: 162: LATB=0b11110111;
  2556   0011B6  0EF7               	movlw	247
  2557   0011B8  6E8A               	movwf	138,c	;volatile
  2558                           
  2559                           ;Laboratorio4.c: 163: if(RB4==0) return 'C';
  2560   0011BA  B881               	btfsc	3969,4,c	;volatile
  2561   0011BC  D002               	goto	l193
  2562   0011BE  0E43               	movlw	67
  2563   0011C0  0012               	return	
  2564   0011C2                     l193:
  2565                           
  2566                           ;Laboratorio4.c: 164: else if(RB5==0) return '0';
  2567   0011C2  BA81               	btfsc	3969,5,c	;volatile
  2568   0011C4  D002               	goto	l195
  2569   0011C6  0E30               	movlw	48
  2570   0011C8  0012               	return	
  2571   0011CA                     l195:
  2572                           
  2573                           ;Laboratorio4.c: 165: else if(RB6==0) return '=';
  2574   0011CA  BC81               	btfsc	3969,6,c	;volatile
  2575   0011CC  D002               	goto	l197
  2576   0011CE  0E3D               	movlw	61
  2577   0011D0  0012               	return	
  2578   0011D2                     l197:
  2579                           
  2580                           ;Laboratorio4.c: 166: else if(RB7==0) return 'x';
  2581   0011D2  BE81               	btfsc	3969,7,c	;volatile
  2582   0011D4  D002               	goto	l194
  2583   0011D6  0E78               	movlw	120
  2584   0011D8  0012               	return	
  2585   0011DA                     l194:
  2586                           
  2587                           ;Laboratorio4.c: 167: };Laboratorio4.c: 168: };Laboratorio4.c: 169: };Laboratorio4.c: 17
      +                          0: return '?';
  2588   0011DA  0E3F               	movlw	63
  2589   0011DC  0012               	return		;funcret
  2590   0011DE                     __end_of_LeerTeclado:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _InicializaLCD *****************
  2594 ;; Defined at:
  2595 ;;		line 71 in file "LibLCDXC8.h"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		_BorraLCD
  2618 ;;		_EnviaDato
  2619 ;;		_HabilitaLCD
  2620 ;;		_RetardoLCD
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text13
  2627   001330                     __ptext13:
  2628                           	callstack 0
  2629   001330                     _InicializaLCD:
  2630                           	callstack 27
  2631                           
  2632                           ;LibLCDXC8.h: 73: LATE0=0;
  2633                           
  2634                           ;incstack = 0
  2635   001330  908D               	bcf	3981,0,c	;volatile
  2636                           
  2637                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2638                           
  2639                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2640   001332  0E3F               	movlw	63
  2641   001334  6E8C               	movwf	140,c	;volatile
  2642                           
  2643                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2644   001336  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2645                           
  2646                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2647   00133A  0E01               	movlw	1
  2648   00133C  EC1D  F009         	call	_RetardoLCD
  2649                           
  2650                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2651                           
  2652                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2653   001340  0E3F               	movlw	63
  2654   001342  6E8C               	movwf	140,c	;volatile
  2655                           
  2656                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2657   001344  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2658                           
  2659                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2660   001348  0E03               	movlw	3
  2661   00134A  EC1D  F009         	call	_RetardoLCD
  2662                           
  2663                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2664                           
  2665                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2666   00134E  0E3F               	movlw	63
  2667   001350  6E8C               	movwf	140,c	;volatile
  2668                           
  2669                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2670   001352  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2671                           
  2672                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2673   001356  0E04               	movlw	4
  2674   001358  EC1D  F009         	call	_RetardoLCD
  2675                           
  2676                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2677                           
  2678                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2679   00135C  EC2F  F00A         	call	_BorraLCD	;wreg free
  2680                           
  2681                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2682   001360  0E0F               	movlw	15
  2683   001362  EC40  F00A         	call	_EnviaDato
  2684                           
  2685                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2686   001366  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2687                           
  2688                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2689   00136A  0E04               	movlw	4
  2690   00136C  EC1D  F009         	call	_RetardoLCD
  2691   001370  0012               	return		;funcret
  2692   001372                     __end_of_InicializaLCD:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _BorraLCD *****************
  2696 ;; Defined at:
  2697 ;;		line 112 in file "LibLCDXC8.h"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 2
  2718 ;; This function calls:
  2719 ;;		_EnviaDato
  2720 ;;		_HabilitaLCD
  2721 ;;		_RetardoLCD
  2722 ;; This function is called by:
  2723 ;;		_InicializaLCD
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text14
  2729   00145E                     __ptext14:
  2730                           	callstack 0
  2731   00145E                     _BorraLCD:
  2732                           	callstack 27
  2733                           
  2734                           ;LibLCDXC8.h: 114: LATE0=0;
  2735                           
  2736                           ;incstack = 0
  2737   00145E  908D               	bcf	3981,0,c	;volatile
  2738                           
  2739                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2740   001460  0E01               	movlw	1
  2741   001462  EC40  F00A         	call	_EnviaDato
  2742                           
  2743                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2744   001466  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2745                           
  2746                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2747   00146A  0E02               	movlw	2
  2748   00146C  EC1D  F009         	call	_RetardoLCD
  2749   001470  0012               	return		;funcret
  2750   001472                     __end_of_BorraLCD:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _DireccionaLCD *****************
  2754 ;; Defined at:
  2755 ;;		line 250 in file "LibLCDXC8.h"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  a               1    wreg     unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  a               1    3[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        1 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 2
  2776 ;; This function calls:
  2777 ;;		_EnviaDato
  2778 ;;		_HabilitaLCD
  2779 ;;		_RetardoLCD
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text15
  2786   001448                     __ptext15:
  2787                           	callstack 0
  2788   001448                     _DireccionaLCD:
  2789                           	callstack 28
  2790                           
  2791                           ;incstack = 0
  2792                           ;DireccionaLCD@a stored from wreg
  2793   001448  6E04               	movwf	DireccionaLCD@a^0,c
  2794                           
  2795                           ;LibLCDXC8.h: 253: LATE0=0;
  2796   00144A  908D               	bcf	3981,0,c	;volatile
  2797                           
  2798                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2799   00144C  5004               	movf	DireccionaLCD@a^0,w,c
  2800   00144E  EC40  F00A         	call	_EnviaDato
  2801                           
  2802                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2803   001452  EC39  F00A         	call	_HabilitaLCD	;wreg free
  2804                           
  2805                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2806   001456  0E04               	movlw	4
  2807   001458  EC1D  F009         	call	_RetardoLCD
  2808   00145C  0012               	return		;funcret
  2809   00145E                     __end_of_DireccionaLCD:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _EnviaDato *****************
  2813 ;; Defined at:
  2814 ;;		line 59 in file "LibLCDXC8.h"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  a               1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  a               1    2[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0
  2829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2831 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 1
  2835 ;; This function calls:
  2836 ;;		_HabilitaLCD
  2837 ;;		_RetardoLCD
  2838 ;; This function is called by:
  2839 ;;		_InicializaLCD
  2840 ;;		_BorraLCD
  2841 ;;		_EscribeLCD_c
  2842 ;;		_DireccionaLCD
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text16
  2847   001480                     __ptext16:
  2848                           	callstack 0
  2849   001480                     _EnviaDato:
  2850                           	callstack 27
  2851                           
  2852                           ;incstack = 0
  2853                           ;EnviaDato@a stored from wreg
  2854   001480  6E03               	movwf	EnviaDato@a^0,c
  2855                           
  2856                           ;LibLCDXC8.h: 68: LATD=a;
  2857                           
  2858                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2859   001482  C003  FF8C         	movff	EnviaDato@a,3980	;volatile
  2860   001486  0012               	return		;funcret
  2861   001488                     __end_of_EnviaDato:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _RetardoLCD *****************
  2865 ;; Defined at:
  2866 ;;		line 286 in file "LibLCDXC8.h"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  a               1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  a               1    1[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        2 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_EnviaDato
  2890 ;;		_InicializaLCD
  2891 ;;		_BorraLCD
  2892 ;;		_EscribeLCD_c
  2893 ;;		_DireccionaLCD
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text17
  2898   00123A                     __ptext17:
  2899                           	callstack 0
  2900   00123A                     _RetardoLCD:
  2901                           	callstack 28
  2902                           
  2903                           ;incstack = 0
  2904                           ;RetardoLCD@a stored from wreg
  2905   00123A  6E02               	movwf	RetardoLCD@a^0,c
  2906                           
  2907                           ;LibLCDXC8.h: 287: switch(a){
  2908   00123C  D01B               	goto	l965
  2909   00123E                     l955:
  2910   00123E  0E05               	movlw	5
  2911   001240  6E01               	movwf	??_RetardoLCD^0,c
  2912   001242  0EDE               	movlw	222
  2913   001244                     u2117:
  2914   001244  2EE8               	decfsz	wreg,f,c
  2915   001246  D7FE               	bra	u2117
  2916   001248  2E01               	decfsz	??_RetardoLCD^0,f,c
  2917   00124A  D7FC               	bra	u2117
  2918                           
  2919                           ;LibLCDXC8.h: 290: break;
  2920   00124C  0012               	return	
  2921   00124E                     l957:
  2922   00124E  0E53               	movlw	83
  2923   001250                     u2127:
  2924   001250  2EE8               	decfsz	wreg,f,c
  2925   001252  D7FE               	bra	u2127
  2926   001254  F000               	nop	
  2927                           
  2928                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2929   001256  0E35               	movlw	53
  2930   001258                     u2137:
  2931   001258  2EE8               	decfsz	wreg,f,c
  2932   00125A  D7FE               	bra	u2137
  2933   00125C  F000               	nop	
  2934                           
  2935                           ;LibLCDXC8.h: 294: break;
  2936   00125E  0012               	return	
  2937   001260                     l959:
  2938   001260  0E08               	movlw	8
  2939   001262                     u2147:
  2940   001262  2EE8               	decfsz	wreg,f,c
  2941   001264  D7FE               	bra	u2147
  2942   001266  F000               	nop	
  2943                           
  2944                           ;LibLCDXC8.h: 297: break;
  2945   001268  0012               	return	
  2946   00126A                     l961:
  2947   00126A  0E03               	movlw	3
  2948   00126C                     u2157:
  2949   00126C  2EE8               	decfsz	wreg,f,c
  2950   00126E  D7FE               	bra	u2157
  2951   001270  F000               	nop	
  2952                           
  2953                           ;LibLCDXC8.h: 300: break;
  2954   001272  0012               	return	
  2955   001274                     l965:
  2956   001274  5002               	movf	RetardoLCD@a^0,w,c
  2957                           
  2958                           ; Switch size 1, requested type "simple"
  2959                           ; Number of cases is 4, Range of values is 1 to 4
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte           13     7 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964   001276  0A01               	xorlw	1	; case 1
  2965   001278  B4D8               	btfsc	status,2,c
  2966   00127A  D7E1               	goto	l955
  2967   00127C  0A03               	xorlw	3	; case 2
  2968   00127E  B4D8               	btfsc	status,2,c
  2969   001280  D7E6               	goto	l957
  2970   001282  0A01               	xorlw	1	; case 3
  2971   001284  B4D8               	btfsc	status,2,c
  2972   001286  D7EC               	goto	l959
  2973   001288  0A07               	xorlw	7	; case 4
  2974   00128A  A4D8               	btfss	status,2,c
  2975   00128C  0012               	return	
  2976   00128E  D7ED               	goto	l961
  2977   001290                     __end_of_RetardoLCD:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _HabilitaLCD *****************
  2981 ;; Defined at:
  2982 ;;		line 105 in file "LibLCDXC8.h"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_EnviaDato
  3006 ;;		_InicializaLCD
  3007 ;;		_BorraLCD
  3008 ;;		_EscribeLCD_c
  3009 ;;		_DireccionaLCD
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text18
  3014   001472                     __ptext18:
  3015                           	callstack 0
  3016   001472                     _HabilitaLCD:
  3017                           	callstack 28
  3018                           
  3019                           ;LibLCDXC8.h: 107: LATE1=1;
  3020                           
  3021                           ;incstack = 0
  3022   001472  828D               	bsf	3981,1,c	;volatile
  3023                           
  3024                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3025   001474  0E03               	movlw	3
  3026   001476                     u2167:
  3027   001476  2EE8               	decfsz	wreg,f,c
  3028   001478  D7FE               	bra	u2167
  3029   00147A  F000               	nop	
  3030                           
  3031                           ;LibLCDXC8.h: 110: LATE1=0;
  3032   00147C  928D               	bcf	3981,1,c	;volatile
  3033   00147E  0012               	return		;funcret
  3034   001480                     __end_of_HabilitaLCD:
  3035                           	callstack 0
  3036                           
  3037                           	psect	rparam
  3038   000000                     
  3039                           	psect	idloc
  3040                           
  3041                           ;Config register IDLOC0 @ 0x200000
  3042                           ;	unspecified, using default values
  3043   200000                     	org	2097152
  3044   200000  FF                 	db	255
  3045                           
  3046                           ;Config register IDLOC1 @ 0x200001
  3047                           ;	unspecified, using default values
  3048   200001                     	org	2097153
  3049   200001  FF                 	db	255
  3050                           
  3051                           ;Config register IDLOC2 @ 0x200002
  3052                           ;	unspecified, using default values
  3053   200002                     	org	2097154
  3054   200002  FF                 	db	255
  3055                           
  3056                           ;Config register IDLOC3 @ 0x200003
  3057                           ;	unspecified, using default values
  3058   200003                     	org	2097155
  3059   200003  FF                 	db	255
  3060                           
  3061                           ;Config register IDLOC4 @ 0x200004
  3062                           ;	unspecified, using default values
  3063   200004                     	org	2097156
  3064   200004  FF                 	db	255
  3065                           
  3066                           ;Config register IDLOC5 @ 0x200005
  3067                           ;	unspecified, using default values
  3068   200005                     	org	2097157
  3069   200005  FF                 	db	255
  3070                           
  3071                           ;Config register IDLOC6 @ 0x200006
  3072                           ;	unspecified, using default values
  3073   200006                     	org	2097158
  3074   200006  FF                 	db	255
  3075                           
  3076                           ;Config register IDLOC7 @ 0x200007
  3077                           ;	unspecified, using default values
  3078   200007                     	org	2097159
  3079   200007  FF                 	db	255
  3080                           
  3081                           	psect	config
  3082                           
  3083                           ;Config register CONFIG1L @ 0x300000
  3084                           ;	unspecified, using default values
  3085                           ;	PLL Prescaler Selection bits
  3086                           ;	PLLDIV = 0x0, unprogrammed default
  3087                           ;	System Clock Postscaler Selection bits
  3088                           ;	CPUDIV = 0x0, unprogrammed default
  3089                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3090                           ;	USBDIV = 0x0, unprogrammed default
  3091   300000                     	org	3145728
  3092   300000  00                 	db	0
  3093                           
  3094                           ;Config register CONFIG1H @ 0x300001
  3095                           ;	Oscillator Selection bits
  3096                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3097                           ;	Fail-Safe Clock Monitor Enable bit
  3098                           ;	FCMEN = 0x0, unprogrammed default
  3099                           ;	Internal/External Oscillator Switchover bit
  3100                           ;	IESO = 0x0, unprogrammed default
  3101   300001                     	org	3145729
  3102   300001  09                 	db	9
  3103                           
  3104                           ;Config register CONFIG2L @ 0x300002
  3105                           ;	unspecified, using default values
  3106                           ;	Power-up Timer Enable bit
  3107                           ;	PWRT = 0x1, unprogrammed default
  3108                           ;	Brown-out Reset Enable bits
  3109                           ;	BOR = 0x3, unprogrammed default
  3110                           ;	Brown-out Reset Voltage bits
  3111                           ;	BORV = 0x3, unprogrammed default
  3112                           ;	USB Voltage Regulator Enable bit
  3113                           ;	VREGEN = 0x0, unprogrammed default
  3114   300002                     	org	3145730
  3115   300002  1F                 	db	31
  3116                           
  3117                           ;Config register CONFIG2H @ 0x300003
  3118                           ;	Watchdog Timer Enable bit
  3119                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3120                           ;	Watchdog Timer Postscale Select bits
  3121                           ;	WDTPS = 0xF, unprogrammed default
  3122   300003                     	org	3145731
  3123   300003  1E                 	db	30
  3124                           
  3125                           ; Padding undefined space
  3126   300004                     	org	3145732
  3127   300004  FF                 	db	255
  3128                           
  3129                           ;Config register CONFIG3H @ 0x300005
  3130                           ;	unspecified, using default values
  3131                           ;	CCP2 MUX bit
  3132                           ;	CCP2MX = 0x1, unprogrammed default
  3133                           ;	PORTB A/D Enable bit
  3134                           ;	PBADEN = 0x1, unprogrammed default
  3135                           ;	Low-Power Timer 1 Oscillator Enable bit
  3136                           ;	LPT1OSC = 0x0, unprogrammed default
  3137                           ;	MCLR Pin Enable bit
  3138                           ;	MCLRE = 0x1, unprogrammed default
  3139   300005                     	org	3145733
  3140   300005  83                 	db	131
  3141                           
  3142                           ;Config register CONFIG4L @ 0x300006
  3143                           ;	unspecified, using default values
  3144                           ;	Stack Full/Underflow Reset Enable bit
  3145                           ;	STVREN = 0x1, unprogrammed default
  3146                           ;	Single-Supply ICSP Enable bit
  3147                           ;	LVP = 0x1, unprogrammed default
  3148                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3149                           ;	ICPRT = 0x0, unprogrammed default
  3150                           ;	Extended Instruction Set Enable bit
  3151                           ;	XINST = 0x0, unprogrammed default
  3152                           ;	Background Debugger Enable bit
  3153                           ;	DEBUG = 0x1, unprogrammed default
  3154   300006                     	org	3145734
  3155   300006  85                 	db	133
  3156                           
  3157                           ; Padding undefined space
  3158   300007                     	org	3145735
  3159   300007  FF                 	db	255
  3160                           
  3161                           ;Config register CONFIG5L @ 0x300008
  3162                           ;	unspecified, using default values
  3163                           ;	Code Protection bit
  3164                           ;	CP0 = 0x1, unprogrammed default
  3165                           ;	Code Protection bit
  3166                           ;	CP1 = 0x1, unprogrammed default
  3167                           ;	Code Protection bit
  3168                           ;	CP2 = 0x1, unprogrammed default
  3169                           ;	Code Protection bit
  3170                           ;	CP3 = 0x1, unprogrammed default
  3171   300008                     	org	3145736
  3172   300008  0F                 	db	15
  3173                           
  3174                           ;Config register CONFIG5H @ 0x300009
  3175                           ;	unspecified, using default values
  3176                           ;	Boot Block Code Protection bit
  3177                           ;	CPB = 0x1, unprogrammed default
  3178                           ;	Data EEPROM Code Protection bit
  3179                           ;	CPD = 0x1, unprogrammed default
  3180   300009                     	org	3145737
  3181   300009  C0                 	db	192
  3182                           
  3183                           ;Config register CONFIG6L @ 0x30000A
  3184                           ;	unspecified, using default values
  3185                           ;	Write Protection bit
  3186                           ;	WRT0 = 0x1, unprogrammed default
  3187                           ;	Write Protection bit
  3188                           ;	WRT1 = 0x1, unprogrammed default
  3189                           ;	Write Protection bit
  3190                           ;	WRT2 = 0x1, unprogrammed default
  3191                           ;	Write Protection bit
  3192                           ;	WRT3 = 0x1, unprogrammed default
  3193   30000A                     	org	3145738
  3194   30000A  0F                 	db	15
  3195                           
  3196                           ;Config register CONFIG6H @ 0x30000B
  3197                           ;	unspecified, using default values
  3198                           ;	Configuration Register Write Protection bit
  3199                           ;	WRTC = 0x1, unprogrammed default
  3200                           ;	Boot Block Write Protection bit
  3201                           ;	WRTB = 0x1, unprogrammed default
  3202                           ;	Data EEPROM Write Protection bit
  3203                           ;	WRTD = 0x1, unprogrammed default
  3204   30000B                     	org	3145739
  3205   30000B  E0                 	db	224
  3206                           
  3207                           ;Config register CONFIG7L @ 0x30000C
  3208                           ;	unspecified, using default values
  3209                           ;	Table Read Protection bit
  3210                           ;	EBTR0 = 0x1, unprogrammed default
  3211                           ;	Table Read Protection bit
  3212                           ;	EBTR1 = 0x1, unprogrammed default
  3213                           ;	Table Read Protection bit
  3214                           ;	EBTR2 = 0x1, unprogrammed default
  3215                           ;	Table Read Protection bit
  3216                           ;	EBTR3 = 0x1, unprogrammed default
  3217   30000C                     	org	3145740
  3218   30000C  0F                 	db	15
  3219                           
  3220                           ;Config register CONFIG7H @ 0x30000D
  3221                           ;	unspecified, using default values
  3222                           ;	Boot Block Table Read Protection bit
  3223                           ;	EBTRB = 0x1, unprogrammed default
  3224   30000D                     	org	3145741
  3225   30000D  40                 	db	64
  3226                           tosu	equ	0xFFF
  3227                           tosh	equ	0xFFE
  3228                           tosl	equ	0xFFD
  3229                           stkptr	equ	0xFFC
  3230                           pclatu	equ	0xFFB
  3231                           pclath	equ	0xFFA
  3232                           pcl	equ	0xFF9
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           indf0	equ	0xFEF
  3240                           postinc0	equ	0xFEE
  3241                           postdec0	equ	0xFED
  3242                           preinc0	equ	0xFEC
  3243                           plusw0	equ	0xFEB
  3244                           fsr0h	equ	0xFEA
  3245                           fsr0l	equ	0xFE9
  3246                           wreg	equ	0xFE8
  3247                           indf1	equ	0xFE7
  3248                           postinc1	equ	0xFE6
  3249                           postdec1	equ	0xFE5
  3250                           preinc1	equ	0xFE4
  3251                           plusw1	equ	0xFE3
  3252                           fsr1h	equ	0xFE2
  3253                           fsr1l	equ	0xFE1
  3254                           bsr	equ	0xFE0
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           postdec2	equ	0xFDD
  3258                           preinc2	equ	0xFDC
  3259                           plusw2	equ	0xFDB
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftsub
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16106
                                             56 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lltoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2942
                                              8 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3369
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             41 COMRAM    15    11      4
                            ___ftmul (ARG)
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4459
                                             20 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3962
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3450
                                             26 COMRAM    15     9      6
                           ___ftpack
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___ftmul
     ___ftpack
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
   ___ftsub
   ___fttol
     ___ftmul (ARG)
     ___ftsub (ARG)
     ___lltoft (ARG)
   ___lltoft
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      50       1       84.2%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      28        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 16 08:26:56 2023

                      _i 0046                        _r 003B                       _n1 004A  
                     _n2 0048               EnviaDato@a 0003                       _op 004F  
    ___wmul@multiplicand 0003             ___ftadd@exp1 0014             ___ftadd@exp2 0013  
          ??_LeerTeclado 0001             ___ftadd@sign 0012            _InicializaLCD 1330  
                    l171 115E                      l181 118A                      l173 1166  
                    l168 1156                      l193 11C2                      l185 119E  
                    l177 117A                      l194 11DA                      l195 11CA  
                    l187 11A6                      l179 1182                      l532 0E56  
                    l197 11D2                      l189 11AE                      l681 12D8  
                    l961 126A                      l955 123E                      l957 124E  
                    l965 1274                      l959 1260                      _RB4 7C0C  
                    _RB5 7C0D                      _RB6 7C0E                      _RB7 7C0F  
                    u350 114A                      _n1c 004E                      _n2c 004D  
                    wreg 0FE8                     l1201 116E                     l2001 0A20  
                   l2021 0ABC                     l2005 0A2C                     l2015 0AA8  
                   l2009 0A4A                     l2033 0AF0                     l2051 0C32  
                   l2035 0B0C                     l1229 1192                     l2061 0CB2  
                   l2029 0ADE                     l2039 0BD8                     l2071 0D08  
                   l1257 11B6                     l2065 0CD8                     l2057 0C66  
                   l2073 0D0E                     l2069 0CFE                     l1631 10B6  
                   l1641 1112                     l1633 10D4                     l1713 0E72  
                   l1705 0E28                     l1723 0EA2                     l1707 0E32  
                   l1733 12EA                     l1637 10EA                     l1629 10AC  
                   l1639 1108                     l1671 0D98                     l1831 104C  
                   l1737 1318                     l1753 0EF0                     l1665 0D70  
                   l1809 0FE8                     l1827 103C                     l1851 11E4  
                   l1773 0F4A                     l1693 0DEA                     l1845 107C  
                   l1837 1054                     l1853 11F0                     l1925 08B2  
                   l1783 0F72                     l1759 0F18                     l1695 0DF4  
                   l1839 1060                     l1777 0F5A                     l1697 0DFE  
                   l1865 12A6                     l1787 0F82                     l1867 12AE  
                   l1877 12CE                     l1949 0914                     l1799 1388  
                   l1969 096A                     l1993 09D0                     l1899 085A  
                   l1997 09E6                     l1999 09FE                     STR_1 0812  
                   STR_2 0801                     u1200 111C                     u2000 0BE8  
                   u2010 0BFA                     u1300 0D8A                     u2020 0C0C  
                   u2030 0C42                     u1231 0D30                     u1160 109E  
                   u1400 0E3A                     u2040 0C54                     u1241 0D44  
                   u1330 0DC8                     u2050 0C66                     u2107 0D14  
                   u2117 1244                     u1270 0D62                     _LATB 0F8A  
                   u2127 1250                     _LATD 0F8C                     u2137 1258  
                   u1450 132E                     u1370 0E06                     u2147 1262  
                   u1531 0FCC                     u1540 0FD6                     u2157 126C  
                   u1461 0ED8                     u1550 1006                     u1630 12B2  
                   u2167 1476                     u1481 0F00                     u2097 084A  
                   u1730 08F2                     u1555 0FFE                     u1820 094C  
                   u1590 1066                     u1910 09B2                     u1680 08CA  
                   _RBPU 7F8F           ??_EscribeLCD_c 0004                     _main 081E  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     fsr1l 0FE1  
                   prodh 0FF4                     prodl 0FF3                     start 0000  
           ___ftmul@cntr 0028             ___param_bank 0000             ___ftmul@sign 0029  
           ___fttol@exp1 0038             ___fttol@lval 0034           ?_InicializaLCD 0001  
                  ?_main 0001          __end_of___ftadd 0EC8            EscribeLCD_c@a 0004  
        __end_of___ftmul 0FBC          __end_of___ftsub 13B2          __end_of___fttol 108E  
                  _LATE0 7C68                    _LATE1 7C69          __end_of___lwdiv 12E2  
                  _TRISB 0F93                    _TRISD 0F95                    _TRISE 0F96  
           ___lltoft@exp 0011                    _Tecla 004C      __end_of_LeerTeclado 11DE  
                  _nodec 0043            ___ftpack@sign 0005                    tablat 0FF5  
            _HabilitaLCD 1472                    status 0FD8         __end_of_BorraLCD 1472  
        __initialization 13B2             __end_of_main 0D20                   ??_main 0039  
          ___fttol@sign1 0033            __activetblptr 0002                   _ADCON1 0FC1  
         DireccionaLCD@a 0004         __end_of___ftpack 113C         __end_of___lltoft 123A  
       __end_of___lwtoft 1432    __end_of_DireccionaLCD 145E               _RetardoLCD 123A  
                 ___wmul 13E8                ??___ftadd 000F                ??___ftmul 0021  
              ??___ftsub 001B                ??___fttol 002E                ??___lwdiv 0005  
        ??_InicializaLCD 0004                   clear_0 13D8                   isa$std 0001  
   __end_of_EscribeLCD_c 1448              _LeerTeclado 113C    ___ftmul@f3_as_product 0025  
           __pdataCOMRAM 004D             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 13DE               ___ftadd@f1 0009               ___ftadd@f2 000C  
          ___rparam_used 0001               ___ftmul@f1 001B               ___ftmul@f2 001E  
             ___ftsub@f1 0015               ___ftsub@f2 0018               ___fttol@f1 002A  
         __pcstackCOMRAM 0001               ___lltoft@c 0009        __end_of_EnviaDato 1488  
             ___lwtoft@c 0009                ?_BorraLCD 0001              ?_RetardoLCD 0001  
            RetardoLCD@a 0002                  ?___wmul 0001                ?___ftpack 0001  
              ?___lltoft 0009                ?___lwtoft 0009               ??_BorraLCD 0004  
      ??_MensajeLCD_Word 0006             ?_HabilitaLCD 0001                  __Hparam 0000  
                __Lparam 0000                  ___ftadd 0D20                  ___ftmul 0EC8  
                ___ftsub 1372                  ___fttol 0FBC                  ___lwdiv 1290  
           __psmallconst 0800                  __pcinit 13B2               ??___ftpack 0006  
                __ramtop 0800               ??___lltoft 000D                  __ptext0 081E  
                __ptext1 13E8                  __ptext2 140E                  __ptext3 1290  
                __ptext4 11DE                  __ptext5 0FBC                  __ptext6 1372  
                __ptext7 0D20                  __ptext8 0EC8                  __ptext9 108E  
             ??___lwtoft 000C     end_of_initialization 13DE            __Lmediumconst 0000  
           _EscribeLCD_c 1432                  postdec1 0FE5                  postinc0 0FEE  
           ?_LeerTeclado 0001              ___ftmul@exp 0024           __end_of___wmul 140E  
          __pidataCOMRAM 1488    __end_of_InicializaLCD 1372                _EnviaDato 1480  
    start_initialization 13B2             ??_RetardoLCD 0001                 ??___wmul 0005  
        _MensajeLCD_Word 12E2               ?_EnviaDato 0001              __pbssCOMRAM 003B  
     __end_of_RetardoLCD 1290         MensajeLCD_Word@a 0005         MensajeLCD_Word@i 0007  
          _DireccionaLCD 1448         ___lwdiv@dividend 0001                 ?___ftadd 0009  
               ?___ftmul 001B                 ?___ftsub 0015                 ?___fttol 002A  
               ?___lwdiv 0001              __smallconst 0800         ___lwdiv@quotient 0005  
         ___wmul@product 0005           ?_DireccionaLCD 0001  __end_of_MensajeLCD_Word 1330  
      ___wmul@multiplier 0001              ??_EnviaDato 0003                 _BorraLCD 145E  
              copy_data0 13C6                 __Hrparam 0000                 __Lrparam 0000  
               ___ftpack 108E                 ___lltoft 11DE                 ___lwtoft 140E  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 12E2  
               __ptext11 1432                 __ptext12 113C                 __ptext13 1330  
               __ptext14 145E                 __ptext15 1448                 __ptext16 1480  
               __ptext17 123A                 __ptext18 1472          ??_DireccionaLCD 0004  
               _interfaz 0050                 _partdecl 003F                 isa$xinst 0000  
       ?_MensajeLCD_Word 0005            ??_HabilitaLCD 0001            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 1480  

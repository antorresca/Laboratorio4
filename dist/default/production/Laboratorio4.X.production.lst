

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 20:01:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.40
    32                           ; Generated 04/07/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   001124                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _n2c
    72   001124  20                 	db	32
    73                           
    74                           ;initializer for _n1c
    75   001125  20                 	db	32
    76                           
    77                           ;initializer for _op
    78   001126  20                 	db	32
    79                           
    80                           ;initializer for _interfaz
    81   001127  08                 	db	8
    82   000000                     _LATC	set	3979
    83   000000                     _TRISC	set	3988
    84   000000                     _LATE2	set	31850
    85   000000                     _RB7	set	31759
    86   000000                     _RB6	set	31758
    87   000000                     _RB5	set	31757
    88   000000                     _LATE1	set	31849
    89   000000                     _LATB	set	3978
    90   000000                     _LATD	set	3980
    91   000000                     _RB4	set	31756
    92   000000                     _TRISB	set	3987
    93   000000                     _TRISD	set	3989
    94   000000                     _ADCON1	set	4033
    95   000000                     _LATE0	set	31848
    96   000000                     _RBPU	set	32655
    97   000000                     _TRISE	set	3990
    98                           
    99                           	psect	smallconst
   100   000800                     __psmallconst:
   101                           	callstack 0
   102   000800  00                 	db	0
   103   000801                     STR_2:
   104   000801  20                 	db	32
   105   000802  20                 	db	32
   106   000803  20                 	db	32
   107   000804  20                 	db	32
   108   000805  20                 	db	32
   109   000806  20                 	db	32
   110   000807  20                 	db	32
   111   000808  20                 	db	32
   112   000809  20                 	db	32
   113   00080A  20                 	db	32
   114   00080B  20                 	db	32
   115   00080C  20                 	db	32
   116   00080D  20                 	db	32
   117   00080E  20                 	db	32
   118   00080F  20                 	db	32
   119   000810  20                 	db	32
   120   000811  00                 	db	0
   121   000812                     STR_1:
   122   000812  48                 	db	72	;'H'
   123   000813  6F                 	db	111	;'o'
   124   000814  6C                 	db	108	;'l'
   125   000815  61                 	db	97	;'a'
   126   000816  20                 	db	32
   127   000817  6D                 	db	109	;'m'
   128   000818  75                 	db	117	;'u'
   129   000819  6E                 	db	110	;'n'
   130   00081A  64                 	db	100	;'d'
   131   00081B  6F                 	db	111	;'o'
   132   00081C  00                 	db	0
   133   00081D  00                 	db	0	; dummy byte at the end
   134   000000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138   00103C                     __pcinit:
   139                           	callstack 0
   140   00103C                     start_initialization:
   141                           	callstack 0
   142   00103C                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (4 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147   00103C  0E24               	movlw	low __pidataCOMRAM
   148   00103E  6EF6               	movwf	tblptrl,c
   149   001040  0E11               	movlw	high __pidataCOMRAM
   150   001042  6EF7               	movwf	tblptrh,c
   151   001044  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152   001046  6EF8               	movwf	tblptru,c
   153   001048  EE00  F029         	lfsr	0,__pdataCOMRAM
   154   00104C  EE10 F004          	lfsr	1,4
   155   001050                     copy_data0:
   156   001050  0009               	tblrd		*+
   157   001052  CFF5 FFEE          	movff	tablat,postinc0
   158   001056  50E5               	movf	postdec1,w,c
   159   001058  50E1               	movf	fsr1l,w,c
   160   00105A  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to COMRAM (21 bytes)
   163   00105C  EE00  F001         	lfsr	0,__pbssCOMRAM
   164   001060  0E15               	movlw	21
   165   001062                     clear_0:
   166   001062  6AEE               	clrf	postinc0,c
   167   001064  06E8               	decf	wreg,f,c
   168   001066  E1FD               	bnz	clear_0
   169   001068                     end_of_initialization:
   170                           	callstack 0
   171   001068                     __end_of__initialization:
   172                           	callstack 0
   173   001068  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174   00106A  6EF8               	movwf	tblptru,c
   175   00106C  0100               	movlb	0
   176   00106E  EF0F  F004         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   000001                     __pbssCOMRAM:
   180                           	callstack 0
   181   000001                     _r:
   182                           	callstack 0
   183   000001                     	ds	4
   184   000005                     _partdecl:
   185                           	callstack 0
   186   000005                     	ds	4
   187   000009                     _color:
   188                           	callstack 0
   189   000009                     	ds	2
   190   00000B                     _i:
   191                           	callstack 0
   192   00000B                     	ds	2
   193   00000D                     _n2:
   194                           	callstack 0
   195   00000D                     	ds	2
   196   00000F                     _n1:
   197                           	callstack 0
   198   00000F                     	ds	2
   199   000011                     _Tecla:
   200                           	callstack 0
   201   000011                     	ds	1
   202   000012                     _m:
   203                           	callstack 0
   204   000012                     	ds	4
   205                           
   206                           	psect	dataCOMRAM
   207   000029                     __pdataCOMRAM:
   208                           	callstack 0
   209   000029                     _n2c:
   210                           	callstack 0
   211   000029                     	ds	1
   212   00002A                     _n1c:
   213                           	callstack 0
   214   00002A                     	ds	1
   215   00002B                     _op:
   216                           	callstack 0
   217   00002B                     	ds	1
   218   00002C                     _interfaz:
   219                           	callstack 0
   220   00002C                     	ds	1
   221                           
   222                           	psect	cstackCOMRAM
   223   000016                     __pcstackCOMRAM:
   224                           	callstack 0
   225   000016                     ??_RetardoLCD:
   226   000016                     ??_ColorRGB:
   227   000016                     ?___wmul:
   228                           	callstack 0
   229   000016                     ?___lwmod:
   230                           	callstack 0
   231   000016                     ?___lmul:
   232                           	callstack 0
   233   000016                     ___wmul@multiplier:
   234                           	callstack 0
   235   000016                     ___lwmod@dividend:
   236                           	callstack 0
   237   000016                     ___lmul@multiplier:
   238                           	callstack 0
   239                           
   240                           ; 4 bytes @ 0x0
   241   000016                     	ds	1
   242   000017                     RetardoLCD@a:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x1
   246   000017                     	ds	1
   247   000018                     EnviaDato@a:
   248                           	callstack 0
   249   000018                     ___wmul@multiplicand:
   250                           	callstack 0
   251   000018                     ___lwmod@divisor:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255   000018                     	ds	1
   256   000019                     EscribeLCD_c@a:
   257                           	callstack 0
   258   000019                     DireccionaLCD@a:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x3
   262   000019                     	ds	1
   263   00001A                     MensajeLCD_Word@a:
   264                           	callstack 0
   265   00001A                     ___lwmod@counter:
   266                           	callstack 0
   267   00001A                     ___wmul@product:
   268                           	callstack 0
   269   00001A                     ___lmul@multiplicand:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x4
   273   00001A                     	ds	1
   274   00001B                     ??_MensajeLCD_Word:
   275                           
   276                           ; 1 bytes @ 0x5
   277   00001B                     	ds	1
   278   00001C                     ?___lwdiv:
   279                           	callstack 0
   280   00001C                     MensajeLCD_Word@i:
   281                           	callstack 0
   282   00001C                     ___lwdiv@dividend:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x6
   286   00001C                     	ds	2
   287   00001E                     ___lwdiv@divisor:
   288                           	callstack 0
   289   00001E                     ___lmul@product:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x8
   293   00001E                     	ds	2
   294   000020                     ___lwdiv@quotient:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0xA
   298   000020                     	ds	2
   299   000022                     ___lwdiv@counter:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xC
   303   000022                     	ds	1
   304   000023                     ??_main:
   305                           
   306                           ; 1 bytes @ 0xD
   307   000023                     	ds	4
   308   000027                     main@i:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x11
   312   000027                     	ds	2
   313                           
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 22 in file "Laboratorio4.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  i               2   17[COMRAM] int 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   333 ;;      Params:         0       0       0       0       0       0       0       0       0
   334 ;;      Locals:         2       0       0       0       0       0       0       0       0
   335 ;;      Temps:          4       0       0       0       0       0       0       0       0
   336 ;;      Totals:         6       0       0       0       0       0       0       0       0
   337 ;;Total ram usage:        6 bytes
   338 ;; Hardware stack levels required when called: 4
   339 ;; This function calls:
   340 ;;		_BorraLCD
   341 ;;		_ColorRGB
   342 ;;		_DireccionaLCD
   343 ;;		_EscribeLCD_c
   344 ;;		_InicializaLCD
   345 ;;		_LeerTeclado
   346 ;;		_MensajeLCD_Word
   347 ;;		___lmul
   348 ;;		___lwdiv
   349 ;;		___lwmod
   350 ;;		___wmul
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357   00081E                     __ptext0:
   358                           	callstack 0
   359   00081E                     _main:
   360                           	callstack 27
   361                           
   362                           ;Laboratorio4.c: 23: ADCON1=15;
   363                           
   364                           ;incstack = 0
   365   00081E  0E0F               	movlw	15
   366   000820  6EC1               	movwf	193,c	;volatile
   367                           
   368                           ;Laboratorio4.c: 24: TRISD=0;
   369   000822  0E00               	movlw	0
   370   000824  6E95               	movwf	149,c	;volatile
   371                           
   372                           ;Laboratorio4.c: 25: TRISB=0b11110000;
   373   000826  0EF0               	movlw	240
   374   000828  6E93               	movwf	147,c	;volatile
   375                           
   376                           ;Laboratorio4.c: 26: TRISE=0;
   377   00082A  0E00               	movlw	0
   378   00082C  6E96               	movwf	150,c	;volatile
   379                           
   380                           ;Laboratorio4.c: 27: TRISC=0;
   381   00082E  0E00               	movlw	0
   382   000830  6E94               	movwf	148,c	;volatile
   383                           
   384                           ;Laboratorio4.c: 28: RBPU=0;
   385   000832  9EF1               	bcf	4081,7,c	;volatile
   386                           
   387                           ;Laboratorio4.c: 29: InicializaLCD();
   388   000834  ECFD  F007         	call	_InicializaLCD	;wreg free
   389                           
   390                           ;Laboratorio4.c: 30: BorraLCD();
   391   000838  EC7D  F008         	call	_BorraLCD	;wreg free
   392                           
   393                           ;Laboratorio4.c: 31: MensajeLCD_Word("Hola mundo");
   394   00083C  0E12               	movlw	low STR_1
   395   00083E  6E1A               	movwf	MensajeLCD_Word@a^0,c
   396   000840  EC39  F008         	call	_MensajeLCD_Word	;wreg free
   397                           
   398                           ;Laboratorio4.c: 32: _delay((unsigned long)((2000)*(1000000/4000.0)));
   399   000844  0E03               	movlw	3
   400   000846  6E24               	movwf	(??_main+1)^0,c
   401   000848  0E8A               	movlw	138
   402   00084A  6E23               	movwf	??_main^0,c
   403   00084C  0E56               	movlw	86
   404   00084E                     u1427:
   405   00084E  2EE8               	decfsz	wreg,f,c
   406   000850  D7FE               	bra	u1427
   407   000852  2E23               	decfsz	??_main^0,f,c
   408   000854  D7FC               	bra	u1427
   409   000856  2E24               	decfsz	(??_main+1)^0,f,c
   410   000858  D7FA               	bra	u1427
   411                           
   412                           ;Laboratorio4.c: 33: BorraLCD();
   413   00085A  EC7D  F008         	call	_BorraLCD	;wreg free
   414   00085E                     l1604:
   415                           
   416                           ;Laboratorio4.c: 35: LATB=0B00000000;
   417   00085E  0E00               	movlw	0
   418   000860  6E8A               	movwf	138,c	;volatile
   419                           
   420                           ;Laboratorio4.c: 36: Tecla = LeerTeclado();
   421   000862  ECCD  F006         	call	_LeerTeclado	;wreg free
   422   000866  6E11               	movwf	_Tecla^0,c
   423                           
   424                           ;Laboratorio4.c: 37: ColorRGB();
   425   000868  EC1E  F007         	call	_ColorRGB	;wreg free
   426                           
   427                           ;Laboratorio4.c: 38: if(Tecla=='C'){
   428   00086C  0E43               	movlw	67
   429   00086E  1811               	xorwf	_Tecla^0,w,c
   430   000870  A4D8               	btfss	status,2,c
   431   000872  D02B               	goto	l1636
   432                           
   433                           ;Laboratorio4.c: 39: DireccionaLCD(0xC0);
   434   000874  0EC0               	movlw	192
   435   000876  EC72  F008         	call	_DireccionaLCD
   436                           
   437                           ;Laboratorio4.c: 41: op = ' ';
   438   00087A  0E20               	movlw	32
   439   00087C  6E2B               	movwf	_op^0,c
   440                           
   441                           ;Laboratorio4.c: 42: n1c = ' ';
   442   00087E  0E20               	movlw	32
   443   000880  6E2A               	movwf	_n1c^0,c
   444                           
   445                           ;Laboratorio4.c: 43: n2c = ' ';
   446   000882  0E20               	movlw	32
   447   000884  6E29               	movwf	_n2c^0,c
   448                           
   449                           ;Laboratorio4.c: 44: n1 = 0;
   450   000886  0E00               	movlw	0
   451   000888  6E10               	movwf	(_n1+1)^0,c
   452   00088A  0E00               	movlw	0
   453   00088C  6E0F               	movwf	_n1^0,c
   454                           
   455                           ;Laboratorio4.c: 45: n2 = 0;
   456   00088E  0E00               	movlw	0
   457   000890  6E0E               	movwf	(_n2+1)^0,c
   458   000892  0E00               	movlw	0
   459   000894  6E0D               	movwf	_n2^0,c
   460                           
   461                           ;Laboratorio4.c: 46: i = 0;
   462   000896  0E00               	movlw	0
   463   000898  6E0C               	movwf	(_i+1)^0,c
   464   00089A  0E00               	movlw	0
   465   00089C  6E0B               	movwf	_i^0,c
   466                           
   467                           ;Laboratorio4.c: 47: partdecl = 0;
   468   00089E  0E00               	movlw	0
   469   0008A0  6E05               	movwf	_partdecl^0,c
   470   0008A2  0E00               	movlw	0
   471   0008A4  6E06               	movwf	(_partdecl+1)^0,c
   472   0008A6  0E00               	movlw	0
   473   0008A8  6E07               	movwf	(_partdecl+2)^0,c
   474   0008AA  0E00               	movlw	0
   475   0008AC  6E08               	movwf	(_partdecl+3)^0,c
   476                           
   477                           ;Laboratorio4.c: 48: DireccionaLCD(0x80);
   478   0008AE  0E80               	movlw	128
   479   0008B0  EC72  F008         	call	_DireccionaLCD
   480                           
   481                           ;Laboratorio4.c: 49: MensajeLCD_Word("                ");
   482   0008B4  0E01               	movlw	low STR_2
   483   0008B6  6E1A               	movwf	MensajeLCD_Word@a^0,c
   484   0008B8  EC39  F008         	call	_MensajeLCD_Word	;wreg free
   485                           
   486                           ;Laboratorio4.c: 50: DireccionaLCD(0xC0);
   487   0008BC  0EC0               	movlw	192
   488   0008BE  EC72  F008         	call	_DireccionaLCD
   489                           
   490                           ;Laboratorio4.c: 51: DireccionaLCD(0x80);
   491   0008C2  0E80               	movlw	128
   492   0008C4  EC72  F008         	call	_DireccionaLCD
   493                           
   494                           ;Laboratorio4.c: 52: }else{
   495   0008C8  D7CA               	goto	l1604
   496   0008CA                     l1636:
   497                           
   498                           ;Laboratorio4.c: 53: if(n1c==' '|n2c==' '|op==' '){
   499   0008CA  0E20               	movlw	32
   500   0008CC  182A               	xorwf	_n1c^0,w,c
   501   0008CE  B4D8               	btfsc	status,2,c
   502   0008D0  D008               	goto	u940
   503   0008D2  0E20               	movlw	32
   504   0008D4  1829               	xorwf	_n2c^0,w,c
   505   0008D6  B4D8               	btfsc	status,2,c
   506   0008D8  D004               	goto	u940
   507   0008DA  0E20               	movlw	32
   508   0008DC  182B               	xorwf	_op^0,w,c
   509   0008DE  A4D8               	btfss	status,2,c
   510   0008E0  D083               	goto	l1704
   511   0008E2                     u940:
   512                           
   513                           ;Laboratorio4.c: 54: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   514   0008E2  0E20               	movlw	32
   515   0008E4  182B               	xorwf	_op^0,w,c
   516   0008E6  A4D8               	btfss	status,2,c
   517   0008E8  D021               	goto	l1660
   518   0008EA  0E2B               	movlw	43
   519   0008EC  1811               	xorwf	_Tecla^0,w,c
   520   0008EE  B4D8               	btfsc	status,2,c
   521   0008F0  D00C               	goto	u990
   522   0008F2  0E2D               	movlw	45
   523   0008F4  1811               	xorwf	_Tecla^0,w,c
   524   0008F6  B4D8               	btfsc	status,2,c
   525   0008F8  D008               	goto	u990
   526   0008FA  0E2F               	movlw	47
   527   0008FC  1811               	xorwf	_Tecla^0,w,c
   528   0008FE  B4D8               	btfsc	status,2,c
   529   000900  D004               	goto	u990
   530   000902  0E78               	movlw	120
   531   000904  1811               	xorwf	_Tecla^0,w,c
   532   000906  A4D8               	btfss	status,2,c
   533   000908  D011               	goto	l1660
   534   00090A                     u990:
   535   00090A  0E20               	movlw	32
   536   00090C  182A               	xorwf	_n1c^0,w,c
   537   00090E  B4D8               	btfsc	status,2,c
   538   000910  D00D               	goto	l1660
   539   000912  0E20               	movlw	32
   540   000914  1829               	xorwf	_n2c^0,w,c
   541   000916  A4D8               	btfss	status,2,c
   542   000918  D009               	goto	l1660
   543                           
   544                           ;Laboratorio4.c: 55: DireccionaLCD(0x81);
   545   00091A  0E81               	movlw	129
   546   00091C  EC72  F008         	call	_DireccionaLCD
   547                           
   548                           ;Laboratorio4.c: 56: EscribeLCD_c(Tecla);
   549   000920  5011               	movf	_Tecla^0,w,c
   550   000922  EC67  F008         	call	_EscribeLCD_c
   551                           
   552                           ;Laboratorio4.c: 57: op = Tecla;
   553   000926  C011  F02B         	movff	_Tecla,_op
   554                           
   555                           ;Laboratorio4.c: 58: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   556   00092A  D22E               	goto	l1812
   557   00092C                     l1660:
   558   00092C  0E20               	movlw	32
   559   00092E  182A               	xorwf	_n1c^0,w,c
   560   000930  A4D8               	btfss	status,2,c
   561   000932  D027               	goto	l1680
   562   000934  0E2B               	movlw	43
   563   000936  1811               	xorwf	_Tecla^0,w,c
   564   000938  A4D8               	btfss	status,2,c
   565   00093A  D014               	goto	u1080
   566   00093C  0E2D               	movlw	45
   567   00093E  1811               	xorwf	_Tecla^0,w,c
   568   000940  A4D8               	btfss	status,2,c
   569   000942  D010               	goto	u1080
   570   000944  0E2F               	movlw	47
   571   000946  1811               	xorwf	_Tecla^0,w,c
   572   000948  A4D8               	btfss	status,2,c
   573   00094A  D00C               	goto	u1080
   574   00094C  0E78               	movlw	120
   575   00094E  1811               	xorwf	_Tecla^0,w,c
   576   000950  A4D8               	btfss	status,2,c
   577   000952  D008               	goto	u1080
   578   000954  0E3D               	movlw	61
   579   000956  1811               	xorwf	_Tecla^0,w,c
   580   000958  A4D8               	btfss	status,2,c
   581   00095A  D004               	goto	u1080
   582   00095C  0E43               	movlw	67
   583   00095E  1811               	xorwf	_Tecla^0,w,c
   584   000960  B4D8               	btfsc	status,2,c
   585   000962  D00F               	goto	l1680
   586   000964                     u1080:
   587                           
   588                           ;Laboratorio4.c: 59: DireccionaLCD(0x80);
   589   000964  0E80               	movlw	128
   590   000966  EC72  F008         	call	_DireccionaLCD
   591                           
   592                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   593   00096A  5011               	movf	_Tecla^0,w,c
   594   00096C  EC67  F008         	call	_EscribeLCD_c
   595                           
   596                           ;Laboratorio4.c: 61: n1c=Tecla;
   597   000970  C011  F02A         	movff	_Tecla,_n1c
   598                           
   599                           ;Laboratorio4.c: 62: n1 = Tecla-'0';
   600   000974  0ED0               	movlw	208
   601   000976  2411               	addwf	_Tecla^0,w,c
   602   000978  6E0F               	movwf	_n1^0,c
   603   00097A  6A10               	clrf	(_n1+1)^0,c
   604   00097C  0EFF               	movlw	255
   605   00097E  2210               	addwfc	(_n1+1)^0,f,c
   606                           
   607                           ;Laboratorio4.c: 63: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   608   000980  D203               	goto	l1812
   609   000982                     l1680:
   610   000982  0E20               	movlw	32
   611   000984  1829               	xorwf	_n2c^0,w,c
   612   000986  A4D8               	btfss	status,2,c
   613   000988  D1FF               	goto	l1812
   614   00098A  0E20               	movlw	32
   615   00098C  182B               	xorwf	_op^0,w,c
   616   00098E  B4D8               	btfsc	status,2,c
   617   000990  D1FB               	goto	l1812
   618   000992  0E20               	movlw	32
   619   000994  182A               	xorwf	_n1c^0,w,c
   620   000996  B4D8               	btfsc	status,2,c
   621   000998  D1F7               	goto	l1812
   622   00099A  0E2B               	movlw	43
   623   00099C  1811               	xorwf	_Tecla^0,w,c
   624   00099E  A4D8               	btfss	status,2,c
   625   0009A0  D014               	goto	u1170
   626   0009A2  0E2D               	movlw	45
   627   0009A4  1811               	xorwf	_Tecla^0,w,c
   628   0009A6  A4D8               	btfss	status,2,c
   629   0009A8  D010               	goto	u1170
   630   0009AA  0E2F               	movlw	47
   631   0009AC  1811               	xorwf	_Tecla^0,w,c
   632   0009AE  A4D8               	btfss	status,2,c
   633   0009B0  D00C               	goto	u1170
   634   0009B2  0E78               	movlw	120
   635   0009B4  1811               	xorwf	_Tecla^0,w,c
   636   0009B6  A4D8               	btfss	status,2,c
   637   0009B8  D008               	goto	u1170
   638   0009BA  0E3D               	movlw	61
   639   0009BC  1811               	xorwf	_Tecla^0,w,c
   640   0009BE  A4D8               	btfss	status,2,c
   641   0009C0  D004               	goto	u1170
   642   0009C2  0E43               	movlw	67
   643   0009C4  1811               	xorwf	_Tecla^0,w,c
   644   0009C6  B4D8               	btfsc	status,2,c
   645   0009C8  D1DF               	goto	l1812
   646   0009CA                     u1170:
   647                           
   648                           ;Laboratorio4.c: 64: DireccionaLCD(0x82);
   649   0009CA  0E82               	movlw	130
   650   0009CC  EC72  F008         	call	_DireccionaLCD
   651                           
   652                           ;Laboratorio4.c: 65: EscribeLCD_c(Tecla);
   653   0009D0  5011               	movf	_Tecla^0,w,c
   654   0009D2  EC67  F008         	call	_EscribeLCD_c
   655                           
   656                           ;Laboratorio4.c: 66: n2c=Tecla;
   657   0009D6  C011  F029         	movff	_Tecla,_n2c
   658                           
   659                           ;Laboratorio4.c: 67: n2 = Tecla-'0';
   660   0009DA  0ED0               	movlw	208
   661   0009DC  2411               	addwf	_Tecla^0,w,c
   662   0009DE  6E0D               	movwf	_n2^0,c
   663   0009E0  6A0E               	clrf	(_n2+1)^0,c
   664   0009E2  0EFF               	movlw	255
   665   0009E4  220E               	addwfc	(_n2+1)^0,f,c
   666                           
   667                           ;Laboratorio4.c: 68: };Laboratorio4.c: 69: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   668   0009E6  D1D0               	goto	l1812
   669   0009E8                     l1704:
   670   0009E8  0E3D               	movlw	61
   671   0009EA  1811               	xorwf	_Tecla^0,w,c
   672   0009EC  A4D8               	btfss	status,2,c
   673   0009EE  D1C9               	goto	l1810
   674   0009F0  0E20               	movlw	32
   675   0009F2  1829               	xorwf	_n2c^0,w,c
   676   0009F4  B4D8               	btfsc	status,2,c
   677   0009F6  D1C5               	goto	l1810
   678   0009F8  0E20               	movlw	32
   679   0009FA  182B               	xorwf	_op^0,w,c
   680   0009FC  B4D8               	btfsc	status,2,c
   681   0009FE  D1C1               	goto	l1810
   682   000A00  0E20               	movlw	32
   683   000A02  182A               	xorwf	_n1c^0,w,c
   684   000A04  B4D8               	btfsc	status,2,c
   685   000A06  D1BD               	goto	l1810
   686                           
   687                           ;Laboratorio4.c: 70: DireccionaLCD(0x83);
   688   000A08  0E83               	movlw	131
   689   000A0A  EC72  F008         	call	_DireccionaLCD
   690                           
   691                           ;Laboratorio4.c: 71: EscribeLCD_c('=');
   692   000A0E  0E3D               	movlw	61
   693   000A10  EC67  F008         	call	_EscribeLCD_c
   694                           
   695                           ;Laboratorio4.c: 72: switch(op){
   696   000A14  D093               	goto	l1752
   697   000A16                     l1714:
   698                           
   699                           ;Laboratorio4.c: 74: r = n1 + n2;
   700   000A16  500D               	movf	_n2^0,w,c
   701   000A18  240F               	addwf	_n1^0,w,c
   702   000A1A  6E23               	movwf	??_main^0,c
   703   000A1C  500E               	movf	(_n2+1)^0,w,c
   704   000A1E  2010               	addwfc	(_n1+1)^0,w,c
   705   000A20  6E24               	movwf	(??_main+1)^0,c
   706   000A22  C023  F001         	movff	??_main,_r
   707   000A26  C024  F002         	movff	??_main+1,_r+1
   708   000A2A  6A03               	clrf	(_r+2)^0,c
   709   000A2C  6A04               	clrf	(_r+3)^0,c
   710   000A2E                     l1716:
   711                           
   712                           ;Laboratorio4.c: 75: partdecl = r*100;
   713   000A2E  C001  F016         	movff	_r,___lmul@multiplier
   714   000A32  C002  F017         	movff	_r+1,___lmul@multiplier+1
   715   000A36  C003  F018         	movff	_r+2,___lmul@multiplier+2
   716   000A3A  C004  F019         	movff	_r+3,___lmul@multiplier+3
   717   000A3E  0E64               	movlw	100
   718   000A40  6E1A               	movwf	___lmul@multiplicand^0,c
   719   000A42  0E00               	movlw	0
   720   000A44  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   721   000A46  0E00               	movlw	0
   722   000A48  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   723   000A4A  0E00               	movlw	0
   724   000A4C  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   725   000A4E  EC5D  F007         	call	___lmul	;wreg free
   726   000A52  C016  F005         	movff	?___lmul,_partdecl
   727   000A56  C017  F006         	movff	?___lmul+1,_partdecl+1
   728   000A5A  C018  F007         	movff	?___lmul+2,_partdecl+2
   729   000A5E  C019  F008         	movff	?___lmul+3,_partdecl+3
   730                           
   731                           ;Laboratorio4.c: 76: break;
   732   000A62  D07A               	goto	l1754
   733   000A64                     l1718:
   734                           
   735                           ;Laboratorio4.c: 78: r = n1 - n2;
   736   000A64  500D               	movf	_n2^0,w,c
   737   000A66  5C0F               	subwf	_n1^0,w,c
   738   000A68  6E23               	movwf	??_main^0,c
   739   000A6A  500E               	movf	(_n2+1)^0,w,c
   740   000A6C  5810               	subwfb	(_n1+1)^0,w,c
   741   000A6E  D7D8               	goto	L1
   742   000A70                     l1722:
   743                           
   744                           ;Laboratorio4.c: 82: r = n1*n2;
   745   000A70  C00F  F016         	movff	_n1,___wmul@multiplier
   746   000A74  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   747   000A78  C00D  F018         	movff	_n2,___wmul@multiplicand
   748   000A7C  C00E  F019         	movff	_n2+1,___wmul@multiplicand+1
   749   000A80  EC54  F008         	call	___wmul	;wreg free
   750   000A84  C016  F001         	movff	?___wmul,_r
   751   000A88  C017  F002         	movff	?___wmul+1,_r+1
   752   000A8C  D7CE               	goto	L2
   753   000A8E                     l1726:
   754                           
   755                           ;Laboratorio4.c: 86: if(n2!=0){
   756   000A8E  500D               	movf	_n2^0,w,c
   757   000A90  100E               	iorwf	(_n2+1)^0,w,c
   758   000A92  B4D8               	btfsc	status,2,c
   759   000A94  D02F               	goto	l1734
   760                           
   761                           ;Laboratorio4.c: 87: if(n1!=0){
   762   000A96  500F               	movf	_n1^0,w,c
   763   000A98  1010               	iorwf	(_n1+1)^0,w,c
   764   000A9A  B4D8               	btfsc	status,2,c
   765   000A9C  D05D               	goto	l1754
   766                           
   767                           ;Laboratorio4.c: 88: r = n1/n2;
   768   000A9E  C00F  F01C         	movff	_n1,___lwdiv@dividend
   769   000AA2  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   770   000AA6  C00D  F01E         	movff	_n2,___lwdiv@divisor
   771   000AAA  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   772   000AAE  ECB3  F007         	call	___lwdiv	;wreg free
   773   000AB2  C01C  F001         	movff	?___lwdiv,_r
   774   000AB6  C01D  F002         	movff	?___lwdiv+1,_r+1
   775   000ABA  6A03               	clrf	(_r+2)^0,c
   776   000ABC  6A04               	clrf	(_r+3)^0,c
   777                           
   778                           ;Laboratorio4.c: 89: partdecl = (n1*100)/n2;
   779   000ABE  C00F  F016         	movff	_n1,___wmul@multiplier
   780   000AC2  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   781   000AC6  0E00               	movlw	0
   782   000AC8  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   783   000ACA  0E64               	movlw	100
   784   000ACC  6E18               	movwf	___wmul@multiplicand^0,c
   785   000ACE  EC54  F008         	call	___wmul	;wreg free
   786   000AD2  C016  F01C         	movff	?___wmul,___lwdiv@dividend
   787   000AD6  C017  F01D         	movff	?___wmul+1,___lwdiv@dividend+1
   788   000ADA  C00D  F01E         	movff	_n2,___lwdiv@divisor
   789   000ADE  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   790   000AE2  ECB3  F007         	call	___lwdiv	;wreg free
   791   000AE6  C01C  F005         	movff	?___lwdiv,_partdecl
   792   000AEA  C01D  F006         	movff	?___lwdiv+1,_partdecl+1
   793   000AEE  6A07               	clrf	(_partdecl+2)^0,c
   794   000AF0  6A08               	clrf	(_partdecl+3)^0,c
   795   000AF2  D032               	goto	l1754
   796   000AF4                     l1734:
   797                           
   798                           ;Laboratorio4.c: 92: if(n1 != 0 & n2 == 0) r = 1000;
   799   000AF4  500F               	movf	_n1^0,w,c
   800   000AF6  1010               	iorwf	(_n1+1)^0,w,c
   801   000AF8  B4D8               	btfsc	status,2,c
   802   000AFA  D006               	goto	l1740
   803   000AFC  500D               	movf	_n2^0,w,c
   804   000AFE  100E               	iorwf	(_n2+1)^0,w,c
   805   000B00  A4D8               	btfss	status,2,c
   806   000B02  D002               	goto	l1740
   807   000B04  0EE8               	movlw	232
   808   000B06  D009               	goto	L3
   809   000B08                     l1740:
   810                           
   811                           ;Laboratorio4.c: 93: else if(n1 == 0 & n2 == 0) r = 1001;
   812   000B08  500F               	movf	_n1^0,w,c
   813   000B0A  1010               	iorwf	(_n1+1)^0,w,c
   814   000B0C  A4D8               	btfss	status,2,c
   815   000B0E  D78F               	goto	l1716
   816   000B10  500D               	movf	_n2^0,w,c
   817   000B12  100E               	iorwf	(_n2+1)^0,w,c
   818   000B14  A4D8               	btfss	status,2,c
   819   000B16  D78B               	goto	l1716
   820   000B18  0EE9               	movlw	233
   821   000B1A                     L3:
   822   000B1A  6E01               	movwf	_r^0,c
   823   000B1C  0E03               	movlw	3
   824   000B1E  6E02               	movwf	(_r+1)^0,c
   825   000B20  0E00               	movlw	0
   826   000B22  6E03               	movwf	(_r+2)^0,c
   827   000B24  0E00               	movlw	0
   828   000B26  6E04               	movwf	(_r+3)^0,c
   829   000B28  D782               	goto	l1716
   830   000B2A                     l1748:
   831                           
   832                           ;Laboratorio4.c: 98: r = 0;
   833   000B2A  0E00               	movlw	0
   834   000B2C  6E01               	movwf	_r^0,c
   835   000B2E  0E00               	movlw	0
   836   000B30  6E02               	movwf	(_r+1)^0,c
   837   000B32  0E00               	movlw	0
   838   000B34  6E03               	movwf	(_r+2)^0,c
   839   000B36  0E00               	movlw	0
   840   000B38  6E04               	movwf	(_r+3)^0,c
   841                           
   842                           ;Laboratorio4.c: 99: break;
   843   000B3A  D00E               	goto	l1754
   844   000B3C                     l1752:
   845   000B3C  502B               	movf	_op^0,w,c
   846                           
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 4, Range of values is 43 to 120
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte           13     7 (average)
   852                           ;	Chosen strategy is simple_byte
   853   000B3E  0A2B               	xorlw	43	; case 43
   854   000B40  B4D8               	btfsc	status,2,c
   855   000B42  D769               	goto	l1714
   856   000B44  0A06               	xorlw	6	; case 45
   857   000B46  B4D8               	btfsc	status,2,c
   858   000B48  D78D               	goto	l1718
   859   000B4A  0A02               	xorlw	2	; case 47
   860   000B4C  B4D8               	btfsc	status,2,c
   861   000B4E  D79F               	goto	l1726
   862   000B50  0A57               	xorlw	87	; case 120
   863   000B52  B4D8               	btfsc	status,2,c
   864   000B54  D78D               	goto	l1722
   865   000B56  D7E9               	goto	l1748
   866   000B58                     l1754:
   867                           
   868                           ;Laboratorio4.c: 101: DireccionaLCD(0x84);
   869   000B58  0E84               	movlw	132
   870   000B5A  EC72  F008         	call	_DireccionaLCD
   871                           
   872                           ;Laboratorio4.c: 102: if ((partdecl-(r*100))!= 0){
   873   000B5E  C001  F016         	movff	_r,___lmul@multiplier
   874   000B62  C002  F017         	movff	_r+1,___lmul@multiplier+1
   875   000B66  C003  F018         	movff	_r+2,___lmul@multiplier+2
   876   000B6A  C004  F019         	movff	_r+3,___lmul@multiplier+3
   877   000B6E  0E9C               	movlw	156
   878   000B70  6E1A               	movwf	___lmul@multiplicand^0,c
   879   000B72  0EFF               	movlw	255
   880   000B74  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   881   000B76  0EFF               	movlw	255
   882   000B78  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   883   000B7A  0EFF               	movlw	255
   884   000B7C  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   885   000B7E  EC5D  F007         	call	___lmul	;wreg free
   886   000B82  5005               	movf	_partdecl^0,w,c
   887   000B84  2416               	addwf	?___lmul^0,w,c
   888   000B86  6E23               	movwf	??_main^0,c
   889   000B88  5006               	movf	(_partdecl+1)^0,w,c
   890   000B8A  2017               	addwfc	(?___lmul+1)^0,w,c
   891   000B8C  6E24               	movwf	(??_main+1)^0,c
   892   000B8E  5007               	movf	(_partdecl+2)^0,w,c
   893   000B90  2018               	addwfc	(?___lmul+2)^0,w,c
   894   000B92  6E25               	movwf	(??_main+2)^0,c
   895   000B94  5008               	movf	(_partdecl+3)^0,w,c
   896   000B96  2019               	addwfc	(?___lmul+3)^0,w,c
   897   000B98  6E26               	movwf	(??_main+3)^0,c
   898   000B9A  5023               	movf	??_main^0,w,c
   899   000B9C  1024               	iorwf	(??_main+1)^0,w,c
   900   000B9E  1025               	iorwf	(??_main+2)^0,w,c
   901   000BA0  1026               	iorwf	(??_main+3)^0,w,c
   902   000BA2  B4D8               	btfsc	status,2,c
   903   000BA4  D056               	goto	l1778
   904                           
   905                           ;Laboratorio4.c: 103: for (int i = 0; i < 3; i++) {
   906   000BA6  0E00               	movlw	0
   907   000BA8  6E28               	movwf	(main@i+1)^0,c
   908   000BAA  0E00               	movlw	0
   909   000BAC  6E27               	movwf	main@i^0,c
   910   000BAE                     l1758:
   911   000BAE  BE28               	btfsc	(main@i+1)^0,7,c
   912   000BB0  D008               	goto	l1762
   913   000BB2  5028               	movf	(main@i+1)^0,w,c
   914   000BB4  E105               	bnz	u1290
   915   000BB6  0E03               	movlw	3
   916   000BB8  5C27               	subwf	main@i^0,w,c
   917   000BBA  B0D8               	btfsc	status,0,c
   918   000BBC  D0E5               	goto	l1812
   919   000BBE  D001               	goto	l1762
   920   000BC0                     u1290:
   921   000BC0  D0E3               	goto	l1812
   922   000BC2                     l1762:
   923                           
   924                           ;Laboratorio4.c: 104: r = n1 / n2;
   925   000BC2  C00F  F01C         	movff	_n1,___lwdiv@dividend
   926   000BC6  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   927   000BCA  C00D  F01E         	movff	_n2,___lwdiv@divisor
   928   000BCE  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   929   000BD2  ECB3  F007         	call	___lwdiv	;wreg free
   930   000BD6  C01C  F001         	movff	?___lwdiv,_r
   931   000BDA  C01D  F002         	movff	?___lwdiv+1,_r+1
   932   000BDE  6A03               	clrf	(_r+2)^0,c
   933   000BE0  6A04               	clrf	(_r+3)^0,c
   934                           
   935                           ;Laboratorio4.c: 105: m = n1 % n2;
   936   000BE2  C00F  F016         	movff	_n1,___lwmod@dividend
   937   000BE6  C010  F017         	movff	_n1+1,___lwmod@dividend+1
   938   000BEA  C00D  F018         	movff	_n2,___lwmod@divisor
   939   000BEE  C00E  F019         	movff	_n2+1,___lwmod@divisor+1
   940   000BF2  ECDC  F007         	call	___lwmod	;wreg free
   941   000BF6  C016  F012         	movff	?___lwmod,_m
   942   000BFA  C017  F013         	movff	?___lwmod+1,_m+1
   943   000BFE  6A14               	clrf	(_m+2)^0,c
   944   000C00  6A15               	clrf	(_m+3)^0,c
   945                           
   946                           ;Laboratorio4.c: 106: EscribeLCD_c(r+'0');
   947   000C02  5001               	movf	_r^0,w,c
   948   000C04  0F30               	addlw	48
   949   000C06  EC67  F008         	call	_EscribeLCD_c
   950                           
   951                           ;Laboratorio4.c: 107: if(i == 0 && m != 0) {
   952   000C0A  5027               	movf	main@i^0,w,c
   953   000C0C  1028               	iorwf	(main@i+1)^0,w,c
   954   000C0E  A4D8               	btfss	status,2,c
   955   000C10  D009               	goto	l1770
   956   000C12  5012               	movf	_m^0,w,c
   957   000C14  1013               	iorwf	(_m+1)^0,w,c
   958   000C16  1014               	iorwf	(_m+2)^0,w,c
   959   000C18  1015               	iorwf	(_m+3)^0,w,c
   960   000C1A  B4D8               	btfsc	status,2,c
   961   000C1C  D003               	goto	l1770
   962                           
   963                           ;Laboratorio4.c: 108: EscribeLCD_c(',');
   964   000C1E  0E2C               	movlw	44
   965   000C20  EC67  F008         	call	_EscribeLCD_c
   966   000C24                     l1770:
   967                           
   968                           ;Laboratorio4.c: 109: };Laboratorio4.c: 111: if (m != 0) {
   969   000C24  5012               	movf	_m^0,w,c
   970   000C26  1013               	iorwf	(_m+1)^0,w,c
   971   000C28  1014               	iorwf	(_m+2)^0,w,c
   972   000C2A  1015               	iorwf	(_m+3)^0,w,c
   973   000C2C  B4D8               	btfsc	status,2,c
   974   000C2E  D0AC               	goto	l1812
   975                           
   976                           ;Laboratorio4.c: 112: n1 = m * 10;
   977   000C30  C012  F016         	movff	_m,___wmul@multiplier
   978   000C34  C013  F017         	movff	_m+1,___wmul@multiplier+1
   979   000C38  0E00               	movlw	0
   980   000C3A  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   981   000C3C  0E0A               	movlw	10
   982   000C3E  6E18               	movwf	___wmul@multiplicand^0,c
   983   000C40  EC54  F008         	call	___wmul	;wreg free
   984   000C44  C016  F00F         	movff	?___wmul,_n1
   985   000C48  C017  F010         	movff	?___wmul+1,_n1+1
   986                           
   987                           ;Laboratorio4.c: 113: } else {
   988   000C4C  4A27               	infsnz	main@i^0,f,c
   989   000C4E  2A28               	incf	(main@i+1)^0,f,c
   990   000C50  D7AE               	goto	l1758
   991   000C52                     l1778:
   992   000C52  5004               	movf	(_r+3)^0,w,c
   993   000C54  1003               	iorwf	(_r+2)^0,w,c
   994   000C56  1002               	iorwf	(_r+1)^0,w,c
   995   000C58  E104               	bnz	u1330
   996   000C5A  0E52               	movlw	82
   997   000C5C  5C01               	subwf	_r^0,w,c
   998   000C5E  A0D8               	btfss	status,0,c
   999   000C60  D025               	goto	l1790
  1000   000C62                     u1330:
  1001   000C62  0EE8               	movlw	232
  1002   000C64  1801               	xorwf	_r^0,w,c
  1003   000C66  E106               	bnz	u1340
  1004   000C68  0E03               	movlw	3
  1005   000C6A  1802               	xorwf	(_r+1)^0,w,c
  1006   000C6C  1003               	iorwf	(_r+2)^0,w,c
  1007   000C6E  1004               	iorwf	(_r+3)^0,w,c
  1008   000C70  B4D8               	btfsc	status,2,c
  1009   000C72  D01C               	goto	l1790
  1010   000C74                     u1340:
  1011   000C74  0EE9               	movlw	233
  1012   000C76  1801               	xorwf	_r^0,w,c
  1013   000C78  E106               	bnz	u1350
  1014   000C7A  0E03               	movlw	3
  1015   000C7C  1802               	xorwf	(_r+1)^0,w,c
  1016   000C7E  1003               	iorwf	(_r+2)^0,w,c
  1017   000C80  1004               	iorwf	(_r+3)^0,w,c
  1018   000C82  B4D8               	btfsc	status,2,c
  1019   000C84  D013               	goto	l1790
  1020   000C86                     u1350:
  1021                           
  1022                           ;Laboratorio4.c: 119: EscribeLCD_c('-');
  1023   000C86  0E2D               	movlw	45
  1024   000C88  EC67  F008         	call	_EscribeLCD_c
  1025                           
  1026                           ;Laboratorio4.c: 120: DireccionaLCD(0x85);
  1027   000C8C  0E85               	movlw	133
  1028   000C8E  EC72  F008         	call	_DireccionaLCD
  1029                           
  1030                           ;Laboratorio4.c: 121: r = ~r+1;
  1031   000C92  1E04               	comf	(_r+3)^0,f,c
  1032   000C94  1E03               	comf	(_r+2)^0,f,c
  1033   000C96  1E02               	comf	(_r+1)^0,f,c
  1034   000C98  6C01               	negf	_r^0,c
  1035   000C9A  0E00               	movlw	0
  1036   000C9C  2202               	addwfc	(_r+1)^0,f,c
  1037   000C9E  2203               	addwfc	(_r+2)^0,f,c
  1038   000CA0  2204               	addwfc	(_r+3)^0,f,c
  1039                           
  1040                           ;Laboratorio4.c: 122: EscribeLCD_c(r+'0');
  1041   000CA2  5001               	movf	_r^0,w,c
  1042   000CA4  0F30               	addlw	48
  1043   000CA6  EC67  F008         	call	_EscribeLCD_c
  1044                           
  1045                           ;Laboratorio4.c: 123: }else{
  1046   000CAA  D06E               	goto	l1812
  1047   000CAC                     l1790:
  1048                           
  1049                           ;Laboratorio4.c: 124: if(r>0xA & r!=1000 & r !=1001){
  1050   000CAC  5004               	movf	(_r+3)^0,w,c
  1051   000CAE  1003               	iorwf	(_r+2)^0,w,c
  1052   000CB0  1002               	iorwf	(_r+1)^0,w,c
  1053   000CB2  E104               	bnz	u1360
  1054   000CB4  0E0B               	movlw	11
  1055   000CB6  5C01               	subwf	_r^0,w,c
  1056   000CB8  A0D8               	btfss	status,0,c
  1057   000CBA  D038               	goto	l1800
  1058   000CBC                     u1360:
  1059   000CBC  0EE8               	movlw	232
  1060   000CBE  1801               	xorwf	_r^0,w,c
  1061   000CC0  E106               	bnz	u1370
  1062   000CC2  0E03               	movlw	3
  1063   000CC4  1802               	xorwf	(_r+1)^0,w,c
  1064   000CC6  1003               	iorwf	(_r+2)^0,w,c
  1065   000CC8  1004               	iorwf	(_r+3)^0,w,c
  1066   000CCA  B4D8               	btfsc	status,2,c
  1067   000CCC  D02F               	goto	l1800
  1068   000CCE                     u1370:
  1069   000CCE  0EE9               	movlw	233
  1070   000CD0  1801               	xorwf	_r^0,w,c
  1071   000CD2  E106               	bnz	u1380
  1072   000CD4  0E03               	movlw	3
  1073   000CD6  1802               	xorwf	(_r+1)^0,w,c
  1074   000CD8  1003               	iorwf	(_r+2)^0,w,c
  1075   000CDA  1004               	iorwf	(_r+3)^0,w,c
  1076   000CDC  B4D8               	btfsc	status,2,c
  1077   000CDE  D026               	goto	l1800
  1078   000CE0                     u1380:
  1079   000CE0                     l1796:
  1080                           
  1081                           ;Laboratorio4.c: 126: i = i+1;
  1082   000CE0  0E01               	movlw	1
  1083   000CE2  240B               	addwf	_i^0,w,c
  1084   000CE4  6E0B               	movwf	_i^0,c
  1085   000CE6  0E00               	movlw	0
  1086   000CE8  200C               	addwfc	(_i+1)^0,w,c
  1087   000CEA  6E0C               	movwf	(_i+1)^0,c
  1088                           
  1089                           ;Laboratorio4.c: 127: r = r - 10;
  1090   000CEC  0EF6               	movlw	246
  1091   000CEE  2401               	addwf	_r^0,w,c
  1092   000CF0  6E01               	movwf	_r^0,c
  1093   000CF2  0EFF               	movlw	255
  1094   000CF4  2002               	addwfc	(_r+1)^0,w,c
  1095   000CF6  6E02               	movwf	(_r+1)^0,c
  1096   000CF8  0EFF               	movlw	255
  1097   000CFA  2003               	addwfc	(_r+2)^0,w,c
  1098   000CFC  6E03               	movwf	(_r+2)^0,c
  1099   000CFE  0EFF               	movlw	255
  1100   000D00  2004               	addwfc	(_r+3)^0,w,c
  1101   000D02  6E04               	movwf	(_r+3)^0,c
  1102                           
  1103                           ;Laboratorio4.c: 128: }while(r>0xA);
  1104   000D04  5004               	movf	(_r+3)^0,w,c
  1105   000D06  1003               	iorwf	(_r+2)^0,w,c
  1106   000D08  1002               	iorwf	(_r+1)^0,w,c
  1107   000D0A  E1EA               	bnz	l1796
  1108   000D0C  0E0B               	movlw	11
  1109   000D0E  5C01               	subwf	_r^0,w,c
  1110   000D10  B0D8               	btfsc	status,0,c
  1111   000D12  D7E6               	goto	u1380
  1112                           
  1113                           ;Laboratorio4.c: 129: EscribeLCD_c(i+'0');
  1114   000D14  500B               	movf	_i^0,w,c
  1115   000D16  0F30               	addlw	48
  1116   000D18  EC67  F008         	call	_EscribeLCD_c
  1117                           
  1118                           ;Laboratorio4.c: 130: DireccionaLCD(0x85);
  1119   000D1C  0E85               	movlw	133
  1120   000D1E  EC72  F008         	call	_DireccionaLCD
  1121                           
  1122                           ;Laboratorio4.c: 131: EscribeLCD_c(r+'0');
  1123   000D22  5001               	movf	_r^0,w,c
  1124   000D24  0F30               	addlw	48
  1125   000D26  EC67  F008         	call	_EscribeLCD_c
  1126                           
  1127                           ;Laboratorio4.c: 132: }else{
  1128   000D2A  D02E               	goto	l1812
  1129   000D2C                     l1800:
  1130                           
  1131                           ;Laboratorio4.c: 133: if(r==1000){
  1132   000D2C  0EE8               	movlw	232
  1133   000D2E  1801               	xorwf	_r^0,w,c
  1134   000D30  E110               	bnz	l1804
  1135   000D32  0E03               	movlw	3
  1136   000D34  1802               	xorwf	(_r+1)^0,w,c
  1137   000D36  1003               	iorwf	(_r+2)^0,w,c
  1138   000D38  1004               	iorwf	(_r+3)^0,w,c
  1139   000D3A  A4D8               	btfss	status,2,c
  1140   000D3C  D00A               	goto	l1804
  1141                           
  1142                           ;Laboratorio4.c: 134: EscribeLCD_c('I');
  1143   000D3E  0E49               	movlw	73
  1144   000D40  EC67  F008         	call	_EscribeLCD_c
  1145                           
  1146                           ;Laboratorio4.c: 135: EscribeLCD_c('N');
  1147   000D44  0E4E               	movlw	78
  1148   000D46  EC67  F008         	call	_EscribeLCD_c
  1149                           
  1150                           ;Laboratorio4.c: 136: EscribeLCD_c('F');
  1151   000D4A  0E46               	movlw	70
  1152   000D4C  EC67  F008         	call	_EscribeLCD_c
  1153                           
  1154                           ;Laboratorio4.c: 137: }else{
  1155   000D50  D01B               	goto	l1812
  1156   000D52                     l1804:
  1157                           
  1158                           ;Laboratorio4.c: 138: if(r==1001){
  1159   000D52  0EE9               	movlw	233
  1160   000D54  1801               	xorwf	_r^0,w,c
  1161   000D56  E110               	bnz	l1808
  1162   000D58  0E03               	movlw	3
  1163   000D5A  1802               	xorwf	(_r+1)^0,w,c
  1164   000D5C  1003               	iorwf	(_r+2)^0,w,c
  1165   000D5E  1004               	iorwf	(_r+3)^0,w,c
  1166   000D60  A4D8               	btfss	status,2,c
  1167   000D62  D00A               	goto	l1808
  1168                           
  1169                           ;Laboratorio4.c: 139: EscribeLCD_c('I');
  1170   000D64  0E49               	movlw	73
  1171   000D66  EC67  F008         	call	_EscribeLCD_c
  1172                           
  1173                           ;Laboratorio4.c: 140: EscribeLCD_c('N');
  1174   000D6A  0E4E               	movlw	78
  1175   000D6C  EC67  F008         	call	_EscribeLCD_c
  1176                           
  1177                           ;Laboratorio4.c: 141: EscribeLCD_c('D');
  1178   000D70  0E44               	movlw	68
  1179   000D72  EC67  F008         	call	_EscribeLCD_c
  1180                           
  1181                           ;Laboratorio4.c: 142: }else{
  1182   000D76  D008               	goto	l1812
  1183   000D78                     l1808:
  1184                           
  1185                           ;Laboratorio4.c: 143: EscribeLCD_c(r+'0');
  1186   000D78  5001               	movf	_r^0,w,c
  1187   000D7A  0F30               	addlw	48
  1188   000D7C  EC67  F008         	call	_EscribeLCD_c
  1189   000D80  D003               	goto	l1812
  1190   000D82                     l1810:
  1191                           
  1192                           ;Laboratorio4.c: 149: EscribeLCD_c('W');
  1193   000D82  0E57               	movlw	87
  1194   000D84  EC67  F008         	call	_EscribeLCD_c
  1195   000D88                     l1812:
  1196                           
  1197                           ;Laboratorio4.c: 150: };Laboratorio4.c: 151: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1198   000D88  0EE4               	movlw	228
  1199   000D8A  6E23               	movwf	??_main^0,c
  1200   000D8C  0E44               	movlw	68
  1201   000D8E                     u1437:
  1202   000D8E  2EE8               	decfsz	wreg,f,c
  1203   000D90  D7FE               	bra	u1437
  1204   000D92  2E23               	decfsz	??_main^0,f,c
  1205   000D94  D7FC               	bra	u1437
  1206   000D96  D000               	nop2	
  1207   000D98  D562               	goto	l1604
  1208   000D9A                     __end_of_main:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function ___wmul *****************
  1212 ;; Defined at:
  1213 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  multiplier      2    0[COMRAM] unsigned int 
  1216 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  product         2    4[COMRAM] unsigned int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[COMRAM] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, prodl, prodh
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         4       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        6 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text1
  1242   0010A8                     __ptext1:
  1243                           	callstack 0
  1244   0010A8                     ___wmul:
  1245                           	callstack 30
  1246                           
  1247                           ;incstack = 0
  1248   0010A8  5016               	movf	___wmul@multiplier^0,w,c
  1249   0010AA  0218               	mulwf	___wmul@multiplicand^0,c
  1250   0010AC  CFF3 F01A          	movff	prodl,___wmul@product
  1251   0010B0  CFF4 F01B          	movff	prodh,___wmul@product+1
  1252   0010B4  5016               	movf	___wmul@multiplier^0,w,c
  1253   0010B6  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  1254   0010B8  50F3               	movf	243,w,c
  1255   0010BA  261B               	addwf	(___wmul@product+1)^0,f,c
  1256   0010BC  5017               	movf	(___wmul@multiplier+1)^0,w,c
  1257   0010BE  0218               	mulwf	___wmul@multiplicand^0,c
  1258   0010C0  50F3               	movf	243,w,c
  1259   0010C2  261B               	addwf	(___wmul@product+1)^0,f,c
  1260   0010C4  C01A  F016         	movff	___wmul@product,?___wmul
  1261   0010C8  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  1262   0010CC  0012               	return		;funcret
  1263   0010CE                     __end_of___wmul:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function ___lwmod *****************
  1267 ;; Defined at:
  1268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  dividend        2    0[COMRAM] unsigned int 
  1271 ;;  divisor         2    2[COMRAM] unsigned int 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  counter         1    4[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    0[COMRAM] unsigned int 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         4       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1286 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:        5 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text2
  1297   000FB8                     __ptext2:
  1298                           	callstack 0
  1299   000FB8                     ___lwmod:
  1300                           	callstack 30
  1301                           
  1302                           ;incstack = 0
  1303   000FB8  5018               	movf	___lwmod@divisor^0,w,c
  1304   000FBA  1019               	iorwf	(___lwmod@divisor+1)^0,w,c
  1305   000FBC  B4D8               	btfsc	status,2,c
  1306   000FBE  D018               	goto	l720
  1307   000FC0  0E01               	movlw	1
  1308   000FC2  6E1A               	movwf	___lwmod@counter^0,c
  1309   000FC4  D004               	goto	l1580
  1310   000FC6                     l1578:
  1311   000FC6  90D8               	bcf	status,0,c
  1312   000FC8  3618               	rlcf	___lwmod@divisor^0,f,c
  1313   000FCA  3619               	rlcf	(___lwmod@divisor+1)^0,f,c
  1314   000FCC  2A1A               	incf	___lwmod@counter^0,f,c
  1315   000FCE                     l1580:
  1316   000FCE  AE19               	btfss	(___lwmod@divisor+1)^0,7,c
  1317   000FD0  D7FA               	goto	l1578
  1318   000FD2                     u890:
  1319   000FD2  5018               	movf	___lwmod@divisor^0,w,c
  1320   000FD4  5C16               	subwf	___lwmod@dividend^0,w,c
  1321   000FD6  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1322   000FD8  5817               	subwfb	(___lwmod@dividend+1)^0,w,c
  1323   000FDA  A0D8               	btfss	status,0,c
  1324   000FDC  D004               	goto	l1586
  1325   000FDE  5018               	movf	___lwmod@divisor^0,w,c
  1326   000FE0  5E16               	subwf	___lwmod@dividend^0,f,c
  1327   000FE2  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1328   000FE4  5A17               	subwfb	(___lwmod@dividend+1)^0,f,c
  1329   000FE6                     l1586:
  1330   000FE6  90D8               	bcf	status,0,c
  1331   000FE8  3219               	rrcf	(___lwmod@divisor+1)^0,f,c
  1332   000FEA  3218               	rrcf	___lwmod@divisor^0,f,c
  1333   000FEC  2E1A               	decfsz	___lwmod@counter^0,f,c
  1334   000FEE  D7F1               	goto	u890
  1335   000FF0                     l720:
  1336   000FF0  C016  F016         	movff	___lwmod@dividend,?___lwmod
  1337   000FF4  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  1338   000FF8  0012               	return		;funcret
  1339   000FFA                     __end_of___lwmod:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function ___lwdiv *****************
  1343 ;; Defined at:
  1344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  dividend        2    6[COMRAM] unsigned int 
  1347 ;;  divisor         2    8[COMRAM] unsigned int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  quotient        2   10[COMRAM] unsigned int 
  1350 ;;  counter         1   12[COMRAM] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  2    6[COMRAM] unsigned int 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1360 ;;      Params:         4       0       0       0       0       0       0       0       0
  1361 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1363 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1364 ;;Total ram usage:        7 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text3
  1374   000F66                     __ptext3:
  1375                           	callstack 0
  1376   000F66                     ___lwdiv:
  1377                           	callstack 30
  1378                           
  1379                           ;incstack = 0
  1380   000F66  0E00               	movlw	0
  1381   000F68  6E21               	movwf	(___lwdiv@quotient+1)^0,c
  1382   000F6A  0E00               	movlw	0
  1383   000F6C  6E20               	movwf	___lwdiv@quotient^0,c
  1384   000F6E  501E               	movf	___lwdiv@divisor^0,w,c
  1385   000F70  101F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1386   000F72  B4D8               	btfsc	status,2,c
  1387   000F74  D01C               	goto	l710
  1388   000F76  0E01               	movlw	1
  1389   000F78  6E22               	movwf	___lwdiv@counter^0,c
  1390   000F7A  D004               	goto	l1560
  1391   000F7C                     l1558:
  1392   000F7C  90D8               	bcf	status,0,c
  1393   000F7E  361E               	rlcf	___lwdiv@divisor^0,f,c
  1394   000F80  361F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1395   000F82  2A22               	incf	___lwdiv@counter^0,f,c
  1396   000F84                     l1560:
  1397   000F84  AE1F               	btfss	(___lwdiv@divisor+1)^0,7,c
  1398   000F86  D7FA               	goto	l1558
  1399   000F88                     u860:
  1400   000F88  90D8               	bcf	status,0,c
  1401   000F8A  3620               	rlcf	___lwdiv@quotient^0,f,c
  1402   000F8C  3621               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1403   000F8E  501E               	movf	___lwdiv@divisor^0,w,c
  1404   000F90  5C1C               	subwf	___lwdiv@dividend^0,w,c
  1405   000F92  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1406   000F94  581D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1407   000F96  A0D8               	btfss	status,0,c
  1408   000F98  D005               	goto	l1570
  1409   000F9A  501E               	movf	___lwdiv@divisor^0,w,c
  1410   000F9C  5E1C               	subwf	___lwdiv@dividend^0,f,c
  1411   000F9E  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1412   000FA0  5A1D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1413   000FA2  8020               	bsf	___lwdiv@quotient^0,0,c
  1414   000FA4                     l1570:
  1415   000FA4  90D8               	bcf	status,0,c
  1416   000FA6  321F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1417   000FA8  321E               	rrcf	___lwdiv@divisor^0,f,c
  1418   000FAA  2E22               	decfsz	___lwdiv@counter^0,f,c
  1419   000FAC  D7ED               	goto	u860
  1420   000FAE                     l710:
  1421   000FAE  C020  F01C         	movff	___lwdiv@quotient,?___lwdiv
  1422   000FB2  C021  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1423   000FB6  0012               	return		;funcret
  1424   000FB8                     __end_of___lwdiv:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function ___lmul *****************
  1428 ;; Defined at:
  1429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  multiplier      4    0[COMRAM] unsigned long 
  1432 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  product         4    8[COMRAM] unsigned long 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  4    0[COMRAM] unsigned long 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         8       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:       12 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text4
  1458   000EBA                     __ptext4:
  1459                           	callstack 0
  1460   000EBA                     ___lmul:
  1461                           	callstack 30
  1462                           
  1463                           ;incstack = 0
  1464   000EBA  0E00               	movlw	0
  1465   000EBC  6E1E               	movwf	___lmul@product^0,c
  1466   000EBE  0E00               	movlw	0
  1467   000EC0  6E1F               	movwf	(___lmul@product+1)^0,c
  1468   000EC2  0E00               	movlw	0
  1469   000EC4  6E20               	movwf	(___lmul@product+2)^0,c
  1470   000EC6  0E00               	movlw	0
  1471   000EC8  6E21               	movwf	(___lmul@product+3)^0,c
  1472   000ECA                     l1544:
  1473   000ECA  A016               	btfss	___lmul@multiplier^0,0,c
  1474   000ECC  D008               	goto	l1548
  1475   000ECE  501A               	movf	___lmul@multiplicand^0,w,c
  1476   000ED0  261E               	addwf	___lmul@product^0,f,c
  1477   000ED2  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  1478   000ED4  221F               	addwfc	(___lmul@product+1)^0,f,c
  1479   000ED6  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  1480   000ED8  2220               	addwfc	(___lmul@product+2)^0,f,c
  1481   000EDA  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  1482   000EDC  2221               	addwfc	(___lmul@product+3)^0,f,c
  1483   000EDE                     l1548:
  1484   000EDE  90D8               	bcf	status,0,c
  1485   000EE0  361A               	rlcf	___lmul@multiplicand^0,f,c
  1486   000EE2  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1487   000EE4  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1488   000EE6  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1489   000EE8  90D8               	bcf	status,0,c
  1490   000EEA  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  1491   000EEC  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  1492   000EEE  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  1493   000EF0  3216               	rrcf	___lmul@multiplier^0,f,c
  1494   000EF2  5016               	movf	___lmul@multiplier^0,w,c
  1495   000EF4  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  1496   000EF6  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  1497   000EF8  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  1498   000EFA  A4D8               	btfss	status,2,c
  1499   000EFC  D7E6               	goto	l1544
  1500   000EFE  C01E  F016         	movff	___lmul@product,?___lmul
  1501   000F02  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  1502   000F06  C020  F018         	movff	___lmul@product+2,?___lmul+2
  1503   000F0A  C021  F019         	movff	___lmul@product+3,?___lmul+3
  1504   000F0E  0012               	return		;funcret
  1505   000F10                     __end_of___lmul:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _MensajeLCD_Word *****************
  1509 ;; Defined at:
  1510 ;;		line 239 in file "LibLCDXC8.h"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  a               1    4[COMRAM] PTR unsigned char 
  1513 ;;		 -> STR_2(17), STR_1(11), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  i               2    6[COMRAM] int 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         1       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1527 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1528 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 3
  1532 ;; This function calls:
  1533 ;;		_EscribeLCD_c
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text5
  1540   001072                     __ptext5:
  1541                           	callstack 0
  1542   001072                     _MensajeLCD_Word:
  1543                           	callstack 27
  1544                           
  1545                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1546                           
  1547                           ;incstack = 0
  1548   001072  0E00               	movlw	0
  1549   001074  6E1D               	movwf	(MensajeLCD_Word@i+1)^0,c
  1550   001076  0E00               	movlw	0
  1551   001078  6E1C               	movwf	MensajeLCD_Word@i^0,c
  1552   00107A                     l1530:
  1553                           
  1554                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1555   00107A  501A               	movf	MensajeLCD_Word@a^0,w,c
  1556   00107C  241C               	addwf	MensajeLCD_Word@i^0,w,c
  1557   00107E  6E1B               	movwf	??_MensajeLCD_Word^0,c
  1558   001080  C01B  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1559   001084                     	if	1	;There is more than 1 active tblptr byte
  1560   001084  0E08               	movlw	high __smallconst
  1561   001086  6EF7               	movwf	tblptrh,c
  1562   001088                     	endif
  1563   001088                     	if	0	;tblptru may be non-zero
  1564   001088                     	endif
  1565   001088                     	if	0	;tblptru may be non-zero
  1566   001088                     	endif
  1567   001088  0008               	tblrd		*
  1568   00108A  50F5               	movf	tablat,w,c
  1569   00108C  EC67  F008         	call	_EscribeLCD_c
  1570   001090  4A1C               	infsnz	MensajeLCD_Word@i^0,f,c
  1571   001092  2A1D               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1572   001094  BE1D               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1573   001096  D7F1               	goto	l1530
  1574   001098  501D               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1575   00109A  E105               	bnz	u820
  1576   00109C  0E10               	movlw	16
  1577   00109E  5C1C               	subwf	MensajeLCD_Word@i^0,w,c
  1578   0010A0  B0D8               	btfsc	status,0,c
  1579   0010A2  0012               	return	
  1580   0010A4  D7EA               	goto	l1530
  1581   0010A6                     u820:
  1582   0010A6  0012               	return		;funcret
  1583   0010A8                     __end_of_MensajeLCD_Word:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _EscribeLCD_c *****************
  1587 ;; Defined at:
  1588 ;;		line 140 in file "LibLCDXC8.h"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  a               1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  a               1    3[COMRAM] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1602 ;;      Params:         0       0       0       0       0       0       0       0       0
  1603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1605 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1606 ;;Total ram usage:        1 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 2
  1609 ;; This function calls:
  1610 ;;		_EnviaDato
  1611 ;;		_HabilitaLCD
  1612 ;;		_RetardoLCD
  1613 ;; This function is called by:
  1614 ;;		_MensajeLCD_Word
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text6
  1620   0010CE                     __ptext6:
  1621                           	callstack 0
  1622   0010CE                     _EscribeLCD_c:
  1623                           	callstack 27
  1624                           
  1625                           ;incstack = 0
  1626                           ;EscribeLCD_c@a stored from wreg
  1627   0010CE  6E19               	movwf	EscribeLCD_c@a^0,c
  1628                           
  1629                           ;LibLCDXC8.h: 144: LATE0=1;
  1630   0010D0  808D               	bsf	3981,0,c	;volatile
  1631                           
  1632                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1633   0010D2  5019               	movf	EscribeLCD_c@a^0,w,c
  1634   0010D4  EC8E  F008         	call	_EnviaDato
  1635                           
  1636                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1637   0010D8  EC87  F008         	call	_HabilitaLCD	;wreg free
  1638                           
  1639                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1640   0010DC  0E04               	movlw	4
  1641   0010DE  EC88  F007         	call	_RetardoLCD
  1642   0010E2  0012               	return		;funcret
  1643   0010E4                     __end_of_EscribeLCD_c:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _LeerTeclado *****************
  1647 ;; Defined at:
  1648 ;;		line 157 in file "Laboratorio4.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text7
  1676   000D9A                     __ptext7:
  1677                           	callstack 0
  1678   000D9A                     _LeerTeclado:
  1679                           	callstack 30
  1680                           
  1681                           ;Laboratorio4.c: 158: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1682                           
  1683                           ;incstack = 0
  1684   000D9A  B881               	btfsc	3969,4,c	;volatile
  1685   000D9C  AA81               	btfss	3969,5,c	;volatile
  1686   000D9E  D004               	goto	u50
  1687   000DA0  AC81               	btfss	3969,6,c	;volatile
  1688   000DA2  D002               	goto	u50
  1689   000DA4  BE81               	btfsc	3969,7,c	;volatile
  1690   000DA6  D7F9               	goto	__ptext7
  1691   000DA8                     u50:
  1692                           
  1693                           ;Laboratorio4.c: 159: LATB=0b11111110;
  1694   000DA8  0EFE               	movlw	254
  1695   000DAA  6E8A               	movwf	138,c	;volatile
  1696                           
  1697                           ;Laboratorio4.c: 160: if(RB4==0) return '1';
  1698   000DAC  B881               	btfsc	3969,4,c	;volatile
  1699   000DAE  D002               	goto	l182
  1700   000DB0  0E31               	movlw	49
  1701   000DB2  0012               	return	
  1702   000DB4                     l182:
  1703                           
  1704                           ;Laboratorio4.c: 161: else if(RB5==0) return '2';
  1705   000DB4  BA81               	btfsc	3969,5,c	;volatile
  1706   000DB6  D002               	goto	l185
  1707   000DB8  0E32               	movlw	50
  1708   000DBA  0012               	return	
  1709   000DBC                     l185:
  1710                           
  1711                           ;Laboratorio4.c: 162: else if(RB6==0) return '3';
  1712   000DBC  BC81               	btfsc	3969,6,c	;volatile
  1713   000DBE  D002               	goto	l187
  1714   000DC0  0E33               	movlw	51
  1715   000DC2  0012               	return	
  1716   000DC4                     l187:
  1717                           
  1718                           ;Laboratorio4.c: 163: else if(RB7==0) return '+';
  1719   000DC4  BE81               	btfsc	3969,7,c	;volatile
  1720   000DC6  D002               	goto	l1122
  1721   000DC8  0E2B               	movlw	43
  1722   000DCA  0012               	return	
  1723   000DCC                     l1122:
  1724                           
  1725                           ;Laboratorio4.c: 164: else{;Laboratorio4.c: 165: LATB=0b11111101;
  1726   000DCC  0EFD               	movlw	253
  1727   000DCE  6E8A               	movwf	138,c	;volatile
  1728                           
  1729                           ;Laboratorio4.c: 166: if(RB4==0) return '4';
  1730   000DD0  B881               	btfsc	3969,4,c	;volatile
  1731   000DD2  D002               	goto	l191
  1732   000DD4  0E34               	movlw	52
  1733   000DD6  0012               	return	
  1734   000DD8                     l191:
  1735                           
  1736                           ;Laboratorio4.c: 167: else if(RB5==0) return '5';
  1737   000DD8  BA81               	btfsc	3969,5,c	;volatile
  1738   000DDA  D002               	goto	l193
  1739   000DDC  0E35               	movlw	53
  1740   000DDE  0012               	return	
  1741   000DE0                     l193:
  1742                           
  1743                           ;Laboratorio4.c: 168: else if(RB6==0) return '6';
  1744   000DE0  BC81               	btfsc	3969,6,c	;volatile
  1745   000DE2  D002               	goto	l195
  1746   000DE4  0E36               	movlw	54
  1747   000DE6  0012               	return	
  1748   000DE8                     l195:
  1749                           
  1750                           ;Laboratorio4.c: 169: else if(RB7==0) return '-';
  1751   000DE8  BE81               	btfsc	3969,7,c	;volatile
  1752   000DEA  D002               	goto	l1150
  1753   000DEC  0E2D               	movlw	45
  1754   000DEE  0012               	return	
  1755   000DF0                     l1150:
  1756                           
  1757                           ;Laboratorio4.c: 170: else{;Laboratorio4.c: 171: LATB=0b11111011;
  1758   000DF0  0EFB               	movlw	251
  1759   000DF2  6E8A               	movwf	138,c	;volatile
  1760                           
  1761                           ;Laboratorio4.c: 172: if(RB4==0) return '7';
  1762   000DF4  B881               	btfsc	3969,4,c	;volatile
  1763   000DF6  D002               	goto	l199
  1764   000DF8  0E37               	movlw	55
  1765   000DFA  0012               	return	
  1766   000DFC                     l199:
  1767                           
  1768                           ;Laboratorio4.c: 173: else if(RB5==0) return '8';
  1769   000DFC  BA81               	btfsc	3969,5,c	;volatile
  1770   000DFE  D002               	goto	l201
  1771   000E00  0E38               	movlw	56
  1772   000E02  0012               	return	
  1773   000E04                     l201:
  1774                           
  1775                           ;Laboratorio4.c: 174: else if(RB6==0) return '9';
  1776   000E04  BC81               	btfsc	3969,6,c	;volatile
  1777   000E06  D002               	goto	l203
  1778   000E08  0E39               	movlw	57
  1779   000E0A  0012               	return	
  1780   000E0C                     l203:
  1781                           
  1782                           ;Laboratorio4.c: 175: else if(RB7==0) return '/';
  1783   000E0C  BE81               	btfsc	3969,7,c	;volatile
  1784   000E0E  D002               	goto	l1178
  1785   000E10  0E2F               	movlw	47
  1786   000E12  0012               	return	
  1787   000E14                     l1178:
  1788                           
  1789                           ;Laboratorio4.c: 176: else{;Laboratorio4.c: 177: LATB=0b11110111;
  1790   000E14  0EF7               	movlw	247
  1791   000E16  6E8A               	movwf	138,c	;volatile
  1792                           
  1793                           ;Laboratorio4.c: 178: if(RB4==0) return 'C';
  1794   000E18  B881               	btfsc	3969,4,c	;volatile
  1795   000E1A  D002               	goto	l207
  1796   000E1C  0E43               	movlw	67
  1797   000E1E  0012               	return	
  1798   000E20                     l207:
  1799                           
  1800                           ;Laboratorio4.c: 179: else if(RB5==0) return '0';
  1801   000E20  BA81               	btfsc	3969,5,c	;volatile
  1802   000E22  D002               	goto	l209
  1803   000E24  0E30               	movlw	48
  1804   000E26  0012               	return	
  1805   000E28                     l209:
  1806                           
  1807                           ;Laboratorio4.c: 180: else if(RB6==0) return '=';
  1808   000E28  BC81               	btfsc	3969,6,c	;volatile
  1809   000E2A  D002               	goto	l211
  1810   000E2C  0E3D               	movlw	61
  1811   000E2E  0012               	return	
  1812   000E30                     l211:
  1813                           
  1814                           ;Laboratorio4.c: 181: else if(RB7==0) return 'x';
  1815   000E30  BE81               	btfsc	3969,7,c	;volatile
  1816   000E32  D002               	goto	l208
  1817   000E34  0E78               	movlw	120
  1818   000E36  0012               	return	
  1819   000E38                     l208:
  1820                           
  1821                           ;Laboratorio4.c: 182: };Laboratorio4.c: 183: };Laboratorio4.c: 184: };Laboratorio4.c: 18
      +                          5: return '?';
  1822   000E38  0E3F               	movlw	63
  1823   000E3A  0012               	return		;funcret
  1824   000E3C                     __end_of_LeerTeclado:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _InicializaLCD *****************
  1828 ;; Defined at:
  1829 ;;		line 71 in file "LibLCDXC8.h"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 3
  1850 ;; This function calls:
  1851 ;;		_BorraLCD
  1852 ;;		_EnviaDato
  1853 ;;		_HabilitaLCD
  1854 ;;		_RetardoLCD
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text8
  1861   000FFA                     __ptext8:
  1862                           	callstack 0
  1863   000FFA                     _InicializaLCD:
  1864                           	callstack 27
  1865                           
  1866                           ;LibLCDXC8.h: 73: LATE0=0;
  1867                           
  1868                           ;incstack = 0
  1869   000FFA  908D               	bcf	3981,0,c	;volatile
  1870                           
  1871                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1872                           
  1873                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1874   000FFC  0E3F               	movlw	63
  1875   000FFE  6E8C               	movwf	140,c	;volatile
  1876                           
  1877                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1878   001000  EC87  F008         	call	_HabilitaLCD	;wreg free
  1879                           
  1880                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1881   001004  0E01               	movlw	1
  1882   001006  EC88  F007         	call	_RetardoLCD
  1883                           
  1884                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1885                           
  1886                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1887   00100A  0E3F               	movlw	63
  1888   00100C  6E8C               	movwf	140,c	;volatile
  1889                           
  1890                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1891   00100E  EC87  F008         	call	_HabilitaLCD	;wreg free
  1892                           
  1893                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1894   001012  0E03               	movlw	3
  1895   001014  EC88  F007         	call	_RetardoLCD
  1896                           
  1897                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1898                           
  1899                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1900   001018  0E3F               	movlw	63
  1901   00101A  6E8C               	movwf	140,c	;volatile
  1902                           
  1903                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1904   00101C  EC87  F008         	call	_HabilitaLCD	;wreg free
  1905                           
  1906                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1907   001020  0E04               	movlw	4
  1908   001022  EC88  F007         	call	_RetardoLCD
  1909                           
  1910                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1911                           
  1912                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1913   001026  EC7D  F008         	call	_BorraLCD	;wreg free
  1914                           
  1915                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1916   00102A  0E0F               	movlw	15
  1917   00102C  EC8E  F008         	call	_EnviaDato
  1918                           
  1919                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1920   001030  EC87  F008         	call	_HabilitaLCD	;wreg free
  1921                           
  1922                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1923   001034  0E04               	movlw	4
  1924   001036  EC88  F007         	call	_RetardoLCD
  1925   00103A  0012               	return		;funcret
  1926   00103C                     __end_of_InicializaLCD:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _BorraLCD *****************
  1930 ;; Defined at:
  1931 ;;		line 112 in file "LibLCDXC8.h"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 2
  1952 ;; This function calls:
  1953 ;;		_EnviaDato
  1954 ;;		_HabilitaLCD
  1955 ;;		_RetardoLCD
  1956 ;; This function is called by:
  1957 ;;		_InicializaLCD
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text9
  1963   0010FA                     __ptext9:
  1964                           	callstack 0
  1965   0010FA                     _BorraLCD:
  1966                           	callstack 27
  1967                           
  1968                           ;LibLCDXC8.h: 114: LATE0=0;
  1969                           
  1970                           ;incstack = 0
  1971   0010FA  908D               	bcf	3981,0,c	;volatile
  1972                           
  1973                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1974   0010FC  0E01               	movlw	1
  1975   0010FE  EC8E  F008         	call	_EnviaDato
  1976                           
  1977                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1978   001102  EC87  F008         	call	_HabilitaLCD	;wreg free
  1979                           
  1980                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1981   001106  0E02               	movlw	2
  1982   001108  EC88  F007         	call	_RetardoLCD
  1983   00110C  0012               	return		;funcret
  1984   00110E                     __end_of_BorraLCD:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _DireccionaLCD *****************
  1988 ;; Defined at:
  1989 ;;		line 250 in file "LibLCDXC8.h"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  a               1    wreg     unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  a               1    3[COMRAM] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        1 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 2
  2010 ;; This function calls:
  2011 ;;		_EnviaDato
  2012 ;;		_HabilitaLCD
  2013 ;;		_RetardoLCD
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text10
  2020   0010E4                     __ptext10:
  2021                           	callstack 0
  2022   0010E4                     _DireccionaLCD:
  2023                           	callstack 28
  2024                           
  2025                           ;incstack = 0
  2026                           ;DireccionaLCD@a stored from wreg
  2027   0010E4  6E19               	movwf	DireccionaLCD@a^0,c
  2028                           
  2029                           ;LibLCDXC8.h: 253: LATE0=0;
  2030   0010E6  908D               	bcf	3981,0,c	;volatile
  2031                           
  2032                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2033   0010E8  5019               	movf	DireccionaLCD@a^0,w,c
  2034   0010EA  EC8E  F008         	call	_EnviaDato
  2035                           
  2036                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2037   0010EE  EC87  F008         	call	_HabilitaLCD	;wreg free
  2038                           
  2039                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2040   0010F2  0E04               	movlw	4
  2041   0010F4  EC88  F007         	call	_RetardoLCD
  2042   0010F8  0012               	return		;funcret
  2043   0010FA                     __end_of_DireccionaLCD:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _EnviaDato *****************
  2047 ;; Defined at:
  2048 ;;		line 59 in file "LibLCDXC8.h"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  a               1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  a               1    2[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0
  2063 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2065 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2066 ;;Total ram usage:        1 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 1
  2069 ;; This function calls:
  2070 ;;		_HabilitaLCD
  2071 ;;		_RetardoLCD
  2072 ;; This function is called by:
  2073 ;;		_InicializaLCD
  2074 ;;		_BorraLCD
  2075 ;;		_EscribeLCD_c
  2076 ;;		_DireccionaLCD
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text11
  2081   00111C                     __ptext11:
  2082                           	callstack 0
  2083   00111C                     _EnviaDato:
  2084                           	callstack 27
  2085                           
  2086                           ;incstack = 0
  2087                           ;EnviaDato@a stored from wreg
  2088   00111C  6E18               	movwf	EnviaDato@a^0,c
  2089                           
  2090                           ;LibLCDXC8.h: 68: LATD=a;
  2091                           
  2092                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2093   00111E  C018  FF8C         	movff	EnviaDato@a,3980	;volatile
  2094   001122  0012               	return		;funcret
  2095   001124                     __end_of_EnviaDato:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _RetardoLCD *****************
  2099 ;; Defined at:
  2100 ;;		line 286 in file "LibLCDXC8.h"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  a               1    wreg     unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  a               1    1[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        2 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_EnviaDato
  2124 ;;		_InicializaLCD
  2125 ;;		_BorraLCD
  2126 ;;		_EscribeLCD_c
  2127 ;;		_DireccionaLCD
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text12
  2132   000F10                     __ptext12:
  2133                           	callstack 0
  2134   000F10                     _RetardoLCD:
  2135                           	callstack 28
  2136                           
  2137                           ;incstack = 0
  2138                           ;RetardoLCD@a stored from wreg
  2139   000F10  6E17               	movwf	RetardoLCD@a^0,c
  2140                           
  2141                           ;LibLCDXC8.h: 287: switch(a){
  2142   000F12  D01B               	goto	l994
  2143   000F14                     l984:
  2144   000F14  0E05               	movlw	5
  2145   000F16  6E16               	movwf	??_RetardoLCD^0,c
  2146   000F18  0EDE               	movlw	222
  2147   000F1A                     u1447:
  2148   000F1A  2EE8               	decfsz	wreg,f,c
  2149   000F1C  D7FE               	bra	u1447
  2150   000F1E  2E16               	decfsz	??_RetardoLCD^0,f,c
  2151   000F20  D7FC               	bra	u1447
  2152                           
  2153                           ;LibLCDXC8.h: 290: break;
  2154   000F22  0012               	return	
  2155   000F24                     l986:
  2156   000F24  0E53               	movlw	83
  2157   000F26                     u1457:
  2158   000F26  2EE8               	decfsz	wreg,f,c
  2159   000F28  D7FE               	bra	u1457
  2160   000F2A  F000               	nop	
  2161                           
  2162                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2163   000F2C  0E35               	movlw	53
  2164   000F2E                     u1467:
  2165   000F2E  2EE8               	decfsz	wreg,f,c
  2166   000F30  D7FE               	bra	u1467
  2167   000F32  F000               	nop	
  2168                           
  2169                           ;LibLCDXC8.h: 294: break;
  2170   000F34  0012               	return	
  2171   000F36                     l988:
  2172   000F36  0E08               	movlw	8
  2173   000F38                     u1477:
  2174   000F38  2EE8               	decfsz	wreg,f,c
  2175   000F3A  D7FE               	bra	u1477
  2176   000F3C  F000               	nop	
  2177                           
  2178                           ;LibLCDXC8.h: 297: break;
  2179   000F3E  0012               	return	
  2180   000F40                     l990:
  2181   000F40  0E03               	movlw	3
  2182   000F42                     u1487:
  2183   000F42  2EE8               	decfsz	wreg,f,c
  2184   000F44  D7FE               	bra	u1487
  2185   000F46  F000               	nop	
  2186                           
  2187                           ;LibLCDXC8.h: 300: break;
  2188   000F48  0012               	return	
  2189   000F4A                     l994:
  2190   000F4A  5017               	movf	RetardoLCD@a^0,w,c
  2191                           
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 4, Range of values is 1 to 4
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte           13     7 (average)
  2197                           ;	Chosen strategy is simple_byte
  2198   000F4C  0A01               	xorlw	1	; case 1
  2199   000F4E  B4D8               	btfsc	status,2,c
  2200   000F50  D7E1               	goto	l984
  2201   000F52  0A03               	xorlw	3	; case 2
  2202   000F54  B4D8               	btfsc	status,2,c
  2203   000F56  D7E6               	goto	l986
  2204   000F58  0A01               	xorlw	1	; case 3
  2205   000F5A  B4D8               	btfsc	status,2,c
  2206   000F5C  D7EC               	goto	l988
  2207   000F5E  0A07               	xorlw	7	; case 4
  2208   000F60  A4D8               	btfss	status,2,c
  2209   000F62  0012               	return	
  2210   000F64  D7ED               	goto	l990
  2211   000F66                     __end_of_RetardoLCD:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _HabilitaLCD *****************
  2215 ;; Defined at:
  2216 ;;		line 105 in file "LibLCDXC8.h"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_EnviaDato
  2240 ;;		_InicializaLCD
  2241 ;;		_BorraLCD
  2242 ;;		_EscribeLCD_c
  2243 ;;		_DireccionaLCD
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text13
  2248   00110E                     __ptext13:
  2249                           	callstack 0
  2250   00110E                     _HabilitaLCD:
  2251                           	callstack 28
  2252                           
  2253                           ;LibLCDXC8.h: 107: LATE1=1;
  2254                           
  2255                           ;incstack = 0
  2256   00110E  828D               	bsf	3981,1,c	;volatile
  2257                           
  2258                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2259   001110  0E03               	movlw	3
  2260   001112                     u1497:
  2261   001112  2EE8               	decfsz	wreg,f,c
  2262   001114  D7FE               	bra	u1497
  2263   001116  F000               	nop	
  2264                           
  2265                           ;LibLCDXC8.h: 110: LATE1=0;
  2266   001118  928D               	bcf	3981,1,c	;volatile
  2267   00111A  0012               	return		;funcret
  2268   00111C                     __end_of_HabilitaLCD:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _ColorRGB *****************
  2272 ;; Defined at:
  2273 ;;		line 188 in file "Laboratorio4.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2289 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2290 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2291 ;;Total ram usage:        2 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text14
  2301   000E3C                     __ptext14:
  2302                           	callstack 0
  2303   000E3C                     _ColorRGB:
  2304                           	callstack 30
  2305                           
  2306                           ;Laboratorio4.c: 189: LATE2 = 1;
  2307                           
  2308                           ;incstack = 0
  2309   000E3C  848D               	bsf	3981,2,c	;volatile
  2310                           
  2311                           ;Laboratorio4.c: 190: if(color==9) color = 0;
  2312   000E3E  0E09               	movlw	9
  2313   000E40  1809               	xorwf	_color^0,w,c
  2314   000E42  100A               	iorwf	(_color+1)^0,w,c
  2315   000E44  A4D8               	btfss	status,2,c
  2316   000E46  D014               	goto	l1234
  2317   000E48  0E00               	movlw	0
  2318   000E4A  6E0A               	movwf	(_color+1)^0,c
  2319   000E4C  0E00               	movlw	0
  2320   000E4E  6E09               	movwf	_color^0,c
  2321   000E50  D00F               	goto	l1234
  2322   000E52                     l1214:
  2323                           
  2324                           ;Laboratorio4.c: 193: LATC = 0b00000000;
  2325   000E52  0E00               	movlw	0
  2326   000E54  D00B               	goto	L9
  2327   000E56                     l1216:
  2328                           
  2329                           ;Laboratorio4.c: 196: LATC = 0b00000101;
  2330   000E56  0E05               	movlw	5
  2331   000E58  D009               	goto	L9
  2332   000E5A                     l1218:
  2333                           
  2334                           ;Laboratorio4.c: 199: LATC = 0b00000110;
  2335   000E5A  0E06               	movlw	6
  2336   000E5C  D007               	goto	L9
  2337   000E5E                     l1220:
  2338                           
  2339                           ;Laboratorio4.c: 202: LATC = 0b00000011;
  2340   000E5E  0E03               	movlw	3
  2341   000E60  D005               	goto	L9
  2342   000E62                     l1222:
  2343                           
  2344                           ;Laboratorio4.c: 205: LATC = 0b00000010;
  2345   000E62  0E02               	movlw	2
  2346   000E64  D003               	goto	L9
  2347   000E66                     l1226:
  2348                           
  2349                           ;Laboratorio4.c: 211: LATC = 0b00000100;
  2350   000E66  0E04               	movlw	4
  2351   000E68  D001               	goto	L9
  2352   000E6A                     l1228:
  2353                           
  2354                           ;Laboratorio4.c: 214: LATC = 0b00000111;
  2355   000E6A  0E07               	movlw	7
  2356   000E6C                     L9:
  2357   000E6C  6E8B               	movwf	139,c	;volatile
  2358                           
  2359                           ;Laboratorio4.c: 215: break;
  2360   000E6E  D022               	goto	l1236
  2361   000E70                     l1234:
  2362   000E70  C009  F016         	movff	_color,??_ColorRGB
  2363   000E74  C00A  F017         	movff	_color+1,??_ColorRGB+1
  2364                           
  2365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2366                           ; Switch size 1, requested type "simple"
  2367                           ; Number of cases is 1, Range of values is 0 to 0
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; simple_byte            4     3 (average)
  2371                           ;	Chosen strategy is simple_byte
  2372   000E78  5017               	movf	(??_ColorRGB+1)^0,w,c
  2373   000E7A  0A00               	xorlw	0	; case 0
  2374   000E7C  A4D8               	btfss	status,2,c
  2375   000E7E  D7E9               	goto	l1214
  2376                           
  2377                           ; Switch size 1, requested type "simple"
  2378                           ; Number of cases is 8, Range of values is 1 to 8
  2379                           ; switch strategies available:
  2380                           ; Name         Instructions Cycles
  2381                           ; simple_byte           25    13 (average)
  2382                           ;	Chosen strategy is simple_byte
  2383   000E80  5016               	movf	??_ColorRGB^0,w,c
  2384   000E82  0A01               	xorlw	1	; case 1
  2385   000E84  B4D8               	btfsc	status,2,c
  2386   000E86  D7E5               	goto	l1214
  2387   000E88  0A03               	xorlw	3	; case 2
  2388   000E8A  B4D8               	btfsc	status,2,c
  2389   000E8C  D7E4               	goto	l1216
  2390   000E8E  0A01               	xorlw	1	; case 3
  2391   000E90  B4D8               	btfsc	status,2,c
  2392   000E92  D7E3               	goto	l1218
  2393   000E94  0A07               	xorlw	7	; case 4
  2394   000E96  B4D8               	btfsc	status,2,c
  2395   000E98  D7E2               	goto	l1220
  2396   000E9A  0A01               	xorlw	1	; case 5
  2397   000E9C  B4D8               	btfsc	status,2,c
  2398   000E9E  D7E1               	goto	l1222
  2399   000EA0  0A03               	xorlw	3	; case 6
  2400   000EA2  B4D8               	btfsc	status,2,c
  2401   000EA4  D7DA               	goto	l1218
  2402   000EA6  0A01               	xorlw	1	; case 7
  2403   000EA8  B4D8               	btfsc	status,2,c
  2404   000EAA  D7DD               	goto	l1226
  2405   000EAC  0A0F               	xorlw	15	; case 8
  2406   000EAE  B4D8               	btfsc	status,2,c
  2407   000EB0  D7DC               	goto	l1228
  2408   000EB2  D7CF               	goto	l1214
  2409   000EB4                     l1236:
  2410                           
  2411                           ;Laboratorio4.c: 220: color += 1;
  2412   000EB4  4A09               	infsnz	_color^0,f,c
  2413   000EB6  2A0A               	incf	(_color+1)^0,f,c
  2414   000EB8  0012               	return		;funcret
  2415   000EBA                     __end_of_ColorRGB:
  2416                           	callstack 0
  2417                           
  2418                           	psect	rparam
  2419   000000                     
  2420                           	psect	idloc
  2421                           
  2422                           ;Config register IDLOC0 @ 0x200000
  2423                           ;	unspecified, using default values
  2424   200000                     	org	2097152
  2425   200000  FF                 	db	255
  2426                           
  2427                           ;Config register IDLOC1 @ 0x200001
  2428                           ;	unspecified, using default values
  2429   200001                     	org	2097153
  2430   200001  FF                 	db	255
  2431                           
  2432                           ;Config register IDLOC2 @ 0x200002
  2433                           ;	unspecified, using default values
  2434   200002                     	org	2097154
  2435   200002  FF                 	db	255
  2436                           
  2437                           ;Config register IDLOC3 @ 0x200003
  2438                           ;	unspecified, using default values
  2439   200003                     	org	2097155
  2440   200003  FF                 	db	255
  2441                           
  2442                           ;Config register IDLOC4 @ 0x200004
  2443                           ;	unspecified, using default values
  2444   200004                     	org	2097156
  2445   200004  FF                 	db	255
  2446                           
  2447                           ;Config register IDLOC5 @ 0x200005
  2448                           ;	unspecified, using default values
  2449   200005                     	org	2097157
  2450   200005  FF                 	db	255
  2451                           
  2452                           ;Config register IDLOC6 @ 0x200006
  2453                           ;	unspecified, using default values
  2454   200006                     	org	2097158
  2455   200006  FF                 	db	255
  2456                           
  2457                           ;Config register IDLOC7 @ 0x200007
  2458                           ;	unspecified, using default values
  2459   200007                     	org	2097159
  2460   200007  FF                 	db	255
  2461                           
  2462                           	psect	config
  2463                           
  2464                           ;Config register CONFIG1L @ 0x300000
  2465                           ;	unspecified, using default values
  2466                           ;	PLL Prescaler Selection bits
  2467                           ;	PLLDIV = 0x0, unprogrammed default
  2468                           ;	System Clock Postscaler Selection bits
  2469                           ;	CPUDIV = 0x0, unprogrammed default
  2470                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2471                           ;	USBDIV = 0x0, unprogrammed default
  2472   300000                     	org	3145728
  2473   300000  00                 	db	0
  2474                           
  2475                           ;Config register CONFIG1H @ 0x300001
  2476                           ;	Oscillator Selection bits
  2477                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2478                           ;	Fail-Safe Clock Monitor Enable bit
  2479                           ;	FCMEN = 0x0, unprogrammed default
  2480                           ;	Internal/External Oscillator Switchover bit
  2481                           ;	IESO = 0x0, unprogrammed default
  2482   300001                     	org	3145729
  2483   300001  09                 	db	9
  2484                           
  2485                           ;Config register CONFIG2L @ 0x300002
  2486                           ;	unspecified, using default values
  2487                           ;	Power-up Timer Enable bit
  2488                           ;	PWRT = 0x1, unprogrammed default
  2489                           ;	Brown-out Reset Enable bits
  2490                           ;	BOR = 0x3, unprogrammed default
  2491                           ;	Brown-out Reset Voltage bits
  2492                           ;	BORV = 0x3, unprogrammed default
  2493                           ;	USB Voltage Regulator Enable bit
  2494                           ;	VREGEN = 0x0, unprogrammed default
  2495   300002                     	org	3145730
  2496   300002  1F                 	db	31
  2497                           
  2498                           ;Config register CONFIG2H @ 0x300003
  2499                           ;	Watchdog Timer Enable bit
  2500                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2501                           ;	Watchdog Timer Postscale Select bits
  2502                           ;	WDTPS = 0xF, unprogrammed default
  2503   300003                     	org	3145731
  2504   300003  1E                 	db	30
  2505                           
  2506                           ; Padding undefined space
  2507   300004                     	org	3145732
  2508   300004  FF                 	db	255
  2509                           
  2510                           ;Config register CONFIG3H @ 0x300005
  2511                           ;	unspecified, using default values
  2512                           ;	CCP2 MUX bit
  2513                           ;	CCP2MX = 0x1, unprogrammed default
  2514                           ;	PORTB A/D Enable bit
  2515                           ;	PBADEN = 0x1, unprogrammed default
  2516                           ;	Low-Power Timer 1 Oscillator Enable bit
  2517                           ;	LPT1OSC = 0x0, unprogrammed default
  2518                           ;	MCLR Pin Enable bit
  2519                           ;	MCLRE = 0x1, unprogrammed default
  2520   300005                     	org	3145733
  2521   300005  83                 	db	131
  2522                           
  2523                           ;Config register CONFIG4L @ 0x300006
  2524                           ;	unspecified, using default values
  2525                           ;	Stack Full/Underflow Reset Enable bit
  2526                           ;	STVREN = 0x1, unprogrammed default
  2527                           ;	Single-Supply ICSP Enable bit
  2528                           ;	LVP = 0x1, unprogrammed default
  2529                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2530                           ;	ICPRT = 0x0, unprogrammed default
  2531                           ;	Extended Instruction Set Enable bit
  2532                           ;	XINST = 0x0, unprogrammed default
  2533                           ;	Background Debugger Enable bit
  2534                           ;	DEBUG = 0x1, unprogrammed default
  2535   300006                     	org	3145734
  2536   300006  85                 	db	133
  2537                           
  2538                           ; Padding undefined space
  2539   300007                     	org	3145735
  2540   300007  FF                 	db	255
  2541                           
  2542                           ;Config register CONFIG5L @ 0x300008
  2543                           ;	unspecified, using default values
  2544                           ;	Code Protection bit
  2545                           ;	CP0 = 0x1, unprogrammed default
  2546                           ;	Code Protection bit
  2547                           ;	CP1 = 0x1, unprogrammed default
  2548                           ;	Code Protection bit
  2549                           ;	CP2 = 0x1, unprogrammed default
  2550                           ;	Code Protection bit
  2551                           ;	CP3 = 0x1, unprogrammed default
  2552   300008                     	org	3145736
  2553   300008  0F                 	db	15
  2554                           
  2555                           ;Config register CONFIG5H @ 0x300009
  2556                           ;	unspecified, using default values
  2557                           ;	Boot Block Code Protection bit
  2558                           ;	CPB = 0x1, unprogrammed default
  2559                           ;	Data EEPROM Code Protection bit
  2560                           ;	CPD = 0x1, unprogrammed default
  2561   300009                     	org	3145737
  2562   300009  C0                 	db	192
  2563                           
  2564                           ;Config register CONFIG6L @ 0x30000A
  2565                           ;	unspecified, using default values
  2566                           ;	Write Protection bit
  2567                           ;	WRT0 = 0x1, unprogrammed default
  2568                           ;	Write Protection bit
  2569                           ;	WRT1 = 0x1, unprogrammed default
  2570                           ;	Write Protection bit
  2571                           ;	WRT2 = 0x1, unprogrammed default
  2572                           ;	Write Protection bit
  2573                           ;	WRT3 = 0x1, unprogrammed default
  2574   30000A                     	org	3145738
  2575   30000A  0F                 	db	15
  2576                           
  2577                           ;Config register CONFIG6H @ 0x30000B
  2578                           ;	unspecified, using default values
  2579                           ;	Configuration Register Write Protection bit
  2580                           ;	WRTC = 0x1, unprogrammed default
  2581                           ;	Boot Block Write Protection bit
  2582                           ;	WRTB = 0x1, unprogrammed default
  2583                           ;	Data EEPROM Write Protection bit
  2584                           ;	WRTD = 0x1, unprogrammed default
  2585   30000B                     	org	3145739
  2586   30000B  E0                 	db	224
  2587                           
  2588                           ;Config register CONFIG7L @ 0x30000C
  2589                           ;	unspecified, using default values
  2590                           ;	Table Read Protection bit
  2591                           ;	EBTR0 = 0x1, unprogrammed default
  2592                           ;	Table Read Protection bit
  2593                           ;	EBTR1 = 0x1, unprogrammed default
  2594                           ;	Table Read Protection bit
  2595                           ;	EBTR2 = 0x1, unprogrammed default
  2596                           ;	Table Read Protection bit
  2597                           ;	EBTR3 = 0x1, unprogrammed default
  2598   30000C                     	org	3145740
  2599   30000C  0F                 	db	15
  2600                           
  2601                           ;Config register CONFIG7H @ 0x30000D
  2602                           ;	unspecified, using default values
  2603                           ;	Boot Block Table Read Protection bit
  2604                           ;	EBTRB = 0x1, unprogrammed default
  2605   30000D                     	org	3145741
  2606   30000D  40                 	db	64
  2607                           tosu	equ	0xFFF
  2608                           tosh	equ	0xFFE
  2609                           tosl	equ	0xFFD
  2610                           stkptr	equ	0xFFC
  2611                           pclatu	equ	0xFFB
  2612                           pclath	equ	0xFFA
  2613                           pcl	equ	0xFF9
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           indf0	equ	0xFEF
  2621                           postinc0	equ	0xFEE
  2622                           postdec0	equ	0xFED
  2623                           preinc0	equ	0xFEC
  2624                           plusw0	equ	0xFEB
  2625                           fsr0h	equ	0xFEA
  2626                           fsr0l	equ	0xFE9
  2627                           wreg	equ	0xFE8
  2628                           indf1	equ	0xFE7
  2629                           postinc1	equ	0xFE6
  2630                           postdec1	equ	0xFE5
  2631                           preinc1	equ	0xFE4
  2632                           plusw1	equ	0xFE3
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           bsr	equ	0xFE0
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           preinc2	equ	0xFDC
  2640                           plusw2	equ	0xFDB
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      2C       1       46.3%
BITBIGSFRhhl        2F      0       0      22        0.0%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      26        0.0%
BITBIGSFRhhh         E      0       0      21        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C       3        0.0%
DATA                 0      0      2C       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 20:01:00 2023

                      _i 000B                        _m 0012                        _r 0001  
                     u50 0DA8                       _n1 000F                       _n2 000D  
             EnviaDato@a 0018                       _op 002B      ___wmul@multiplicand 0018  
          ??_LeerTeclado 0016                      l201 0E04                      l211 0E30  
                    l203 0E0C            _InicializaLCD 0FFA                      l207 0E20  
                    l208 0E38                      l209 0E28                      l182 0DB4  
                    l191 0DD8                      l193 0DE0                      l185 0DBC  
                    l195 0DE8                      l187 0DC4                      l710 0FAE  
                    l199 0DFC                      l720 0FF0                      l990 0F40  
                    l984 0F14                      l986 0F24                      l994 0F4A  
                    l988 0F36                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u820 10A6  
                    u860 0F88                      u940 08E2                      u890 0FD2  
                    u990 090A                      _n1c 002A                      _n2c 0029  
                    wreg 000FE8                     l1122 0DCC                     l1220 0E5E  
                   l1222 0E62                     l1214 0E52                     l1150 0DF0  
                   l1216 0E56                     l1226 0E66                     l1218 0E5A  
                   l1234 0E70                     l1228 0E6A                     l1236 0EB4  
                   l1178 0E14                     l1530 107A                     l1604 085E  
                   l1544 0ECA                     l1560 0F84                     l1800 0D2C  
                   l1704 09E8                     l1570 0FA4                     l1722 0A70  
                   l1714 0A16                     l1810 0D82                     l1548 0EDE  
                   l1580 0FCE                     l1804 0D52                     l1740 0B08  
                   l1716 0A2E                     l1812 0D88                     l1660 092C  
                   l1636 08CA                     l1558 0F7C                     l1734 0AF4  
                   l1726 0A8E                     l1718 0A64                     l1808 0D78  
                   l1752 0B3C                     l1680 0982                     l1586 0FE6  
                   l1578 0FC6                     l1770 0C24                     l1762 0BC2  
                   l1754 0B58                     l1748 0B2A                     l1790 0CAC  
                   l1758 0BAE                     l1778 0C52                     l1796 0CE0  
                   STR_1 0812                     STR_2 0801                     u1080 0964  
                   u1330 0C62                     u1170 09CA                     u1340 0C74  
                   u1350 0C86                     _LATB 000F8A                     _LATC 000F8B  
                   u1360 0CBC                     _LATD 000F8C                     u1370 0CCE  
                   u1290 0BC0                     u1427 084E                     u1380 0CE0  
                   u1437 0D8E                     u1447 0F1A                     u1457 0F26  
                   u1467 0F2E                     u1477 0F38                     u1487 0F42  
                   u1497 1112                     _RBPU 007F8F           ??_EscribeLCD_c 0019  
                   _main 081E                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 0016                    ?_main 0016            EscribeLCD_c@a 0019  
                  _LATE0 007C68                    _LATE1 007C69                    _LATE2 007C6A  
        __end_of___lwdiv 0FB8          __end_of___lwmod 0FFA                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 001A                    _Tecla 0011      __end_of_LeerTeclado 0E3C  
                  _color 0009                    main@i 0027                    tablat 000FF5  
            _HabilitaLCD 110E                    status 000FD8         __end_of_BorraLCD 110E  
       __end_of_ColorRGB 0EBA          __initialization 103C             __end_of_main 0D9A  
                 ??_main 0023            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0019    __end_of_DireccionaLCD 10FA               _RetardoLCD 0F10  
                 ___lmul 0EBA                   ___wmul 10A8                ??___lwdiv 0020  
              ??___lwmod 001A          ??_InicializaLCD 0019                   clear_0 1062  
                 isa$std 000001     __end_of_EscribeLCD_c 10E4              _LeerTeclado 0D9A  
           __pdataCOMRAM 0029             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 1068            ___rparam_used 000001           __pcstackCOMRAM 0016  
      __end_of_EnviaDato 1124                ?_BorraLCD 0016                ?_ColorRGB 0016  
            ?_RetardoLCD 0016              RetardoLCD@a 0017                  ?___lmul 0016  
                ?___wmul 0016           ___lmul@product 001E               ??_BorraLCD 0019  
             ??_ColorRGB 0016        ??_MensajeLCD_Word 001B             ?_HabilitaLCD 0016  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0F66  
                ___lwmod 0FB8             __psmallconst 0800                  __pcinit 103C  
                __ramtop 0800                  __ptext0 081E                  __ptext1 10A8  
                __ptext2 0FB8                  __ptext3 0F66                  __ptext4 0EBA  
                __ptext5 1072                  __ptext6 10CE                  __ptext7 0D9A  
                __ptext8 0FFA                  __ptext9 10FA     end_of_initialization 1068  
          __Lmediumconst 0000             _EscribeLCD_c 10CE                  postdec1 000FE5  
                postinc0 000FEE             ?_LeerTeclado 0016           __end_of___lmul 0F10  
         __end_of___wmul 10CE            __pidataCOMRAM 1124    __end_of_InicializaLCD 103C  
              _EnviaDato 111C      start_initialization 103C             ??_RetardoLCD 0016  
               ??___lmul 001E                 ??___wmul 001A          _MensajeLCD_Word 1072  
             ?_EnviaDato 0016              __pbssCOMRAM 0001       __end_of_RetardoLCD 0F66  
       MensajeLCD_Word@a 001A         MensajeLCD_Word@i 001C            _DireccionaLCD 10E4  
       ___lwdiv@dividend 001C                 ?___lwdiv 001C                 ?___lwmod 0016  
            __smallconst 0800         ___lwdiv@quotient 0020           ___wmul@product 001A  
         ?_DireccionaLCD 0016  __end_of_MensajeLCD_Word 10A8        ___wmul@multiplier 0016  
            ??_EnviaDato 0018                 _BorraLCD 10FA                 _ColorRGB 0E3C  
      ___lmul@multiplier 0016                copy_data0 1050                 __Hrparam 0000  
               __Lrparam 0000          ___lwdiv@divisor 001E          ___lwdiv@counter 0022  
               __ptext10 10E4                 __ptext11 111C                 __ptext12 0F10  
               __ptext13 110E                 __ptext14 0E3C          ??_DireccionaLCD 0019  
               _interfaz 002C                 _partdecl 0005                 isa$xinst 000000  
       ?_MensajeLCD_Word 001A            ??_HabilitaLCD 0016         ___lwmod@dividend 0016  
        ___lwmod@divisor 0018          ___lwmod@counter 001A            ?_EscribeLCD_c 0016  
    __end_of_HabilitaLCD 111C  

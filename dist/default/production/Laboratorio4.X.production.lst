

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 15 14:41:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.40
    29                           ; Generated 04/07/2022 GMT
    30                           ; 
    31                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   000E5A                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _n2c
    69   000E5A  20                 	db	32
    70                           
    71                           ;initializer for _n1c
    72   000E5B  20                 	db	32
    73                           
    74                           ;initializer for _op
    75   000E5C  20                 	db	32
    76                           
    77                           ;initializer for _interfaz
    78   000E5D  08                 	db	8
    79   000000                     _RB7	set	31759
    80   000000                     _RB6	set	31758
    81   000000                     _RB5	set	31757
    82   000000                     _LATE1	set	31849
    83   000000                     _LATB	set	3978
    84   000000                     _LATD	set	3980
    85   000000                     _RB4	set	31756
    86   000000                     _TRISB	set	3987
    87   000000                     _TRISD	set	3989
    88   000000                     _ADCON1	set	4033
    89   000000                     _LATE0	set	31848
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92                           
    93                           	psect	smallconst
    94   000800                     __psmallconst:
    95                           	callstack 0
    96   000800  00                 	db	0
    97   000801                     STR_2:
    98   000801  20                 	db	32
    99   000802  20                 	db	32
   100   000803  20                 	db	32
   101   000804  20                 	db	32
   102   000805  20                 	db	32
   103   000806  20                 	db	32
   104   000807  20                 	db	32
   105   000808  20                 	db	32
   106   000809  20                 	db	32
   107   00080A  20                 	db	32
   108   00080B  20                 	db	32
   109   00080C  20                 	db	32
   110   00080D  20                 	db	32
   111   00080E  20                 	db	32
   112   00080F  20                 	db	32
   113   000810  20                 	db	32
   114   000811  00                 	db	0
   115   000812                     STR_1:
   116   000812  48                 	db	72	;'H'
   117   000813  6F                 	db	111	;'o'
   118   000814  6C                 	db	108	;'l'
   119   000815  61                 	db	97	;'a'
   120   000816  20                 	db	32
   121   000817  6D                 	db	109	;'m'
   122   000818  75                 	db	117	;'u'
   123   000819  6E                 	db	110	;'n'
   124   00081A  64                 	db	100	;'d'
   125   00081B  6F                 	db	111	;'o'
   126   00081C  00                 	db	0
   127   00081D  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   000DA8                     __pcinit:
   133                           	callstack 0
   134   000DA8                     start_initialization:
   135                           	callstack 0
   136   000DA8                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (4 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141   000DA8  0E5A               	movlw	low __pidataCOMRAM
   142   000DAA  6EF6               	movwf	tblptrl,c
   143   000DAC  0E0E               	movlw	high __pidataCOMRAM
   144   000DAE  6EF7               	movwf	tblptrh,c
   145   000DB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146   000DB2  6EF8               	movwf	tblptru,c
   147   000DB4  EE00  F016         	lfsr	0,__pdataCOMRAM
   148   000DB8  EE10 F004          	lfsr	1,4
   149   000DBC                     copy_data0:
   150   000DBC  0009               	tblrd		*+
   151   000DBE  CFF5 FFEE          	movff	tablat,postinc0
   152   000DC2  50E5               	movf	postdec1,w,c
   153   000DC4  50E1               	movf	fsr1l,w,c
   154   000DC6  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (11 bytes)
   157   000DC8  EE00  F001         	lfsr	0,__pbssCOMRAM
   158   000DCC  0E0B               	movlw	11
   159   000DCE                     clear_0:
   160   000DCE  6AEE               	clrf	postinc0,c
   161   000DD0  06E8               	decf	wreg,f,c
   162   000DD2  E1FD               	bnz	clear_0
   163   000DD4                     end_of_initialization:
   164                           	callstack 0
   165   000DD4                     __end_of__initialization:
   166                           	callstack 0
   167   000DD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   000DD6  6EF8               	movwf	tblptru,c
   169   000DD8  0100               	movlb	0
   170   000DDA  EF0F  F004         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   000001                     __pbssCOMRAM:
   174                           	callstack 0
   175   000001                     _r:
   176                           	callstack 0
   177   000001                     	ds	4
   178   000005                     _i:
   179                           	callstack 0
   180   000005                     	ds	2
   181   000007                     _n2:
   182                           	callstack 0
   183   000007                     	ds	2
   184   000009                     _n1:
   185                           	callstack 0
   186   000009                     	ds	2
   187   00000B                     _Tecla:
   188                           	callstack 0
   189   00000B                     	ds	1
   190                           
   191                           	psect	dataCOMRAM
   192   000016                     __pdataCOMRAM:
   193                           	callstack 0
   194   000016                     _n2c:
   195                           	callstack 0
   196   000016                     	ds	1
   197   000017                     _n1c:
   198                           	callstack 0
   199   000017                     	ds	1
   200   000018                     _op:
   201                           	callstack 0
   202   000018                     	ds	1
   203   000019                     _interfaz:
   204                           	callstack 0
   205   000019                     	ds	1
   206                           
   207                           	psect	cstackCOMRAM
   208   00000C                     __pcstackCOMRAM:
   209                           	callstack 0
   210   00000C                     ??_RetardoLCD:
   211   00000C                     ?___wmul:
   212                           	callstack 0
   213   00000C                     ?___lwdiv:
   214                           	callstack 0
   215   00000C                     ___wmul@multiplier:
   216                           	callstack 0
   217   00000C                     ___lwdiv@dividend:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221   00000C                     	ds	1
   222   00000D                     RetardoLCD@a:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x1
   226   00000D                     	ds	1
   227   00000E                     EnviaDato@a:
   228                           	callstack 0
   229   00000E                     ___wmul@multiplicand:
   230                           	callstack 0
   231   00000E                     ___lwdiv@divisor:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x2
   235   00000E                     	ds	1
   236   00000F                     EscribeLCD_c@a:
   237                           	callstack 0
   238   00000F                     DireccionaLCD@a:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x3
   242   00000F                     	ds	1
   243   000010                     MensajeLCD_Word@a:
   244                           	callstack 0
   245   000010                     ___wmul@product:
   246                           	callstack 0
   247   000010                     ___lwdiv@quotient:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x4
   251   000010                     	ds	1
   252   000011                     ??_MensajeLCD_Word:
   253                           
   254                           ; 1 bytes @ 0x5
   255   000011                     	ds	1
   256   000012                     ___lwdiv@counter:
   257                           	callstack 0
   258   000012                     MensajeLCD_Word@i:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x6
   262   000012                     	ds	2
   263   000014                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x8
   266   000014                     	ds	2
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 17 in file "Laboratorio4.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         0       0       0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called: 4
   293 ;; This function calls:
   294 ;;		_BorraLCD
   295 ;;		_DireccionaLCD
   296 ;;		_EscribeLCD_c
   297 ;;		_InicializaLCD
   298 ;;		_LeerTeclado
   299 ;;		_MensajeLCD_Word
   300 ;;		___lwdiv
   301 ;;		___wmul
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308   00081E                     __ptext0:
   309                           	callstack 0
   310   00081E                     _main:
   311                           	callstack 27
   312                           
   313                           ;Laboratorio4.c: 18: ADCON1=15;
   314                           
   315                           ;incstack = 0
   316   00081E  0E0F               	movlw	15
   317   000820  6EC1               	movwf	193,c	;volatile
   318                           
   319                           ;Laboratorio4.c: 19: TRISD=0;
   320   000822  0E00               	movlw	0
   321   000824  6E95               	movwf	149,c	;volatile
   322                           
   323                           ;Laboratorio4.c: 20: TRISB=0b11110000;
   324   000826  0EF0               	movlw	240
   325   000828  6E93               	movwf	147,c	;volatile
   326                           
   327                           ;Laboratorio4.c: 21: TRISE=0;
   328   00082A  0E00               	movlw	0
   329   00082C  6E96               	movwf	150,c	;volatile
   330                           
   331                           ;Laboratorio4.c: 22: RBPU=0;
   332   00082E  9EF1               	bcf	4081,7,c	;volatile
   333                           
   334                           ;Laboratorio4.c: 23: InicializaLCD();
   335   000830  ECB3  F006         	call	_InicializaLCD	;wreg free
   336                           
   337                           ;Laboratorio4.c: 24: BorraLCD();
   338   000834  EC18  F007         	call	_BorraLCD	;wreg free
   339                           
   340                           ;Laboratorio4.c: 25: MensajeLCD_Word("Hola mundo");
   341   000838  0E12               	movlw	low STR_1
   342   00083A  6E10               	movwf	MensajeLCD_Word@a^0,c
   343   00083C  EC8C  F006         	call	_MensajeLCD_Word	;wreg free
   344                           
   345                           ;Laboratorio4.c: 26: _delay((unsigned long)((2000)*(1000000/4000.0)));
   346   000840  0E03               	movlw	3
   347   000842  6E15               	movwf	(??_main+1)^0,c
   348   000844  0E8A               	movlw	138
   349   000846  6E14               	movwf	??_main^0,c
   350   000848  0E56               	movlw	86
   351   00084A                     u1017:
   352   00084A  2EE8               	decfsz	wreg,f,c
   353   00084C  D7FE               	bra	u1017
   354   00084E  2E14               	decfsz	??_main^0,f,c
   355   000850  D7FC               	bra	u1017
   356   000852  2E15               	decfsz	(??_main+1)^0,f,c
   357   000854  D7FA               	bra	u1017
   358                           
   359                           ;Laboratorio4.c: 27: BorraLCD();
   360   000856  EC18  F007         	call	_BorraLCD	;wreg free
   361   00085A                     l1440:
   362                           
   363                           ;Laboratorio4.c: 29: LATB=0B00000000;
   364   00085A  0E00               	movlw	0
   365   00085C  6E8A               	movwf	138,c	;volatile
   366                           
   367                           ;Laboratorio4.c: 30: Tecla = LeerTeclado();
   368   00085E  ECE7  F005         	call	_LeerTeclado	;wreg free
   369   000862  6E0B               	movwf	_Tecla^0,c
   370                           
   371                           ;Laboratorio4.c: 31: if(Tecla=='C'){
   372   000864  0E43               	movlw	67
   373   000866  180B               	xorwf	_Tecla^0,w,c
   374   000868  A4D8               	btfss	status,2,c
   375   00086A  D023               	goto	l1466
   376                           
   377                           ;Laboratorio4.c: 32: DireccionaLCD(0xC0);
   378   00086C  0EC0               	movlw	192
   379   00086E  EC0D  F007         	call	_DireccionaLCD
   380                           
   381                           ;Laboratorio4.c: 33: op = ' ';
   382   000872  0E20               	movlw	32
   383   000874  6E18               	movwf	_op^0,c
   384                           
   385                           ;Laboratorio4.c: 34: n1c = ' ';
   386   000876  0E20               	movlw	32
   387   000878  6E17               	movwf	_n1c^0,c
   388                           
   389                           ;Laboratorio4.c: 35: n2c = ' ';
   390   00087A  0E20               	movlw	32
   391   00087C  6E16               	movwf	_n2c^0,c
   392                           
   393                           ;Laboratorio4.c: 36: n1 = 0;
   394   00087E  0E00               	movlw	0
   395   000880  6E0A               	movwf	(_n1+1)^0,c
   396   000882  0E00               	movlw	0
   397   000884  6E09               	movwf	_n1^0,c
   398                           
   399                           ;Laboratorio4.c: 37: n2 = 0;
   400   000886  0E00               	movlw	0
   401   000888  6E08               	movwf	(_n2+1)^0,c
   402   00088A  0E00               	movlw	0
   403   00088C  6E07               	movwf	_n2^0,c
   404                           
   405                           ;Laboratorio4.c: 38: i = 0;
   406   00088E  0E00               	movlw	0
   407   000890  6E06               	movwf	(_i+1)^0,c
   408   000892  0E00               	movlw	0
   409   000894  6E05               	movwf	_i^0,c
   410                           
   411                           ;Laboratorio4.c: 39: DireccionaLCD(0x80);
   412   000896  0E80               	movlw	128
   413   000898  EC0D  F007         	call	_DireccionaLCD
   414                           
   415                           ;Laboratorio4.c: 40: MensajeLCD_Word("                ");
   416   00089C  0E01               	movlw	low STR_2
   417   00089E  6E10               	movwf	MensajeLCD_Word@a^0,c
   418   0008A0  EC8C  F006         	call	_MensajeLCD_Word	;wreg free
   419                           
   420                           ;Laboratorio4.c: 41: DireccionaLCD(0xC0);
   421   0008A4  0EC0               	movlw	192
   422   0008A6  EC0D  F007         	call	_DireccionaLCD
   423                           
   424                           ;Laboratorio4.c: 42: DireccionaLCD(0x80);
   425   0008AA  0E80               	movlw	128
   426   0008AC  EC0D  F007         	call	_DireccionaLCD
   427                           
   428                           ;Laboratorio4.c: 43: }else{
   429   0008B0  D7D4               	goto	l1440
   430   0008B2                     l1466:
   431                           
   432                           ;Laboratorio4.c: 44: if(n1c==' '|n2c==' '|op==' '){
   433   0008B2  0E20               	movlw	32
   434   0008B4  1817               	xorwf	_n1c^0,w,c
   435   0008B6  B4D8               	btfsc	status,2,c
   436   0008B8  D008               	goto	u690
   437   0008BA  0E20               	movlw	32
   438   0008BC  1816               	xorwf	_n2c^0,w,c
   439   0008BE  B4D8               	btfsc	status,2,c
   440   0008C0  D004               	goto	u690
   441   0008C2  0E20               	movlw	32
   442   0008C4  1818               	xorwf	_op^0,w,c
   443   0008C6  A4D8               	btfss	status,2,c
   444   0008C8  D179               	goto	l1604
   445   0008CA                     u690:
   446                           
   447                           ;Laboratorio4.c: 45: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x')){
   448   0008CA  0E20               	movlw	32
   449   0008CC  1818               	xorwf	_op^0,w,c
   450   0008CE  A4D8               	btfss	status,2,c
   451   0008D0  D019               	goto	l1486
   452   0008D2  0E2B               	movlw	43
   453   0008D4  180B               	xorwf	_Tecla^0,w,c
   454   0008D6  B4D8               	btfsc	status,2,c
   455   0008D8  D00C               	goto	u740
   456   0008DA  0E2D               	movlw	45
   457   0008DC  180B               	xorwf	_Tecla^0,w,c
   458   0008DE  B4D8               	btfsc	status,2,c
   459   0008E0  D008               	goto	u740
   460   0008E2  0E2F               	movlw	47
   461   0008E4  180B               	xorwf	_Tecla^0,w,c
   462   0008E6  B4D8               	btfsc	status,2,c
   463   0008E8  D004               	goto	u740
   464   0008EA  0E78               	movlw	120
   465   0008EC  180B               	xorwf	_Tecla^0,w,c
   466   0008EE  A4D8               	btfss	status,2,c
   467   0008F0  D009               	goto	l1486
   468   0008F2                     u740:
   469                           
   470                           ;Laboratorio4.c: 46: DireccionaLCD(0x81);
   471   0008F2  0E81               	movlw	129
   472   0008F4  EC0D  F007         	call	_DireccionaLCD
   473                           
   474                           ;Laboratorio4.c: 47: EscribeLCD_c(Tecla);
   475   0008F8  500B               	movf	_Tecla^0,w,c
   476   0008FA  EC02  F007         	call	_EscribeLCD_c
   477                           
   478                           ;Laboratorio4.c: 48: op = Tecla;
   479   0008FE  C00B  F018         	movff	_Tecla,_op
   480                           
   481                           ;Laboratorio4.c: 49: }else{
   482   000902  D15C               	goto	l1604
   483   000904                     l1486:
   484                           
   485                           ;Laboratorio4.c: 50: if(Tecla=='='){
   486   000904  0E3D               	movlw	61
   487   000906  180B               	xorwf	_Tecla^0,w,c
   488   000908  A4D8               	btfss	status,2,c
   489   00090A  D036               	goto	l1512
   490                           
   491                           ;Laboratorio4.c: 51: if(n1c!=' ' & n2c!=' ' & op==' '){
   492   00090C  0E20               	movlw	32
   493   00090E  1817               	xorwf	_n1c^0,w,c
   494   000910  B4D8               	btfsc	status,2,c
   495   000912  D154               	goto	l1604
   496   000914  0E20               	movlw	32
   497   000916  1816               	xorwf	_n2c^0,w,c
   498   000918  B4D8               	btfsc	status,2,c
   499   00091A  D150               	goto	l1604
   500   00091C  0E20               	movlw	32
   501   00091E  1818               	xorwf	_op^0,w,c
   502   000920  A4D8               	btfss	status,2,c
   503   000922  D14C               	goto	l1604
   504                           
   505                           ;Laboratorio4.c: 52: if(n1c==' '){
   506   000924  0E20               	movlw	32
   507   000926  1817               	xorwf	_n1c^0,w,c
   508   000928  A4D8               	btfss	status,2,c
   509   00092A  D00F               	goto	l1502
   510                           
   511                           ;Laboratorio4.c: 53: DireccionaLCD(0x80);
   512   00092C  0E80               	movlw	128
   513   00092E  EC0D  F007         	call	_DireccionaLCD
   514                           
   515                           ;Laboratorio4.c: 54: EscribeLCD_c(Tecla);
   516   000932  500B               	movf	_Tecla^0,w,c
   517   000934  EC02  F007         	call	_EscribeLCD_c
   518   000938                     l1498:
   519                           
   520                           ;Laboratorio4.c: 55: n1c=Tecla;
   521   000938  C00B  F017         	movff	_Tecla,_n1c
   522                           
   523                           ;Laboratorio4.c: 56: n1 = Tecla-'0';
   524   00093C  0ED0               	movlw	208
   525   00093E  240B               	addwf	_Tecla^0,w,c
   526   000940  6E09               	movwf	_n1^0,c
   527   000942  6A0A               	clrf	(_n1+1)^0,c
   528   000944  0EFF               	movlw	255
   529   000946  220A               	addwfc	(_n1+1)^0,f,c
   530                           
   531                           ;Laboratorio4.c: 57: }else{
   532   000948  D139               	goto	l1604
   533   00094A                     l1502:
   534                           
   535                           ;Laboratorio4.c: 58: if(n2c==' ' & op!=' '){
   536   00094A  0E20               	movlw	32
   537   00094C  1816               	xorwf	_n2c^0,w,c
   538   00094E  A4D8               	btfss	status,2,c
   539   000950  D135               	goto	l1604
   540   000952  0E20               	movlw	32
   541   000954  1818               	xorwf	_op^0,w,c
   542   000956  B4D8               	btfsc	status,2,c
   543   000958  D131               	goto	l1604
   544                           
   545                           ;Laboratorio4.c: 59: DireccionaLCD(0x82);
   546   00095A  0E82               	movlw	130
   547   00095C  EC0D  F007         	call	_DireccionaLCD
   548                           
   549                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   550   000960  500B               	movf	_Tecla^0,w,c
   551   000962  EC02  F007         	call	_EscribeLCD_c
   552   000966                     l1508:
   553                           
   554                           ;Laboratorio4.c: 61: n2c=Tecla;
   555   000966  C00B  F016         	movff	_Tecla,_n2c
   556                           
   557                           ;Laboratorio4.c: 62: n2 = Tecla-'0';
   558   00096A  0ED0               	movlw	208
   559   00096C  240B               	addwf	_Tecla^0,w,c
   560   00096E  6E07               	movwf	_n2^0,c
   561   000970  6A08               	clrf	(_n2+1)^0,c
   562   000972  0EFF               	movlw	255
   563   000974  2208               	addwfc	(_n2+1)^0,f,c
   564                           
   565                           ;Laboratorio4.c: 63: };Laboratorio4.c: 64: };Laboratorio4.c: 66: };Laboratorio4.c: 67: }
      +                          else{
   566   000976  D122               	goto	l1604
   567   000978                     l1512:
   568                           
   569                           ;Laboratorio4.c: 68: if(Tecla=='='){
   570   000978  0E3D               	movlw	61
   571   00097A  180B               	xorwf	_Tecla^0,w,c
   572   00097C  A4D8               	btfss	status,2,c
   573   00097E  D112               	goto	l1590
   574                           
   575                           ;Laboratorio4.c: 69: if(n1c!=' ' & n2c!=' ' & op!=' '){
   576   000980  0E20               	movlw	32
   577   000982  1817               	xorwf	_n1c^0,w,c
   578   000984  B4D8               	btfsc	status,2,c
   579   000986  D079               	goto	l126
   580   000988  0E20               	movlw	32
   581   00098A  1816               	xorwf	_n2c^0,w,c
   582   00098C  B4D8               	btfsc	status,2,c
   583   00098E  D075               	goto	l126
   584   000990  0E20               	movlw	32
   585   000992  1818               	xorwf	_op^0,w,c
   586   000994  B4D8               	btfsc	status,2,c
   587   000996  D071               	goto	l126
   588                           
   589                           ;Laboratorio4.c: 70: DireccionaLCD(0x83);
   590   000998  0E83               	movlw	131
   591   00099A  EC0D  F007         	call	_DireccionaLCD
   592                           
   593                           ;Laboratorio4.c: 71: EscribeLCD_c('=');
   594   00099E  0E3D               	movlw	61
   595   0009A0  EC02  F007         	call	_EscribeLCD_c
   596                           
   597                           ;Laboratorio4.c: 72: switch(op){
   598   0009A4  D058               	goto	l1550
   599   0009A6                     l1522:
   600   0009A6  5007               	movf	_n2^0,w,c
   601   0009A8  2409               	addwf	_n1^0,w,c
   602   0009AA  6E14               	movwf	??_main^0,c
   603   0009AC  5008               	movf	(_n2+1)^0,w,c
   604   0009AE  200A               	addwfc	(_n1+1)^0,w,c
   605   0009B0  D005               	goto	L1
   606   0009B2                     l1524:
   607   0009B2  5007               	movf	_n2^0,w,c
   608   0009B4  5C09               	subwf	_n1^0,w,c
   609   0009B6  6E14               	movwf	??_main^0,c
   610   0009B8  5008               	movf	(_n2+1)^0,w,c
   611   0009BA  580A               	subwfb	(_n1+1)^0,w,c
   612   0009BC                     L1:
   613   0009BC  6E15               	movwf	(??_main+1)^0,c
   614   0009BE  C014  F001         	movff	??_main,_r
   615   0009C2  C015  F002         	movff	??_main+1,_r+1
   616   0009C6  D025               	goto	L3
   617   0009C8                     l1526:
   618   0009C8  C009  F00C         	movff	_n1,___wmul@multiplier
   619   0009CC  C00A  F00D         	movff	_n1+1,___wmul@multiplier+1
   620   0009D0  C007  F00E         	movff	_n2,___wmul@multiplicand
   621   0009D4  C008  F00F         	movff	_n2+1,___wmul@multiplicand+1
   622   0009D8  ECEF  F006         	call	___wmul	;wreg free
   623   0009DC  C00C  F001         	movff	?___wmul,_r
   624   0009E0  C00D  F002         	movff	?___wmul+1,_r+1
   625   0009E4  D016               	goto	L3
   626   0009E6                     l1528:
   627                           
   628                           ;Laboratorio4.c: 80: if(n2!=0){
   629   0009E6  5007               	movf	_n2^0,w,c
   630   0009E8  1008               	iorwf	(_n2+1)^0,w,c
   631   0009EA  B4D8               	btfsc	status,2,c
   632   0009EC  D015               	goto	l1534
   633                           
   634                           ;Laboratorio4.c: 81: if(n1!=0){
   635   0009EE  5009               	movf	_n1^0,w,c
   636   0009F0  100A               	iorwf	(_n1+1)^0,w,c
   637   0009F2  B4D8               	btfsc	status,2,c
   638   0009F4  D03E               	goto	l1552
   639                           
   640                           ;Laboratorio4.c: 82: r = n1/n2;
   641   0009F6  C009  F00C         	movff	_n1,___lwdiv@dividend
   642   0009FA  C00A  F00D         	movff	_n1+1,___lwdiv@dividend+1
   643   0009FE  C007  F00E         	movff	_n2,___lwdiv@divisor
   644   000A02  C008  F00F         	movff	_n2+1,___lwdiv@divisor+1
   645   000A06  EC63  F006         	call	___lwdiv	;wreg free
   646   000A0A  C00C  F001         	movff	?___lwdiv,_r
   647   000A0E  C00D  F002         	movff	?___lwdiv+1,_r+1
   648   000A12                     L3:
   649   000A12  6A03               	clrf	(_r+2)^0,c
   650   000A14  6A04               	clrf	(_r+3)^0,c
   651   000A16  D02D               	goto	l1552
   652   000A18                     l1534:
   653                           
   654                           ;Laboratorio4.c: 85: if(n1 != 0 & n2 == 0) r = 1000;
   655   000A18  5009               	movf	_n1^0,w,c
   656   000A1A  100A               	iorwf	(_n1+1)^0,w,c
   657   000A1C  B4D8               	btfsc	status,2,c
   658   000A1E  D006               	goto	l1540
   659   000A20  5007               	movf	_n2^0,w,c
   660   000A22  1008               	iorwf	(_n2+1)^0,w,c
   661   000A24  A4D8               	btfss	status,2,c
   662   000A26  D002               	goto	l1540
   663   000A28  0EE8               	movlw	232
   664   000A2A  D009               	goto	L4
   665   000A2C                     l1540:
   666                           
   667                           ;Laboratorio4.c: 86: else if(n1 == 0 & n2 == 0) r = 1001;
   668   000A2C  5009               	movf	_n1^0,w,c
   669   000A2E  100A               	iorwf	(_n1+1)^0,w,c
   670   000A30  A4D8               	btfss	status,2,c
   671   000A32  D01F               	goto	l1552
   672   000A34  5007               	movf	_n2^0,w,c
   673   000A36  1008               	iorwf	(_n2+1)^0,w,c
   674   000A38  A4D8               	btfss	status,2,c
   675   000A3A  D01B               	goto	l1552
   676   000A3C  0EE9               	movlw	233
   677   000A3E                     L4:
   678   000A3E  6E01               	movwf	_r^0,c
   679   000A40  0E03               	movlw	3
   680   000A42  D003               	goto	L5
   681   000A44                     l1546:
   682                           
   683                           ;Laboratorio4.c: 90: r = 0;
   684   000A44  0E00               	movlw	0
   685   000A46  6E01               	movwf	_r^0,c
   686   000A48  0E00               	movlw	0
   687   000A4A                     L5:
   688   000A4A  6E02               	movwf	(_r+1)^0,c
   689   000A4C  0E00               	movlw	0
   690   000A4E  6E03               	movwf	(_r+2)^0,c
   691   000A50  0E00               	movlw	0
   692   000A52  6E04               	movwf	(_r+3)^0,c
   693                           
   694                           ;Laboratorio4.c: 91: break;
   695   000A54  D00E               	goto	l1552
   696   000A56                     l1550:
   697   000A56  5018               	movf	_op^0,w,c
   698                           
   699                           ; Switch size 1, requested type "simple"
   700                           ; Number of cases is 4, Range of values is 43 to 120
   701                           ; switch strategies available:
   702                           ; Name         Instructions Cycles
   703                           ; simple_byte           13     7 (average)
   704                           ;	Chosen strategy is simple_byte
   705   000A58  0A2B               	xorlw	43	; case 43
   706   000A5A  B4D8               	btfsc	status,2,c
   707   000A5C  D7A4               	goto	l1522
   708   000A5E  0A06               	xorlw	6	; case 45
   709   000A60  B4D8               	btfsc	status,2,c
   710   000A62  D7A7               	goto	l1524
   711   000A64  0A02               	xorlw	2	; case 47
   712   000A66  B4D8               	btfsc	status,2,c
   713   000A68  D7BE               	goto	l1528
   714   000A6A  0A57               	xorlw	87	; case 120
   715   000A6C  B4D8               	btfsc	status,2,c
   716   000A6E  D7AC               	goto	l1526
   717   000A70  D7E9               	goto	l1546
   718   000A72                     l1552:
   719                           
   720                           ;Laboratorio4.c: 93: EscribeLCD_c(r+'0');
   721   000A72  5001               	movf	_r^0,w,c
   722   000A74  0F30               	addlw	48
   723   000A76  EC02  F007         	call	_EscribeLCD_c
   724   000A7A                     l126:
   725                           
   726                           ;Laboratorio4.c: 94: };Laboratorio4.c: 95: DireccionaLCD(0x84);
   727   000A7A  0E84               	movlw	132
   728   000A7C  EC0D  F007         	call	_DireccionaLCD
   729                           
   730                           ;Laboratorio4.c: 96: if(r>0x51 & r!=1000 & r !=1001){
   731   000A80  5004               	movf	(_r+3)^0,w,c
   732   000A82  1003               	iorwf	(_r+2)^0,w,c
   733   000A84  1002               	iorwf	(_r+1)^0,w,c
   734   000A86  E104               	bnz	u920
   735   000A88  0E52               	movlw	82
   736   000A8A  5C01               	subwf	_r^0,w,c
   737   000A8C  A0D8               	btfss	status,0,c
   738   000A8E  D025               	goto	l1566
   739   000A90                     u920:
   740   000A90  0EE8               	movlw	232
   741   000A92  1801               	xorwf	_r^0,w,c
   742   000A94  E106               	bnz	u930
   743   000A96  0E03               	movlw	3
   744   000A98  1802               	xorwf	(_r+1)^0,w,c
   745   000A9A  1003               	iorwf	(_r+2)^0,w,c
   746   000A9C  1004               	iorwf	(_r+3)^0,w,c
   747   000A9E  B4D8               	btfsc	status,2,c
   748   000AA0  D01C               	goto	l1566
   749   000AA2                     u930:
   750   000AA2  0EE9               	movlw	233
   751   000AA4  1801               	xorwf	_r^0,w,c
   752   000AA6  E106               	bnz	u940
   753   000AA8  0E03               	movlw	3
   754   000AAA  1802               	xorwf	(_r+1)^0,w,c
   755   000AAC  1003               	iorwf	(_r+2)^0,w,c
   756   000AAE  1004               	iorwf	(_r+3)^0,w,c
   757   000AB0  B4D8               	btfsc	status,2,c
   758   000AB2  D013               	goto	l1566
   759   000AB4                     u940:
   760                           
   761                           ;Laboratorio4.c: 97: EscribeLCD_c('-');
   762   000AB4  0E2D               	movlw	45
   763   000AB6  EC02  F007         	call	_EscribeLCD_c
   764                           
   765                           ;Laboratorio4.c: 98: DireccionaLCD(0x85);
   766   000ABA  0E85               	movlw	133
   767   000ABC  EC0D  F007         	call	_DireccionaLCD
   768                           
   769                           ;Laboratorio4.c: 99: r = ~r+1;
   770   000AC0  1E04               	comf	(_r+3)^0,f,c
   771   000AC2  1E03               	comf	(_r+2)^0,f,c
   772   000AC4  1E02               	comf	(_r+1)^0,f,c
   773   000AC6  6C01               	negf	_r^0,c
   774   000AC8  0E00               	movlw	0
   775   000ACA  2202               	addwfc	(_r+1)^0,f,c
   776   000ACC  2203               	addwfc	(_r+2)^0,f,c
   777   000ACE  2204               	addwfc	(_r+3)^0,f,c
   778                           
   779                           ;Laboratorio4.c: 100: EscribeLCD_c(r+'0');
   780   000AD0  5001               	movf	_r^0,w,c
   781   000AD2  0F30               	addlw	48
   782   000AD4  EC02  F007         	call	_EscribeLCD_c
   783                           
   784                           ;Laboratorio4.c: 101: }else{
   785   000AD8  D071               	goto	l1604
   786   000ADA                     l1566:
   787                           
   788                           ;Laboratorio4.c: 102: if(r>0xA & r!=1000 & r !=1001){
   789   000ADA  5004               	movf	(_r+3)^0,w,c
   790   000ADC  1003               	iorwf	(_r+2)^0,w,c
   791   000ADE  1002               	iorwf	(_r+1)^0,w,c
   792   000AE0  E104               	bnz	u950
   793   000AE2  0E0B               	movlw	11
   794   000AE4  5C01               	subwf	_r^0,w,c
   795   000AE6  A0D8               	btfss	status,0,c
   796   000AE8  D038               	goto	l1576
   797   000AEA                     u950:
   798   000AEA  0EE8               	movlw	232
   799   000AEC  1801               	xorwf	_r^0,w,c
   800   000AEE  E106               	bnz	u960
   801   000AF0  0E03               	movlw	3
   802   000AF2  1802               	xorwf	(_r+1)^0,w,c
   803   000AF4  1003               	iorwf	(_r+2)^0,w,c
   804   000AF6  1004               	iorwf	(_r+3)^0,w,c
   805   000AF8  B4D8               	btfsc	status,2,c
   806   000AFA  D02F               	goto	l1576
   807   000AFC                     u960:
   808   000AFC  0EE9               	movlw	233
   809   000AFE  1801               	xorwf	_r^0,w,c
   810   000B00  E106               	bnz	u970
   811   000B02  0E03               	movlw	3
   812   000B04  1802               	xorwf	(_r+1)^0,w,c
   813   000B06  1003               	iorwf	(_r+2)^0,w,c
   814   000B08  1004               	iorwf	(_r+3)^0,w,c
   815   000B0A  B4D8               	btfsc	status,2,c
   816   000B0C  D026               	goto	l1576
   817   000B0E                     u970:
   818   000B0E                     l1572:
   819                           
   820                           ;Laboratorio4.c: 104: i = i+1;
   821   000B0E  0E01               	movlw	1
   822   000B10  2405               	addwf	_i^0,w,c
   823   000B12  6E05               	movwf	_i^0,c
   824   000B14  0E00               	movlw	0
   825   000B16  2006               	addwfc	(_i+1)^0,w,c
   826   000B18  6E06               	movwf	(_i+1)^0,c
   827                           
   828                           ;Laboratorio4.c: 105: r = r - 10;
   829   000B1A  0EF6               	movlw	246
   830   000B1C  2401               	addwf	_r^0,w,c
   831   000B1E  6E01               	movwf	_r^0,c
   832   000B20  0EFF               	movlw	255
   833   000B22  2002               	addwfc	(_r+1)^0,w,c
   834   000B24  6E02               	movwf	(_r+1)^0,c
   835   000B26  0EFF               	movlw	255
   836   000B28  2003               	addwfc	(_r+2)^0,w,c
   837   000B2A  6E03               	movwf	(_r+2)^0,c
   838   000B2C  0EFF               	movlw	255
   839   000B2E  2004               	addwfc	(_r+3)^0,w,c
   840   000B30  6E04               	movwf	(_r+3)^0,c
   841                           
   842                           ;Laboratorio4.c: 106: }while(r>0xA);
   843   000B32  5004               	movf	(_r+3)^0,w,c
   844   000B34  1003               	iorwf	(_r+2)^0,w,c
   845   000B36  1002               	iorwf	(_r+1)^0,w,c
   846   000B38  E1EA               	bnz	l1572
   847   000B3A  0E0B               	movlw	11
   848   000B3C  5C01               	subwf	_r^0,w,c
   849   000B3E  B0D8               	btfsc	status,0,c
   850   000B40  D7E6               	goto	u970
   851                           
   852                           ;Laboratorio4.c: 107: EscribeLCD_c(i+'0');
   853   000B42  5005               	movf	_i^0,w,c
   854   000B44  0F30               	addlw	48
   855   000B46  EC02  F007         	call	_EscribeLCD_c
   856                           
   857                           ;Laboratorio4.c: 108: DireccionaLCD(0x85);
   858   000B4A  0E85               	movlw	133
   859   000B4C  EC0D  F007         	call	_DireccionaLCD
   860                           
   861                           ;Laboratorio4.c: 109: EscribeLCD_c(r+'0');
   862   000B50  5001               	movf	_r^0,w,c
   863   000B52  0F30               	addlw	48
   864   000B54  EC02  F007         	call	_EscribeLCD_c
   865                           
   866                           ;Laboratorio4.c: 110: }else{
   867   000B58  D031               	goto	l1604
   868   000B5A                     l1576:
   869                           
   870                           ;Laboratorio4.c: 111: if(r==1000){
   871   000B5A  0EE8               	movlw	232
   872   000B5C  1801               	xorwf	_r^0,w,c
   873   000B5E  E110               	bnz	l1580
   874   000B60  0E03               	movlw	3
   875   000B62  1802               	xorwf	(_r+1)^0,w,c
   876   000B64  1003               	iorwf	(_r+2)^0,w,c
   877   000B66  1004               	iorwf	(_r+3)^0,w,c
   878   000B68  A4D8               	btfss	status,2,c
   879   000B6A  D00A               	goto	l1580
   880                           
   881                           ;Laboratorio4.c: 112: EscribeLCD_c('I');
   882   000B6C  0E49               	movlw	73
   883   000B6E  EC02  F007         	call	_EscribeLCD_c
   884                           
   885                           ;Laboratorio4.c: 113: EscribeLCD_c('N');
   886   000B72  0E4E               	movlw	78
   887   000B74  EC02  F007         	call	_EscribeLCD_c
   888                           
   889                           ;Laboratorio4.c: 114: EscribeLCD_c('F');
   890   000B78  0E46               	movlw	70
   891   000B7A  EC02  F007         	call	_EscribeLCD_c
   892                           
   893                           ;Laboratorio4.c: 115: }else{
   894   000B7E  D01E               	goto	l1604
   895   000B80                     l1580:
   896                           
   897                           ;Laboratorio4.c: 116: if(r=1001){
   898   000B80  0EE9               	movlw	233
   899   000B82  6E01               	movwf	_r^0,c
   900   000B84  0E03               	movlw	3
   901   000B86  6E02               	movwf	(_r+1)^0,c
   902   000B88  0E00               	movlw	0
   903   000B8A  6E03               	movwf	(_r+2)^0,c
   904   000B8C  0E00               	movlw	0
   905   000B8E  6E04               	movwf	(_r+3)^0,c
   906                           
   907                           ;Laboratorio4.c: 117: EscribeLCD_c('I');
   908   000B90  0E49               	movlw	73
   909   000B92  EC02  F007         	call	_EscribeLCD_c
   910                           
   911                           ;Laboratorio4.c: 118: EscribeLCD_c('N');
   912   000B96  0E4E               	movlw	78
   913   000B98  EC02  F007         	call	_EscribeLCD_c
   914                           
   915                           ;Laboratorio4.c: 119: EscribeLCD_c('D');
   916   000B9C  0E44               	movlw	68
   917   000B9E  EC02  F007         	call	_EscribeLCD_c
   918                           
   919                           ;Laboratorio4.c: 120: }else{
   920   000BA2  D00C               	goto	l1604
   921   000BA4                     l1590:
   922                           
   923                           ;Laboratorio4.c: 127: else{;Laboratorio4.c: 128: if(n1c==' '){
   924   000BA4  0E20               	movlw	32
   925   000BA6  1817               	xorwf	_n1c^0,w,c
   926   000BA8  A4D8               	btfss	status,2,c
   927   000BAA  D004               	goto	l1598
   928                           
   929                           ;Laboratorio4.c: 129: EscribeLCD_c(Tecla);
   930   000BAC  500B               	movf	_Tecla^0,w,c
   931   000BAE  EC02  F007         	call	_EscribeLCD_c
   932   000BB2  D6C2               	goto	l1498
   933   000BB4                     l1598:
   934                           
   935                           ;Laboratorio4.c: 133: EscribeLCD_c(Tecla);
   936   000BB4  500B               	movf	_Tecla^0,w,c
   937   000BB6  EC02  F007         	call	_EscribeLCD_c
   938   000BBA  D6D5               	goto	l1508
   939   000BBC                     l1604:
   940                           
   941                           ;Laboratorio4.c: 136: };Laboratorio4.c: 137: };Laboratorio4.c: 138: };Laboratorio4.c: 13
      +                          9: };Laboratorio4.c: 140: };Laboratorio4.c: 141: _delay((unsigned long)((700)*(1000000/4
      +                          000.0)));
   942   000BBC  0EE4               	movlw	228
   943   000BBE  6E14               	movwf	??_main^0,c
   944   000BC0  0E44               	movlw	68
   945   000BC2                     u1027:
   946   000BC2  2EE8               	decfsz	wreg,f,c
   947   000BC4  D7FE               	bra	u1027
   948   000BC6  2E14               	decfsz	??_main^0,f,c
   949   000BC8  D7FC               	bra	u1027
   950   000BCA  D000               	nop2	
   951   000BCC  D646               	goto	l1440
   952   000BCE                     __end_of_main:
   953                           	callstack 0
   954                           
   955 ;; *************** function ___wmul *****************
   956 ;; Defined at:
   957 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  multiplier      2    0[COMRAM] unsigned int 
   960 ;;  multiplicand    2    2[COMRAM] unsigned int 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  product         2    4[COMRAM] unsigned int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    0[COMRAM] unsigned int 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, prodl, prodh
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         4       0       0       0       0       0       0       0       0
   973 ;;      Locals:         2       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         6       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:        6 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text1
   986   000DDE                     __ptext1:
   987                           	callstack 0
   988   000DDE                     ___wmul:
   989                           	callstack 30
   990                           
   991                           ;incstack = 0
   992   000DDE  500C               	movf	___wmul@multiplier^0,w,c
   993   000DE0  020E               	mulwf	___wmul@multiplicand^0,c
   994   000DE2  CFF3 F010          	movff	prodl,___wmul@product
   995   000DE6  CFF4 F011          	movff	prodh,___wmul@product+1
   996   000DEA  500C               	movf	___wmul@multiplier^0,w,c
   997   000DEC  020F               	mulwf	(___wmul@multiplicand+1)^0,c
   998   000DEE  50F3               	movf	243,w,c
   999   000DF0  2611               	addwf	(___wmul@product+1)^0,f,c
  1000   000DF2  500D               	movf	(___wmul@multiplier+1)^0,w,c
  1001   000DF4  020E               	mulwf	___wmul@multiplicand^0,c
  1002   000DF6  50F3               	movf	243,w,c
  1003   000DF8  2611               	addwf	(___wmul@product+1)^0,f,c
  1004   000DFA  C010  F00C         	movff	___wmul@product,?___wmul
  1005   000DFE  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  1006   000E02  0012               	return		;funcret
  1007   000E04                     __end_of___wmul:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function ___lwdiv *****************
  1011 ;; Defined at:
  1012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  dividend        2    0[COMRAM] unsigned int 
  1015 ;;  divisor         2    2[COMRAM] unsigned int 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  quotient        2    4[COMRAM] unsigned int 
  1018 ;;  counter         1    6[COMRAM] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2    0[COMRAM] unsigned int 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         4       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        7 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text2
  1042   000CC6                     __ptext2:
  1043                           	callstack 0
  1044   000CC6                     ___lwdiv:
  1045                           	callstack 30
  1046                           
  1047                           ;incstack = 0
  1048   000CC6  0E00               	movlw	0
  1049   000CC8  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  1050   000CCA  0E00               	movlw	0
  1051   000CCC  6E10               	movwf	___lwdiv@quotient^0,c
  1052   000CCE  500E               	movf	___lwdiv@divisor^0,w,c
  1053   000CD0  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1054   000CD2  B4D8               	btfsc	status,2,c
  1055   000CD4  D01C               	goto	l676
  1056   000CD6  0E01               	movlw	1
  1057   000CD8  6E12               	movwf	___lwdiv@counter^0,c
  1058   000CDA  D004               	goto	l1412
  1059   000CDC                     l1410:
  1060   000CDC  90D8               	bcf	status,0,c
  1061   000CDE  360E               	rlcf	___lwdiv@divisor^0,f,c
  1062   000CE0  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1063   000CE2  2A12               	incf	___lwdiv@counter^0,f,c
  1064   000CE4                     l1412:
  1065   000CE4  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  1066   000CE6  D7FA               	goto	l1410
  1067   000CE8                     u640:
  1068   000CE8  90D8               	bcf	status,0,c
  1069   000CEA  3610               	rlcf	___lwdiv@quotient^0,f,c
  1070   000CEC  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1071   000CEE  500E               	movf	___lwdiv@divisor^0,w,c
  1072   000CF0  5C0C               	subwf	___lwdiv@dividend^0,w,c
  1073   000CF2  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  1074   000CF4  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1075   000CF6  A0D8               	btfss	status,0,c
  1076   000CF8  D005               	goto	l1422
  1077   000CFA  500E               	movf	___lwdiv@divisor^0,w,c
  1078   000CFC  5E0C               	subwf	___lwdiv@dividend^0,f,c
  1079   000CFE  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  1080   000D00  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1081   000D02  8010               	bsf	___lwdiv@quotient^0,0,c
  1082   000D04                     l1422:
  1083   000D04  90D8               	bcf	status,0,c
  1084   000D06  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1085   000D08  320E               	rrcf	___lwdiv@divisor^0,f,c
  1086   000D0A  2E12               	decfsz	___lwdiv@counter^0,f,c
  1087   000D0C  D7ED               	goto	u640
  1088   000D0E                     l676:
  1089   000D0E  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  1090   000D12  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1091   000D16  0012               	return		;funcret
  1092   000D18                     __end_of___lwdiv:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _MensajeLCD_Word *****************
  1096 ;; Defined at:
  1097 ;;		line 239 in file "LibLCDXC8.h"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  a               1    4[COMRAM] PTR unsigned char 
  1100 ;;		 -> STR_2(17), STR_1(11), 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  i               2    6[COMRAM] int 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         1       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 3
  1119 ;; This function calls:
  1120 ;;		_EscribeLCD_c
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text3
  1127   000D18                     __ptext3:
  1128                           	callstack 0
  1129   000D18                     _MensajeLCD_Word:
  1130                           	callstack 27
  1131                           
  1132                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1133                           
  1134                           ;incstack = 0
  1135   000D18  0E00               	movlw	0
  1136   000D1A  6E13               	movwf	(MensajeLCD_Word@i+1)^0,c
  1137   000D1C  0E00               	movlw	0
  1138   000D1E  6E12               	movwf	MensajeLCD_Word@i^0,c
  1139   000D20                     l1390:
  1140                           
  1141                           ;LibLCDXC8.h: 244: if(a[i]!=0){
  1142   000D20  5010               	movf	MensajeLCD_Word@a^0,w,c
  1143   000D22  2412               	addwf	MensajeLCD_Word@i^0,w,c
  1144   000D24  6E11               	movwf	??_MensajeLCD_Word^0,c
  1145   000D26  C011  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1146   000D2A                     	if	1	;There is more than 1 active tblptr byte
  1147   000D2A  0E08               	movlw	high __smallconst
  1148   000D2C  6EF7               	movwf	tblptrh,c
  1149   000D2E                     	endif
  1150   000D2E                     	if	0	;tblptru may be non-zero
  1151   000D2E                     	endif
  1152   000D2E                     	if	0	;tblptru may be non-zero
  1153   000D2E                     	endif
  1154   000D2E  0008               	tblrd		*
  1155   000D30  50F5               	movf	tablat,w,c
  1156   000D32  0900               	iorlw	0
  1157   000D34  B4D8               	btfsc	status,2,c
  1158   000D36  D00B               	goto	l1394
  1159                           
  1160                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1161   000D38  5010               	movf	MensajeLCD_Word@a^0,w,c
  1162   000D3A  2412               	addwf	MensajeLCD_Word@i^0,w,c
  1163   000D3C  6E11               	movwf	??_MensajeLCD_Word^0,c
  1164   000D3E  C011  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1165   000D42                     	if	1	;There is more than 1 active tblptr byte
  1166   000D42  0E08               	movlw	high __smallconst
  1167   000D44  6EF7               	movwf	tblptrh,c
  1168   000D46                     	endif
  1169   000D46                     	if	0	;tblptru may be non-zero
  1170   000D46                     	endif
  1171   000D46                     	if	0	;tblptru may be non-zero
  1172   000D46                     	endif
  1173   000D46  0008               	tblrd		*
  1174   000D48  50F5               	movf	tablat,w,c
  1175   000D4A  EC02  F007         	call	_EscribeLCD_c
  1176   000D4E                     l1394:
  1177   000D4E  4A12               	infsnz	MensajeLCD_Word@i^0,f,c
  1178   000D50  2A13               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1179   000D52  BE13               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1180   000D54  D7E5               	goto	l1390
  1181   000D56  5013               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1182   000D58  E105               	bnz	u620
  1183   000D5A  0E10               	movlw	16
  1184   000D5C  5C12               	subwf	MensajeLCD_Word@i^0,w,c
  1185   000D5E  B0D8               	btfsc	status,0,c
  1186   000D60  0012               	return	
  1187   000D62  D7DE               	goto	l1390
  1188   000D64                     u620:
  1189   000D64  0012               	return		;funcret
  1190   000D66                     __end_of_MensajeLCD_Word:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _EscribeLCD_c *****************
  1194 ;; Defined at:
  1195 ;;		line 140 in file "LibLCDXC8.h"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  a               1    wreg     unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  a               1    3[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1212 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:        1 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 2
  1216 ;; This function calls:
  1217 ;;		_EnviaDato
  1218 ;;		_HabilitaLCD
  1219 ;;		_RetardoLCD
  1220 ;; This function is called by:
  1221 ;;		_MensajeLCD_Word
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text4
  1227   000E04                     __ptext4:
  1228                           	callstack 0
  1229   000E04                     _EscribeLCD_c:
  1230                           	callstack 27
  1231                           
  1232                           ;incstack = 0
  1233                           ;EscribeLCD_c@a stored from wreg
  1234   000E04  6E0F               	movwf	EscribeLCD_c@a^0,c
  1235                           
  1236                           ;LibLCDXC8.h: 144: LATE0=1;
  1237   000E06  808D               	bsf	3981,0,c	;volatile
  1238                           
  1239                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1240   000E08  500F               	movf	EscribeLCD_c@a^0,w,c
  1241   000E0A  EC29  F007         	call	_EnviaDato
  1242                           
  1243                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1244   000E0E  EC22  F007         	call	_HabilitaLCD	;wreg free
  1245                           
  1246                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1247   000E12  0E04               	movlw	4
  1248   000E14  EC38  F006         	call	_RetardoLCD
  1249   000E18  0012               	return		;funcret
  1250   000E1A                     __end_of_EscribeLCD_c:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _LeerTeclado *****************
  1254 ;; Defined at:
  1255 ;;		line 145 in file "Laboratorio4.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text5
  1283   000BCE                     __ptext5:
  1284                           	callstack 0
  1285   000BCE                     _LeerTeclado:
  1286                           	callstack 30
  1287                           
  1288                           ;Laboratorio4.c: 146: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1289                           
  1290                           ;incstack = 0
  1291   000BCE  B881               	btfsc	3969,4,c	;volatile
  1292   000BD0  AA81               	btfss	3969,5,c	;volatile
  1293   000BD2  D004               	goto	u60
  1294   000BD4  AC81               	btfss	3969,6,c	;volatile
  1295   000BD6  D002               	goto	u60
  1296   000BD8  BE81               	btfsc	3969,7,c	;volatile
  1297   000BDA  D7F9               	goto	__ptext5
  1298   000BDC                     u60:
  1299                           
  1300                           ;Laboratorio4.c: 147: LATB=0b11111110;
  1301   000BDC  0EFE               	movlw	254
  1302   000BDE  6E8A               	movwf	138,c	;volatile
  1303                           
  1304                           ;Laboratorio4.c: 148: if(RB4==0) return '1';
  1305   000BE0  B881               	btfsc	3969,4,c	;volatile
  1306   000BE2  D002               	goto	l163
  1307   000BE4  0E31               	movlw	49
  1308   000BE6  0012               	return	
  1309   000BE8                     l163:
  1310                           
  1311                           ;Laboratorio4.c: 149: else if(RB5==0) return '2';
  1312   000BE8  BA81               	btfsc	3969,5,c	;volatile
  1313   000BEA  D002               	goto	l166
  1314   000BEC  0E32               	movlw	50
  1315   000BEE  0012               	return	
  1316   000BF0                     l166:
  1317                           
  1318                           ;Laboratorio4.c: 150: else if(RB6==0) return '3';
  1319   000BF0  BC81               	btfsc	3969,6,c	;volatile
  1320   000BF2  D002               	goto	l168
  1321   000BF4  0E33               	movlw	51
  1322   000BF6  0012               	return	
  1323   000BF8                     l168:
  1324                           
  1325                           ;Laboratorio4.c: 151: else if(RB7==0) return '+';
  1326   000BF8  BE81               	btfsc	3969,7,c	;volatile
  1327   000BFA  D002               	goto	l1090
  1328   000BFC  0E2B               	movlw	43
  1329   000BFE  0012               	return	
  1330   000C00                     l1090:
  1331                           
  1332                           ;Laboratorio4.c: 152: else{;Laboratorio4.c: 153: LATB=0b11111101;
  1333   000C00  0EFD               	movlw	253
  1334   000C02  6E8A               	movwf	138,c	;volatile
  1335                           
  1336                           ;Laboratorio4.c: 154: if(RB4==0) return '4';
  1337   000C04  B881               	btfsc	3969,4,c	;volatile
  1338   000C06  D002               	goto	l172
  1339   000C08  0E34               	movlw	52
  1340   000C0A  0012               	return	
  1341   000C0C                     l172:
  1342                           
  1343                           ;Laboratorio4.c: 155: else if(RB5==0) return '5';
  1344   000C0C  BA81               	btfsc	3969,5,c	;volatile
  1345   000C0E  D002               	goto	l174
  1346   000C10  0E35               	movlw	53
  1347   000C12  0012               	return	
  1348   000C14                     l174:
  1349                           
  1350                           ;Laboratorio4.c: 156: else if(RB6==0) return '6';
  1351   000C14  BC81               	btfsc	3969,6,c	;volatile
  1352   000C16  D002               	goto	l176
  1353   000C18  0E36               	movlw	54
  1354   000C1A  0012               	return	
  1355   000C1C                     l176:
  1356                           
  1357                           ;Laboratorio4.c: 157: else if(RB7==0) return '-';
  1358   000C1C  BE81               	btfsc	3969,7,c	;volatile
  1359   000C1E  D002               	goto	l1118
  1360   000C20  0E2D               	movlw	45
  1361   000C22  0012               	return	
  1362   000C24                     l1118:
  1363                           
  1364                           ;Laboratorio4.c: 158: else{;Laboratorio4.c: 159: LATB=0b11111011;
  1365   000C24  0EFB               	movlw	251
  1366   000C26  6E8A               	movwf	138,c	;volatile
  1367                           
  1368                           ;Laboratorio4.c: 160: if(RB4==0) return '7';
  1369   000C28  B881               	btfsc	3969,4,c	;volatile
  1370   000C2A  D002               	goto	l180
  1371   000C2C  0E37               	movlw	55
  1372   000C2E  0012               	return	
  1373   000C30                     l180:
  1374                           
  1375                           ;Laboratorio4.c: 161: else if(RB5==0) return '8';
  1376   000C30  BA81               	btfsc	3969,5,c	;volatile
  1377   000C32  D002               	goto	l182
  1378   000C34  0E38               	movlw	56
  1379   000C36  0012               	return	
  1380   000C38                     l182:
  1381                           
  1382                           ;Laboratorio4.c: 162: else if(RB6==0) return '9';
  1383   000C38  BC81               	btfsc	3969,6,c	;volatile
  1384   000C3A  D002               	goto	l184
  1385   000C3C  0E39               	movlw	57
  1386   000C3E  0012               	return	
  1387   000C40                     l184:
  1388                           
  1389                           ;Laboratorio4.c: 163: else if(RB7==0) return '/';
  1390   000C40  BE81               	btfsc	3969,7,c	;volatile
  1391   000C42  D002               	goto	l1146
  1392   000C44  0E2F               	movlw	47
  1393   000C46  0012               	return	
  1394   000C48                     l1146:
  1395                           
  1396                           ;Laboratorio4.c: 164: else{;Laboratorio4.c: 165: LATB=0b11110111;
  1397   000C48  0EF7               	movlw	247
  1398   000C4A  6E8A               	movwf	138,c	;volatile
  1399                           
  1400                           ;Laboratorio4.c: 166: if(RB4==0) return 'C';
  1401   000C4C  B881               	btfsc	3969,4,c	;volatile
  1402   000C4E  D002               	goto	l188
  1403   000C50  0E43               	movlw	67
  1404   000C52  0012               	return	
  1405   000C54                     l188:
  1406                           
  1407                           ;Laboratorio4.c: 167: else if(RB5==0) return '0';
  1408   000C54  BA81               	btfsc	3969,5,c	;volatile
  1409   000C56  D002               	goto	l190
  1410   000C58  0E30               	movlw	48
  1411   000C5A  0012               	return	
  1412   000C5C                     l190:
  1413                           
  1414                           ;Laboratorio4.c: 168: else if(RB6==0) return '=';
  1415   000C5C  BC81               	btfsc	3969,6,c	;volatile
  1416   000C5E  D002               	goto	l192
  1417   000C60  0E3D               	movlw	61
  1418   000C62  0012               	return	
  1419   000C64                     l192:
  1420                           
  1421                           ;Laboratorio4.c: 169: else if(RB7==0) return 'x';
  1422   000C64  BE81               	btfsc	3969,7,c	;volatile
  1423   000C66  D002               	goto	l189
  1424   000C68  0E78               	movlw	120
  1425   000C6A  0012               	return	
  1426   000C6C                     l189:
  1427                           
  1428                           ;Laboratorio4.c: 170: }}};Laboratorio4.c: 171: return '?';
  1429   000C6C  0E3F               	movlw	63
  1430   000C6E  0012               	return		;funcret
  1431   000C70                     __end_of_LeerTeclado:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _InicializaLCD *****************
  1435 ;; Defined at:
  1436 ;;		line 71 in file "LibLCDXC8.h"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 3
  1457 ;; This function calls:
  1458 ;;		_BorraLCD
  1459 ;;		_EnviaDato
  1460 ;;		_HabilitaLCD
  1461 ;;		_RetardoLCD
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text6
  1468   000D66                     __ptext6:
  1469                           	callstack 0
  1470   000D66                     _InicializaLCD:
  1471                           	callstack 27
  1472                           
  1473                           ;LibLCDXC8.h: 73: LATE0=0;
  1474                           
  1475                           ;incstack = 0
  1476   000D66  908D               	bcf	3981,0,c	;volatile
  1477                           
  1478                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1479                           
  1480                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1481   000D68  0E3F               	movlw	63
  1482   000D6A  6E8C               	movwf	140,c	;volatile
  1483                           
  1484                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1485   000D6C  EC22  F007         	call	_HabilitaLCD	;wreg free
  1486                           
  1487                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1488   000D70  0E01               	movlw	1
  1489   000D72  EC38  F006         	call	_RetardoLCD
  1490                           
  1491                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1492                           
  1493                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1494   000D76  0E3F               	movlw	63
  1495   000D78  6E8C               	movwf	140,c	;volatile
  1496                           
  1497                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1498   000D7A  EC22  F007         	call	_HabilitaLCD	;wreg free
  1499                           
  1500                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1501   000D7E  0E03               	movlw	3
  1502   000D80  EC38  F006         	call	_RetardoLCD
  1503                           
  1504                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1505                           
  1506                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1507   000D84  0E3F               	movlw	63
  1508   000D86  6E8C               	movwf	140,c	;volatile
  1509                           
  1510                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1511   000D88  EC22  F007         	call	_HabilitaLCD	;wreg free
  1512                           
  1513                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1514   000D8C  0E04               	movlw	4
  1515   000D8E  EC38  F006         	call	_RetardoLCD
  1516                           
  1517                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1518                           
  1519                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1520   000D92  EC18  F007         	call	_BorraLCD	;wreg free
  1521                           
  1522                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1523   000D96  0E0F               	movlw	15
  1524   000D98  EC29  F007         	call	_EnviaDato
  1525                           
  1526                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1527   000D9C  EC22  F007         	call	_HabilitaLCD	;wreg free
  1528                           
  1529                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1530   000DA0  0E04               	movlw	4
  1531   000DA2  EC38  F006         	call	_RetardoLCD
  1532   000DA6  0012               	return		;funcret
  1533   000DA8                     __end_of_InicializaLCD:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _BorraLCD *****************
  1537 ;; Defined at:
  1538 ;;		line 112 in file "LibLCDXC8.h"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 2
  1559 ;; This function calls:
  1560 ;;		_EnviaDato
  1561 ;;		_HabilitaLCD
  1562 ;;		_RetardoLCD
  1563 ;; This function is called by:
  1564 ;;		_InicializaLCD
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text7
  1570   000E30                     __ptext7:
  1571                           	callstack 0
  1572   000E30                     _BorraLCD:
  1573                           	callstack 27
  1574                           
  1575                           ;LibLCDXC8.h: 114: LATE0=0;
  1576                           
  1577                           ;incstack = 0
  1578   000E30  908D               	bcf	3981,0,c	;volatile
  1579                           
  1580                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1581   000E32  0E01               	movlw	1
  1582   000E34  EC29  F007         	call	_EnviaDato
  1583                           
  1584                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1585   000E38  EC22  F007         	call	_HabilitaLCD	;wreg free
  1586                           
  1587                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1588   000E3C  0E02               	movlw	2
  1589   000E3E  EC38  F006         	call	_RetardoLCD
  1590   000E42  0012               	return		;funcret
  1591   000E44                     __end_of_BorraLCD:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _DireccionaLCD *****************
  1595 ;; Defined at:
  1596 ;;		line 250 in file "LibLCDXC8.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  a               1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  a               1    3[COMRAM] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0
  1611 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1613 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1614 ;;Total ram usage:        1 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 2
  1617 ;; This function calls:
  1618 ;;		_EnviaDato
  1619 ;;		_HabilitaLCD
  1620 ;;		_RetardoLCD
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text8
  1627   000E1A                     __ptext8:
  1628                           	callstack 0
  1629   000E1A                     _DireccionaLCD:
  1630                           	callstack 28
  1631                           
  1632                           ;incstack = 0
  1633                           ;DireccionaLCD@a stored from wreg
  1634   000E1A  6E0F               	movwf	DireccionaLCD@a^0,c
  1635                           
  1636                           ;LibLCDXC8.h: 253: LATE0=0;
  1637   000E1C  908D               	bcf	3981,0,c	;volatile
  1638                           
  1639                           ;LibLCDXC8.h: 254: EnviaDato(a);
  1640   000E1E  500F               	movf	DireccionaLCD@a^0,w,c
  1641   000E20  EC29  F007         	call	_EnviaDato
  1642                           
  1643                           ;LibLCDXC8.h: 255: HabilitaLCD();
  1644   000E24  EC22  F007         	call	_HabilitaLCD	;wreg free
  1645                           
  1646                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  1647   000E28  0E04               	movlw	4
  1648   000E2A  EC38  F006         	call	_RetardoLCD
  1649   000E2E  0012               	return		;funcret
  1650   000E30                     __end_of_DireccionaLCD:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _EnviaDato *****************
  1654 ;; Defined at:
  1655 ;;		line 59 in file "LibLCDXC8.h"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  a               1    wreg     unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  a               1    2[COMRAM] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        1 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 1
  1676 ;; This function calls:
  1677 ;;		_HabilitaLCD
  1678 ;;		_RetardoLCD
  1679 ;; This function is called by:
  1680 ;;		_InicializaLCD
  1681 ;;		_BorraLCD
  1682 ;;		_EscribeLCD_c
  1683 ;;		_DireccionaLCD
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text9
  1688   000E52                     __ptext9:
  1689                           	callstack 0
  1690   000E52                     _EnviaDato:
  1691                           	callstack 27
  1692                           
  1693                           ;incstack = 0
  1694                           ;EnviaDato@a stored from wreg
  1695   000E52  6E0E               	movwf	EnviaDato@a^0,c
  1696                           
  1697                           ;LibLCDXC8.h: 68: LATD=a;
  1698                           
  1699                           ;LibLCDXC8.h: 60: if(interfaz==4){
  1700   000E54  C00E  FF8C         	movff	EnviaDato@a,3980	;volatile
  1701   000E58  0012               	return		;funcret
  1702   000E5A                     __end_of_EnviaDato:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _RetardoLCD *****************
  1706 ;; Defined at:
  1707 ;;		line 286 in file "LibLCDXC8.h"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  a               1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  a               1    1[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_EnviaDato
  1731 ;;		_InicializaLCD
  1732 ;;		_BorraLCD
  1733 ;;		_EscribeLCD_c
  1734 ;;		_DireccionaLCD
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text10
  1739   000C70                     __ptext10:
  1740                           	callstack 0
  1741   000C70                     _RetardoLCD:
  1742                           	callstack 28
  1743                           
  1744                           ;incstack = 0
  1745                           ;RetardoLCD@a stored from wreg
  1746   000C70  6E0D               	movwf	RetardoLCD@a^0,c
  1747                           
  1748                           ;LibLCDXC8.h: 287: switch(a){
  1749   000C72  D01B               	goto	l960
  1750   000C74                     l950:
  1751   000C74  0E05               	movlw	5
  1752   000C76  6E0C               	movwf	??_RetardoLCD^0,c
  1753   000C78  0EDE               	movlw	222
  1754   000C7A                     u1037:
  1755   000C7A  2EE8               	decfsz	wreg,f,c
  1756   000C7C  D7FE               	bra	u1037
  1757   000C7E  2E0C               	decfsz	??_RetardoLCD^0,f,c
  1758   000C80  D7FC               	bra	u1037
  1759                           
  1760                           ;LibLCDXC8.h: 290: break;
  1761   000C82  0012               	return	
  1762   000C84                     l952:
  1763   000C84  0E53               	movlw	83
  1764   000C86                     u1047:
  1765   000C86  2EE8               	decfsz	wreg,f,c
  1766   000C88  D7FE               	bra	u1047
  1767   000C8A  F000               	nop	
  1768                           
  1769                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1770   000C8C  0E35               	movlw	53
  1771   000C8E                     u1057:
  1772   000C8E  2EE8               	decfsz	wreg,f,c
  1773   000C90  D7FE               	bra	u1057
  1774   000C92  F000               	nop	
  1775                           
  1776                           ;LibLCDXC8.h: 294: break;
  1777   000C94  0012               	return	
  1778   000C96                     l954:
  1779   000C96  0E08               	movlw	8
  1780   000C98                     u1067:
  1781   000C98  2EE8               	decfsz	wreg,f,c
  1782   000C9A  D7FE               	bra	u1067
  1783   000C9C  F000               	nop	
  1784                           
  1785                           ;LibLCDXC8.h: 297: break;
  1786   000C9E  0012               	return	
  1787   000CA0                     l956:
  1788   000CA0  0E03               	movlw	3
  1789   000CA2                     u1077:
  1790   000CA2  2EE8               	decfsz	wreg,f,c
  1791   000CA4  D7FE               	bra	u1077
  1792   000CA6  F000               	nop	
  1793                           
  1794                           ;LibLCDXC8.h: 300: break;
  1795   000CA8  0012               	return	
  1796   000CAA                     l960:
  1797   000CAA  500D               	movf	RetardoLCD@a^0,w,c
  1798                           
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 4, Range of values is 1 to 4
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte           13     7 (average)
  1804                           ;	Chosen strategy is simple_byte
  1805   000CAC  0A01               	xorlw	1	; case 1
  1806   000CAE  B4D8               	btfsc	status,2,c
  1807   000CB0  D7E1               	goto	l950
  1808   000CB2  0A03               	xorlw	3	; case 2
  1809   000CB4  B4D8               	btfsc	status,2,c
  1810   000CB6  D7E6               	goto	l952
  1811   000CB8  0A01               	xorlw	1	; case 3
  1812   000CBA  B4D8               	btfsc	status,2,c
  1813   000CBC  D7EC               	goto	l954
  1814   000CBE  0A07               	xorlw	7	; case 4
  1815   000CC0  A4D8               	btfss	status,2,c
  1816   000CC2  0012               	return	
  1817   000CC4  D7ED               	goto	l956
  1818   000CC6                     __end_of_RetardoLCD:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _HabilitaLCD *****************
  1822 ;; Defined at:
  1823 ;;		line 105 in file "LibLCDXC8.h"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_EnviaDato
  1847 ;;		_InicializaLCD
  1848 ;;		_BorraLCD
  1849 ;;		_EscribeLCD_c
  1850 ;;		_DireccionaLCD
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text11
  1855   000E44                     __ptext11:
  1856                           	callstack 0
  1857   000E44                     _HabilitaLCD:
  1858                           	callstack 28
  1859                           
  1860                           ;LibLCDXC8.h: 107: LATE1=1;
  1861                           
  1862                           ;incstack = 0
  1863   000E44  828D               	bsf	3981,1,c	;volatile
  1864                           
  1865                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1866   000E46  0E03               	movlw	3
  1867   000E48                     u1087:
  1868   000E48  2EE8               	decfsz	wreg,f,c
  1869   000E4A  D7FE               	bra	u1087
  1870   000E4C  F000               	nop	
  1871                           
  1872                           ;LibLCDXC8.h: 110: LATE1=0;
  1873   000E4E  928D               	bcf	3981,1,c	;volatile
  1874   000E50  0012               	return		;funcret
  1875   000E52                     __end_of_HabilitaLCD:
  1876                           	callstack 0
  1877                           
  1878                           	psect	rparam
  1879   000000                     
  1880                           	psect	idloc
  1881                           
  1882                           ;Config register IDLOC0 @ 0x200000
  1883                           ;	unspecified, using default values
  1884   200000                     	org	2097152
  1885   200000  FF                 	db	255
  1886                           
  1887                           ;Config register IDLOC1 @ 0x200001
  1888                           ;	unspecified, using default values
  1889   200001                     	org	2097153
  1890   200001  FF                 	db	255
  1891                           
  1892                           ;Config register IDLOC2 @ 0x200002
  1893                           ;	unspecified, using default values
  1894   200002                     	org	2097154
  1895   200002  FF                 	db	255
  1896                           
  1897                           ;Config register IDLOC3 @ 0x200003
  1898                           ;	unspecified, using default values
  1899   200003                     	org	2097155
  1900   200003  FF                 	db	255
  1901                           
  1902                           ;Config register IDLOC4 @ 0x200004
  1903                           ;	unspecified, using default values
  1904   200004                     	org	2097156
  1905   200004  FF                 	db	255
  1906                           
  1907                           ;Config register IDLOC5 @ 0x200005
  1908                           ;	unspecified, using default values
  1909   200005                     	org	2097157
  1910   200005  FF                 	db	255
  1911                           
  1912                           ;Config register IDLOC6 @ 0x200006
  1913                           ;	unspecified, using default values
  1914   200006                     	org	2097158
  1915   200006  FF                 	db	255
  1916                           
  1917                           ;Config register IDLOC7 @ 0x200007
  1918                           ;	unspecified, using default values
  1919   200007                     	org	2097159
  1920   200007  FF                 	db	255
  1921                           
  1922                           	psect	config
  1923                           
  1924                           ;Config register CONFIG1L @ 0x300000
  1925                           ;	unspecified, using default values
  1926                           ;	PLL Prescaler Selection bits
  1927                           ;	PLLDIV = 0x0, unprogrammed default
  1928                           ;	System Clock Postscaler Selection bits
  1929                           ;	CPUDIV = 0x0, unprogrammed default
  1930                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1931                           ;	USBDIV = 0x0, unprogrammed default
  1932   300000                     	org	3145728
  1933   300000  00                 	db	0
  1934                           
  1935                           ;Config register CONFIG1H @ 0x300001
  1936                           ;	Oscillator Selection bits
  1937                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1938                           ;	Fail-Safe Clock Monitor Enable bit
  1939                           ;	FCMEN = 0x0, unprogrammed default
  1940                           ;	Internal/External Oscillator Switchover bit
  1941                           ;	IESO = 0x0, unprogrammed default
  1942   300001                     	org	3145729
  1943   300001  09                 	db	9
  1944                           
  1945                           ;Config register CONFIG2L @ 0x300002
  1946                           ;	unspecified, using default values
  1947                           ;	Power-up Timer Enable bit
  1948                           ;	PWRT = 0x1, unprogrammed default
  1949                           ;	Brown-out Reset Enable bits
  1950                           ;	BOR = 0x3, unprogrammed default
  1951                           ;	Brown-out Reset Voltage bits
  1952                           ;	BORV = 0x3, unprogrammed default
  1953                           ;	USB Voltage Regulator Enable bit
  1954                           ;	VREGEN = 0x0, unprogrammed default
  1955   300002                     	org	3145730
  1956   300002  1F                 	db	31
  1957                           
  1958                           ;Config register CONFIG2H @ 0x300003
  1959                           ;	Watchdog Timer Enable bit
  1960                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1961                           ;	Watchdog Timer Postscale Select bits
  1962                           ;	WDTPS = 0xF, unprogrammed default
  1963   300003                     	org	3145731
  1964   300003  1E                 	db	30
  1965                           
  1966                           ; Padding undefined space
  1967   300004                     	org	3145732
  1968   300004  FF                 	db	255
  1969                           
  1970                           ;Config register CONFIG3H @ 0x300005
  1971                           ;	unspecified, using default values
  1972                           ;	CCP2 MUX bit
  1973                           ;	CCP2MX = 0x1, unprogrammed default
  1974                           ;	PORTB A/D Enable bit
  1975                           ;	PBADEN = 0x1, unprogrammed default
  1976                           ;	Low-Power Timer 1 Oscillator Enable bit
  1977                           ;	LPT1OSC = 0x0, unprogrammed default
  1978                           ;	MCLR Pin Enable bit
  1979                           ;	MCLRE = 0x1, unprogrammed default
  1980   300005                     	org	3145733
  1981   300005  83                 	db	131
  1982                           
  1983                           ;Config register CONFIG4L @ 0x300006
  1984                           ;	unspecified, using default values
  1985                           ;	Stack Full/Underflow Reset Enable bit
  1986                           ;	STVREN = 0x1, unprogrammed default
  1987                           ;	Single-Supply ICSP Enable bit
  1988                           ;	LVP = 0x1, unprogrammed default
  1989                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1990                           ;	ICPRT = 0x0, unprogrammed default
  1991                           ;	Extended Instruction Set Enable bit
  1992                           ;	XINST = 0x0, unprogrammed default
  1993                           ;	Background Debugger Enable bit
  1994                           ;	DEBUG = 0x1, unprogrammed default
  1995   300006                     	org	3145734
  1996   300006  85                 	db	133
  1997                           
  1998                           ; Padding undefined space
  1999   300007                     	org	3145735
  2000   300007  FF                 	db	255
  2001                           
  2002                           ;Config register CONFIG5L @ 0x300008
  2003                           ;	unspecified, using default values
  2004                           ;	Code Protection bit
  2005                           ;	CP0 = 0x1, unprogrammed default
  2006                           ;	Code Protection bit
  2007                           ;	CP1 = 0x1, unprogrammed default
  2008                           ;	Code Protection bit
  2009                           ;	CP2 = 0x1, unprogrammed default
  2010                           ;	Code Protection bit
  2011                           ;	CP3 = 0x1, unprogrammed default
  2012   300008                     	org	3145736
  2013   300008  0F                 	db	15
  2014                           
  2015                           ;Config register CONFIG5H @ 0x300009
  2016                           ;	unspecified, using default values
  2017                           ;	Boot Block Code Protection bit
  2018                           ;	CPB = 0x1, unprogrammed default
  2019                           ;	Data EEPROM Code Protection bit
  2020                           ;	CPD = 0x1, unprogrammed default
  2021   300009                     	org	3145737
  2022   300009  C0                 	db	192
  2023                           
  2024                           ;Config register CONFIG6L @ 0x30000A
  2025                           ;	unspecified, using default values
  2026                           ;	Write Protection bit
  2027                           ;	WRT0 = 0x1, unprogrammed default
  2028                           ;	Write Protection bit
  2029                           ;	WRT1 = 0x1, unprogrammed default
  2030                           ;	Write Protection bit
  2031                           ;	WRT2 = 0x1, unprogrammed default
  2032                           ;	Write Protection bit
  2033                           ;	WRT3 = 0x1, unprogrammed default
  2034   30000A                     	org	3145738
  2035   30000A  0F                 	db	15
  2036                           
  2037                           ;Config register CONFIG6H @ 0x30000B
  2038                           ;	unspecified, using default values
  2039                           ;	Configuration Register Write Protection bit
  2040                           ;	WRTC = 0x1, unprogrammed default
  2041                           ;	Boot Block Write Protection bit
  2042                           ;	WRTB = 0x1, unprogrammed default
  2043                           ;	Data EEPROM Write Protection bit
  2044                           ;	WRTD = 0x1, unprogrammed default
  2045   30000B                     	org	3145739
  2046   30000B  E0                 	db	224
  2047                           
  2048                           ;Config register CONFIG7L @ 0x30000C
  2049                           ;	unspecified, using default values
  2050                           ;	Table Read Protection bit
  2051                           ;	EBTR0 = 0x1, unprogrammed default
  2052                           ;	Table Read Protection bit
  2053                           ;	EBTR1 = 0x1, unprogrammed default
  2054                           ;	Table Read Protection bit
  2055                           ;	EBTR2 = 0x1, unprogrammed default
  2056                           ;	Table Read Protection bit
  2057                           ;	EBTR3 = 0x1, unprogrammed default
  2058   30000C                     	org	3145740
  2059   30000C  0F                 	db	15
  2060                           
  2061                           ;Config register CONFIG7H @ 0x30000D
  2062                           ;	unspecified, using default values
  2063                           ;	Boot Block Table Read Protection bit
  2064                           ;	EBTRB = 0x1, unprogrammed default
  2065   30000D                     	org	3145741
  2066   30000D  40                 	db	64
  2067                           tosu	equ	0xFFF
  2068                           tosh	equ	0xFFE
  2069                           tosl	equ	0xFFD
  2070                           stkptr	equ	0xFFC
  2071                           pclatu	equ	0xFFB
  2072                           pclath	equ	0xFFA
  2073                           pcl	equ	0xFF9
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           indf0	equ	0xFEF
  2081                           postinc0	equ	0xFEE
  2082                           postdec0	equ	0xFED
  2083                           preinc0	equ	0xFEC
  2084                           plusw0	equ	0xFEB
  2085                           fsr0h	equ	0xFEA
  2086                           fsr0l	equ	0xFE9
  2087                           wreg	equ	0xFE8
  2088                           indf1	equ	0xFE7
  2089                           postinc1	equ	0xFE6
  2090                           postdec1	equ	0xFE5
  2091                           preinc1	equ	0xFE4
  2092                           plusw1	equ	0xFE3
  2093                           fsr1h	equ	0xFE2
  2094                           fsr1l	equ	0xFE1
  2095                           bsr	equ	0xFE0
  2096                           indf2	equ	0xFDF
  2097                           postinc2	equ	0xFDE
  2098                           postdec2	equ	0xFDD
  2099                           preinc2	equ	0xFDC
  2100                           plusw2	equ	0xFDB
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1406
                                              8 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lwdiv
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      19       1       26.3%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      28        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 15 14:41:07 2023

                      _i 0005                        _r 0001                       u60 0BDC  
                     _n1 0009                       _n2 0007               EnviaDato@a 000E  
                     _op 0018      ___wmul@multiplicand 000E            ??_LeerTeclado 000C  
          _InicializaLCD 0D66                      l126 0A7A                      l163 0BE8  
                    l180 0C30                      l172 0C0C                      l190 0C5C  
                    l182 0C38                      l174 0C14                      l166 0BF0  
                    l192 0C64                      l184 0C40                      l176 0C1C  
                    l168 0BF8                      l188 0C54                      l189 0C6C  
                    l676 0D0E                      l950 0C74                      l952 0C84  
                    l960 0CAA                      l954 0C96                      l956 0CA0  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      u620 0D64                      u640 0CE8  
                    u740 08F2                      u920 0A90                      u930 0AA2  
                    u690 08CA                      u940 0AB4                      u950 0AEA  
                    u960 0AFC                      u970 0B0E                      _n1c 0017  
                    _n2c 0016                      wreg 000FE8                     l1118 0C24  
                   l1146 0C48                     l1090 0C00                     l1410 0CDC  
                   l1412 0CE4                     l1422 0D04                     l1502 094A  
                   l1512 0978                     l1440 085A                     l1522 09A6  
                   l1540 0A2C                     l1524 09B2                     l1508 0966  
                   l1604 0BBC                     l1390 0D20                     l1534 0A18  
                   l1526 09C8                     l1550 0A56                     l1528 09E6  
                   l1552 0A72                     l1394 0D4E                     l1546 0A44  
                   l1466 08B2                     l1580 0B80                     l1572 0B0E  
                   l1566 0ADA                     l1590 0BA4                     l1486 0904  
                   l1576 0B5A                     l1498 0938                     l1598 0BB4  
                   STR_1 0812                     STR_2 0801                     u1017 084A  
                   u1027 0BC2                     u1037 0C7A                     u1047 0C86  
                   u1057 0C8E                     u1067 0C98                     u1077 0CA2  
                   _LATB 000F8A                     u1087 0E48                     _LATD 000F8C  
                   _RBPU 007F8F           ??_EscribeLCD_c 000F                     _main 081E  
                   fsr1l 000FE1                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           ?_InicializaLCD 000C  
                  ?_main 000C            EscribeLCD_c@a 000F                    _LATE0 007C68  
                  _LATE1 007C69          __end_of___lwdiv 0D18                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _Tecla 000B  
    __end_of_LeerTeclado 0C70                    tablat 000FF5              _HabilitaLCD 0E44  
                  status 000FD8         __end_of_BorraLCD 0E44          __initialization 0DA8  
           __end_of_main 0BCE                   ??_main 0014            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 000F    __end_of_DireccionaLCD 0E30  
             _RetardoLCD 0C70                   ___wmul 0DDE                ??___lwdiv 0010  
        ??_InicializaLCD 000F                   clear_0 0DCE                   isa$std 000001  
   __end_of_EscribeLCD_c 0E1A              _LeerTeclado 0BCE             __pdataCOMRAM 0016  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0DD4  
          ___rparam_used 000001           __pcstackCOMRAM 000C        __end_of_EnviaDato 0E5A  
              ?_BorraLCD 000C              ?_RetardoLCD 000C              RetardoLCD@a 000D  
                ?___wmul 000C               ??_BorraLCD 000F        ??_MensajeLCD_Word 0011  
           ?_HabilitaLCD 000C                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0CC6             __psmallconst 0800                  __pcinit 0DA8  
                __ramtop 0800                  __ptext0 081E                  __ptext1 0DDE  
                __ptext2 0CC6                  __ptext3 0D18                  __ptext4 0E04  
                __ptext5 0BCE                  __ptext6 0D66                  __ptext7 0E30  
                __ptext8 0E1A                  __ptext9 0E52     end_of_initialization 0DD4  
          __Lmediumconst 0000             _EscribeLCD_c 0E04                  postdec1 000FE5  
                postinc0 000FEE             ?_LeerTeclado 000C           __end_of___wmul 0E04  
          __pidataCOMRAM 0E5A    __end_of_InicializaLCD 0DA8                _EnviaDato 0E52  
    start_initialization 0DA8             ??_RetardoLCD 000C                 ??___wmul 0010  
        _MensajeLCD_Word 0D18               ?_EnviaDato 000C              __pbssCOMRAM 0001  
     __end_of_RetardoLCD 0CC6         MensajeLCD_Word@a 0010         MensajeLCD_Word@i 0012  
          _DireccionaLCD 0E1A         ___lwdiv@dividend 000C                 ?___lwdiv 000C  
            __smallconst 0800         ___lwdiv@quotient 0010           ___wmul@product 0010  
         ?_DireccionaLCD 000C  __end_of_MensajeLCD_Word 0D66        ___wmul@multiplier 000C  
            ??_EnviaDato 000E                 _BorraLCD 0E30                copy_data0 0DBC  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 000E  
        ___lwdiv@counter 0012                 __ptext10 0C70                 __ptext11 0E44  
        ??_DireccionaLCD 000F                 _interfaz 0019                 isa$xinst 000000  
       ?_MensajeLCD_Word 0010            ??_HabilitaLCD 000C            ?_EscribeLCD_c 000C  
    __end_of_HabilitaLCD 0E52  

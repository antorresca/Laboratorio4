

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 12 22:08:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.40
    29                           ; Generated 04/07/2022 GMT
    30                           ; 
    31                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   000C64                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _n2c
    69   000C64  20                 	db	32
    70                           
    71                           ;initializer for _n1c
    72   000C65  20                 	db	32
    73                           
    74                           ;initializer for _op
    75   000C66  20                 	db	32
    76                           
    77                           ;initializer for _interfaz
    78   000C67  08                 	db	8
    79   000000                     _RB7	set	31759
    80   000000                     _RB6	set	31758
    81   000000                     _RB5	set	31757
    82   000000                     _LATE1	set	31849
    83   000000                     _LATB	set	3978
    84   000000                     _LATD	set	3980
    85   000000                     _RB4	set	31756
    86   000000                     _TRISB	set	3987
    87   000000                     _TRISD	set	3989
    88   000000                     _ADCON1	set	4033
    89   000000                     _LATE0	set	31848
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92                           
    93                           	psect	smallconst
    94   000800                     __psmallconst:
    95                           	callstack 0
    96   000800  00                 	db	0
    97   000801                     STR_2:
    98   000801  20                 	db	32
    99   000802  20                 	db	32
   100   000803  20                 	db	32
   101   000804  20                 	db	32
   102   000805  20                 	db	32
   103   000806  20                 	db	32
   104   000807  20                 	db	32
   105   000808  20                 	db	32
   106   000809  20                 	db	32
   107   00080A  20                 	db	32
   108   00080B  20                 	db	32
   109   00080C  20                 	db	32
   110   00080D  20                 	db	32
   111   00080E  20                 	db	32
   112   00080F  20                 	db	32
   113   000810  20                 	db	32
   114   000811  00                 	db	0
   115   000812                     STR_1:
   116   000812  48                 	db	72	;'H'
   117   000813  6F                 	db	111	;'o'
   118   000814  6C                 	db	108	;'l'
   119   000815  61                 	db	97	;'a'
   120   000816  20                 	db	32
   121   000817  6D                 	db	109	;'m'
   122   000818  75                 	db	117	;'u'
   123   000819  6E                 	db	110	;'n'
   124   00081A  64                 	db	100	;'d'
   125   00081B  6F                 	db	111	;'o'
   126   00081C  00                 	db	0
   127   00081D  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   000BB2                     __pcinit:
   133                           	callstack 0
   134   000BB2                     start_initialization:
   135                           	callstack 0
   136   000BB2                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (4 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141   000BB2  0E64               	movlw	low __pidataCOMRAM
   142   000BB4  6EF6               	movwf	tblptrl,c
   143   000BB6  0E0C               	movlw	high __pidataCOMRAM
   144   000BB8  6EF7               	movwf	tblptrh,c
   145   000BBA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146   000BBC  6EF8               	movwf	tblptru,c
   147   000BBE  EE00  F014         	lfsr	0,__pdataCOMRAM
   148   000BC2  EE10 F004          	lfsr	1,4
   149   000BC6                     copy_data0:
   150   000BC6  0009               	tblrd		*+
   151   000BC8  CFF5 FFEE          	movff	tablat,postinc0
   152   000BCC  50E5               	movf	postdec1,w,c
   153   000BCE  50E1               	movf	fsr1l,w,c
   154   000BD0  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (9 bytes)
   157   000BD2  EE00  F00B         	lfsr	0,__pbssCOMRAM
   158   000BD6  0E09               	movlw	9
   159   000BD8                     clear_0:
   160   000BD8  6AEE               	clrf	postinc0,c
   161   000BDA  06E8               	decf	wreg,f,c
   162   000BDC  E1FD               	bnz	clear_0
   163   000BDE                     end_of_initialization:
   164                           	callstack 0
   165   000BDE                     __end_of__initialization:
   166                           	callstack 0
   167   000BDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   000BE0  6EF8               	movwf	tblptru,c
   169   000BE2  0100               	movlb	0
   170   000BE4  EF0F  F004         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   00000B                     __pbssCOMRAM:
   174                           	callstack 0
   175   00000B                     _r:
   176                           	callstack 0
   177   00000B                     	ds	4
   178   00000F                     _n2:
   179                           	callstack 0
   180   00000F                     	ds	2
   181   000011                     _n1:
   182                           	callstack 0
   183   000011                     	ds	2
   184   000013                     _Tecla:
   185                           	callstack 0
   186   000013                     	ds	1
   187                           
   188                           	psect	dataCOMRAM
   189   000014                     __pdataCOMRAM:
   190                           	callstack 0
   191   000014                     _n2c:
   192                           	callstack 0
   193   000014                     	ds	1
   194   000015                     _n1c:
   195                           	callstack 0
   196   000015                     	ds	1
   197   000016                     _op:
   198                           	callstack 0
   199   000016                     	ds	1
   200   000017                     _interfaz:
   201                           	callstack 0
   202   000017                     	ds	1
   203                           
   204                           	psect	cstackCOMRAM
   205   000001                     __pcstackCOMRAM:
   206                           	callstack 0
   207   000001                     ??_RetardoLCD:
   208   000001                     ?___wmul:
   209                           	callstack 0
   210   000001                     ?___lwdiv:
   211                           	callstack 0
   212   000001                     ___wmul@multiplier:
   213                           	callstack 0
   214   000001                     ___lwdiv@dividend:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218   000001                     	ds	1
   219   000002                     RetardoLCD@a:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x1
   223   000002                     	ds	1
   224   000003                     EnviaDato@a:
   225                           	callstack 0
   226   000003                     ___wmul@multiplicand:
   227                           	callstack 0
   228   000003                     ___lwdiv@divisor:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232   000003                     	ds	1
   233   000004                     EscribeLCD_c@a:
   234                           	callstack 0
   235   000004                     DireccionaLCD@a:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x3
   239   000004                     	ds	1
   240   000005                     MensajeLCD_Word@a:
   241                           	callstack 0
   242   000005                     ___wmul@product:
   243                           	callstack 0
   244   000005                     ___lwdiv@quotient:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248   000005                     	ds	1
   249   000006                     ??_MensajeLCD_Word:
   250                           
   251                           ; 1 bytes @ 0x5
   252   000006                     	ds	1
   253   000007                     ___lwdiv@counter:
   254                           	callstack 0
   255   000007                     MensajeLCD_Word@i:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x6
   259   000007                     	ds	2
   260   000009                     ??_main:
   261                           
   262                           ; 1 bytes @ 0x8
   263   000009                     	ds	2
   264                           
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 16 in file "Laboratorio4.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   284 ;;      Params:         0       0       0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0       0       0
   286 ;;      Temps:          2       0       0       0       0       0       0       0       0
   287 ;;      Totals:         2       0       0       0       0       0       0       0       0
   288 ;;Total ram usage:        2 bytes
   289 ;; Hardware stack levels required when called: 4
   290 ;; This function calls:
   291 ;;		_BorraLCD
   292 ;;		_DireccionaLCD
   293 ;;		_EscribeLCD_c
   294 ;;		_InicializaLCD
   295 ;;		_LeerTeclado
   296 ;;		_MensajeLCD_Word
   297 ;;		___lwdiv
   298 ;;		___wmul
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305   00081E                     __ptext0:
   306                           	callstack 0
   307   00081E                     _main:
   308                           	callstack 27
   309                           
   310                           ;Laboratorio4.c: 17: ADCON1=15;
   311                           
   312                           ;incstack = 0
   313   00081E  0E0F               	movlw	15
   314   000820  6EC1               	movwf	193,c	;volatile
   315                           
   316                           ;Laboratorio4.c: 18: TRISD=0;
   317   000822  0E00               	movlw	0
   318   000824  6E95               	movwf	149,c	;volatile
   319                           
   320                           ;Laboratorio4.c: 19: TRISB=0b11110000;
   321   000826  0EF0               	movlw	240
   322   000828  6E93               	movwf	147,c	;volatile
   323                           
   324                           ;Laboratorio4.c: 20: TRISE=0;
   325   00082A  0E00               	movlw	0
   326   00082C  6E96               	movwf	150,c	;volatile
   327                           
   328                           ;Laboratorio4.c: 21: RBPU=0;
   329   00082E  9EF1               	bcf	4081,7,c	;volatile
   330                           
   331                           ;Laboratorio4.c: 22: InicializaLCD();
   332   000830  ECB8  F005         	call	_InicializaLCD	;wreg free
   333                           
   334                           ;Laboratorio4.c: 23: BorraLCD();
   335   000834  EC1D  F006         	call	_BorraLCD	;wreg free
   336                           
   337                           ;Laboratorio4.c: 24: MensajeLCD_Word("Hola mundo");
   338   000838  0E12               	movlw	low STR_1
   339   00083A  6E05               	movwf	MensajeLCD_Word@a^0,c
   340   00083C  EC91  F005         	call	_MensajeLCD_Word	;wreg free
   341                           
   342                           ;Laboratorio4.c: 25: _delay((unsigned long)((2000)*(1000000/4000.0)));
   343   000840  0E03               	movlw	3
   344   000842  6E0A               	movwf	(??_main+1)^0,c
   345   000844  0E8A               	movlw	138
   346   000846  6E09               	movwf	??_main^0,c
   347   000848  0E56               	movlw	86
   348   00084A                     u597:
   349   00084A  2EE8               	decfsz	wreg,f,c
   350   00084C  D7FE               	bra	u597
   351   00084E  2E09               	decfsz	??_main^0,f,c
   352   000850  D7FC               	bra	u597
   353   000852  2E0A               	decfsz	(??_main+1)^0,f,c
   354   000854  D7FA               	bra	u597
   355                           
   356                           ;Laboratorio4.c: 26: BorraLCD();
   357   000856  EC1D  F006         	call	_BorraLCD	;wreg free
   358   00085A                     l1324:
   359                           
   360                           ;Laboratorio4.c: 28: LATB=0B00000000;
   361   00085A  0E00               	movlw	0
   362   00085C  6E8A               	movwf	138,c	;volatile
   363                           
   364                           ;Laboratorio4.c: 29: Tecla = LeerTeclado();
   365   00085E  ECEC  F004         	call	_LeerTeclado	;wreg free
   366   000862  6E13               	movwf	_Tecla^0,c
   367                           
   368                           ;Laboratorio4.c: 30: if(Tecla=='C'){
   369   000864  0E43               	movlw	67
   370   000866  1813               	xorwf	_Tecla^0,w,c
   371   000868  A4D8               	btfss	status,2,c
   372   00086A  D00B               	goto	l1336
   373                           
   374                           ;Laboratorio4.c: 31: DireccionaLCD(0xC0);
   375   00086C  0EC0               	movlw	192
   376   00086E  EC12  F006         	call	_DireccionaLCD
   377                           
   378                           ;Laboratorio4.c: 32: MensajeLCD_Word("                ");
   379   000872  0E01               	movlw	low STR_2
   380   000874  6E05               	movwf	MensajeLCD_Word@a^0,c
   381   000876  EC91  F005         	call	_MensajeLCD_Word	;wreg free
   382                           
   383                           ;Laboratorio4.c: 33: DireccionaLCD(0xC0);
   384   00087A  0EC0               	movlw	192
   385   00087C  EC12  F006         	call	_DireccionaLCD
   386                           
   387                           ;Laboratorio4.c: 34: }else{
   388   000880  D7EC               	goto	l1324
   389   000882                     l1336:
   390                           
   391                           ;Laboratorio4.c: 35: if(n1c==' '|n2c==' '|op==' '){
   392   000882  0E20               	movlw	32
   393   000884  1815               	xorwf	_n1c^0,w,c
   394   000886  B4D8               	btfsc	status,2,c
   395   000888  D008               	goto	u480
   396   00088A  0E20               	movlw	32
   397   00088C  1814               	xorwf	_n2c^0,w,c
   398   00088E  B4D8               	btfsc	status,2,c
   399   000890  D004               	goto	u480
   400   000892  0E20               	movlw	32
   401   000894  1816               	xorwf	_op^0,w,c
   402   000896  A4D8               	btfss	status,2,c
   403   000898  D096               	goto	l116
   404   00089A                     u480:
   405                           
   406                           ;Laboratorio4.c: 36: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x')){
   407   00089A  0E20               	movlw	32
   408   00089C  1816               	xorwf	_op^0,w,c
   409   00089E  A4D8               	btfss	status,2,c
   410   0008A0  D016               	goto	l1356
   411   0008A2  0E2B               	movlw	43
   412   0008A4  1813               	xorwf	_Tecla^0,w,c
   413   0008A6  B4D8               	btfsc	status,2,c
   414   0008A8  D00C               	goto	u530
   415   0008AA  0E2D               	movlw	45
   416   0008AC  1813               	xorwf	_Tecla^0,w,c
   417   0008AE  B4D8               	btfsc	status,2,c
   418   0008B0  D008               	goto	u530
   419   0008B2  0E2F               	movlw	47
   420   0008B4  1813               	xorwf	_Tecla^0,w,c
   421   0008B6  B4D8               	btfsc	status,2,c
   422   0008B8  D004               	goto	u530
   423   0008BA  0E78               	movlw	120
   424   0008BC  1813               	xorwf	_Tecla^0,w,c
   425   0008BE  A4D8               	btfss	status,2,c
   426   0008C0  D006               	goto	l1356
   427   0008C2                     u530:
   428                           
   429                           ;Laboratorio4.c: 37: EscribeLCD_c(Tecla);
   430   0008C2  5013               	movf	_Tecla^0,w,c
   431   0008C4  EC07  F006         	call	_EscribeLCD_c
   432                           
   433                           ;Laboratorio4.c: 38: op = Tecla;
   434   0008C8  C013  F016         	movff	_Tecla,_op
   435                           
   436                           ;Laboratorio4.c: 39: }else{
   437   0008CC  D07C               	goto	l116
   438   0008CE                     l1356:
   439                           
   440                           ;Laboratorio4.c: 40: if(Tecla=='='){
   441   0008CE  0E3D               	movlw	61
   442   0008D0  1813               	xorwf	_Tecla^0,w,c
   443   0008D2  A4D8               	btfss	status,2,c
   444   0008D4  D05D               	goto	l1382
   445                           
   446                           ;Laboratorio4.c: 41: if(n1c!=' ' & n2c!=' ' & op==' '){
   447   0008D6  0E20               	movlw	32
   448   0008D8  1815               	xorwf	_n1c^0,w,c
   449   0008DA  B4D8               	btfsc	status,2,c
   450   0008DC  D074               	goto	l116
   451   0008DE  0E20               	movlw	32
   452   0008E0  1814               	xorwf	_n2c^0,w,c
   453   0008E2  B4D8               	btfsc	status,2,c
   454   0008E4  D070               	goto	l116
   455   0008E6  0E20               	movlw	32
   456   0008E8  1816               	xorwf	_op^0,w,c
   457   0008EA  A4D8               	btfss	status,2,c
   458   0008EC  D06C               	goto	l116
   459                           
   460                           ;Laboratorio4.c: 42: EscribeLCD_c('=');
   461   0008EE  0E3D               	movlw	61
   462   0008F0  EC07  F006         	call	_EscribeLCD_c
   463                           
   464                           ;Laboratorio4.c: 43: switch(op){
   465   0008F4  D03A               	goto	l1378
   466   0008F6                     l1366:
   467   0008F6  500F               	movf	_n2^0,w,c
   468   0008F8  2411               	addwf	_n1^0,w,c
   469   0008FA  6E09               	movwf	??_main^0,c
   470   0008FC  5010               	movf	(_n2+1)^0,w,c
   471   0008FE  2012               	addwfc	(_n1+1)^0,w,c
   472   000900  D005               	goto	L1
   473   000902                     l1368:
   474   000902  500F               	movf	_n2^0,w,c
   475   000904  5C11               	subwf	_n1^0,w,c
   476   000906  6E09               	movwf	??_main^0,c
   477   000908  5010               	movf	(_n2+1)^0,w,c
   478   00090A  5812               	subwfb	(_n1+1)^0,w,c
   479   00090C                     L1:
   480   00090C  6E0A               	movwf	(??_main+1)^0,c
   481   00090E  C009  F00B         	movff	??_main,_r
   482   000912  C00A  F00C         	movff	??_main+1,_r+1
   483   000916  D01D               	goto	L3
   484   000918                     l1370:
   485   000918  C011  F001         	movff	_n1,___wmul@multiplier
   486   00091C  C012  F002         	movff	_n1+1,___wmul@multiplier+1
   487   000920  C00F  F003         	movff	_n2,___wmul@multiplicand
   488   000924  C010  F004         	movff	_n2+1,___wmul@multiplicand+1
   489   000928  ECF4  F005         	call	___wmul	;wreg free
   490   00092C  C001  F00B         	movff	?___wmul,_r
   491   000930  C002  F00C         	movff	?___wmul+1,_r+1
   492   000934  D00E               	goto	L3
   493   000936                     l1372:
   494   000936  C011  F001         	movff	_n1,___lwdiv@dividend
   495   00093A  C012  F002         	movff	_n1+1,___lwdiv@dividend+1
   496   00093E  C00F  F003         	movff	_n2,___lwdiv@divisor
   497   000942  C010  F004         	movff	_n2+1,___lwdiv@divisor+1
   498   000946  EC68  F005         	call	___lwdiv	;wreg free
   499   00094A  C001  F00B         	movff	?___lwdiv,_r
   500   00094E  C002  F00C         	movff	?___lwdiv+1,_r+1
   501   000952                     L3:
   502   000952  6A0D               	clrf	(_r+2)^0,c
   503   000954  6A0E               	clrf	(_r+3)^0,c
   504                           
   505                           ;Laboratorio4.c: 51: break;
   506   000956  D017               	goto	l1380
   507   000958                     l1374:
   508                           
   509                           ;Laboratorio4.c: 53: r = 0;
   510   000958  0E00               	movlw	0
   511   00095A  6E0B               	movwf	_r^0,c
   512   00095C  0E00               	movlw	0
   513   00095E  6E0C               	movwf	(_r+1)^0,c
   514   000960  0E00               	movlw	0
   515   000962  6E0D               	movwf	(_r+2)^0,c
   516   000964  0E00               	movlw	0
   517   000966  6E0E               	movwf	(_r+3)^0,c
   518                           
   519                           ;Laboratorio4.c: 54: break;
   520   000968  D00E               	goto	l1380
   521   00096A                     l1378:
   522   00096A  5016               	movf	_op^0,w,c
   523                           
   524                           ; Switch size 1, requested type "simple"
   525                           ; Number of cases is 4, Range of values is 43 to 120
   526                           ; switch strategies available:
   527                           ; Name         Instructions Cycles
   528                           ; simple_byte           13     7 (average)
   529                           ;	Chosen strategy is simple_byte
   530   00096C  0A2B               	xorlw	43	; case 43
   531   00096E  B4D8               	btfsc	status,2,c
   532   000970  D7C2               	goto	l1366
   533   000972  0A06               	xorlw	6	; case 45
   534   000974  B4D8               	btfsc	status,2,c
   535   000976  D7C5               	goto	l1368
   536   000978  0A02               	xorlw	2	; case 47
   537   00097A  B4D8               	btfsc	status,2,c
   538   00097C  D7DC               	goto	l1372
   539   00097E  0A57               	xorlw	87	; case 120
   540   000980  B4D8               	btfsc	status,2,c
   541   000982  D7CA               	goto	l1370
   542   000984  D7E9               	goto	l1374
   543   000986                     l1380:
   544                           
   545                           ;Laboratorio4.c: 56: EscribeLCD_c(r+'0');
   546   000986  500B               	movf	_r^0,w,c
   547   000988  0F30               	addlw	48
   548   00098A  EC07  F006         	call	_EscribeLCD_c
   549   00098E  D01B               	goto	l116
   550   000990                     l1382:
   551                           
   552                           ;Laboratorio4.c: 59: if(n1c==' '){
   553   000990  0E20               	movlw	32
   554   000992  1815               	xorwf	_n1c^0,w,c
   555   000994  A4D8               	btfss	status,2,c
   556   000996  D00C               	goto	l1390
   557                           
   558                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   559   000998  5013               	movf	_Tecla^0,w,c
   560   00099A  EC07  F006         	call	_EscribeLCD_c
   561                           
   562                           ;Laboratorio4.c: 61: n1c=Tecla;
   563   00099E  C013  F015         	movff	_Tecla,_n1c
   564                           
   565                           ;Laboratorio4.c: 62: n1 = Tecla-'0';
   566   0009A2  0ED0               	movlw	208
   567   0009A4  2413               	addwf	_Tecla^0,w,c
   568   0009A6  6E11               	movwf	_n1^0,c
   569   0009A8  6A12               	clrf	(_n1+1)^0,c
   570   0009AA  0EFF               	movlw	255
   571   0009AC  2212               	addwfc	(_n1+1)^0,f,c
   572                           
   573                           ;Laboratorio4.c: 63: }else{
   574   0009AE  D00B               	goto	l116
   575   0009B0                     l1390:
   576                           
   577                           ;Laboratorio4.c: 64: EscribeLCD_c(Tecla);
   578   0009B0  5013               	movf	_Tecla^0,w,c
   579   0009B2  EC07  F006         	call	_EscribeLCD_c
   580                           
   581                           ;Laboratorio4.c: 65: n2c=Tecla;
   582   0009B6  C013  F014         	movff	_Tecla,_n2c
   583                           
   584                           ;Laboratorio4.c: 66: n2 = Tecla-'0';
   585   0009BA  0ED0               	movlw	208
   586   0009BC  2413               	addwf	_Tecla^0,w,c
   587   0009BE  6E0F               	movwf	_n2^0,c
   588   0009C0  6A10               	clrf	(_n2+1)^0,c
   589   0009C2  0EFF               	movlw	255
   590   0009C4  2210               	addwfc	(_n2+1)^0,f,c
   591   0009C6                     l116:
   592                           
   593                           ;Laboratorio4.c: 67: };Laboratorio4.c: 68: };Laboratorio4.c: 69: };Laboratorio4.c: 70: }
      +                          ;Laboratorio4.c: 71: _delay((unsigned long)((700)*(1000000/4000.0)));
   594   0009C6  0EE4               	movlw	228
   595   0009C8  6E09               	movwf	??_main^0,c
   596   0009CA  0E44               	movlw	68
   597   0009CC                     u607:
   598   0009CC  2EE8               	decfsz	wreg,f,c
   599   0009CE  D7FE               	bra	u607
   600   0009D0  2E09               	decfsz	??_main^0,f,c
   601   0009D2  D7FC               	bra	u607
   602   0009D4  D000               	nop2	
   603   0009D6  D741               	goto	l1324
   604   0009D8                     __end_of_main:
   605                           	callstack 0
   606                           
   607 ;; *************** function ___wmul *****************
   608 ;; Defined at:
   609 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  multiplier      2    0[COMRAM] unsigned int 
   612 ;;  multiplicand    2    2[COMRAM] unsigned int 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  product         2    4[COMRAM] unsigned int 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    0[COMRAM] unsigned int 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, prodl, prodh
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   624 ;;      Params:         4       0       0       0       0       0       0       0       0
   625 ;;      Locals:         2       0       0       0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0
   627 ;;      Totals:         6       0       0       0       0       0       0       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text1
   638   000BE8                     __ptext1:
   639                           	callstack 0
   640   000BE8                     ___wmul:
   641                           	callstack 30
   642                           
   643                           ;incstack = 0
   644   000BE8  5001               	movf	___wmul@multiplier^0,w,c
   645   000BEA  0203               	mulwf	___wmul@multiplicand^0,c
   646   000BEC  CFF3 F005          	movff	prodl,___wmul@product
   647   000BF0  CFF4 F006          	movff	prodh,___wmul@product+1
   648   000BF4  5001               	movf	___wmul@multiplier^0,w,c
   649   000BF6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   650   000BF8  50F3               	movf	243,w,c
   651   000BFA  2606               	addwf	(___wmul@product+1)^0,f,c
   652   000BFC  5002               	movf	(___wmul@multiplier+1)^0,w,c
   653   000BFE  0203               	mulwf	___wmul@multiplicand^0,c
   654   000C00  50F3               	movf	243,w,c
   655   000C02  2606               	addwf	(___wmul@product+1)^0,f,c
   656   000C04  C005  F001         	movff	___wmul@product,?___wmul
   657   000C08  C006  F002         	movff	___wmul@product+1,?___wmul+1
   658   000C0C  0012               	return		;funcret
   659   000C0E                     __end_of___wmul:
   660                           	callstack 0
   661                           
   662 ;; *************** function ___lwdiv *****************
   663 ;; Defined at:
   664 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  dividend        2    0[COMRAM] unsigned int 
   667 ;;  divisor         2    2[COMRAM] unsigned int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  quotient        2    4[COMRAM] unsigned int 
   670 ;;  counter         1    6[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2    0[COMRAM] unsigned int 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         4       0       0       0       0       0       0       0       0
   681 ;;      Locals:         3       0       0       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0
   683 ;;      Totals:         7       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        7 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text2
   694   000AD0                     __ptext2:
   695                           	callstack 0
   696   000AD0                     ___lwdiv:
   697                           	callstack 30
   698                           
   699                           ;incstack = 0
   700   000AD0  0E00               	movlw	0
   701   000AD2  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   702   000AD4  0E00               	movlw	0
   703   000AD6  6E05               	movwf	___lwdiv@quotient^0,c
   704   000AD8  5003               	movf	___lwdiv@divisor^0,w,c
   705   000ADA  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   706   000ADC  B4D8               	btfsc	status,2,c
   707   000ADE  D01C               	goto	l652
   708   000AE0  0E01               	movlw	1
   709   000AE2  6E07               	movwf	___lwdiv@counter^0,c
   710   000AE4  D004               	goto	l1296
   711   000AE6                     l1294:
   712   000AE6  90D8               	bcf	status,0,c
   713   000AE8  3603               	rlcf	___lwdiv@divisor^0,f,c
   714   000AEA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   715   000AEC  2A07               	incf	___lwdiv@counter^0,f,c
   716   000AEE                     l1296:
   717   000AEE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   718   000AF0  D7FA               	goto	l1294
   719   000AF2                     u430:
   720   000AF2  90D8               	bcf	status,0,c
   721   000AF4  3605               	rlcf	___lwdiv@quotient^0,f,c
   722   000AF6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   723   000AF8  5003               	movf	___lwdiv@divisor^0,w,c
   724   000AFA  5C01               	subwf	___lwdiv@dividend^0,w,c
   725   000AFC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   726   000AFE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   727   000B00  A0D8               	btfss	status,0,c
   728   000B02  D005               	goto	l1306
   729   000B04  5003               	movf	___lwdiv@divisor^0,w,c
   730   000B06  5E01               	subwf	___lwdiv@dividend^0,f,c
   731   000B08  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   732   000B0A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   733   000B0C  8005               	bsf	___lwdiv@quotient^0,0,c
   734   000B0E                     l1306:
   735   000B0E  90D8               	bcf	status,0,c
   736   000B10  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   737   000B12  3203               	rrcf	___lwdiv@divisor^0,f,c
   738   000B14  2E07               	decfsz	___lwdiv@counter^0,f,c
   739   000B16  D7ED               	goto	u430
   740   000B18                     l652:
   741   000B18  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   742   000B1C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   743   000B20  0012               	return		;funcret
   744   000B22                     __end_of___lwdiv:
   745                           	callstack 0
   746                           
   747 ;; *************** function _MensajeLCD_Word *****************
   748 ;; Defined at:
   749 ;;		line 239 in file "LibLCDXC8.h"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  a               1    4[COMRAM] PTR unsigned char 
   752 ;;		 -> STR_2(17), STR_1(11), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  i               2    6[COMRAM] int 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         1       0       0       0       0       0       0       0       0
   765 ;;      Locals:         2       0       0       0       0       0       0       0       0
   766 ;;      Temps:          1       0       0       0       0       0       0       0       0
   767 ;;      Totals:         4       0       0       0       0       0       0       0       0
   768 ;;Total ram usage:        4 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 3
   771 ;; This function calls:
   772 ;;		_EscribeLCD_c
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text3
   779   000B22                     __ptext3:
   780                           	callstack 0
   781   000B22                     _MensajeLCD_Word:
   782                           	callstack 27
   783                           
   784                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
   785                           
   786                           ;incstack = 0
   787   000B22  0E00               	movlw	0
   788   000B24  6E08               	movwf	(MensajeLCD_Word@i+1)^0,c
   789   000B26  0E00               	movlw	0
   790   000B28  6E07               	movwf	MensajeLCD_Word@i^0,c
   791   000B2A                     l1274:
   792                           
   793                           ;LibLCDXC8.h: 244: if(a[i]!=0){
   794   000B2A  5005               	movf	MensajeLCD_Word@a^0,w,c
   795   000B2C  2407               	addwf	MensajeLCD_Word@i^0,w,c
   796   000B2E  6E06               	movwf	??_MensajeLCD_Word^0,c
   797   000B30  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
   798   000B34                     	if	1	;There is more than 1 active tblptr byte
   799   000B34  0E08               	movlw	high __smallconst
   800   000B36  6EF7               	movwf	tblptrh,c
   801   000B38                     	endif
   802   000B38                     	if	0	;tblptru may be non-zero
   803   000B38                     	endif
   804   000B38                     	if	0	;tblptru may be non-zero
   805   000B38                     	endif
   806   000B38  0008               	tblrd		*
   807   000B3A  50F5               	movf	tablat,w,c
   808   000B3C  0900               	iorlw	0
   809   000B3E  B4D8               	btfsc	status,2,c
   810   000B40  D00B               	goto	l1278
   811                           
   812                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
   813   000B42  5005               	movf	MensajeLCD_Word@a^0,w,c
   814   000B44  2407               	addwf	MensajeLCD_Word@i^0,w,c
   815   000B46  6E06               	movwf	??_MensajeLCD_Word^0,c
   816   000B48  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
   817   000B4C                     	if	1	;There is more than 1 active tblptr byte
   818   000B4C  0E08               	movlw	high __smallconst
   819   000B4E  6EF7               	movwf	tblptrh,c
   820   000B50                     	endif
   821   000B50                     	if	0	;tblptru may be non-zero
   822   000B50                     	endif
   823   000B50                     	if	0	;tblptru may be non-zero
   824   000B50                     	endif
   825   000B50  0008               	tblrd		*
   826   000B52  50F5               	movf	tablat,w,c
   827   000B54  EC07  F006         	call	_EscribeLCD_c
   828   000B58                     l1278:
   829   000B58  4A07               	infsnz	MensajeLCD_Word@i^0,f,c
   830   000B5A  2A08               	incf	(MensajeLCD_Word@i+1)^0,f,c
   831   000B5C  BE08               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
   832   000B5E  D7E5               	goto	l1274
   833   000B60  5008               	movf	(MensajeLCD_Word@i+1)^0,w,c
   834   000B62  E105               	bnz	u410
   835   000B64  0E10               	movlw	16
   836   000B66  5C07               	subwf	MensajeLCD_Word@i^0,w,c
   837   000B68  B0D8               	btfsc	status,0,c
   838   000B6A  0012               	return	
   839   000B6C  D7DE               	goto	l1274
   840   000B6E                     u410:
   841   000B6E  0012               	return		;funcret
   842   000B70                     __end_of_MensajeLCD_Word:
   843                           	callstack 0
   844                           
   845 ;; *************** function _EscribeLCD_c *****************
   846 ;; Defined at:
   847 ;;		line 140 in file "LibLCDXC8.h"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  a               1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  a               1    3[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         1       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 2
   868 ;; This function calls:
   869 ;;		_EnviaDato
   870 ;;		_HabilitaLCD
   871 ;;		_RetardoLCD
   872 ;; This function is called by:
   873 ;;		_MensajeLCD_Word
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879   000C0E                     __ptext4:
   880                           	callstack 0
   881   000C0E                     _EscribeLCD_c:
   882                           	callstack 27
   883                           
   884                           ;incstack = 0
   885                           ;EscribeLCD_c@a stored from wreg
   886   000C0E  6E04               	movwf	EscribeLCD_c@a^0,c
   887                           
   888                           ;LibLCDXC8.h: 144: LATE0=1;
   889   000C10  808D               	bsf	3981,0,c	;volatile
   890                           
   891                           ;LibLCDXC8.h: 145: EnviaDato(a);
   892   000C12  5004               	movf	EscribeLCD_c@a^0,w,c
   893   000C14  EC2E  F006         	call	_EnviaDato
   894                           
   895                           ;LibLCDXC8.h: 146: HabilitaLCD();
   896   000C18  EC27  F006         	call	_HabilitaLCD	;wreg free
   897                           
   898                           ;LibLCDXC8.h: 147: RetardoLCD(4);
   899   000C1C  0E04               	movlw	4
   900   000C1E  EC3D  F005         	call	_RetardoLCD
   901   000C22  0012               	return		;funcret
   902   000C24                     __end_of_EscribeLCD_c:
   903                           	callstack 0
   904                           
   905 ;; *************** function _LeerTeclado *****************
   906 ;; Defined at:
   907 ;;		line 75 in file "Laboratorio4.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      unsigned char 
   914 ;; Registers used:
   915 ;;		wreg, status,2
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   921 ;;      Params:         0       0       0       0       0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text5
   935   0009D8                     __ptext5:
   936                           	callstack 0
   937   0009D8                     _LeerTeclado:
   938                           	callstack 30
   939                           
   940                           ;Laboratorio4.c: 76: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
   941                           
   942                           ;incstack = 0
   943   0009D8  B881               	btfsc	3969,4,c	;volatile
   944   0009DA  AA81               	btfss	3969,5,c	;volatile
   945   0009DC  D004               	goto	u60
   946   0009DE  AC81               	btfss	3969,6,c	;volatile
   947   0009E0  D002               	goto	u60
   948   0009E2  BE81               	btfsc	3969,7,c	;volatile
   949   0009E4  D7F9               	goto	__ptext5
   950   0009E6                     u60:
   951                           
   952                           ;Laboratorio4.c: 77: LATB=0b11111110;
   953   0009E6  0EFE               	movlw	254
   954   0009E8  6E8A               	movwf	138,c	;volatile
   955                           
   956                           ;Laboratorio4.c: 78: if(RB4==0) return '1';
   957   0009EA  B881               	btfsc	3969,4,c	;volatile
   958   0009EC  D002               	goto	l139
   959   0009EE  0E31               	movlw	49
   960   0009F0  0012               	return	
   961   0009F2                     l139:
   962                           
   963                           ;Laboratorio4.c: 79: else if(RB5==0) return '2';
   964   0009F2  BA81               	btfsc	3969,5,c	;volatile
   965   0009F4  D002               	goto	l142
   966   0009F6  0E32               	movlw	50
   967   0009F8  0012               	return	
   968   0009FA                     l142:
   969                           
   970                           ;Laboratorio4.c: 80: else if(RB6==0) return '3';
   971   0009FA  BC81               	btfsc	3969,6,c	;volatile
   972   0009FC  D002               	goto	l144
   973   0009FE  0E33               	movlw	51
   974   000A00  0012               	return	
   975   000A02                     l144:
   976                           
   977                           ;Laboratorio4.c: 81: else if(RB7==0) return '+';
   978   000A02  BE81               	btfsc	3969,7,c	;volatile
   979   000A04  D002               	goto	l1066
   980   000A06  0E2B               	movlw	43
   981   000A08  0012               	return	
   982   000A0A                     l1066:
   983                           
   984                           ;Laboratorio4.c: 82: else{;Laboratorio4.c: 83: LATB=0b11111101;
   985   000A0A  0EFD               	movlw	253
   986   000A0C  6E8A               	movwf	138,c	;volatile
   987                           
   988                           ;Laboratorio4.c: 84: if(RB4==0) return '4';
   989   000A0E  B881               	btfsc	3969,4,c	;volatile
   990   000A10  D002               	goto	l148
   991   000A12  0E34               	movlw	52
   992   000A14  0012               	return	
   993   000A16                     l148:
   994                           
   995                           ;Laboratorio4.c: 85: else if(RB5==0) return '5';
   996   000A16  BA81               	btfsc	3969,5,c	;volatile
   997   000A18  D002               	goto	l150
   998   000A1A  0E35               	movlw	53
   999   000A1C  0012               	return	
  1000   000A1E                     l150:
  1001                           
  1002                           ;Laboratorio4.c: 86: else if(RB6==0) return '6';
  1003   000A1E  BC81               	btfsc	3969,6,c	;volatile
  1004   000A20  D002               	goto	l152
  1005   000A22  0E36               	movlw	54
  1006   000A24  0012               	return	
  1007   000A26                     l152:
  1008                           
  1009                           ;Laboratorio4.c: 87: else if(RB7==0) return '-';
  1010   000A26  BE81               	btfsc	3969,7,c	;volatile
  1011   000A28  D002               	goto	l1094
  1012   000A2A  0E2D               	movlw	45
  1013   000A2C  0012               	return	
  1014   000A2E                     l1094:
  1015                           
  1016                           ;Laboratorio4.c: 88: else{;Laboratorio4.c: 89: LATB=0b11111011;
  1017   000A2E  0EFB               	movlw	251
  1018   000A30  6E8A               	movwf	138,c	;volatile
  1019                           
  1020                           ;Laboratorio4.c: 90: if(RB4==0) return '7';
  1021   000A32  B881               	btfsc	3969,4,c	;volatile
  1022   000A34  D002               	goto	l156
  1023   000A36  0E37               	movlw	55
  1024   000A38  0012               	return	
  1025   000A3A                     l156:
  1026                           
  1027                           ;Laboratorio4.c: 91: else if(RB5==0) return '8';
  1028   000A3A  BA81               	btfsc	3969,5,c	;volatile
  1029   000A3C  D002               	goto	l158
  1030   000A3E  0E38               	movlw	56
  1031   000A40  0012               	return	
  1032   000A42                     l158:
  1033                           
  1034                           ;Laboratorio4.c: 92: else if(RB6==0) return '9';
  1035   000A42  BC81               	btfsc	3969,6,c	;volatile
  1036   000A44  D002               	goto	l160
  1037   000A46  0E39               	movlw	57
  1038   000A48  0012               	return	
  1039   000A4A                     l160:
  1040                           
  1041                           ;Laboratorio4.c: 93: else if(RB7==0) return '/';
  1042   000A4A  BE81               	btfsc	3969,7,c	;volatile
  1043   000A4C  D002               	goto	l1122
  1044   000A4E  0E2F               	movlw	47
  1045   000A50  0012               	return	
  1046   000A52                     l1122:
  1047                           
  1048                           ;Laboratorio4.c: 94: else{;Laboratorio4.c: 95: LATB=0b11110111;
  1049   000A52  0EF7               	movlw	247
  1050   000A54  6E8A               	movwf	138,c	;volatile
  1051                           
  1052                           ;Laboratorio4.c: 96: if(RB4==0) return 'C';
  1053   000A56  B881               	btfsc	3969,4,c	;volatile
  1054   000A58  D002               	goto	l164
  1055   000A5A  0E43               	movlw	67
  1056   000A5C  0012               	return	
  1057   000A5E                     l164:
  1058                           
  1059                           ;Laboratorio4.c: 97: else if(RB5==0) return '0';
  1060   000A5E  BA81               	btfsc	3969,5,c	;volatile
  1061   000A60  D002               	goto	l166
  1062   000A62  0E30               	movlw	48
  1063   000A64  0012               	return	
  1064   000A66                     l166:
  1065                           
  1066                           ;Laboratorio4.c: 98: else if(RB6==0) return '=';
  1067   000A66  BC81               	btfsc	3969,6,c	;volatile
  1068   000A68  D002               	goto	l168
  1069   000A6A  0E3D               	movlw	61
  1070   000A6C  0012               	return	
  1071   000A6E                     l168:
  1072                           
  1073                           ;Laboratorio4.c: 99: else if(RB7==0) return 'x';
  1074   000A6E  BE81               	btfsc	3969,7,c	;volatile
  1075   000A70  D002               	goto	l165
  1076   000A72  0E78               	movlw	120
  1077   000A74  0012               	return	
  1078   000A76                     l165:
  1079                           
  1080                           ;Laboratorio4.c: 100: }}};Laboratorio4.c: 101: return '?';
  1081   000A76  0E3F               	movlw	63
  1082   000A78  0012               	return		;funcret
  1083   000A7A                     __end_of_LeerTeclado:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _InicializaLCD *****************
  1087 ;; Defined at:
  1088 ;;		line 71 in file "LibLCDXC8.h"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 3
  1109 ;; This function calls:
  1110 ;;		_BorraLCD
  1111 ;;		_EnviaDato
  1112 ;;		_HabilitaLCD
  1113 ;;		_RetardoLCD
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text6
  1120   000B70                     __ptext6:
  1121                           	callstack 0
  1122   000B70                     _InicializaLCD:
  1123                           	callstack 27
  1124                           
  1125                           ;LibLCDXC8.h: 73: LATE0=0;
  1126                           
  1127                           ;incstack = 0
  1128   000B70  908D               	bcf	3981,0,c	;volatile
  1129                           
  1130                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1131                           
  1132                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1133   000B72  0E3F               	movlw	63
  1134   000B74  6E8C               	movwf	140,c	;volatile
  1135                           
  1136                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1137   000B76  EC27  F006         	call	_HabilitaLCD	;wreg free
  1138                           
  1139                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1140   000B7A  0E01               	movlw	1
  1141   000B7C  EC3D  F005         	call	_RetardoLCD
  1142                           
  1143                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1144                           
  1145                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1146   000B80  0E3F               	movlw	63
  1147   000B82  6E8C               	movwf	140,c	;volatile
  1148                           
  1149                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1150   000B84  EC27  F006         	call	_HabilitaLCD	;wreg free
  1151                           
  1152                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1153   000B88  0E03               	movlw	3
  1154   000B8A  EC3D  F005         	call	_RetardoLCD
  1155                           
  1156                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1157                           
  1158                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1159   000B8E  0E3F               	movlw	63
  1160   000B90  6E8C               	movwf	140,c	;volatile
  1161                           
  1162                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1163   000B92  EC27  F006         	call	_HabilitaLCD	;wreg free
  1164                           
  1165                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1166   000B96  0E04               	movlw	4
  1167   000B98  EC3D  F005         	call	_RetardoLCD
  1168                           
  1169                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1170                           
  1171                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1172   000B9C  EC1D  F006         	call	_BorraLCD	;wreg free
  1173                           
  1174                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1175   000BA0  0E0F               	movlw	15
  1176   000BA2  EC2E  F006         	call	_EnviaDato
  1177                           
  1178                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1179   000BA6  EC27  F006         	call	_HabilitaLCD	;wreg free
  1180                           
  1181                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1182   000BAA  0E04               	movlw	4
  1183   000BAC  EC3D  F005         	call	_RetardoLCD
  1184   000BB0  0012               	return		;funcret
  1185   000BB2                     __end_of_InicializaLCD:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _BorraLCD *****************
  1189 ;; Defined at:
  1190 ;;		line 112 in file "LibLCDXC8.h"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 2
  1211 ;; This function calls:
  1212 ;;		_EnviaDato
  1213 ;;		_HabilitaLCD
  1214 ;;		_RetardoLCD
  1215 ;; This function is called by:
  1216 ;;		_InicializaLCD
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text7
  1222   000C3A                     __ptext7:
  1223                           	callstack 0
  1224   000C3A                     _BorraLCD:
  1225                           	callstack 27
  1226                           
  1227                           ;LibLCDXC8.h: 114: LATE0=0;
  1228                           
  1229                           ;incstack = 0
  1230   000C3A  908D               	bcf	3981,0,c	;volatile
  1231                           
  1232                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1233   000C3C  0E01               	movlw	1
  1234   000C3E  EC2E  F006         	call	_EnviaDato
  1235                           
  1236                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1237   000C42  EC27  F006         	call	_HabilitaLCD	;wreg free
  1238                           
  1239                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1240   000C46  0E02               	movlw	2
  1241   000C48  EC3D  F005         	call	_RetardoLCD
  1242   000C4C  0012               	return		;funcret
  1243   000C4E                     __end_of_BorraLCD:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _DireccionaLCD *****************
  1247 ;; Defined at:
  1248 ;;		line 250 in file "LibLCDXC8.h"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  a               1    wreg     unsigned char 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  a               1    3[COMRAM] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0
  1263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1266 ;;Total ram usage:        1 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 2
  1269 ;; This function calls:
  1270 ;;		_EnviaDato
  1271 ;;		_HabilitaLCD
  1272 ;;		_RetardoLCD
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text8
  1279   000C24                     __ptext8:
  1280                           	callstack 0
  1281   000C24                     _DireccionaLCD:
  1282                           	callstack 28
  1283                           
  1284                           ;incstack = 0
  1285                           ;DireccionaLCD@a stored from wreg
  1286   000C24  6E04               	movwf	DireccionaLCD@a^0,c
  1287                           
  1288                           ;LibLCDXC8.h: 253: LATE0=0;
  1289   000C26  908D               	bcf	3981,0,c	;volatile
  1290                           
  1291                           ;LibLCDXC8.h: 254: EnviaDato(a);
  1292   000C28  5004               	movf	DireccionaLCD@a^0,w,c
  1293   000C2A  EC2E  F006         	call	_EnviaDato
  1294                           
  1295                           ;LibLCDXC8.h: 255: HabilitaLCD();
  1296   000C2E  EC27  F006         	call	_HabilitaLCD	;wreg free
  1297                           
  1298                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  1299   000C32  0E04               	movlw	4
  1300   000C34  EC3D  F005         	call	_RetardoLCD
  1301   000C38  0012               	return		;funcret
  1302   000C3A                     __end_of_DireccionaLCD:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _EnviaDato *****************
  1306 ;; Defined at:
  1307 ;;		line 59 in file "LibLCDXC8.h"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  a               1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  a               1    2[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		_HabilitaLCD
  1330 ;;		_RetardoLCD
  1331 ;; This function is called by:
  1332 ;;		_InicializaLCD
  1333 ;;		_BorraLCD
  1334 ;;		_EscribeLCD_c
  1335 ;;		_DireccionaLCD
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text9
  1340   000C5C                     __ptext9:
  1341                           	callstack 0
  1342   000C5C                     _EnviaDato:
  1343                           	callstack 27
  1344                           
  1345                           ;incstack = 0
  1346                           ;EnviaDato@a stored from wreg
  1347   000C5C  6E03               	movwf	EnviaDato@a^0,c
  1348                           
  1349                           ;LibLCDXC8.h: 68: LATD=a;
  1350                           
  1351                           ;LibLCDXC8.h: 60: if(interfaz==4){
  1352   000C5E  C003  FF8C         	movff	EnviaDato@a,3980	;volatile
  1353   000C62  0012               	return		;funcret
  1354   000C64                     __end_of_EnviaDato:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _RetardoLCD *****************
  1358 ;; Defined at:
  1359 ;;		line 286 in file "LibLCDXC8.h"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  a               1    wreg     unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  a               1    1[COMRAM] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1375 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1376 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_EnviaDato
  1383 ;;		_InicializaLCD
  1384 ;;		_BorraLCD
  1385 ;;		_EscribeLCD_c
  1386 ;;		_DireccionaLCD
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text10
  1391   000A7A                     __ptext10:
  1392                           	callstack 0
  1393   000A7A                     _RetardoLCD:
  1394                           	callstack 28
  1395                           
  1396                           ;incstack = 0
  1397                           ;RetardoLCD@a stored from wreg
  1398   000A7A  6E02               	movwf	RetardoLCD@a^0,c
  1399                           
  1400                           ;LibLCDXC8.h: 287: switch(a){
  1401   000A7C  D01B               	goto	l936
  1402   000A7E                     l926:
  1403   000A7E  0E05               	movlw	5
  1404   000A80  6E01               	movwf	??_RetardoLCD^0,c
  1405   000A82  0EDE               	movlw	222
  1406   000A84                     u617:
  1407   000A84  2EE8               	decfsz	wreg,f,c
  1408   000A86  D7FE               	bra	u617
  1409   000A88  2E01               	decfsz	??_RetardoLCD^0,f,c
  1410   000A8A  D7FC               	bra	u617
  1411                           
  1412                           ;LibLCDXC8.h: 290: break;
  1413   000A8C  0012               	return	
  1414   000A8E                     l928:
  1415   000A8E  0E53               	movlw	83
  1416   000A90                     u627:
  1417   000A90  2EE8               	decfsz	wreg,f,c
  1418   000A92  D7FE               	bra	u627
  1419   000A94  F000               	nop	
  1420                           
  1421                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1422   000A96  0E35               	movlw	53
  1423   000A98                     u637:
  1424   000A98  2EE8               	decfsz	wreg,f,c
  1425   000A9A  D7FE               	bra	u637
  1426   000A9C  F000               	nop	
  1427                           
  1428                           ;LibLCDXC8.h: 294: break;
  1429   000A9E  0012               	return	
  1430   000AA0                     l930:
  1431   000AA0  0E08               	movlw	8
  1432   000AA2                     u647:
  1433   000AA2  2EE8               	decfsz	wreg,f,c
  1434   000AA4  D7FE               	bra	u647
  1435   000AA6  F000               	nop	
  1436                           
  1437                           ;LibLCDXC8.h: 297: break;
  1438   000AA8  0012               	return	
  1439   000AAA                     l932:
  1440   000AAA  0E03               	movlw	3
  1441   000AAC                     u657:
  1442   000AAC  2EE8               	decfsz	wreg,f,c
  1443   000AAE  D7FE               	bra	u657
  1444   000AB0  F000               	nop	
  1445                           
  1446                           ;LibLCDXC8.h: 300: break;
  1447   000AB2  0012               	return	
  1448   000AB4                     l936:
  1449   000AB4  5002               	movf	RetardoLCD@a^0,w,c
  1450                           
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 4, Range of values is 1 to 4
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte           13     7 (average)
  1456                           ;	Chosen strategy is simple_byte
  1457   000AB6  0A01               	xorlw	1	; case 1
  1458   000AB8  B4D8               	btfsc	status,2,c
  1459   000ABA  D7E1               	goto	l926
  1460   000ABC  0A03               	xorlw	3	; case 2
  1461   000ABE  B4D8               	btfsc	status,2,c
  1462   000AC0  D7E6               	goto	l928
  1463   000AC2  0A01               	xorlw	1	; case 3
  1464   000AC4  B4D8               	btfsc	status,2,c
  1465   000AC6  D7EC               	goto	l930
  1466   000AC8  0A07               	xorlw	7	; case 4
  1467   000ACA  A4D8               	btfss	status,2,c
  1468   000ACC  0012               	return	
  1469   000ACE  D7ED               	goto	l932
  1470   000AD0                     __end_of_RetardoLCD:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _HabilitaLCD *****************
  1474 ;; Defined at:
  1475 ;;		line 105 in file "LibLCDXC8.h"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_EnviaDato
  1499 ;;		_InicializaLCD
  1500 ;;		_BorraLCD
  1501 ;;		_EscribeLCD_c
  1502 ;;		_DireccionaLCD
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text11
  1507   000C4E                     __ptext11:
  1508                           	callstack 0
  1509   000C4E                     _HabilitaLCD:
  1510                           	callstack 28
  1511                           
  1512                           ;LibLCDXC8.h: 107: LATE1=1;
  1513                           
  1514                           ;incstack = 0
  1515   000C4E  828D               	bsf	3981,1,c	;volatile
  1516                           
  1517                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1518   000C50  0E03               	movlw	3
  1519   000C52                     u667:
  1520   000C52  2EE8               	decfsz	wreg,f,c
  1521   000C54  D7FE               	bra	u667
  1522   000C56  F000               	nop	
  1523                           
  1524                           ;LibLCDXC8.h: 110: LATE1=0;
  1525   000C58  928D               	bcf	3981,1,c	;volatile
  1526   000C5A  0012               	return		;funcret
  1527   000C5C                     __end_of_HabilitaLCD:
  1528                           	callstack 0
  1529                           
  1530                           	psect	rparam
  1531   000000                     
  1532                           	psect	idloc
  1533                           
  1534                           ;Config register IDLOC0 @ 0x200000
  1535                           ;	unspecified, using default values
  1536   200000                     	org	2097152
  1537   200000  FF                 	db	255
  1538                           
  1539                           ;Config register IDLOC1 @ 0x200001
  1540                           ;	unspecified, using default values
  1541   200001                     	org	2097153
  1542   200001  FF                 	db	255
  1543                           
  1544                           ;Config register IDLOC2 @ 0x200002
  1545                           ;	unspecified, using default values
  1546   200002                     	org	2097154
  1547   200002  FF                 	db	255
  1548                           
  1549                           ;Config register IDLOC3 @ 0x200003
  1550                           ;	unspecified, using default values
  1551   200003                     	org	2097155
  1552   200003  FF                 	db	255
  1553                           
  1554                           ;Config register IDLOC4 @ 0x200004
  1555                           ;	unspecified, using default values
  1556   200004                     	org	2097156
  1557   200004  FF                 	db	255
  1558                           
  1559                           ;Config register IDLOC5 @ 0x200005
  1560                           ;	unspecified, using default values
  1561   200005                     	org	2097157
  1562   200005  FF                 	db	255
  1563                           
  1564                           ;Config register IDLOC6 @ 0x200006
  1565                           ;	unspecified, using default values
  1566   200006                     	org	2097158
  1567   200006  FF                 	db	255
  1568                           
  1569                           ;Config register IDLOC7 @ 0x200007
  1570                           ;	unspecified, using default values
  1571   200007                     	org	2097159
  1572   200007  FF                 	db	255
  1573                           
  1574                           	psect	config
  1575                           
  1576                           ;Config register CONFIG1L @ 0x300000
  1577                           ;	unspecified, using default values
  1578                           ;	PLL Prescaler Selection bits
  1579                           ;	PLLDIV = 0x0, unprogrammed default
  1580                           ;	System Clock Postscaler Selection bits
  1581                           ;	CPUDIV = 0x0, unprogrammed default
  1582                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1583                           ;	USBDIV = 0x0, unprogrammed default
  1584   300000                     	org	3145728
  1585   300000  00                 	db	0
  1586                           
  1587                           ;Config register CONFIG1H @ 0x300001
  1588                           ;	Oscillator Selection bits
  1589                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1590                           ;	Fail-Safe Clock Monitor Enable bit
  1591                           ;	FCMEN = 0x0, unprogrammed default
  1592                           ;	Internal/External Oscillator Switchover bit
  1593                           ;	IESO = 0x0, unprogrammed default
  1594   300001                     	org	3145729
  1595   300001  09                 	db	9
  1596                           
  1597                           ;Config register CONFIG2L @ 0x300002
  1598                           ;	unspecified, using default values
  1599                           ;	Power-up Timer Enable bit
  1600                           ;	PWRT = 0x1, unprogrammed default
  1601                           ;	Brown-out Reset Enable bits
  1602                           ;	BOR = 0x3, unprogrammed default
  1603                           ;	Brown-out Reset Voltage bits
  1604                           ;	BORV = 0x3, unprogrammed default
  1605                           ;	USB Voltage Regulator Enable bit
  1606                           ;	VREGEN = 0x0, unprogrammed default
  1607   300002                     	org	3145730
  1608   300002  1F                 	db	31
  1609                           
  1610                           ;Config register CONFIG2H @ 0x300003
  1611                           ;	Watchdog Timer Enable bit
  1612                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1613                           ;	Watchdog Timer Postscale Select bits
  1614                           ;	WDTPS = 0xF, unprogrammed default
  1615   300003                     	org	3145731
  1616   300003  1E                 	db	30
  1617                           
  1618                           ; Padding undefined space
  1619   300004                     	org	3145732
  1620   300004  FF                 	db	255
  1621                           
  1622                           ;Config register CONFIG3H @ 0x300005
  1623                           ;	unspecified, using default values
  1624                           ;	CCP2 MUX bit
  1625                           ;	CCP2MX = 0x1, unprogrammed default
  1626                           ;	PORTB A/D Enable bit
  1627                           ;	PBADEN = 0x1, unprogrammed default
  1628                           ;	Low-Power Timer 1 Oscillator Enable bit
  1629                           ;	LPT1OSC = 0x0, unprogrammed default
  1630                           ;	MCLR Pin Enable bit
  1631                           ;	MCLRE = 0x1, unprogrammed default
  1632   300005                     	org	3145733
  1633   300005  83                 	db	131
  1634                           
  1635                           ;Config register CONFIG4L @ 0x300006
  1636                           ;	unspecified, using default values
  1637                           ;	Stack Full/Underflow Reset Enable bit
  1638                           ;	STVREN = 0x1, unprogrammed default
  1639                           ;	Single-Supply ICSP Enable bit
  1640                           ;	LVP = 0x1, unprogrammed default
  1641                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1642                           ;	ICPRT = 0x0, unprogrammed default
  1643                           ;	Extended Instruction Set Enable bit
  1644                           ;	XINST = 0x0, unprogrammed default
  1645                           ;	Background Debugger Enable bit
  1646                           ;	DEBUG = 0x1, unprogrammed default
  1647   300006                     	org	3145734
  1648   300006  85                 	db	133
  1649                           
  1650                           ; Padding undefined space
  1651   300007                     	org	3145735
  1652   300007  FF                 	db	255
  1653                           
  1654                           ;Config register CONFIG5L @ 0x300008
  1655                           ;	unspecified, using default values
  1656                           ;	Code Protection bit
  1657                           ;	CP0 = 0x1, unprogrammed default
  1658                           ;	Code Protection bit
  1659                           ;	CP1 = 0x1, unprogrammed default
  1660                           ;	Code Protection bit
  1661                           ;	CP2 = 0x1, unprogrammed default
  1662                           ;	Code Protection bit
  1663                           ;	CP3 = 0x1, unprogrammed default
  1664   300008                     	org	3145736
  1665   300008  0F                 	db	15
  1666                           
  1667                           ;Config register CONFIG5H @ 0x300009
  1668                           ;	unspecified, using default values
  1669                           ;	Boot Block Code Protection bit
  1670                           ;	CPB = 0x1, unprogrammed default
  1671                           ;	Data EEPROM Code Protection bit
  1672                           ;	CPD = 0x1, unprogrammed default
  1673   300009                     	org	3145737
  1674   300009  C0                 	db	192
  1675                           
  1676                           ;Config register CONFIG6L @ 0x30000A
  1677                           ;	unspecified, using default values
  1678                           ;	Write Protection bit
  1679                           ;	WRT0 = 0x1, unprogrammed default
  1680                           ;	Write Protection bit
  1681                           ;	WRT1 = 0x1, unprogrammed default
  1682                           ;	Write Protection bit
  1683                           ;	WRT2 = 0x1, unprogrammed default
  1684                           ;	Write Protection bit
  1685                           ;	WRT3 = 0x1, unprogrammed default
  1686   30000A                     	org	3145738
  1687   30000A  0F                 	db	15
  1688                           
  1689                           ;Config register CONFIG6H @ 0x30000B
  1690                           ;	unspecified, using default values
  1691                           ;	Configuration Register Write Protection bit
  1692                           ;	WRTC = 0x1, unprogrammed default
  1693                           ;	Boot Block Write Protection bit
  1694                           ;	WRTB = 0x1, unprogrammed default
  1695                           ;	Data EEPROM Write Protection bit
  1696                           ;	WRTD = 0x1, unprogrammed default
  1697   30000B                     	org	3145739
  1698   30000B  E0                 	db	224
  1699                           
  1700                           ;Config register CONFIG7L @ 0x30000C
  1701                           ;	unspecified, using default values
  1702                           ;	Table Read Protection bit
  1703                           ;	EBTR0 = 0x1, unprogrammed default
  1704                           ;	Table Read Protection bit
  1705                           ;	EBTR1 = 0x1, unprogrammed default
  1706                           ;	Table Read Protection bit
  1707                           ;	EBTR2 = 0x1, unprogrammed default
  1708                           ;	Table Read Protection bit
  1709                           ;	EBTR3 = 0x1, unprogrammed default
  1710   30000C                     	org	3145740
  1711   30000C  0F                 	db	15
  1712                           
  1713                           ;Config register CONFIG7H @ 0x30000D
  1714                           ;	unspecified, using default values
  1715                           ;	Boot Block Table Read Protection bit
  1716                           ;	EBTRB = 0x1, unprogrammed default
  1717   30000D                     	org	3145741
  1718   30000D  40                 	db	64
  1719                           tosu	equ	0xFFF
  1720                           tosh	equ	0xFFE
  1721                           tosl	equ	0xFFD
  1722                           stkptr	equ	0xFFC
  1723                           pclatu	equ	0xFFB
  1724                           pclath	equ	0xFFA
  1725                           pcl	equ	0xFF9
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           prodh	equ	0xFF4
  1731                           prodl	equ	0xFF3
  1732                           indf0	equ	0xFEF
  1733                           postinc0	equ	0xFEE
  1734                           postdec0	equ	0xFED
  1735                           preinc0	equ	0xFEC
  1736                           plusw0	equ	0xFEB
  1737                           fsr0h	equ	0xFEA
  1738                           fsr0l	equ	0xFE9
  1739                           wreg	equ	0xFE8
  1740                           indf1	equ	0xFE7
  1741                           postinc1	equ	0xFE6
  1742                           postdec1	equ	0xFE5
  1743                           preinc1	equ	0xFE4
  1744                           plusw1	equ	0xFE3
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           bsr	equ	0xFE0
  1748                           indf2	equ	0xFDF
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           preinc2	equ	0xFDC
  1752                           plusw2	equ	0xFDB
  1753                           fsr2h	equ	0xFDA
  1754                           fsr2l	equ	0xFD9
  1755                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1406
                                              8 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lwdiv
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      17       1       24.2%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      28        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 12 22:08:52 2023

                      _r 000B                       u60 09E6                       _n1 0011  
                     _n2 000F               EnviaDato@a 0003                       _op 0016  
    ___wmul@multiplicand 0003            ??_LeerTeclado 0001                      l116 09C6  
          _InicializaLCD 0B70                      l150 0A1E                      l142 09FA  
                    l160 0A4A                      l152 0A26                      l144 0A02  
                    l139 09F2                      l164 0A5E                      l156 0A3A  
                    l148 0A16                      l165 0A76                      l166 0A66  
                    l158 0A42                      l168 0A6E                      l652 0B18  
                    l930 0AA0                      l932 0AAA                      l926 0A7E  
                    l928 0A8E                      l936 0AB4                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RB7 007C0F  
                    u410 0B6E                      u430 0AF2                      u530 08C2  
                    u607 09CC                      u480 089A                      u617 0A84  
                    u627 0A90                      u637 0A98                      u647 0AA2  
                    u657 0AAC                      u667 0C52                      u597 084A  
                    _n1c 0015                      _n2c 0014                      wreg 000FE8  
                   l1122 0A52                     l1066 0A0A                     l1306 0B0E  
                   l1324 085A                     l1094 0A2E                     l1336 0882  
                   l1274 0B2A                     l1370 0918                     l1372 0936  
                   l1380 0986                     l1356 08CE                     l1278 0B58  
                   l1294 0AE6                     l1390 09B0                     l1374 0958  
                   l1366 08F6                     l1382 0990                     l1296 0AEE  
                   l1368 0902                     l1378 096A                     STR_1 0812  
                   STR_2 0801                     _LATB 000F8A                     _LATD 000F8C  
                   _RBPU 007F8F           ??_EscribeLCD_c 0004                     _main 081E  
                   fsr1l 000FE1                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           ?_InicializaLCD 0001  
                  ?_main 0001            EscribeLCD_c@a 0004                    _LATE0 007C68  
                  _LATE1 007C69          __end_of___lwdiv 0B22                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _Tecla 0013  
    __end_of_LeerTeclado 0A7A                    tablat 000FF5              _HabilitaLCD 0C4E  
                  status 000FD8         __end_of_BorraLCD 0C4E          __initialization 0BB2  
           __end_of_main 09D8                   ??_main 0009            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 0004    __end_of_DireccionaLCD 0C3A  
             _RetardoLCD 0A7A                   ___wmul 0BE8                ??___lwdiv 0005  
        ??_InicializaLCD 0004                   clear_0 0BD8                   isa$std 000001  
   __end_of_EscribeLCD_c 0C24              _LeerTeclado 09D8             __pdataCOMRAM 0014  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0BDE  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 0C64  
              ?_BorraLCD 0001              ?_RetardoLCD 0001              RetardoLCD@a 0002  
                ?___wmul 0001               ??_BorraLCD 0004        ??_MensajeLCD_Word 0006  
           ?_HabilitaLCD 0001                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0AD0             __psmallconst 0800                  __pcinit 0BB2  
                __ramtop 0800                  __ptext0 081E                  __ptext1 0BE8  
                __ptext2 0AD0                  __ptext3 0B22                  __ptext4 0C0E  
                __ptext5 09D8                  __ptext6 0B70                  __ptext7 0C3A  
                __ptext8 0C24                  __ptext9 0C5C     end_of_initialization 0BDE  
          __Lmediumconst 0000             _EscribeLCD_c 0C0E                  postdec1 000FE5  
                postinc0 000FEE             ?_LeerTeclado 0001           __end_of___wmul 0C0E  
          __pidataCOMRAM 0C64    __end_of_InicializaLCD 0BB2                _EnviaDato 0C5C  
    start_initialization 0BB2             ??_RetardoLCD 0001                 ??___wmul 0005  
        _MensajeLCD_Word 0B22               ?_EnviaDato 0001              __pbssCOMRAM 000B  
     __end_of_RetardoLCD 0AD0         MensajeLCD_Word@a 0005         MensajeLCD_Word@i 0007  
          _DireccionaLCD 0C24         ___lwdiv@dividend 0001                 ?___lwdiv 0001  
            __smallconst 0800         ___lwdiv@quotient 0005           ___wmul@product 0005  
         ?_DireccionaLCD 0001  __end_of_MensajeLCD_Word 0B70        ___wmul@multiplier 0001  
            ??_EnviaDato 0003                 _BorraLCD 0C3A                copy_data0 0BC6  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 0A7A                 __ptext11 0C4E  
        ??_DireccionaLCD 0004                 _interfaz 0017                 isa$xinst 000000  
       ?_MensajeLCD_Word 0005            ??_HabilitaLCD 0001            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0C5C  

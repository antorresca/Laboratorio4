

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 21:33:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.40
    32                           ; Generated 04/07/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   001120                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _n2c
    72   001120  20                 	db	32
    73                           
    74                           ;initializer for _n1c
    75   001121  20                 	db	32
    76                           
    77                           ;initializer for _op
    78   001122  20                 	db	32
    79                           
    80                           ;initializer for _interfaz
    81   001123  08                 	db	8
    82   000000                     _LATC	set	3979
    83   000000                     _TRISC	set	3988
    84   000000                     _RB7	set	31759
    85   000000                     _RB6	set	31758
    86   000000                     _RB5	set	31757
    87   000000                     _LATE1	set	31849
    88   000000                     _LATB	set	3978
    89   000000                     _LATD	set	3980
    90   000000                     _RB4	set	31756
    91   000000                     _TRISB	set	3987
    92   000000                     _TRISD	set	3989
    93   000000                     _ADCON1	set	4033
    94   000000                     _LATE0	set	31848
    95   000000                     _RBPU	set	32655
    96   000000                     _TRISE	set	3990
    97                           
    98                           	psect	smallconst
    99   000800                     __psmallconst:
   100                           	callstack 0
   101   000800  00                 	db	0
   102   000801                     STR_2:
   103   000801  20                 	db	32
   104   000802  20                 	db	32
   105   000803  20                 	db	32
   106   000804  20                 	db	32
   107   000805  20                 	db	32
   108   000806  20                 	db	32
   109   000807  20                 	db	32
   110   000808  20                 	db	32
   111   000809  20                 	db	32
   112   00080A  20                 	db	32
   113   00080B  20                 	db	32
   114   00080C  20                 	db	32
   115   00080D  20                 	db	32
   116   00080E  20                 	db	32
   117   00080F  20                 	db	32
   118   000810  20                 	db	32
   119   000811  00                 	db	0
   120   000812                     STR_1:
   121   000812  48                 	db	72	;'H'
   122   000813  6F                 	db	111	;'o'
   123   000814  6C                 	db	108	;'l'
   124   000815  61                 	db	97	;'a'
   125   000816  20                 	db	32
   126   000817  6D                 	db	109	;'m'
   127   000818  75                 	db	117	;'u'
   128   000819  6E                 	db	110	;'n'
   129   00081A  64                 	db	100	;'d'
   130   00081B  6F                 	db	111	;'o'
   131   00081C  00                 	db	0
   132   00081D  00                 	db	0	; dummy byte at the end
   133   000000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   001038                     __pcinit:
   138                           	callstack 0
   139   001038                     start_initialization:
   140                           	callstack 0
   141   001038                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (4 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146   001038  0E20               	movlw	low __pidataCOMRAM
   147   00103A  6EF6               	movwf	tblptrl,c
   148   00103C  0E11               	movlw	high __pidataCOMRAM
   149   00103E  6EF7               	movwf	tblptrh,c
   150   001040  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151   001042  6EF8               	movwf	tblptru,c
   152   001044  EE00  F029         	lfsr	0,__pdataCOMRAM
   153   001048  EE10 F004          	lfsr	1,4
   154   00104C                     copy_data0:
   155   00104C  0009               	tblrd		*+
   156   00104E  CFF5 FFEE          	movff	tablat,postinc0
   157   001052  50E5               	movf	postdec1,w,c
   158   001054  50E1               	movf	fsr1l,w,c
   159   001056  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (21 bytes)
   162   001058  EE00  F001         	lfsr	0,__pbssCOMRAM
   163   00105C  0E15               	movlw	21
   164   00105E                     clear_0:
   165   00105E  6AEE               	clrf	postinc0,c
   166   001060  06E8               	decf	wreg,f,c
   167   001062  E1FD               	bnz	clear_0
   168   001064                     end_of_initialization:
   169                           	callstack 0
   170   001064                     __end_of__initialization:
   171                           	callstack 0
   172   001064  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173   001066  6EF8               	movwf	tblptru,c
   174   001068  0100               	movlb	0
   175   00106A  EF0F  F004         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178   000001                     __pbssCOMRAM:
   179                           	callstack 0
   180   000001                     _r:
   181                           	callstack 0
   182   000001                     	ds	4
   183   000005                     _partdecl:
   184                           	callstack 0
   185   000005                     	ds	4
   186   000009                     _color:
   187                           	callstack 0
   188   000009                     	ds	2
   189   00000B                     _i:
   190                           	callstack 0
   191   00000B                     	ds	2
   192   00000D                     _n2:
   193                           	callstack 0
   194   00000D                     	ds	2
   195   00000F                     _n1:
   196                           	callstack 0
   197   00000F                     	ds	2
   198   000011                     _Tecla:
   199                           	callstack 0
   200   000011                     	ds	1
   201   000012                     _m:
   202                           	callstack 0
   203   000012                     	ds	4
   204                           
   205                           	psect	dataCOMRAM
   206   000029                     __pdataCOMRAM:
   207                           	callstack 0
   208   000029                     _n2c:
   209                           	callstack 0
   210   000029                     	ds	1
   211   00002A                     _n1c:
   212                           	callstack 0
   213   00002A                     	ds	1
   214   00002B                     _op:
   215                           	callstack 0
   216   00002B                     	ds	1
   217   00002C                     _interfaz:
   218                           	callstack 0
   219   00002C                     	ds	1
   220                           
   221                           	psect	cstackCOMRAM
   222   000016                     __pcstackCOMRAM:
   223                           	callstack 0
   224   000016                     ??_RetardoLCD:
   225   000016                     ??_ColorRGB:
   226   000016                     ?___wmul:
   227                           	callstack 0
   228   000016                     ?___lwmod:
   229                           	callstack 0
   230   000016                     ?___lmul:
   231                           	callstack 0
   232   000016                     ___wmul@multiplier:
   233                           	callstack 0
   234   000016                     ___lwmod@dividend:
   235                           	callstack 0
   236   000016                     ___lmul@multiplier:
   237                           	callstack 0
   238                           
   239                           ; 4 bytes @ 0x0
   240   000016                     	ds	1
   241   000017                     RetardoLCD@a:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x1
   245   000017                     	ds	1
   246   000018                     EnviaDato@a:
   247                           	callstack 0
   248   000018                     ___wmul@multiplicand:
   249                           	callstack 0
   250   000018                     ___lwmod@divisor:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254   000018                     	ds	1
   255   000019                     EscribeLCD_c@a:
   256                           	callstack 0
   257   000019                     DireccionaLCD@a:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x3
   261   000019                     	ds	1
   262   00001A                     MensajeLCD_Word@a:
   263                           	callstack 0
   264   00001A                     ___lwmod@counter:
   265                           	callstack 0
   266   00001A                     ___wmul@product:
   267                           	callstack 0
   268   00001A                     ___lmul@multiplicand:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272   00001A                     	ds	1
   273   00001B                     ??_MensajeLCD_Word:
   274                           
   275                           ; 1 bytes @ 0x5
   276   00001B                     	ds	1
   277   00001C                     ?___lwdiv:
   278                           	callstack 0
   279   00001C                     MensajeLCD_Word@i:
   280                           	callstack 0
   281   00001C                     ___lwdiv@dividend:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x6
   285   00001C                     	ds	2
   286   00001E                     ___lwdiv@divisor:
   287                           	callstack 0
   288   00001E                     ___lmul@product:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x8
   292   00001E                     	ds	2
   293   000020                     ___lwdiv@quotient:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xA
   297   000020                     	ds	2
   298   000022                     ___lwdiv@counter:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0xC
   302   000022                     	ds	1
   303   000023                     ??_main:
   304                           
   305                           ; 1 bytes @ 0xD
   306   000023                     	ds	4
   307   000027                     main@i:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x11
   311   000027                     	ds	2
   312                           
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 22 in file "Laboratorio4.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  i               2   17[COMRAM] int 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         2       0       0       0       0       0       0       0       0
   334 ;;      Temps:          4       0       0       0       0       0       0       0       0
   335 ;;      Totals:         6       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        6 bytes
   337 ;; Hardware stack levels required when called: 4
   338 ;; This function calls:
   339 ;;		_BorraLCD
   340 ;;		_ColorRGB
   341 ;;		_DireccionaLCD
   342 ;;		_EscribeLCD_c
   343 ;;		_InicializaLCD
   344 ;;		_LeerTeclado
   345 ;;		_MensajeLCD_Word
   346 ;;		___lmul
   347 ;;		___lwdiv
   348 ;;		___lwmod
   349 ;;		___wmul
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text0
   356   00081E                     __ptext0:
   357                           	callstack 0
   358   00081E                     _main:
   359                           	callstack 27
   360                           
   361                           ;Laboratorio4.c: 23: ADCON1=15;
   362                           
   363                           ;incstack = 0
   364   00081E  0E0F               	movlw	15
   365   000820  6EC1               	movwf	193,c	;volatile
   366                           
   367                           ;Laboratorio4.c: 24: TRISD=0;
   368   000822  0E00               	movlw	0
   369   000824  6E95               	movwf	149,c	;volatile
   370                           
   371                           ;Laboratorio4.c: 25: TRISB=0b11110000;
   372   000826  0EF0               	movlw	240
   373   000828  6E93               	movwf	147,c	;volatile
   374                           
   375                           ;Laboratorio4.c: 26: TRISE=0;
   376   00082A  0E00               	movlw	0
   377   00082C  6E96               	movwf	150,c	;volatile
   378                           
   379                           ;Laboratorio4.c: 27: TRISC=0;
   380   00082E  0E00               	movlw	0
   381   000830  6E94               	movwf	148,c	;volatile
   382                           
   383                           ;Laboratorio4.c: 28: RBPU=0;
   384   000832  9EF1               	bcf	4081,7,c	;volatile
   385                           
   386                           ;Laboratorio4.c: 29: InicializaLCD();
   387   000834  ECFB  F007         	call	_InicializaLCD	;wreg free
   388                           
   389                           ;Laboratorio4.c: 30: BorraLCD();
   390   000838  EC7B  F008         	call	_BorraLCD	;wreg free
   391                           
   392                           ;Laboratorio4.c: 31: MensajeLCD_Word("Hola mundo");
   393   00083C  0E12               	movlw	low STR_1
   394   00083E  6E1A               	movwf	MensajeLCD_Word@a^0,c
   395   000840  EC37  F008         	call	_MensajeLCD_Word	;wreg free
   396                           
   397                           ;Laboratorio4.c: 32: _delay((unsigned long)((2000)*(1000000/4000.0)));
   398   000844  0E03               	movlw	3
   399   000846  6E24               	movwf	(??_main+1)^0,c
   400   000848  0E8A               	movlw	138
   401   00084A  6E23               	movwf	??_main^0,c
   402   00084C  0E56               	movlw	86
   403   00084E                     u1427:
   404   00084E  2EE8               	decfsz	wreg,f,c
   405   000850  D7FE               	bra	u1427
   406   000852  2E23               	decfsz	??_main^0,f,c
   407   000854  D7FC               	bra	u1427
   408   000856  2E24               	decfsz	(??_main+1)^0,f,c
   409   000858  D7FA               	bra	u1427
   410                           
   411                           ;Laboratorio4.c: 33: BorraLCD();
   412   00085A  EC7B  F008         	call	_BorraLCD	;wreg free
   413   00085E                     l1598:
   414                           
   415                           ;Laboratorio4.c: 35: LATB=0B00000000;
   416   00085E  0E00               	movlw	0
   417   000860  6E8A               	movwf	138,c	;volatile
   418                           
   419                           ;Laboratorio4.c: 36: Tecla = LeerTeclado();
   420   000862  ECCD  F006         	call	_LeerTeclado	;wreg free
   421   000866  6E11               	movwf	_Tecla^0,c
   422                           
   423                           ;Laboratorio4.c: 37: ColorRGB();
   424   000868  EC1E  F007         	call	_ColorRGB	;wreg free
   425                           
   426                           ;Laboratorio4.c: 38: if(Tecla=='C'){
   427   00086C  0E43               	movlw	67
   428   00086E  1811               	xorwf	_Tecla^0,w,c
   429   000870  A4D8               	btfss	status,2,c
   430   000872  D02B               	goto	l1630
   431                           
   432                           ;Laboratorio4.c: 39: DireccionaLCD(0xC0);
   433   000874  0EC0               	movlw	192
   434   000876  EC70  F008         	call	_DireccionaLCD
   435                           
   436                           ;Laboratorio4.c: 41: op = ' ';
   437   00087A  0E20               	movlw	32
   438   00087C  6E2B               	movwf	_op^0,c
   439                           
   440                           ;Laboratorio4.c: 42: n1c = ' ';
   441   00087E  0E20               	movlw	32
   442   000880  6E2A               	movwf	_n1c^0,c
   443                           
   444                           ;Laboratorio4.c: 43: n2c = ' ';
   445   000882  0E20               	movlw	32
   446   000884  6E29               	movwf	_n2c^0,c
   447                           
   448                           ;Laboratorio4.c: 44: n1 = 0;
   449   000886  0E00               	movlw	0
   450   000888  6E10               	movwf	(_n1+1)^0,c
   451   00088A  0E00               	movlw	0
   452   00088C  6E0F               	movwf	_n1^0,c
   453                           
   454                           ;Laboratorio4.c: 45: n2 = 0;
   455   00088E  0E00               	movlw	0
   456   000890  6E0E               	movwf	(_n2+1)^0,c
   457   000892  0E00               	movlw	0
   458   000894  6E0D               	movwf	_n2^0,c
   459                           
   460                           ;Laboratorio4.c: 46: i = 0;
   461   000896  0E00               	movlw	0
   462   000898  6E0C               	movwf	(_i+1)^0,c
   463   00089A  0E00               	movlw	0
   464   00089C  6E0B               	movwf	_i^0,c
   465                           
   466                           ;Laboratorio4.c: 47: partdecl = 0;
   467   00089E  0E00               	movlw	0
   468   0008A0  6E05               	movwf	_partdecl^0,c
   469   0008A2  0E00               	movlw	0
   470   0008A4  6E06               	movwf	(_partdecl+1)^0,c
   471   0008A6  0E00               	movlw	0
   472   0008A8  6E07               	movwf	(_partdecl+2)^0,c
   473   0008AA  0E00               	movlw	0
   474   0008AC  6E08               	movwf	(_partdecl+3)^0,c
   475                           
   476                           ;Laboratorio4.c: 48: DireccionaLCD(0x80);
   477   0008AE  0E80               	movlw	128
   478   0008B0  EC70  F008         	call	_DireccionaLCD
   479                           
   480                           ;Laboratorio4.c: 49: MensajeLCD_Word("                ");
   481   0008B4  0E01               	movlw	low STR_2
   482   0008B6  6E1A               	movwf	MensajeLCD_Word@a^0,c
   483   0008B8  EC37  F008         	call	_MensajeLCD_Word	;wreg free
   484                           
   485                           ;Laboratorio4.c: 50: DireccionaLCD(0xC0);
   486   0008BC  0EC0               	movlw	192
   487   0008BE  EC70  F008         	call	_DireccionaLCD
   488                           
   489                           ;Laboratorio4.c: 51: DireccionaLCD(0x80);
   490   0008C2  0E80               	movlw	128
   491   0008C4  EC70  F008         	call	_DireccionaLCD
   492                           
   493                           ;Laboratorio4.c: 52: }else{
   494   0008C8  D7CA               	goto	l1598
   495   0008CA                     l1630:
   496                           
   497                           ;Laboratorio4.c: 53: if(n1c==' '|n2c==' '|op==' '){
   498   0008CA  0E20               	movlw	32
   499   0008CC  182A               	xorwf	_n1c^0,w,c
   500   0008CE  B4D8               	btfsc	status,2,c
   501   0008D0  D008               	goto	u940
   502   0008D2  0E20               	movlw	32
   503   0008D4  1829               	xorwf	_n2c^0,w,c
   504   0008D6  B4D8               	btfsc	status,2,c
   505   0008D8  D004               	goto	u940
   506   0008DA  0E20               	movlw	32
   507   0008DC  182B               	xorwf	_op^0,w,c
   508   0008DE  A4D8               	btfss	status,2,c
   509   0008E0  D083               	goto	l1698
   510   0008E2                     u940:
   511                           
   512                           ;Laboratorio4.c: 54: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   513   0008E2  0E20               	movlw	32
   514   0008E4  182B               	xorwf	_op^0,w,c
   515   0008E6  A4D8               	btfss	status,2,c
   516   0008E8  D021               	goto	l1654
   517   0008EA  0E2B               	movlw	43
   518   0008EC  1811               	xorwf	_Tecla^0,w,c
   519   0008EE  B4D8               	btfsc	status,2,c
   520   0008F0  D00C               	goto	u990
   521   0008F2  0E2D               	movlw	45
   522   0008F4  1811               	xorwf	_Tecla^0,w,c
   523   0008F6  B4D8               	btfsc	status,2,c
   524   0008F8  D008               	goto	u990
   525   0008FA  0E2F               	movlw	47
   526   0008FC  1811               	xorwf	_Tecla^0,w,c
   527   0008FE  B4D8               	btfsc	status,2,c
   528   000900  D004               	goto	u990
   529   000902  0E78               	movlw	120
   530   000904  1811               	xorwf	_Tecla^0,w,c
   531   000906  A4D8               	btfss	status,2,c
   532   000908  D011               	goto	l1654
   533   00090A                     u990:
   534   00090A  0E20               	movlw	32
   535   00090C  182A               	xorwf	_n1c^0,w,c
   536   00090E  B4D8               	btfsc	status,2,c
   537   000910  D00D               	goto	l1654
   538   000912  0E20               	movlw	32
   539   000914  1829               	xorwf	_n2c^0,w,c
   540   000916  A4D8               	btfss	status,2,c
   541   000918  D009               	goto	l1654
   542                           
   543                           ;Laboratorio4.c: 55: DireccionaLCD(0x81);
   544   00091A  0E81               	movlw	129
   545   00091C  EC70  F008         	call	_DireccionaLCD
   546                           
   547                           ;Laboratorio4.c: 56: EscribeLCD_c(Tecla);
   548   000920  5011               	movf	_Tecla^0,w,c
   549   000922  EC65  F008         	call	_EscribeLCD_c
   550                           
   551                           ;Laboratorio4.c: 57: op = Tecla;
   552   000926  C011  F02B         	movff	_Tecla,_op
   553                           
   554                           ;Laboratorio4.c: 58: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   555   00092A  D22E               	goto	l1806
   556   00092C                     l1654:
   557   00092C  0E20               	movlw	32
   558   00092E  182A               	xorwf	_n1c^0,w,c
   559   000930  A4D8               	btfss	status,2,c
   560   000932  D027               	goto	l1674
   561   000934  0E2B               	movlw	43
   562   000936  1811               	xorwf	_Tecla^0,w,c
   563   000938  A4D8               	btfss	status,2,c
   564   00093A  D014               	goto	u1080
   565   00093C  0E2D               	movlw	45
   566   00093E  1811               	xorwf	_Tecla^0,w,c
   567   000940  A4D8               	btfss	status,2,c
   568   000942  D010               	goto	u1080
   569   000944  0E2F               	movlw	47
   570   000946  1811               	xorwf	_Tecla^0,w,c
   571   000948  A4D8               	btfss	status,2,c
   572   00094A  D00C               	goto	u1080
   573   00094C  0E78               	movlw	120
   574   00094E  1811               	xorwf	_Tecla^0,w,c
   575   000950  A4D8               	btfss	status,2,c
   576   000952  D008               	goto	u1080
   577   000954  0E3D               	movlw	61
   578   000956  1811               	xorwf	_Tecla^0,w,c
   579   000958  A4D8               	btfss	status,2,c
   580   00095A  D004               	goto	u1080
   581   00095C  0E43               	movlw	67
   582   00095E  1811               	xorwf	_Tecla^0,w,c
   583   000960  B4D8               	btfsc	status,2,c
   584   000962  D00F               	goto	l1674
   585   000964                     u1080:
   586                           
   587                           ;Laboratorio4.c: 59: DireccionaLCD(0x80);
   588   000964  0E80               	movlw	128
   589   000966  EC70  F008         	call	_DireccionaLCD
   590                           
   591                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   592   00096A  5011               	movf	_Tecla^0,w,c
   593   00096C  EC65  F008         	call	_EscribeLCD_c
   594                           
   595                           ;Laboratorio4.c: 61: n1c=Tecla;
   596   000970  C011  F02A         	movff	_Tecla,_n1c
   597                           
   598                           ;Laboratorio4.c: 62: n1 = Tecla-'0';
   599   000974  0ED0               	movlw	208
   600   000976  2411               	addwf	_Tecla^0,w,c
   601   000978  6E0F               	movwf	_n1^0,c
   602   00097A  6A10               	clrf	(_n1+1)^0,c
   603   00097C  0EFF               	movlw	255
   604   00097E  2210               	addwfc	(_n1+1)^0,f,c
   605                           
   606                           ;Laboratorio4.c: 63: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   607   000980  D203               	goto	l1806
   608   000982                     l1674:
   609   000982  0E20               	movlw	32
   610   000984  1829               	xorwf	_n2c^0,w,c
   611   000986  A4D8               	btfss	status,2,c
   612   000988  D1FF               	goto	l1806
   613   00098A  0E20               	movlw	32
   614   00098C  182B               	xorwf	_op^0,w,c
   615   00098E  B4D8               	btfsc	status,2,c
   616   000990  D1FB               	goto	l1806
   617   000992  0E20               	movlw	32
   618   000994  182A               	xorwf	_n1c^0,w,c
   619   000996  B4D8               	btfsc	status,2,c
   620   000998  D1F7               	goto	l1806
   621   00099A  0E2B               	movlw	43
   622   00099C  1811               	xorwf	_Tecla^0,w,c
   623   00099E  A4D8               	btfss	status,2,c
   624   0009A0  D014               	goto	u1170
   625   0009A2  0E2D               	movlw	45
   626   0009A4  1811               	xorwf	_Tecla^0,w,c
   627   0009A6  A4D8               	btfss	status,2,c
   628   0009A8  D010               	goto	u1170
   629   0009AA  0E2F               	movlw	47
   630   0009AC  1811               	xorwf	_Tecla^0,w,c
   631   0009AE  A4D8               	btfss	status,2,c
   632   0009B0  D00C               	goto	u1170
   633   0009B2  0E78               	movlw	120
   634   0009B4  1811               	xorwf	_Tecla^0,w,c
   635   0009B6  A4D8               	btfss	status,2,c
   636   0009B8  D008               	goto	u1170
   637   0009BA  0E3D               	movlw	61
   638   0009BC  1811               	xorwf	_Tecla^0,w,c
   639   0009BE  A4D8               	btfss	status,2,c
   640   0009C0  D004               	goto	u1170
   641   0009C2  0E43               	movlw	67
   642   0009C4  1811               	xorwf	_Tecla^0,w,c
   643   0009C6  B4D8               	btfsc	status,2,c
   644   0009C8  D1DF               	goto	l1806
   645   0009CA                     u1170:
   646                           
   647                           ;Laboratorio4.c: 64: DireccionaLCD(0x82);
   648   0009CA  0E82               	movlw	130
   649   0009CC  EC70  F008         	call	_DireccionaLCD
   650                           
   651                           ;Laboratorio4.c: 65: EscribeLCD_c(Tecla);
   652   0009D0  5011               	movf	_Tecla^0,w,c
   653   0009D2  EC65  F008         	call	_EscribeLCD_c
   654                           
   655                           ;Laboratorio4.c: 66: n2c=Tecla;
   656   0009D6  C011  F029         	movff	_Tecla,_n2c
   657                           
   658                           ;Laboratorio4.c: 67: n2 = Tecla-'0';
   659   0009DA  0ED0               	movlw	208
   660   0009DC  2411               	addwf	_Tecla^0,w,c
   661   0009DE  6E0D               	movwf	_n2^0,c
   662   0009E0  6A0E               	clrf	(_n2+1)^0,c
   663   0009E2  0EFF               	movlw	255
   664   0009E4  220E               	addwfc	(_n2+1)^0,f,c
   665                           
   666                           ;Laboratorio4.c: 68: };Laboratorio4.c: 69: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   667   0009E6  D1D0               	goto	l1806
   668   0009E8                     l1698:
   669   0009E8  0E3D               	movlw	61
   670   0009EA  1811               	xorwf	_Tecla^0,w,c
   671   0009EC  A4D8               	btfss	status,2,c
   672   0009EE  D1C9               	goto	l1804
   673   0009F0  0E20               	movlw	32
   674   0009F2  1829               	xorwf	_n2c^0,w,c
   675   0009F4  B4D8               	btfsc	status,2,c
   676   0009F6  D1C5               	goto	l1804
   677   0009F8  0E20               	movlw	32
   678   0009FA  182B               	xorwf	_op^0,w,c
   679   0009FC  B4D8               	btfsc	status,2,c
   680   0009FE  D1C1               	goto	l1804
   681   000A00  0E20               	movlw	32
   682   000A02  182A               	xorwf	_n1c^0,w,c
   683   000A04  B4D8               	btfsc	status,2,c
   684   000A06  D1BD               	goto	l1804
   685                           
   686                           ;Laboratorio4.c: 70: DireccionaLCD(0x83);
   687   000A08  0E83               	movlw	131
   688   000A0A  EC70  F008         	call	_DireccionaLCD
   689                           
   690                           ;Laboratorio4.c: 71: EscribeLCD_c('=');
   691   000A0E  0E3D               	movlw	61
   692   000A10  EC65  F008         	call	_EscribeLCD_c
   693                           
   694                           ;Laboratorio4.c: 72: switch(op){
   695   000A14  D093               	goto	l1746
   696   000A16                     l1708:
   697                           
   698                           ;Laboratorio4.c: 74: r = n1 + n2;
   699   000A16  500D               	movf	_n2^0,w,c
   700   000A18  240F               	addwf	_n1^0,w,c
   701   000A1A  6E23               	movwf	??_main^0,c
   702   000A1C  500E               	movf	(_n2+1)^0,w,c
   703   000A1E  2010               	addwfc	(_n1+1)^0,w,c
   704   000A20  6E24               	movwf	(??_main+1)^0,c
   705   000A22  C023  F001         	movff	??_main,_r
   706   000A26  C024  F002         	movff	??_main+1,_r+1
   707   000A2A  6A03               	clrf	(_r+2)^0,c
   708   000A2C  6A04               	clrf	(_r+3)^0,c
   709   000A2E                     l1710:
   710                           
   711                           ;Laboratorio4.c: 75: partdecl = r*100;
   712   000A2E  C001  F016         	movff	_r,___lmul@multiplier
   713   000A32  C002  F017         	movff	_r+1,___lmul@multiplier+1
   714   000A36  C003  F018         	movff	_r+2,___lmul@multiplier+2
   715   000A3A  C004  F019         	movff	_r+3,___lmul@multiplier+3
   716   000A3E  0E64               	movlw	100
   717   000A40  6E1A               	movwf	___lmul@multiplicand^0,c
   718   000A42  0E00               	movlw	0
   719   000A44  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   720   000A46  0E00               	movlw	0
   721   000A48  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   722   000A4A  0E00               	movlw	0
   723   000A4C  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   724   000A4E  EC5B  F007         	call	___lmul	;wreg free
   725   000A52  C016  F005         	movff	?___lmul,_partdecl
   726   000A56  C017  F006         	movff	?___lmul+1,_partdecl+1
   727   000A5A  C018  F007         	movff	?___lmul+2,_partdecl+2
   728   000A5E  C019  F008         	movff	?___lmul+3,_partdecl+3
   729                           
   730                           ;Laboratorio4.c: 76: break;
   731   000A62  D07A               	goto	l1748
   732   000A64                     l1712:
   733                           
   734                           ;Laboratorio4.c: 78: r = n1 - n2;
   735   000A64  500D               	movf	_n2^0,w,c
   736   000A66  5C0F               	subwf	_n1^0,w,c
   737   000A68  6E23               	movwf	??_main^0,c
   738   000A6A  500E               	movf	(_n2+1)^0,w,c
   739   000A6C  5810               	subwfb	(_n1+1)^0,w,c
   740   000A6E  D7D8               	goto	L1
   741   000A70                     l1716:
   742                           
   743                           ;Laboratorio4.c: 82: r = n1*n2;
   744   000A70  C00F  F016         	movff	_n1,___wmul@multiplier
   745   000A74  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   746   000A78  C00D  F018         	movff	_n2,___wmul@multiplicand
   747   000A7C  C00E  F019         	movff	_n2+1,___wmul@multiplicand+1
   748   000A80  EC52  F008         	call	___wmul	;wreg free
   749   000A84  C016  F001         	movff	?___wmul,_r
   750   000A88  C017  F002         	movff	?___wmul+1,_r+1
   751   000A8C  D7CE               	goto	L2
   752   000A8E                     l1720:
   753                           
   754                           ;Laboratorio4.c: 86: if(n2!=0){
   755   000A8E  500D               	movf	_n2^0,w,c
   756   000A90  100E               	iorwf	(_n2+1)^0,w,c
   757   000A92  B4D8               	btfsc	status,2,c
   758   000A94  D02F               	goto	l1728
   759                           
   760                           ;Laboratorio4.c: 87: if(n1!=0){
   761   000A96  500F               	movf	_n1^0,w,c
   762   000A98  1010               	iorwf	(_n1+1)^0,w,c
   763   000A9A  B4D8               	btfsc	status,2,c
   764   000A9C  D05D               	goto	l1748
   765                           
   766                           ;Laboratorio4.c: 88: r = n1/n2;
   767   000A9E  C00F  F01C         	movff	_n1,___lwdiv@dividend
   768   000AA2  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   769   000AA6  C00D  F01E         	movff	_n2,___lwdiv@divisor
   770   000AAA  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   771   000AAE  ECB1  F007         	call	___lwdiv	;wreg free
   772   000AB2  C01C  F001         	movff	?___lwdiv,_r
   773   000AB6  C01D  F002         	movff	?___lwdiv+1,_r+1
   774   000ABA  6A03               	clrf	(_r+2)^0,c
   775   000ABC  6A04               	clrf	(_r+3)^0,c
   776                           
   777                           ;Laboratorio4.c: 89: partdecl = (n1*100)/n2;
   778   000ABE  C00F  F016         	movff	_n1,___wmul@multiplier
   779   000AC2  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   780   000AC6  0E00               	movlw	0
   781   000AC8  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   782   000ACA  0E64               	movlw	100
   783   000ACC  6E18               	movwf	___wmul@multiplicand^0,c
   784   000ACE  EC52  F008         	call	___wmul	;wreg free
   785   000AD2  C016  F01C         	movff	?___wmul,___lwdiv@dividend
   786   000AD6  C017  F01D         	movff	?___wmul+1,___lwdiv@dividend+1
   787   000ADA  C00D  F01E         	movff	_n2,___lwdiv@divisor
   788   000ADE  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   789   000AE2  ECB1  F007         	call	___lwdiv	;wreg free
   790   000AE6  C01C  F005         	movff	?___lwdiv,_partdecl
   791   000AEA  C01D  F006         	movff	?___lwdiv+1,_partdecl+1
   792   000AEE  6A07               	clrf	(_partdecl+2)^0,c
   793   000AF0  6A08               	clrf	(_partdecl+3)^0,c
   794   000AF2  D032               	goto	l1748
   795   000AF4                     l1728:
   796                           
   797                           ;Laboratorio4.c: 92: if(n1 != 0 & n2 == 0) r = 1000;
   798   000AF4  500F               	movf	_n1^0,w,c
   799   000AF6  1010               	iorwf	(_n1+1)^0,w,c
   800   000AF8  B4D8               	btfsc	status,2,c
   801   000AFA  D006               	goto	l1734
   802   000AFC  500D               	movf	_n2^0,w,c
   803   000AFE  100E               	iorwf	(_n2+1)^0,w,c
   804   000B00  A4D8               	btfss	status,2,c
   805   000B02  D002               	goto	l1734
   806   000B04  0EE8               	movlw	232
   807   000B06  D009               	goto	L3
   808   000B08                     l1734:
   809                           
   810                           ;Laboratorio4.c: 93: else if(n1 == 0 & n2 == 0) r = 1001;
   811   000B08  500F               	movf	_n1^0,w,c
   812   000B0A  1010               	iorwf	(_n1+1)^0,w,c
   813   000B0C  A4D8               	btfss	status,2,c
   814   000B0E  D78F               	goto	l1710
   815   000B10  500D               	movf	_n2^0,w,c
   816   000B12  100E               	iorwf	(_n2+1)^0,w,c
   817   000B14  A4D8               	btfss	status,2,c
   818   000B16  D78B               	goto	l1710
   819   000B18  0EE9               	movlw	233
   820   000B1A                     L3:
   821   000B1A  6E01               	movwf	_r^0,c
   822   000B1C  0E03               	movlw	3
   823   000B1E  6E02               	movwf	(_r+1)^0,c
   824   000B20  0E00               	movlw	0
   825   000B22  6E03               	movwf	(_r+2)^0,c
   826   000B24  0E00               	movlw	0
   827   000B26  6E04               	movwf	(_r+3)^0,c
   828   000B28  D782               	goto	l1710
   829   000B2A                     l1742:
   830                           
   831                           ;Laboratorio4.c: 98: r = 0;
   832   000B2A  0E00               	movlw	0
   833   000B2C  6E01               	movwf	_r^0,c
   834   000B2E  0E00               	movlw	0
   835   000B30  6E02               	movwf	(_r+1)^0,c
   836   000B32  0E00               	movlw	0
   837   000B34  6E03               	movwf	(_r+2)^0,c
   838   000B36  0E00               	movlw	0
   839   000B38  6E04               	movwf	(_r+3)^0,c
   840                           
   841                           ;Laboratorio4.c: 99: break;
   842   000B3A  D00E               	goto	l1748
   843   000B3C                     l1746:
   844   000B3C  502B               	movf	_op^0,w,c
   845                           
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 4, Range of values is 43 to 120
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte           13     7 (average)
   851                           ;	Chosen strategy is simple_byte
   852   000B3E  0A2B               	xorlw	43	; case 43
   853   000B40  B4D8               	btfsc	status,2,c
   854   000B42  D769               	goto	l1708
   855   000B44  0A06               	xorlw	6	; case 45
   856   000B46  B4D8               	btfsc	status,2,c
   857   000B48  D78D               	goto	l1712
   858   000B4A  0A02               	xorlw	2	; case 47
   859   000B4C  B4D8               	btfsc	status,2,c
   860   000B4E  D79F               	goto	l1720
   861   000B50  0A57               	xorlw	87	; case 120
   862   000B52  B4D8               	btfsc	status,2,c
   863   000B54  D78D               	goto	l1716
   864   000B56  D7E9               	goto	l1742
   865   000B58                     l1748:
   866                           
   867                           ;Laboratorio4.c: 101: DireccionaLCD(0x84);
   868   000B58  0E84               	movlw	132
   869   000B5A  EC70  F008         	call	_DireccionaLCD
   870                           
   871                           ;Laboratorio4.c: 102: if ((partdecl-(r*100))!= 0){
   872   000B5E  C001  F016         	movff	_r,___lmul@multiplier
   873   000B62  C002  F017         	movff	_r+1,___lmul@multiplier+1
   874   000B66  C003  F018         	movff	_r+2,___lmul@multiplier+2
   875   000B6A  C004  F019         	movff	_r+3,___lmul@multiplier+3
   876   000B6E  0E9C               	movlw	156
   877   000B70  6E1A               	movwf	___lmul@multiplicand^0,c
   878   000B72  0EFF               	movlw	255
   879   000B74  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   880   000B76  0EFF               	movlw	255
   881   000B78  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   882   000B7A  0EFF               	movlw	255
   883   000B7C  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   884   000B7E  EC5B  F007         	call	___lmul	;wreg free
   885   000B82  5005               	movf	_partdecl^0,w,c
   886   000B84  2416               	addwf	?___lmul^0,w,c
   887   000B86  6E23               	movwf	??_main^0,c
   888   000B88  5006               	movf	(_partdecl+1)^0,w,c
   889   000B8A  2017               	addwfc	(?___lmul+1)^0,w,c
   890   000B8C  6E24               	movwf	(??_main+1)^0,c
   891   000B8E  5007               	movf	(_partdecl+2)^0,w,c
   892   000B90  2018               	addwfc	(?___lmul+2)^0,w,c
   893   000B92  6E25               	movwf	(??_main+2)^0,c
   894   000B94  5008               	movf	(_partdecl+3)^0,w,c
   895   000B96  2019               	addwfc	(?___lmul+3)^0,w,c
   896   000B98  6E26               	movwf	(??_main+3)^0,c
   897   000B9A  5023               	movf	??_main^0,w,c
   898   000B9C  1024               	iorwf	(??_main+1)^0,w,c
   899   000B9E  1025               	iorwf	(??_main+2)^0,w,c
   900   000BA0  1026               	iorwf	(??_main+3)^0,w,c
   901   000BA2  B4D8               	btfsc	status,2,c
   902   000BA4  D056               	goto	l1772
   903                           
   904                           ;Laboratorio4.c: 103: for (int i = 0; i < 3; i++) {
   905   000BA6  0E00               	movlw	0
   906   000BA8  6E28               	movwf	(main@i+1)^0,c
   907   000BAA  0E00               	movlw	0
   908   000BAC  6E27               	movwf	main@i^0,c
   909   000BAE                     l1752:
   910   000BAE  BE28               	btfsc	(main@i+1)^0,7,c
   911   000BB0  D008               	goto	l1756
   912   000BB2  5028               	movf	(main@i+1)^0,w,c
   913   000BB4  E105               	bnz	u1290
   914   000BB6  0E03               	movlw	3
   915   000BB8  5C27               	subwf	main@i^0,w,c
   916   000BBA  B0D8               	btfsc	status,0,c
   917   000BBC  D0E5               	goto	l1806
   918   000BBE  D001               	goto	l1756
   919   000BC0                     u1290:
   920   000BC0  D0E3               	goto	l1806
   921   000BC2                     l1756:
   922                           
   923                           ;Laboratorio4.c: 104: r = n1 / n2;
   924   000BC2  C00F  F01C         	movff	_n1,___lwdiv@dividend
   925   000BC6  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   926   000BCA  C00D  F01E         	movff	_n2,___lwdiv@divisor
   927   000BCE  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   928   000BD2  ECB1  F007         	call	___lwdiv	;wreg free
   929   000BD6  C01C  F001         	movff	?___lwdiv,_r
   930   000BDA  C01D  F002         	movff	?___lwdiv+1,_r+1
   931   000BDE  6A03               	clrf	(_r+2)^0,c
   932   000BE0  6A04               	clrf	(_r+3)^0,c
   933                           
   934                           ;Laboratorio4.c: 105: m = n1 % n2;
   935   000BE2  C00F  F016         	movff	_n1,___lwmod@dividend
   936   000BE6  C010  F017         	movff	_n1+1,___lwmod@dividend+1
   937   000BEA  C00D  F018         	movff	_n2,___lwmod@divisor
   938   000BEE  C00E  F019         	movff	_n2+1,___lwmod@divisor+1
   939   000BF2  ECDA  F007         	call	___lwmod	;wreg free
   940   000BF6  C016  F012         	movff	?___lwmod,_m
   941   000BFA  C017  F013         	movff	?___lwmod+1,_m+1
   942   000BFE  6A14               	clrf	(_m+2)^0,c
   943   000C00  6A15               	clrf	(_m+3)^0,c
   944                           
   945                           ;Laboratorio4.c: 106: EscribeLCD_c(r+'0');
   946   000C02  5001               	movf	_r^0,w,c
   947   000C04  0F30               	addlw	48
   948   000C06  EC65  F008         	call	_EscribeLCD_c
   949                           
   950                           ;Laboratorio4.c: 107: if(i == 0 && m != 0) {
   951   000C0A  5027               	movf	main@i^0,w,c
   952   000C0C  1028               	iorwf	(main@i+1)^0,w,c
   953   000C0E  A4D8               	btfss	status,2,c
   954   000C10  D009               	goto	l1764
   955   000C12  5012               	movf	_m^0,w,c
   956   000C14  1013               	iorwf	(_m+1)^0,w,c
   957   000C16  1014               	iorwf	(_m+2)^0,w,c
   958   000C18  1015               	iorwf	(_m+3)^0,w,c
   959   000C1A  B4D8               	btfsc	status,2,c
   960   000C1C  D003               	goto	l1764
   961                           
   962                           ;Laboratorio4.c: 108: EscribeLCD_c(',');
   963   000C1E  0E2C               	movlw	44
   964   000C20  EC65  F008         	call	_EscribeLCD_c
   965   000C24                     l1764:
   966                           
   967                           ;Laboratorio4.c: 109: };Laboratorio4.c: 111: if (m != 0) {
   968   000C24  5012               	movf	_m^0,w,c
   969   000C26  1013               	iorwf	(_m+1)^0,w,c
   970   000C28  1014               	iorwf	(_m+2)^0,w,c
   971   000C2A  1015               	iorwf	(_m+3)^0,w,c
   972   000C2C  B4D8               	btfsc	status,2,c
   973   000C2E  D0AC               	goto	l1806
   974                           
   975                           ;Laboratorio4.c: 112: n1 = m * 10;
   976   000C30  C012  F016         	movff	_m,___wmul@multiplier
   977   000C34  C013  F017         	movff	_m+1,___wmul@multiplier+1
   978   000C38  0E00               	movlw	0
   979   000C3A  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   980   000C3C  0E0A               	movlw	10
   981   000C3E  6E18               	movwf	___wmul@multiplicand^0,c
   982   000C40  EC52  F008         	call	___wmul	;wreg free
   983   000C44  C016  F00F         	movff	?___wmul,_n1
   984   000C48  C017  F010         	movff	?___wmul+1,_n1+1
   985                           
   986                           ;Laboratorio4.c: 113: } else {
   987   000C4C  4A27               	infsnz	main@i^0,f,c
   988   000C4E  2A28               	incf	(main@i+1)^0,f,c
   989   000C50  D7AE               	goto	l1752
   990   000C52                     l1772:
   991   000C52  5004               	movf	(_r+3)^0,w,c
   992   000C54  1003               	iorwf	(_r+2)^0,w,c
   993   000C56  1002               	iorwf	(_r+1)^0,w,c
   994   000C58  E104               	bnz	u1330
   995   000C5A  0E52               	movlw	82
   996   000C5C  5C01               	subwf	_r^0,w,c
   997   000C5E  A0D8               	btfss	status,0,c
   998   000C60  D025               	goto	l1784
   999   000C62                     u1330:
  1000   000C62  0EE8               	movlw	232
  1001   000C64  1801               	xorwf	_r^0,w,c
  1002   000C66  E106               	bnz	u1340
  1003   000C68  0E03               	movlw	3
  1004   000C6A  1802               	xorwf	(_r+1)^0,w,c
  1005   000C6C  1003               	iorwf	(_r+2)^0,w,c
  1006   000C6E  1004               	iorwf	(_r+3)^0,w,c
  1007   000C70  B4D8               	btfsc	status,2,c
  1008   000C72  D01C               	goto	l1784
  1009   000C74                     u1340:
  1010   000C74  0EE9               	movlw	233
  1011   000C76  1801               	xorwf	_r^0,w,c
  1012   000C78  E106               	bnz	u1350
  1013   000C7A  0E03               	movlw	3
  1014   000C7C  1802               	xorwf	(_r+1)^0,w,c
  1015   000C7E  1003               	iorwf	(_r+2)^0,w,c
  1016   000C80  1004               	iorwf	(_r+3)^0,w,c
  1017   000C82  B4D8               	btfsc	status,2,c
  1018   000C84  D013               	goto	l1784
  1019   000C86                     u1350:
  1020                           
  1021                           ;Laboratorio4.c: 119: EscribeLCD_c('-');
  1022   000C86  0E2D               	movlw	45
  1023   000C88  EC65  F008         	call	_EscribeLCD_c
  1024                           
  1025                           ;Laboratorio4.c: 120: DireccionaLCD(0x85);
  1026   000C8C  0E85               	movlw	133
  1027   000C8E  EC70  F008         	call	_DireccionaLCD
  1028                           
  1029                           ;Laboratorio4.c: 121: r = ~r+1;
  1030   000C92  1E04               	comf	(_r+3)^0,f,c
  1031   000C94  1E03               	comf	(_r+2)^0,f,c
  1032   000C96  1E02               	comf	(_r+1)^0,f,c
  1033   000C98  6C01               	negf	_r^0,c
  1034   000C9A  0E00               	movlw	0
  1035   000C9C  2202               	addwfc	(_r+1)^0,f,c
  1036   000C9E  2203               	addwfc	(_r+2)^0,f,c
  1037   000CA0  2204               	addwfc	(_r+3)^0,f,c
  1038                           
  1039                           ;Laboratorio4.c: 122: EscribeLCD_c(r+'0');
  1040   000CA2  5001               	movf	_r^0,w,c
  1041   000CA4  0F30               	addlw	48
  1042   000CA6  EC65  F008         	call	_EscribeLCD_c
  1043                           
  1044                           ;Laboratorio4.c: 123: }else{
  1045   000CAA  D06E               	goto	l1806
  1046   000CAC                     l1784:
  1047                           
  1048                           ;Laboratorio4.c: 124: if(r>0xA & r!=1000 & r !=1001){
  1049   000CAC  5004               	movf	(_r+3)^0,w,c
  1050   000CAE  1003               	iorwf	(_r+2)^0,w,c
  1051   000CB0  1002               	iorwf	(_r+1)^0,w,c
  1052   000CB2  E104               	bnz	u1360
  1053   000CB4  0E0B               	movlw	11
  1054   000CB6  5C01               	subwf	_r^0,w,c
  1055   000CB8  A0D8               	btfss	status,0,c
  1056   000CBA  D038               	goto	l1794
  1057   000CBC                     u1360:
  1058   000CBC  0EE8               	movlw	232
  1059   000CBE  1801               	xorwf	_r^0,w,c
  1060   000CC0  E106               	bnz	u1370
  1061   000CC2  0E03               	movlw	3
  1062   000CC4  1802               	xorwf	(_r+1)^0,w,c
  1063   000CC6  1003               	iorwf	(_r+2)^0,w,c
  1064   000CC8  1004               	iorwf	(_r+3)^0,w,c
  1065   000CCA  B4D8               	btfsc	status,2,c
  1066   000CCC  D02F               	goto	l1794
  1067   000CCE                     u1370:
  1068   000CCE  0EE9               	movlw	233
  1069   000CD0  1801               	xorwf	_r^0,w,c
  1070   000CD2  E106               	bnz	u1380
  1071   000CD4  0E03               	movlw	3
  1072   000CD6  1802               	xorwf	(_r+1)^0,w,c
  1073   000CD8  1003               	iorwf	(_r+2)^0,w,c
  1074   000CDA  1004               	iorwf	(_r+3)^0,w,c
  1075   000CDC  B4D8               	btfsc	status,2,c
  1076   000CDE  D026               	goto	l1794
  1077   000CE0                     u1380:
  1078   000CE0                     l1790:
  1079                           
  1080                           ;Laboratorio4.c: 126: i = i+1;
  1081   000CE0  0E01               	movlw	1
  1082   000CE2  240B               	addwf	_i^0,w,c
  1083   000CE4  6E0B               	movwf	_i^0,c
  1084   000CE6  0E00               	movlw	0
  1085   000CE8  200C               	addwfc	(_i+1)^0,w,c
  1086   000CEA  6E0C               	movwf	(_i+1)^0,c
  1087                           
  1088                           ;Laboratorio4.c: 127: r = r - 10;
  1089   000CEC  0EF6               	movlw	246
  1090   000CEE  2401               	addwf	_r^0,w,c
  1091   000CF0  6E01               	movwf	_r^0,c
  1092   000CF2  0EFF               	movlw	255
  1093   000CF4  2002               	addwfc	(_r+1)^0,w,c
  1094   000CF6  6E02               	movwf	(_r+1)^0,c
  1095   000CF8  0EFF               	movlw	255
  1096   000CFA  2003               	addwfc	(_r+2)^0,w,c
  1097   000CFC  6E03               	movwf	(_r+2)^0,c
  1098   000CFE  0EFF               	movlw	255
  1099   000D00  2004               	addwfc	(_r+3)^0,w,c
  1100   000D02  6E04               	movwf	(_r+3)^0,c
  1101                           
  1102                           ;Laboratorio4.c: 128: }while(r>0xA);
  1103   000D04  5004               	movf	(_r+3)^0,w,c
  1104   000D06  1003               	iorwf	(_r+2)^0,w,c
  1105   000D08  1002               	iorwf	(_r+1)^0,w,c
  1106   000D0A  E1EA               	bnz	l1790
  1107   000D0C  0E0B               	movlw	11
  1108   000D0E  5C01               	subwf	_r^0,w,c
  1109   000D10  B0D8               	btfsc	status,0,c
  1110   000D12  D7E6               	goto	u1380
  1111                           
  1112                           ;Laboratorio4.c: 129: EscribeLCD_c(i+'0');
  1113   000D14  500B               	movf	_i^0,w,c
  1114   000D16  0F30               	addlw	48
  1115   000D18  EC65  F008         	call	_EscribeLCD_c
  1116                           
  1117                           ;Laboratorio4.c: 130: DireccionaLCD(0x85);
  1118   000D1C  0E85               	movlw	133
  1119   000D1E  EC70  F008         	call	_DireccionaLCD
  1120                           
  1121                           ;Laboratorio4.c: 131: EscribeLCD_c(r+'0');
  1122   000D22  5001               	movf	_r^0,w,c
  1123   000D24  0F30               	addlw	48
  1124   000D26  EC65  F008         	call	_EscribeLCD_c
  1125                           
  1126                           ;Laboratorio4.c: 132: }else{
  1127   000D2A  D02E               	goto	l1806
  1128   000D2C                     l1794:
  1129                           
  1130                           ;Laboratorio4.c: 133: if(r==1000){
  1131   000D2C  0EE8               	movlw	232
  1132   000D2E  1801               	xorwf	_r^0,w,c
  1133   000D30  E110               	bnz	l1798
  1134   000D32  0E03               	movlw	3
  1135   000D34  1802               	xorwf	(_r+1)^0,w,c
  1136   000D36  1003               	iorwf	(_r+2)^0,w,c
  1137   000D38  1004               	iorwf	(_r+3)^0,w,c
  1138   000D3A  A4D8               	btfss	status,2,c
  1139   000D3C  D00A               	goto	l1798
  1140                           
  1141                           ;Laboratorio4.c: 134: EscribeLCD_c('I');
  1142   000D3E  0E49               	movlw	73
  1143   000D40  EC65  F008         	call	_EscribeLCD_c
  1144                           
  1145                           ;Laboratorio4.c: 135: EscribeLCD_c('N');
  1146   000D44  0E4E               	movlw	78
  1147   000D46  EC65  F008         	call	_EscribeLCD_c
  1148                           
  1149                           ;Laboratorio4.c: 136: EscribeLCD_c('F');
  1150   000D4A  0E46               	movlw	70
  1151   000D4C  EC65  F008         	call	_EscribeLCD_c
  1152                           
  1153                           ;Laboratorio4.c: 137: }else{
  1154   000D50  D01B               	goto	l1806
  1155   000D52                     l1798:
  1156                           
  1157                           ;Laboratorio4.c: 138: if(r==1001){
  1158   000D52  0EE9               	movlw	233
  1159   000D54  1801               	xorwf	_r^0,w,c
  1160   000D56  E110               	bnz	l1802
  1161   000D58  0E03               	movlw	3
  1162   000D5A  1802               	xorwf	(_r+1)^0,w,c
  1163   000D5C  1003               	iorwf	(_r+2)^0,w,c
  1164   000D5E  1004               	iorwf	(_r+3)^0,w,c
  1165   000D60  A4D8               	btfss	status,2,c
  1166   000D62  D00A               	goto	l1802
  1167                           
  1168                           ;Laboratorio4.c: 139: EscribeLCD_c('I');
  1169   000D64  0E49               	movlw	73
  1170   000D66  EC65  F008         	call	_EscribeLCD_c
  1171                           
  1172                           ;Laboratorio4.c: 140: EscribeLCD_c('N');
  1173   000D6A  0E4E               	movlw	78
  1174   000D6C  EC65  F008         	call	_EscribeLCD_c
  1175                           
  1176                           ;Laboratorio4.c: 141: EscribeLCD_c('D');
  1177   000D70  0E44               	movlw	68
  1178   000D72  EC65  F008         	call	_EscribeLCD_c
  1179                           
  1180                           ;Laboratorio4.c: 142: }else{
  1181   000D76  D008               	goto	l1806
  1182   000D78                     l1802:
  1183                           
  1184                           ;Laboratorio4.c: 143: EscribeLCD_c(r+'0');
  1185   000D78  5001               	movf	_r^0,w,c
  1186   000D7A  0F30               	addlw	48
  1187   000D7C  EC65  F008         	call	_EscribeLCD_c
  1188   000D80  D003               	goto	l1806
  1189   000D82                     l1804:
  1190                           
  1191                           ;Laboratorio4.c: 149: EscribeLCD_c('W');
  1192   000D82  0E57               	movlw	87
  1193   000D84  EC65  F008         	call	_EscribeLCD_c
  1194   000D88                     l1806:
  1195                           
  1196                           ;Laboratorio4.c: 150: };Laboratorio4.c: 151: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1197   000D88  0EE4               	movlw	228
  1198   000D8A  6E23               	movwf	??_main^0,c
  1199   000D8C  0E44               	movlw	68
  1200   000D8E                     u1437:
  1201   000D8E  2EE8               	decfsz	wreg,f,c
  1202   000D90  D7FE               	bra	u1437
  1203   000D92  2E23               	decfsz	??_main^0,f,c
  1204   000D94  D7FC               	bra	u1437
  1205   000D96  D000               	nop2	
  1206   000D98  D562               	goto	l1598
  1207   000D9A                     __end_of_main:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function ___wmul *****************
  1211 ;; Defined at:
  1212 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  multiplier      2    0[COMRAM] unsigned int 
  1215 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  product         2    4[COMRAM] unsigned int 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2    0[COMRAM] unsigned int 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, prodl, prodh
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1227 ;;      Params:         4       0       0       0       0       0       0       0       0
  1228 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1230 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1231 ;;Total ram usage:        6 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text1
  1241   0010A4                     __ptext1:
  1242                           	callstack 0
  1243   0010A4                     ___wmul:
  1244                           	callstack 30
  1245                           
  1246                           ;incstack = 0
  1247   0010A4  5016               	movf	___wmul@multiplier^0,w,c
  1248   0010A6  0218               	mulwf	___wmul@multiplicand^0,c
  1249   0010A8  CFF3 F01A          	movff	prodl,___wmul@product
  1250   0010AC  CFF4 F01B          	movff	prodh,___wmul@product+1
  1251   0010B0  5016               	movf	___wmul@multiplier^0,w,c
  1252   0010B2  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  1253   0010B4  50F3               	movf	243,w,c
  1254   0010B6  261B               	addwf	(___wmul@product+1)^0,f,c
  1255   0010B8  5017               	movf	(___wmul@multiplier+1)^0,w,c
  1256   0010BA  0218               	mulwf	___wmul@multiplicand^0,c
  1257   0010BC  50F3               	movf	243,w,c
  1258   0010BE  261B               	addwf	(___wmul@product+1)^0,f,c
  1259   0010C0  C01A  F016         	movff	___wmul@product,?___wmul
  1260   0010C4  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  1261   0010C8  0012               	return		;funcret
  1262   0010CA                     __end_of___wmul:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function ___lwmod *****************
  1266 ;; Defined at:
  1267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  dividend        2    0[COMRAM] unsigned int 
  1270 ;;  divisor         2    2[COMRAM] unsigned int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  counter         1    4[COMRAM] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2    0[COMRAM] unsigned int 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1282 ;;      Params:         4       0       0       0       0       0       0       0       0
  1283 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1285 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1286 ;;Total ram usage:        5 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text2
  1296   000FB4                     __ptext2:
  1297                           	callstack 0
  1298   000FB4                     ___lwmod:
  1299                           	callstack 30
  1300                           
  1301                           ;incstack = 0
  1302   000FB4  5018               	movf	___lwmod@divisor^0,w,c
  1303   000FB6  1019               	iorwf	(___lwmod@divisor+1)^0,w,c
  1304   000FB8  B4D8               	btfsc	status,2,c
  1305   000FBA  D018               	goto	l718
  1306   000FBC  0E01               	movlw	1
  1307   000FBE  6E1A               	movwf	___lwmod@counter^0,c
  1308   000FC0  D004               	goto	l1574
  1309   000FC2                     l1572:
  1310   000FC2  90D8               	bcf	status,0,c
  1311   000FC4  3618               	rlcf	___lwmod@divisor^0,f,c
  1312   000FC6  3619               	rlcf	(___lwmod@divisor+1)^0,f,c
  1313   000FC8  2A1A               	incf	___lwmod@counter^0,f,c
  1314   000FCA                     l1574:
  1315   000FCA  AE19               	btfss	(___lwmod@divisor+1)^0,7,c
  1316   000FCC  D7FA               	goto	l1572
  1317   000FCE                     u890:
  1318   000FCE  5018               	movf	___lwmod@divisor^0,w,c
  1319   000FD0  5C16               	subwf	___lwmod@dividend^0,w,c
  1320   000FD2  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1321   000FD4  5817               	subwfb	(___lwmod@dividend+1)^0,w,c
  1322   000FD6  A0D8               	btfss	status,0,c
  1323   000FD8  D004               	goto	l1580
  1324   000FDA  5018               	movf	___lwmod@divisor^0,w,c
  1325   000FDC  5E16               	subwf	___lwmod@dividend^0,f,c
  1326   000FDE  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1327   000FE0  5A17               	subwfb	(___lwmod@dividend+1)^0,f,c
  1328   000FE2                     l1580:
  1329   000FE2  90D8               	bcf	status,0,c
  1330   000FE4  3219               	rrcf	(___lwmod@divisor+1)^0,f,c
  1331   000FE6  3218               	rrcf	___lwmod@divisor^0,f,c
  1332   000FE8  2E1A               	decfsz	___lwmod@counter^0,f,c
  1333   000FEA  D7F1               	goto	u890
  1334   000FEC                     l718:
  1335   000FEC  C016  F016         	movff	___lwmod@dividend,?___lwmod
  1336   000FF0  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  1337   000FF4  0012               	return		;funcret
  1338   000FF6                     __end_of___lwmod:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function ___lwdiv *****************
  1342 ;; Defined at:
  1343 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  dividend        2    6[COMRAM] unsigned int 
  1346 ;;  divisor         2    8[COMRAM] unsigned int 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  quotient        2   10[COMRAM] unsigned int 
  1349 ;;  counter         1   12[COMRAM] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    6[COMRAM] unsigned int 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         4       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        7 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text3
  1373   000F62                     __ptext3:
  1374                           	callstack 0
  1375   000F62                     ___lwdiv:
  1376                           	callstack 30
  1377                           
  1378                           ;incstack = 0
  1379   000F62  0E00               	movlw	0
  1380   000F64  6E21               	movwf	(___lwdiv@quotient+1)^0,c
  1381   000F66  0E00               	movlw	0
  1382   000F68  6E20               	movwf	___lwdiv@quotient^0,c
  1383   000F6A  501E               	movf	___lwdiv@divisor^0,w,c
  1384   000F6C  101F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1385   000F6E  B4D8               	btfsc	status,2,c
  1386   000F70  D01C               	goto	l708
  1387   000F72  0E01               	movlw	1
  1388   000F74  6E22               	movwf	___lwdiv@counter^0,c
  1389   000F76  D004               	goto	l1554
  1390   000F78                     l1552:
  1391   000F78  90D8               	bcf	status,0,c
  1392   000F7A  361E               	rlcf	___lwdiv@divisor^0,f,c
  1393   000F7C  361F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1394   000F7E  2A22               	incf	___lwdiv@counter^0,f,c
  1395   000F80                     l1554:
  1396   000F80  AE1F               	btfss	(___lwdiv@divisor+1)^0,7,c
  1397   000F82  D7FA               	goto	l1552
  1398   000F84                     u860:
  1399   000F84  90D8               	bcf	status,0,c
  1400   000F86  3620               	rlcf	___lwdiv@quotient^0,f,c
  1401   000F88  3621               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1402   000F8A  501E               	movf	___lwdiv@divisor^0,w,c
  1403   000F8C  5C1C               	subwf	___lwdiv@dividend^0,w,c
  1404   000F8E  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1405   000F90  581D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1406   000F92  A0D8               	btfss	status,0,c
  1407   000F94  D005               	goto	l1564
  1408   000F96  501E               	movf	___lwdiv@divisor^0,w,c
  1409   000F98  5E1C               	subwf	___lwdiv@dividend^0,f,c
  1410   000F9A  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1411   000F9C  5A1D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1412   000F9E  8020               	bsf	___lwdiv@quotient^0,0,c
  1413   000FA0                     l1564:
  1414   000FA0  90D8               	bcf	status,0,c
  1415   000FA2  321F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1416   000FA4  321E               	rrcf	___lwdiv@divisor^0,f,c
  1417   000FA6  2E22               	decfsz	___lwdiv@counter^0,f,c
  1418   000FA8  D7ED               	goto	u860
  1419   000FAA                     l708:
  1420   000FAA  C020  F01C         	movff	___lwdiv@quotient,?___lwdiv
  1421   000FAE  C021  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1422   000FB2  0012               	return		;funcret
  1423   000FB4                     __end_of___lwdiv:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function ___lmul *****************
  1427 ;; Defined at:
  1428 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  multiplier      4    0[COMRAM] unsigned long 
  1431 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  product         4    8[COMRAM] unsigned long 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  4    0[COMRAM] unsigned long 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         8       0       0       0       0       0       0       0       0
  1444 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1446 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1447 ;;Total ram usage:       12 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text4
  1457   000EB6                     __ptext4:
  1458                           	callstack 0
  1459   000EB6                     ___lmul:
  1460                           	callstack 30
  1461                           
  1462                           ;incstack = 0
  1463   000EB6  0E00               	movlw	0
  1464   000EB8  6E1E               	movwf	___lmul@product^0,c
  1465   000EBA  0E00               	movlw	0
  1466   000EBC  6E1F               	movwf	(___lmul@product+1)^0,c
  1467   000EBE  0E00               	movlw	0
  1468   000EC0  6E20               	movwf	(___lmul@product+2)^0,c
  1469   000EC2  0E00               	movlw	0
  1470   000EC4  6E21               	movwf	(___lmul@product+3)^0,c
  1471   000EC6                     l1538:
  1472   000EC6  A016               	btfss	___lmul@multiplier^0,0,c
  1473   000EC8  D008               	goto	l1542
  1474   000ECA  501A               	movf	___lmul@multiplicand^0,w,c
  1475   000ECC  261E               	addwf	___lmul@product^0,f,c
  1476   000ECE  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  1477   000ED0  221F               	addwfc	(___lmul@product+1)^0,f,c
  1478   000ED2  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  1479   000ED4  2220               	addwfc	(___lmul@product+2)^0,f,c
  1480   000ED6  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  1481   000ED8  2221               	addwfc	(___lmul@product+3)^0,f,c
  1482   000EDA                     l1542:
  1483   000EDA  90D8               	bcf	status,0,c
  1484   000EDC  361A               	rlcf	___lmul@multiplicand^0,f,c
  1485   000EDE  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1486   000EE0  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1487   000EE2  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1488   000EE4  90D8               	bcf	status,0,c
  1489   000EE6  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  1490   000EE8  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  1491   000EEA  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  1492   000EEC  3216               	rrcf	___lmul@multiplier^0,f,c
  1493   000EEE  5016               	movf	___lmul@multiplier^0,w,c
  1494   000EF0  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  1495   000EF2  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  1496   000EF4  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  1497   000EF6  A4D8               	btfss	status,2,c
  1498   000EF8  D7E6               	goto	l1538
  1499   000EFA  C01E  F016         	movff	___lmul@product,?___lmul
  1500   000EFE  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  1501   000F02  C020  F018         	movff	___lmul@product+2,?___lmul+2
  1502   000F06  C021  F019         	movff	___lmul@product+3,?___lmul+3
  1503   000F0A  0012               	return		;funcret
  1504   000F0C                     __end_of___lmul:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _MensajeLCD_Word *****************
  1508 ;; Defined at:
  1509 ;;		line 239 in file "LibLCDXC8.h"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  a               1    4[COMRAM] PTR unsigned char 
  1512 ;;		 -> STR_2(17), STR_1(11), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  i               2    6[COMRAM] int 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         1       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        4 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 3
  1531 ;; This function calls:
  1532 ;;		_EscribeLCD_c
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text5
  1539   00106E                     __ptext5:
  1540                           	callstack 0
  1541   00106E                     _MensajeLCD_Word:
  1542                           	callstack 27
  1543                           
  1544                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1545                           
  1546                           ;incstack = 0
  1547   00106E  0E00               	movlw	0
  1548   001070  6E1D               	movwf	(MensajeLCD_Word@i+1)^0,c
  1549   001072  0E00               	movlw	0
  1550   001074  6E1C               	movwf	MensajeLCD_Word@i^0,c
  1551   001076                     l1524:
  1552                           
  1553                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1554   001076  501A               	movf	MensajeLCD_Word@a^0,w,c
  1555   001078  241C               	addwf	MensajeLCD_Word@i^0,w,c
  1556   00107A  6E1B               	movwf	??_MensajeLCD_Word^0,c
  1557   00107C  C01B  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1558   001080                     	if	1	;There is more than 1 active tblptr byte
  1559   001080  0E08               	movlw	high __smallconst
  1560   001082  6EF7               	movwf	tblptrh,c
  1561   001084                     	endif
  1562   001084                     	if	0	;tblptru may be non-zero
  1563   001084                     	endif
  1564   001084                     	if	0	;tblptru may be non-zero
  1565   001084                     	endif
  1566   001084  0008               	tblrd		*
  1567   001086  50F5               	movf	tablat,w,c
  1568   001088  EC65  F008         	call	_EscribeLCD_c
  1569   00108C  4A1C               	infsnz	MensajeLCD_Word@i^0,f,c
  1570   00108E  2A1D               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1571   001090  BE1D               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1572   001092  D7F1               	goto	l1524
  1573   001094  501D               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1574   001096  E105               	bnz	u820
  1575   001098  0E10               	movlw	16
  1576   00109A  5C1C               	subwf	MensajeLCD_Word@i^0,w,c
  1577   00109C  B0D8               	btfsc	status,0,c
  1578   00109E  0012               	return	
  1579   0010A0  D7EA               	goto	l1524
  1580   0010A2                     u820:
  1581   0010A2  0012               	return		;funcret
  1582   0010A4                     __end_of_MensajeLCD_Word:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _EscribeLCD_c *****************
  1586 ;; Defined at:
  1587 ;;		line 140 in file "LibLCDXC8.h"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  a               1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  a               1    3[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 2
  1608 ;; This function calls:
  1609 ;;		_EnviaDato
  1610 ;;		_HabilitaLCD
  1611 ;;		_RetardoLCD
  1612 ;; This function is called by:
  1613 ;;		_MensajeLCD_Word
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text6
  1619   0010CA                     __ptext6:
  1620                           	callstack 0
  1621   0010CA                     _EscribeLCD_c:
  1622                           	callstack 27
  1623                           
  1624                           ;incstack = 0
  1625                           ;EscribeLCD_c@a stored from wreg
  1626   0010CA  6E19               	movwf	EscribeLCD_c@a^0,c
  1627                           
  1628                           ;LibLCDXC8.h: 144: LATE0=1;
  1629   0010CC  808D               	bsf	3981,0,c	;volatile
  1630                           
  1631                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1632   0010CE  5019               	movf	EscribeLCD_c@a^0,w,c
  1633   0010D0  EC8C  F008         	call	_EnviaDato
  1634                           
  1635                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1636   0010D4  EC85  F008         	call	_HabilitaLCD	;wreg free
  1637                           
  1638                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1639   0010D8  0E04               	movlw	4
  1640   0010DA  EC86  F007         	call	_RetardoLCD
  1641   0010DE  0012               	return		;funcret
  1642   0010E0                     __end_of_EscribeLCD_c:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _LeerTeclado *****************
  1646 ;; Defined at:
  1647 ;;		line 157 in file "Laboratorio4.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1661 ;;      Params:         0       0       0       0       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text7
  1675   000D9A                     __ptext7:
  1676                           	callstack 0
  1677   000D9A                     _LeerTeclado:
  1678                           	callstack 30
  1679                           
  1680                           ;Laboratorio4.c: 158: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1681                           
  1682                           ;incstack = 0
  1683   000D9A  B881               	btfsc	3969,4,c	;volatile
  1684   000D9C  AA81               	btfss	3969,5,c	;volatile
  1685   000D9E  D004               	goto	u50
  1686   000DA0  AC81               	btfss	3969,6,c	;volatile
  1687   000DA2  D002               	goto	u50
  1688   000DA4  BE81               	btfsc	3969,7,c	;volatile
  1689   000DA6  D7F9               	goto	__ptext7
  1690   000DA8                     u50:
  1691                           
  1692                           ;Laboratorio4.c: 159: LATB=0b11111110;
  1693   000DA8  0EFE               	movlw	254
  1694   000DAA  6E8A               	movwf	138,c	;volatile
  1695                           
  1696                           ;Laboratorio4.c: 160: if(RB4==0) return '1';
  1697   000DAC  B881               	btfsc	3969,4,c	;volatile
  1698   000DAE  D002               	goto	l180
  1699   000DB0  0E31               	movlw	49
  1700   000DB2  0012               	return	
  1701   000DB4                     l180:
  1702                           
  1703                           ;Laboratorio4.c: 161: else if(RB5==0) return '2';
  1704   000DB4  BA81               	btfsc	3969,5,c	;volatile
  1705   000DB6  D002               	goto	l183
  1706   000DB8  0E32               	movlw	50
  1707   000DBA  0012               	return	
  1708   000DBC                     l183:
  1709                           
  1710                           ;Laboratorio4.c: 162: else if(RB6==0) return '3';
  1711   000DBC  BC81               	btfsc	3969,6,c	;volatile
  1712   000DBE  D002               	goto	l185
  1713   000DC0  0E33               	movlw	51
  1714   000DC2  0012               	return	
  1715   000DC4                     l185:
  1716                           
  1717                           ;Laboratorio4.c: 163: else if(RB7==0) return '+';
  1718   000DC4  BE81               	btfsc	3969,7,c	;volatile
  1719   000DC6  D002               	goto	l1120
  1720   000DC8  0E2B               	movlw	43
  1721   000DCA  0012               	return	
  1722   000DCC                     l1120:
  1723                           
  1724                           ;Laboratorio4.c: 164: else{;Laboratorio4.c: 165: LATB=0b11111101;
  1725   000DCC  0EFD               	movlw	253
  1726   000DCE  6E8A               	movwf	138,c	;volatile
  1727                           
  1728                           ;Laboratorio4.c: 166: if(RB4==0) return '4';
  1729   000DD0  B881               	btfsc	3969,4,c	;volatile
  1730   000DD2  D002               	goto	l189
  1731   000DD4  0E34               	movlw	52
  1732   000DD6  0012               	return	
  1733   000DD8                     l189:
  1734                           
  1735                           ;Laboratorio4.c: 167: else if(RB5==0) return '5';
  1736   000DD8  BA81               	btfsc	3969,5,c	;volatile
  1737   000DDA  D002               	goto	l191
  1738   000DDC  0E35               	movlw	53
  1739   000DDE  0012               	return	
  1740   000DE0                     l191:
  1741                           
  1742                           ;Laboratorio4.c: 168: else if(RB6==0) return '6';
  1743   000DE0  BC81               	btfsc	3969,6,c	;volatile
  1744   000DE2  D002               	goto	l193
  1745   000DE4  0E36               	movlw	54
  1746   000DE6  0012               	return	
  1747   000DE8                     l193:
  1748                           
  1749                           ;Laboratorio4.c: 169: else if(RB7==0) return '-';
  1750   000DE8  BE81               	btfsc	3969,7,c	;volatile
  1751   000DEA  D002               	goto	l1148
  1752   000DEC  0E2D               	movlw	45
  1753   000DEE  0012               	return	
  1754   000DF0                     l1148:
  1755                           
  1756                           ;Laboratorio4.c: 170: else{;Laboratorio4.c: 171: LATB=0b11111011;
  1757   000DF0  0EFB               	movlw	251
  1758   000DF2  6E8A               	movwf	138,c	;volatile
  1759                           
  1760                           ;Laboratorio4.c: 172: if(RB4==0) return '7';
  1761   000DF4  B881               	btfsc	3969,4,c	;volatile
  1762   000DF6  D002               	goto	l197
  1763   000DF8  0E37               	movlw	55
  1764   000DFA  0012               	return	
  1765   000DFC                     l197:
  1766                           
  1767                           ;Laboratorio4.c: 173: else if(RB5==0) return '8';
  1768   000DFC  BA81               	btfsc	3969,5,c	;volatile
  1769   000DFE  D002               	goto	l199
  1770   000E00  0E38               	movlw	56
  1771   000E02  0012               	return	
  1772   000E04                     l199:
  1773                           
  1774                           ;Laboratorio4.c: 174: else if(RB6==0) return '9';
  1775   000E04  BC81               	btfsc	3969,6,c	;volatile
  1776   000E06  D002               	goto	l201
  1777   000E08  0E39               	movlw	57
  1778   000E0A  0012               	return	
  1779   000E0C                     l201:
  1780                           
  1781                           ;Laboratorio4.c: 175: else if(RB7==0) return '/';
  1782   000E0C  BE81               	btfsc	3969,7,c	;volatile
  1783   000E0E  D002               	goto	l1176
  1784   000E10  0E2F               	movlw	47
  1785   000E12  0012               	return	
  1786   000E14                     l1176:
  1787                           
  1788                           ;Laboratorio4.c: 176: else{;Laboratorio4.c: 177: LATB=0b11110111;
  1789   000E14  0EF7               	movlw	247
  1790   000E16  6E8A               	movwf	138,c	;volatile
  1791                           
  1792                           ;Laboratorio4.c: 178: if(RB4==0) return 'C';
  1793   000E18  B881               	btfsc	3969,4,c	;volatile
  1794   000E1A  D002               	goto	l205
  1795   000E1C  0E43               	movlw	67
  1796   000E1E  0012               	return	
  1797   000E20                     l205:
  1798                           
  1799                           ;Laboratorio4.c: 179: else if(RB5==0) return '0';
  1800   000E20  BA81               	btfsc	3969,5,c	;volatile
  1801   000E22  D002               	goto	l207
  1802   000E24  0E30               	movlw	48
  1803   000E26  0012               	return	
  1804   000E28                     l207:
  1805                           
  1806                           ;Laboratorio4.c: 180: else if(RB6==0) return '=';
  1807   000E28  BC81               	btfsc	3969,6,c	;volatile
  1808   000E2A  D002               	goto	l209
  1809   000E2C  0E3D               	movlw	61
  1810   000E2E  0012               	return	
  1811   000E30                     l209:
  1812                           
  1813                           ;Laboratorio4.c: 181: else if(RB7==0) return 'x';
  1814   000E30  BE81               	btfsc	3969,7,c	;volatile
  1815   000E32  D002               	goto	l206
  1816   000E34  0E78               	movlw	120
  1817   000E36  0012               	return	
  1818   000E38                     l206:
  1819                           
  1820                           ;Laboratorio4.c: 182: };Laboratorio4.c: 183: };Laboratorio4.c: 184: };Laboratorio4.c: 18
      +                          5: return '?';
  1821   000E38  0E3F               	movlw	63
  1822   000E3A  0012               	return		;funcret
  1823   000E3C                     __end_of_LeerTeclado:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _InicializaLCD *****************
  1827 ;; Defined at:
  1828 ;;		line 71 in file "LibLCDXC8.h"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 3
  1849 ;; This function calls:
  1850 ;;		_BorraLCD
  1851 ;;		_EnviaDato
  1852 ;;		_HabilitaLCD
  1853 ;;		_RetardoLCD
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text8
  1860   000FF6                     __ptext8:
  1861                           	callstack 0
  1862   000FF6                     _InicializaLCD:
  1863                           	callstack 27
  1864                           
  1865                           ;LibLCDXC8.h: 73: LATE0=0;
  1866                           
  1867                           ;incstack = 0
  1868   000FF6  908D               	bcf	3981,0,c	;volatile
  1869                           
  1870                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1871                           
  1872                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1873   000FF8  0E3F               	movlw	63
  1874   000FFA  6E8C               	movwf	140,c	;volatile
  1875                           
  1876                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1877   000FFC  EC85  F008         	call	_HabilitaLCD	;wreg free
  1878                           
  1879                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1880   001000  0E01               	movlw	1
  1881   001002  EC86  F007         	call	_RetardoLCD
  1882                           
  1883                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1884                           
  1885                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1886   001006  0E3F               	movlw	63
  1887   001008  6E8C               	movwf	140,c	;volatile
  1888                           
  1889                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1890   00100A  EC85  F008         	call	_HabilitaLCD	;wreg free
  1891                           
  1892                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1893   00100E  0E03               	movlw	3
  1894   001010  EC86  F007         	call	_RetardoLCD
  1895                           
  1896                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1897                           
  1898                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1899   001014  0E3F               	movlw	63
  1900   001016  6E8C               	movwf	140,c	;volatile
  1901                           
  1902                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1903   001018  EC85  F008         	call	_HabilitaLCD	;wreg free
  1904                           
  1905                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1906   00101C  0E04               	movlw	4
  1907   00101E  EC86  F007         	call	_RetardoLCD
  1908                           
  1909                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1910                           
  1911                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1912   001022  EC7B  F008         	call	_BorraLCD	;wreg free
  1913                           
  1914                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1915   001026  0E0F               	movlw	15
  1916   001028  EC8C  F008         	call	_EnviaDato
  1917                           
  1918                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1919   00102C  EC85  F008         	call	_HabilitaLCD	;wreg free
  1920                           
  1921                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1922   001030  0E04               	movlw	4
  1923   001032  EC86  F007         	call	_RetardoLCD
  1924   001036  0012               	return		;funcret
  1925   001038                     __end_of_InicializaLCD:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _BorraLCD *****************
  1929 ;; Defined at:
  1930 ;;		line 112 in file "LibLCDXC8.h"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 2
  1951 ;; This function calls:
  1952 ;;		_EnviaDato
  1953 ;;		_HabilitaLCD
  1954 ;;		_RetardoLCD
  1955 ;; This function is called by:
  1956 ;;		_InicializaLCD
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text9
  1962   0010F6                     __ptext9:
  1963                           	callstack 0
  1964   0010F6                     _BorraLCD:
  1965                           	callstack 27
  1966                           
  1967                           ;LibLCDXC8.h: 114: LATE0=0;
  1968                           
  1969                           ;incstack = 0
  1970   0010F6  908D               	bcf	3981,0,c	;volatile
  1971                           
  1972                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1973   0010F8  0E01               	movlw	1
  1974   0010FA  EC8C  F008         	call	_EnviaDato
  1975                           
  1976                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1977   0010FE  EC85  F008         	call	_HabilitaLCD	;wreg free
  1978                           
  1979                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1980   001102  0E02               	movlw	2
  1981   001104  EC86  F007         	call	_RetardoLCD
  1982   001108  0012               	return		;funcret
  1983   00110A                     __end_of_BorraLCD:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _DireccionaLCD *****************
  1987 ;; Defined at:
  1988 ;;		line 250 in file "LibLCDXC8.h"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  a               1    wreg     unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  a               1    3[COMRAM] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0
  2003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2005 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2006 ;;Total ram usage:        1 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 2
  2009 ;; This function calls:
  2010 ;;		_EnviaDato
  2011 ;;		_HabilitaLCD
  2012 ;;		_RetardoLCD
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text10
  2019   0010E0                     __ptext10:
  2020                           	callstack 0
  2021   0010E0                     _DireccionaLCD:
  2022                           	callstack 28
  2023                           
  2024                           ;incstack = 0
  2025                           ;DireccionaLCD@a stored from wreg
  2026   0010E0  6E19               	movwf	DireccionaLCD@a^0,c
  2027                           
  2028                           ;LibLCDXC8.h: 253: LATE0=0;
  2029   0010E2  908D               	bcf	3981,0,c	;volatile
  2030                           
  2031                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2032   0010E4  5019               	movf	DireccionaLCD@a^0,w,c
  2033   0010E6  EC8C  F008         	call	_EnviaDato
  2034                           
  2035                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2036   0010EA  EC85  F008         	call	_HabilitaLCD	;wreg free
  2037                           
  2038                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2039   0010EE  0E04               	movlw	4
  2040   0010F0  EC86  F007         	call	_RetardoLCD
  2041   0010F4  0012               	return		;funcret
  2042   0010F6                     __end_of_DireccionaLCD:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _EnviaDato *****************
  2046 ;; Defined at:
  2047 ;;		line 59 in file "LibLCDXC8.h"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  a               1    wreg     unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  a               1    2[COMRAM] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:        1 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 1
  2068 ;; This function calls:
  2069 ;;		_HabilitaLCD
  2070 ;;		_RetardoLCD
  2071 ;; This function is called by:
  2072 ;;		_InicializaLCD
  2073 ;;		_BorraLCD
  2074 ;;		_EscribeLCD_c
  2075 ;;		_DireccionaLCD
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text11
  2080   001118                     __ptext11:
  2081                           	callstack 0
  2082   001118                     _EnviaDato:
  2083                           	callstack 27
  2084                           
  2085                           ;incstack = 0
  2086                           ;EnviaDato@a stored from wreg
  2087   001118  6E18               	movwf	EnviaDato@a^0,c
  2088                           
  2089                           ;LibLCDXC8.h: 68: LATD=a;
  2090                           
  2091                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2092   00111A  C018  FF8C         	movff	EnviaDato@a,3980	;volatile
  2093   00111E  0012               	return		;funcret
  2094   001120                     __end_of_EnviaDato:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _RetardoLCD *****************
  2098 ;; Defined at:
  2099 ;;		line 286 in file "LibLCDXC8.h"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  a               1    1[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_EnviaDato
  2123 ;;		_InicializaLCD
  2124 ;;		_BorraLCD
  2125 ;;		_EscribeLCD_c
  2126 ;;		_DireccionaLCD
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text12
  2131   000F0C                     __ptext12:
  2132                           	callstack 0
  2133   000F0C                     _RetardoLCD:
  2134                           	callstack 28
  2135                           
  2136                           ;incstack = 0
  2137                           ;RetardoLCD@a stored from wreg
  2138   000F0C  6E17               	movwf	RetardoLCD@a^0,c
  2139                           
  2140                           ;LibLCDXC8.h: 287: switch(a){
  2141   000F0E  D01B               	goto	l992
  2142   000F10                     l982:
  2143   000F10  0E05               	movlw	5
  2144   000F12  6E16               	movwf	??_RetardoLCD^0,c
  2145   000F14  0EDE               	movlw	222
  2146   000F16                     u1447:
  2147   000F16  2EE8               	decfsz	wreg,f,c
  2148   000F18  D7FE               	bra	u1447
  2149   000F1A  2E16               	decfsz	??_RetardoLCD^0,f,c
  2150   000F1C  D7FC               	bra	u1447
  2151                           
  2152                           ;LibLCDXC8.h: 290: break;
  2153   000F1E  0012               	return	
  2154   000F20                     l984:
  2155   000F20  0E53               	movlw	83
  2156   000F22                     u1457:
  2157   000F22  2EE8               	decfsz	wreg,f,c
  2158   000F24  D7FE               	bra	u1457
  2159   000F26  F000               	nop	
  2160                           
  2161                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2162   000F28  0E35               	movlw	53
  2163   000F2A                     u1467:
  2164   000F2A  2EE8               	decfsz	wreg,f,c
  2165   000F2C  D7FE               	bra	u1467
  2166   000F2E  F000               	nop	
  2167                           
  2168                           ;LibLCDXC8.h: 294: break;
  2169   000F30  0012               	return	
  2170   000F32                     l986:
  2171   000F32  0E08               	movlw	8
  2172   000F34                     u1477:
  2173   000F34  2EE8               	decfsz	wreg,f,c
  2174   000F36  D7FE               	bra	u1477
  2175   000F38  F000               	nop	
  2176                           
  2177                           ;LibLCDXC8.h: 297: break;
  2178   000F3A  0012               	return	
  2179   000F3C                     l988:
  2180   000F3C  0E03               	movlw	3
  2181   000F3E                     u1487:
  2182   000F3E  2EE8               	decfsz	wreg,f,c
  2183   000F40  D7FE               	bra	u1487
  2184   000F42  F000               	nop	
  2185                           
  2186                           ;LibLCDXC8.h: 300: break;
  2187   000F44  0012               	return	
  2188   000F46                     l992:
  2189   000F46  5017               	movf	RetardoLCD@a^0,w,c
  2190                           
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 4, Range of values is 1 to 4
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte           13     7 (average)
  2196                           ;	Chosen strategy is simple_byte
  2197   000F48  0A01               	xorlw	1	; case 1
  2198   000F4A  B4D8               	btfsc	status,2,c
  2199   000F4C  D7E1               	goto	l982
  2200   000F4E  0A03               	xorlw	3	; case 2
  2201   000F50  B4D8               	btfsc	status,2,c
  2202   000F52  D7E6               	goto	l984
  2203   000F54  0A01               	xorlw	1	; case 3
  2204   000F56  B4D8               	btfsc	status,2,c
  2205   000F58  D7EC               	goto	l986
  2206   000F5A  0A07               	xorlw	7	; case 4
  2207   000F5C  A4D8               	btfss	status,2,c
  2208   000F5E  0012               	return	
  2209   000F60  D7ED               	goto	l988
  2210   000F62                     __end_of_RetardoLCD:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _HabilitaLCD *****************
  2214 ;; Defined at:
  2215 ;;		line 105 in file "LibLCDXC8.h"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_EnviaDato
  2239 ;;		_InicializaLCD
  2240 ;;		_BorraLCD
  2241 ;;		_EscribeLCD_c
  2242 ;;		_DireccionaLCD
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text13
  2247   00110A                     __ptext13:
  2248                           	callstack 0
  2249   00110A                     _HabilitaLCD:
  2250                           	callstack 28
  2251                           
  2252                           ;LibLCDXC8.h: 107: LATE1=1;
  2253                           
  2254                           ;incstack = 0
  2255   00110A  828D               	bsf	3981,1,c	;volatile
  2256                           
  2257                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2258   00110C  0E03               	movlw	3
  2259   00110E                     u1497:
  2260   00110E  2EE8               	decfsz	wreg,f,c
  2261   001110  D7FE               	bra	u1497
  2262   001112  F000               	nop	
  2263                           
  2264                           ;LibLCDXC8.h: 110: LATE1=0;
  2265   001114  928D               	bcf	3981,1,c	;volatile
  2266   001116  0012               	return		;funcret
  2267   001118                     __end_of_HabilitaLCD:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _ColorRGB *****************
  2271 ;; Defined at:
  2272 ;;		line 188 in file "Laboratorio4.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        2 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text14
  2300   000E3C                     __ptext14:
  2301                           	callstack 0
  2302   000E3C                     _ColorRGB:
  2303                           	callstack 30
  2304                           
  2305                           ;Laboratorio4.c: 189: if(color==8) color = 0;
  2306                           
  2307                           ;incstack = 0
  2308   000E3C  0E08               	movlw	8
  2309   000E3E  1809               	xorwf	_color^0,w,c
  2310   000E40  100A               	iorwf	(_color+1)^0,w,c
  2311   000E42  A4D8               	btfss	status,2,c
  2312   000E44  D014               	goto	l1228
  2313   000E46  0E00               	movlw	0
  2314   000E48  6E0A               	movwf	(_color+1)^0,c
  2315   000E4A  0E00               	movlw	0
  2316   000E4C  6E09               	movwf	_color^0,c
  2317   000E4E  D00F               	goto	l1228
  2318   000E50                     l1210:
  2319                           
  2320                           ;Laboratorio4.c: 192: LATC = 0b00000000;
  2321   000E50  0E00               	movlw	0
  2322   000E52  D00B               	goto	L9
  2323   000E54                     l1212:
  2324                           
  2325                           ;Laboratorio4.c: 195: LATC = 0b00000101;
  2326   000E54  0E05               	movlw	5
  2327   000E56  D009               	goto	L9
  2328   000E58                     l1214:
  2329                           
  2330                           ;Laboratorio4.c: 198: LATC = 0b00000110;
  2331   000E58  0E06               	movlw	6
  2332   000E5A  D007               	goto	L9
  2333   000E5C                     l1216:
  2334                           
  2335                           ;Laboratorio4.c: 201: LATC = 0b00000011;
  2336   000E5C  0E03               	movlw	3
  2337   000E5E  D005               	goto	L9
  2338   000E60                     l1218:
  2339                           
  2340                           ;Laboratorio4.c: 204: LATC = 0b00000010;
  2341   000E60  0E02               	movlw	2
  2342   000E62  D003               	goto	L9
  2343   000E64                     l1222:
  2344                           
  2345                           ;Laboratorio4.c: 210: LATC = 0b00000100;
  2346   000E64  0E04               	movlw	4
  2347   000E66  D001               	goto	L9
  2348   000E68                     l1224:
  2349                           
  2350                           ;Laboratorio4.c: 213: LATC = 0b00000111;
  2351   000E68  0E07               	movlw	7
  2352   000E6A                     L9:
  2353   000E6A  6E8B               	movwf	139,c	;volatile
  2354                           
  2355                           ;Laboratorio4.c: 214: break;
  2356   000E6C  D021               	goto	l1230
  2357   000E6E                     l1228:
  2358   000E6E  C009  F016         	movff	_color,??_ColorRGB
  2359   000E72  C00A  F017         	movff	_color+1,??_ColorRGB+1
  2360                           
  2361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 1, Range of values is 0 to 0
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte            4     3 (average)
  2367                           ;	Chosen strategy is simple_byte
  2368   000E76  5017               	movf	(??_ColorRGB+1)^0,w,c
  2369   000E78  0A00               	xorlw	0	; case 0
  2370   000E7A  A4D8               	btfss	status,2,c
  2371   000E7C  D019               	goto	l1230
  2372                           
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 8, Range of values is 0 to 7
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte           25    13 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379   000E7E  5016               	movf	??_ColorRGB^0,w,c
  2380   000E80  0A00               	xorlw	0	; case 0
  2381   000E82  B4D8               	btfsc	status,2,c
  2382   000E84  D7E5               	goto	l1210
  2383   000E86  0A01               	xorlw	1	; case 1
  2384   000E88  B4D8               	btfsc	status,2,c
  2385   000E8A  D7E4               	goto	l1212
  2386   000E8C  0A03               	xorlw	3	; case 2
  2387   000E8E  B4D8               	btfsc	status,2,c
  2388   000E90  D7E3               	goto	l1214
  2389   000E92  0A01               	xorlw	1	; case 3
  2390   000E94  B4D8               	btfsc	status,2,c
  2391   000E96  D7E2               	goto	l1216
  2392   000E98  0A07               	xorlw	7	; case 4
  2393   000E9A  B4D8               	btfsc	status,2,c
  2394   000E9C  D7E1               	goto	l1218
  2395   000E9E  0A01               	xorlw	1	; case 5
  2396   000EA0  B4D8               	btfsc	status,2,c
  2397   000EA2  D7DA               	goto	l1214
  2398   000EA4  0A03               	xorlw	3	; case 6
  2399   000EA6  B4D8               	btfsc	status,2,c
  2400   000EA8  D7DD               	goto	l1222
  2401   000EAA  0A01               	xorlw	1	; case 7
  2402   000EAC  B4D8               	btfsc	status,2,c
  2403   000EAE  D7DC               	goto	l1224
  2404   000EB0                     l1230:
  2405                           
  2406                           ;Laboratorio4.c: 218: color += 1;
  2407   000EB0  4A09               	infsnz	_color^0,f,c
  2408   000EB2  2A0A               	incf	(_color+1)^0,f,c
  2409   000EB4  0012               	return		;funcret
  2410   000EB6                     __end_of_ColorRGB:
  2411                           	callstack 0
  2412                           
  2413                           	psect	rparam
  2414   000000                     
  2415                           	psect	idloc
  2416                           
  2417                           ;Config register IDLOC0 @ 0x200000
  2418                           ;	unspecified, using default values
  2419   200000                     	org	2097152
  2420   200000  FF                 	db	255
  2421                           
  2422                           ;Config register IDLOC1 @ 0x200001
  2423                           ;	unspecified, using default values
  2424   200001                     	org	2097153
  2425   200001  FF                 	db	255
  2426                           
  2427                           ;Config register IDLOC2 @ 0x200002
  2428                           ;	unspecified, using default values
  2429   200002                     	org	2097154
  2430   200002  FF                 	db	255
  2431                           
  2432                           ;Config register IDLOC3 @ 0x200003
  2433                           ;	unspecified, using default values
  2434   200003                     	org	2097155
  2435   200003  FF                 	db	255
  2436                           
  2437                           ;Config register IDLOC4 @ 0x200004
  2438                           ;	unspecified, using default values
  2439   200004                     	org	2097156
  2440   200004  FF                 	db	255
  2441                           
  2442                           ;Config register IDLOC5 @ 0x200005
  2443                           ;	unspecified, using default values
  2444   200005                     	org	2097157
  2445   200005  FF                 	db	255
  2446                           
  2447                           ;Config register IDLOC6 @ 0x200006
  2448                           ;	unspecified, using default values
  2449   200006                     	org	2097158
  2450   200006  FF                 	db	255
  2451                           
  2452                           ;Config register IDLOC7 @ 0x200007
  2453                           ;	unspecified, using default values
  2454   200007                     	org	2097159
  2455   200007  FF                 	db	255
  2456                           
  2457                           	psect	config
  2458                           
  2459                           ;Config register CONFIG1L @ 0x300000
  2460                           ;	unspecified, using default values
  2461                           ;	PLL Prescaler Selection bits
  2462                           ;	PLLDIV = 0x0, unprogrammed default
  2463                           ;	System Clock Postscaler Selection bits
  2464                           ;	CPUDIV = 0x0, unprogrammed default
  2465                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2466                           ;	USBDIV = 0x0, unprogrammed default
  2467   300000                     	org	3145728
  2468   300000  00                 	db	0
  2469                           
  2470                           ;Config register CONFIG1H @ 0x300001
  2471                           ;	Oscillator Selection bits
  2472                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2473                           ;	Fail-Safe Clock Monitor Enable bit
  2474                           ;	FCMEN = 0x0, unprogrammed default
  2475                           ;	Internal/External Oscillator Switchover bit
  2476                           ;	IESO = 0x0, unprogrammed default
  2477   300001                     	org	3145729
  2478   300001  09                 	db	9
  2479                           
  2480                           ;Config register CONFIG2L @ 0x300002
  2481                           ;	unspecified, using default values
  2482                           ;	Power-up Timer Enable bit
  2483                           ;	PWRT = 0x1, unprogrammed default
  2484                           ;	Brown-out Reset Enable bits
  2485                           ;	BOR = 0x3, unprogrammed default
  2486                           ;	Brown-out Reset Voltage bits
  2487                           ;	BORV = 0x3, unprogrammed default
  2488                           ;	USB Voltage Regulator Enable bit
  2489                           ;	VREGEN = 0x0, unprogrammed default
  2490   300002                     	org	3145730
  2491   300002  1F                 	db	31
  2492                           
  2493                           ;Config register CONFIG2H @ 0x300003
  2494                           ;	Watchdog Timer Enable bit
  2495                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2496                           ;	Watchdog Timer Postscale Select bits
  2497                           ;	WDTPS = 0xF, unprogrammed default
  2498   300003                     	org	3145731
  2499   300003  1E                 	db	30
  2500                           
  2501                           ; Padding undefined space
  2502   300004                     	org	3145732
  2503   300004  FF                 	db	255
  2504                           
  2505                           ;Config register CONFIG3H @ 0x300005
  2506                           ;	unspecified, using default values
  2507                           ;	CCP2 MUX bit
  2508                           ;	CCP2MX = 0x1, unprogrammed default
  2509                           ;	PORTB A/D Enable bit
  2510                           ;	PBADEN = 0x1, unprogrammed default
  2511                           ;	Low-Power Timer 1 Oscillator Enable bit
  2512                           ;	LPT1OSC = 0x0, unprogrammed default
  2513                           ;	MCLR Pin Enable bit
  2514                           ;	MCLRE = 0x1, unprogrammed default
  2515   300005                     	org	3145733
  2516   300005  83                 	db	131
  2517                           
  2518                           ;Config register CONFIG4L @ 0x300006
  2519                           ;	unspecified, using default values
  2520                           ;	Stack Full/Underflow Reset Enable bit
  2521                           ;	STVREN = 0x1, unprogrammed default
  2522                           ;	Single-Supply ICSP Enable bit
  2523                           ;	LVP = 0x1, unprogrammed default
  2524                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2525                           ;	ICPRT = 0x0, unprogrammed default
  2526                           ;	Extended Instruction Set Enable bit
  2527                           ;	XINST = 0x0, unprogrammed default
  2528                           ;	Background Debugger Enable bit
  2529                           ;	DEBUG = 0x1, unprogrammed default
  2530   300006                     	org	3145734
  2531   300006  85                 	db	133
  2532                           
  2533                           ; Padding undefined space
  2534   300007                     	org	3145735
  2535   300007  FF                 	db	255
  2536                           
  2537                           ;Config register CONFIG5L @ 0x300008
  2538                           ;	unspecified, using default values
  2539                           ;	Code Protection bit
  2540                           ;	CP0 = 0x1, unprogrammed default
  2541                           ;	Code Protection bit
  2542                           ;	CP1 = 0x1, unprogrammed default
  2543                           ;	Code Protection bit
  2544                           ;	CP2 = 0x1, unprogrammed default
  2545                           ;	Code Protection bit
  2546                           ;	CP3 = 0x1, unprogrammed default
  2547   300008                     	org	3145736
  2548   300008  0F                 	db	15
  2549                           
  2550                           ;Config register CONFIG5H @ 0x300009
  2551                           ;	unspecified, using default values
  2552                           ;	Boot Block Code Protection bit
  2553                           ;	CPB = 0x1, unprogrammed default
  2554                           ;	Data EEPROM Code Protection bit
  2555                           ;	CPD = 0x1, unprogrammed default
  2556   300009                     	org	3145737
  2557   300009  C0                 	db	192
  2558                           
  2559                           ;Config register CONFIG6L @ 0x30000A
  2560                           ;	unspecified, using default values
  2561                           ;	Write Protection bit
  2562                           ;	WRT0 = 0x1, unprogrammed default
  2563                           ;	Write Protection bit
  2564                           ;	WRT1 = 0x1, unprogrammed default
  2565                           ;	Write Protection bit
  2566                           ;	WRT2 = 0x1, unprogrammed default
  2567                           ;	Write Protection bit
  2568                           ;	WRT3 = 0x1, unprogrammed default
  2569   30000A                     	org	3145738
  2570   30000A  0F                 	db	15
  2571                           
  2572                           ;Config register CONFIG6H @ 0x30000B
  2573                           ;	unspecified, using default values
  2574                           ;	Configuration Register Write Protection bit
  2575                           ;	WRTC = 0x1, unprogrammed default
  2576                           ;	Boot Block Write Protection bit
  2577                           ;	WRTB = 0x1, unprogrammed default
  2578                           ;	Data EEPROM Write Protection bit
  2579                           ;	WRTD = 0x1, unprogrammed default
  2580   30000B                     	org	3145739
  2581   30000B  E0                 	db	224
  2582                           
  2583                           ;Config register CONFIG7L @ 0x30000C
  2584                           ;	unspecified, using default values
  2585                           ;	Table Read Protection bit
  2586                           ;	EBTR0 = 0x1, unprogrammed default
  2587                           ;	Table Read Protection bit
  2588                           ;	EBTR1 = 0x1, unprogrammed default
  2589                           ;	Table Read Protection bit
  2590                           ;	EBTR2 = 0x1, unprogrammed default
  2591                           ;	Table Read Protection bit
  2592                           ;	EBTR3 = 0x1, unprogrammed default
  2593   30000C                     	org	3145740
  2594   30000C  0F                 	db	15
  2595                           
  2596                           ;Config register CONFIG7H @ 0x30000D
  2597                           ;	unspecified, using default values
  2598                           ;	Boot Block Table Read Protection bit
  2599                           ;	EBTRB = 0x1, unprogrammed default
  2600   30000D                     	org	3145741
  2601   30000D  40                 	db	64
  2602                           tosu	equ	0xFFF
  2603                           tosh	equ	0xFFE
  2604                           tosl	equ	0xFFD
  2605                           stkptr	equ	0xFFC
  2606                           pclatu	equ	0xFFB
  2607                           pclath	equ	0xFFA
  2608                           pcl	equ	0xFF9
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           indf0	equ	0xFEF
  2616                           postinc0	equ	0xFEE
  2617                           postdec0	equ	0xFED
  2618                           preinc0	equ	0xFEC
  2619                           plusw0	equ	0xFEB
  2620                           fsr0h	equ	0xFEA
  2621                           fsr0l	equ	0xFE9
  2622                           wreg	equ	0xFE8
  2623                           indf1	equ	0xFE7
  2624                           postinc1	equ	0xFE6
  2625                           postdec1	equ	0xFE5
  2626                           preinc1	equ	0xFE4
  2627                           plusw1	equ	0xFE3
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           bsr	equ	0xFE0
  2631                           indf2	equ	0xFDF
  2632                           postinc2	equ	0xFDE
  2633                           postdec2	equ	0xFDD
  2634                           preinc2	equ	0xFDC
  2635                           plusw2	equ	0xFDB
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      2C       1       46.3%
BITBIGSFRhhl        2F      0       0      22        0.0%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      26        0.0%
BITBIGSFRhhh         E      0       0      21        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C       3        0.0%
DATA                 0      0      2C       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 21:33:50 2023

                      _i 000B                        _m 0012                        _r 0001  
                     u50 0DA8                       _n1 000F                       _n2 000D  
             EnviaDato@a 0018                       _op 002B      ___wmul@multiplicand 0018  
          ??_LeerTeclado 0016                      l201 0E0C                      l205 0E20  
          _InicializaLCD 0FF6                      l206 0E38                      l207 0E28  
                    l209 0E30                      l180 0DB4                      l191 0DE0  
                    l183 0DBC                      l193 0DE8                      l185 0DC4  
                    l197 0DFC                      l189 0DD8                      l199 0E04  
                    l708 0FAA                      l718 0FEC                      l982 0F10  
                    l984 0F20                      l992 0F46                      l986 0F32  
                    l988 0F3C                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u820 10A2  
                    u860 0F84                      u940 08E2                      u890 0FCE  
                    u990 090A                      _n1c 002A                      _n2c 0029  
                    wreg 000FE8                     l1120 0DCC                     l1210 0E50  
                   l1212 0E54                     l1222 0E64                     l1214 0E58  
                   l1230 0EB0                     l1224 0E68                     l1216 0E5C  
                   l1218 0E60                     l1228 0E6E                     l1148 0DF0  
                   l1176 0E14                     l1524 1076                     l1542 0EDA  
                   l1710 0A2E                     l1630 08CA                     l1552 0F78  
                   l1720 0A8E                     l1712 0A64                     l1538 0EC6  
                   l1554 0F80                     l1802 0D78                     l1564 0FA0  
                   l1580 0FE2                     l1572 0FC2                     l1716 0A70  
                   l1708 0A16                     l1804 0D82                     l1574 0FCA  
                   l1742 0B2A                     l1734 0B08                     l1806 0D88  
                   l1654 092C                     l1752 0BAE                     l1728 0AF4  
                   l1746 0B3C                     l1674 0982                     l1764 0C24  
                   l1756 0BC2                     l1772 0C52                     l1748 0B58  
                   l1790 0CE0                     l1598 085E                     l1784 0CAC  
                   l1794 0D2C                     l1698 09E8                     l1798 0D52  
                   STR_1 0812                     STR_2 0801                     u1080 0964  
                   u1330 0C62                     u1170 09CA                     u1340 0C74  
                   u1350 0C86                     _LATB 000F8A                     _LATC 000F8B  
                   u1360 0CBC                     _LATD 000F8C                     u1370 0CCE  
                   u1290 0BC0                     u1427 084E                     u1380 0CE0  
                   u1437 0D8E                     u1447 0F16                     u1457 0F22  
                   u1467 0F2A                     u1477 0F34                     u1487 0F3E  
                   u1497 110E                     _RBPU 007F8F           ??_EscribeLCD_c 0019  
                   _main 081E                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 0016                    ?_main 0016            EscribeLCD_c@a 0019  
                  _LATE0 007C68                    _LATE1 007C69          __end_of___lwdiv 0FB4  
        __end_of___lwmod 0FF6                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96      ___lmul@multiplicand 001A  
                  _Tecla 0011      __end_of_LeerTeclado 0E3C                    _color 0009  
                  main@i 0027                    tablat 000FF5              _HabilitaLCD 110A  
                  status 000FD8         __end_of_BorraLCD 110A         __end_of_ColorRGB 0EB6  
        __initialization 1038             __end_of_main 0D9A                   ??_main 0023  
          __activetblptr 000002                   _ADCON1 000FC1           DireccionaLCD@a 0019  
  __end_of_DireccionaLCD 10F6               _RetardoLCD 0F0C                   ___lmul 0EB6  
                 ___wmul 10A4                ??___lwdiv 0020                ??___lwmod 001A  
        ??_InicializaLCD 0019                   clear_0 105E                   isa$std 000001  
   __end_of_EscribeLCD_c 10E0              _LeerTeclado 0D9A             __pdataCOMRAM 0029  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 1064  
          ___rparam_used 000001           __pcstackCOMRAM 0016        __end_of_EnviaDato 1120  
              ?_BorraLCD 0016                ?_ColorRGB 0016              ?_RetardoLCD 0016  
            RetardoLCD@a 0017                  ?___lmul 0016                  ?___wmul 0016  
         ___lmul@product 001E               ??_BorraLCD 0019               ??_ColorRGB 0016  
      ??_MensajeLCD_Word 001B             ?_HabilitaLCD 0016                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0F62                  ___lwmod 0FB4  
           __psmallconst 0800                  __pcinit 1038                  __ramtop 0800  
                __ptext0 081E                  __ptext1 10A4                  __ptext2 0FB4  
                __ptext3 0F62                  __ptext4 0EB6                  __ptext5 106E  
                __ptext6 10CA                  __ptext7 0D9A                  __ptext8 0FF6  
                __ptext9 10F6     end_of_initialization 1064            __Lmediumconst 0000  
           _EscribeLCD_c 10CA                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 0016           __end_of___lmul 0F0C           __end_of___wmul 10CA  
          __pidataCOMRAM 1120    __end_of_InicializaLCD 1038                _EnviaDato 1118  
    start_initialization 1038             ??_RetardoLCD 0016                 ??___lmul 001E  
               ??___wmul 001A          _MensajeLCD_Word 106E               ?_EnviaDato 0016  
            __pbssCOMRAM 0001       __end_of_RetardoLCD 0F62         MensajeLCD_Word@a 001A  
       MensajeLCD_Word@i 001C            _DireccionaLCD 10E0         ___lwdiv@dividend 001C  
               ?___lwdiv 001C                 ?___lwmod 0016              __smallconst 0800  
       ___lwdiv@quotient 0020           ___wmul@product 001A           ?_DireccionaLCD 0016  
__end_of_MensajeLCD_Word 10A4        ___wmul@multiplier 0016              ??_EnviaDato 0018  
               _BorraLCD 10F6                 _ColorRGB 0E3C        ___lmul@multiplier 0016  
              copy_data0 104C                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 001E          ___lwdiv@counter 0022                 __ptext10 10E0  
               __ptext11 1118                 __ptext12 0F0C                 __ptext13 110A  
               __ptext14 0E3C          ??_DireccionaLCD 0019                 _interfaz 002C  
               _partdecl 0005                 isa$xinst 000000         ?_MensajeLCD_Word 001A  
          ??_HabilitaLCD 0016         ___lwmod@dividend 0016          ___lwmod@divisor 0018  
        ___lwmod@counter 001A            ?_EscribeLCD_c 0016      __end_of_HabilitaLCD 1118  

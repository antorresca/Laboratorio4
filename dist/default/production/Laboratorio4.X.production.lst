

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 16:51:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 04/07/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   00109E                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _n2c
    71   00109E  20                 	db	32
    72                           
    73                           ;initializer for _n1c
    74   00109F  20                 	db	32
    75                           
    76                           ;initializer for _op
    77   0010A0  20                 	db	32
    78                           
    79                           ;initializer for _interfaz
    80   0010A1  08                 	db	8
    81   000000                     _RB7	set	31759
    82   000000                     _RB6	set	31758
    83   000000                     _RB5	set	31757
    84   000000                     _LATE1	set	31849
    85   000000                     _LATB	set	3978
    86   000000                     _LATD	set	3980
    87   000000                     _RB4	set	31756
    88   000000                     _TRISB	set	3987
    89   000000                     _TRISD	set	3989
    90   000000                     _ADCON1	set	4033
    91   000000                     _LATE0	set	31848
    92   000000                     _RBPU	set	32655
    93   000000                     _TRISE	set	3990
    94                           
    95                           	psect	smallconst
    96   000800                     __psmallconst:
    97                           	callstack 0
    98   000800  00                 	db	0
    99   000801                     STR_2:
   100   000801  20                 	db	32
   101   000802  20                 	db	32
   102   000803  20                 	db	32
   103   000804  20                 	db	32
   104   000805  20                 	db	32
   105   000806  20                 	db	32
   106   000807  20                 	db	32
   107   000808  20                 	db	32
   108   000809  20                 	db	32
   109   00080A  20                 	db	32
   110   00080B  20                 	db	32
   111   00080C  20                 	db	32
   112   00080D  20                 	db	32
   113   00080E  20                 	db	32
   114   00080F  20                 	db	32
   115   000810  20                 	db	32
   116   000811  00                 	db	0
   117   000812                     STR_1:
   118   000812  48                 	db	72	;'H'
   119   000813  6F                 	db	111	;'o'
   120   000814  6C                 	db	108	;'l'
   121   000815  61                 	db	97	;'a'
   122   000816  20                 	db	32
   123   000817  6D                 	db	109	;'m'
   124   000818  75                 	db	117	;'u'
   125   000819  6E                 	db	110	;'n'
   126   00081A  64                 	db	100	;'d'
   127   00081B  6F                 	db	111	;'o'
   128   00081C  00                 	db	0
   129   00081D  00                 	db	0	; dummy byte at the end
   130   000000                     
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134   000FB6                     __pcinit:
   135                           	callstack 0
   136   000FB6                     start_initialization:
   137                           	callstack 0
   138   000FB6                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (4 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143   000FB6  0E9E               	movlw	low __pidataCOMRAM
   144   000FB8  6EF6               	movwf	tblptrl,c
   145   000FBA  0E10               	movlw	high __pidataCOMRAM
   146   000FBC  6EF7               	movwf	tblptrh,c
   147   000FBE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148   000FC0  6EF8               	movwf	tblptru,c
   149   000FC2  EE00  F027         	lfsr	0,__pdataCOMRAM
   150   000FC6  EE10 F004          	lfsr	1,4
   151   000FCA                     copy_data0:
   152   000FCA  0009               	tblrd		*+
   153   000FCC  CFF5 FFEE          	movff	tablat,postinc0
   154   000FD0  50E5               	movf	postdec1,w,c
   155   000FD2  50E1               	movf	fsr1l,w,c
   156   000FD4  E1FA               	bnz	copy_data0
   157                           
   158                           ; Clear objects allocated to COMRAM (19 bytes)
   159   000FD6  EE00  F001         	lfsr	0,__pbssCOMRAM
   160   000FDA  0E13               	movlw	19
   161   000FDC                     clear_0:
   162   000FDC  6AEE               	clrf	postinc0,c
   163   000FDE  06E8               	decf	wreg,f,c
   164   000FE0  E1FD               	bnz	clear_0
   165   000FE2                     end_of_initialization:
   166                           	callstack 0
   167   000FE2                     __end_of__initialization:
   168                           	callstack 0
   169   000FE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170   000FE4  6EF8               	movwf	tblptru,c
   171   000FE6  0100               	movlb	0
   172   000FE8  EF0F  F004         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175   000001                     __pbssCOMRAM:
   176                           	callstack 0
   177   000001                     _r:
   178                           	callstack 0
   179   000001                     	ds	4
   180   000005                     _partdecl:
   181                           	callstack 0
   182   000005                     	ds	4
   183   000009                     _i:
   184                           	callstack 0
   185   000009                     	ds	2
   186   00000B                     _n2:
   187                           	callstack 0
   188   00000B                     	ds	2
   189   00000D                     _n1:
   190                           	callstack 0
   191   00000D                     	ds	2
   192   00000F                     _Tecla:
   193                           	callstack 0
   194   00000F                     	ds	1
   195   000010                     _m:
   196                           	callstack 0
   197   000010                     	ds	4
   198                           
   199                           	psect	dataCOMRAM
   200   000027                     __pdataCOMRAM:
   201                           	callstack 0
   202   000027                     _n2c:
   203                           	callstack 0
   204   000027                     	ds	1
   205   000028                     _n1c:
   206                           	callstack 0
   207   000028                     	ds	1
   208   000029                     _op:
   209                           	callstack 0
   210   000029                     	ds	1
   211   00002A                     _interfaz:
   212                           	callstack 0
   213   00002A                     	ds	1
   214                           
   215                           	psect	cstackCOMRAM
   216   000014                     __pcstackCOMRAM:
   217                           	callstack 0
   218   000014                     ??_RetardoLCD:
   219   000014                     ?___wmul:
   220                           	callstack 0
   221   000014                     ?___lwmod:
   222                           	callstack 0
   223   000014                     ?___lmul:
   224                           	callstack 0
   225   000014                     ___wmul@multiplier:
   226                           	callstack 0
   227   000014                     ___lwmod@dividend:
   228                           	callstack 0
   229   000014                     ___lmul@multiplier:
   230                           	callstack 0
   231                           
   232                           ; 4 bytes @ 0x0
   233   000014                     	ds	1
   234   000015                     RetardoLCD@a:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x1
   238   000015                     	ds	1
   239   000016                     EnviaDato@a:
   240                           	callstack 0
   241   000016                     ___wmul@multiplicand:
   242                           	callstack 0
   243   000016                     ___lwmod@divisor:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247   000016                     	ds	1
   248   000017                     EscribeLCD_c@a:
   249                           	callstack 0
   250   000017                     DireccionaLCD@a:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x3
   254   000017                     	ds	1
   255   000018                     MensajeLCD_Word@a:
   256                           	callstack 0
   257   000018                     ___lwmod@counter:
   258                           	callstack 0
   259   000018                     ___wmul@product:
   260                           	callstack 0
   261   000018                     ___lmul@multiplicand:
   262                           	callstack 0
   263                           
   264                           ; 4 bytes @ 0x4
   265   000018                     	ds	1
   266   000019                     ??_MensajeLCD_Word:
   267                           
   268                           ; 1 bytes @ 0x5
   269   000019                     	ds	1
   270   00001A                     ?___lwdiv:
   271                           	callstack 0
   272   00001A                     MensajeLCD_Word@i:
   273                           	callstack 0
   274   00001A                     ___lwdiv@dividend:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x6
   278   00001A                     	ds	2
   279   00001C                     ___lwdiv@divisor:
   280                           	callstack 0
   281   00001C                     ___lmul@product:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x8
   285   00001C                     	ds	2
   286   00001E                     ___lwdiv@quotient:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0xA
   290   00001E                     	ds	2
   291   000020                     ___lwdiv@counter:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xC
   295   000020                     	ds	1
   296   000021                     ??_main:
   297                           
   298                           ; 1 bytes @ 0xD
   299   000021                     	ds	4
   300   000025                     main@i:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x11
   304   000025                     	ds	2
   305                           
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 20 in file "Laboratorio4.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  i               2   17[COMRAM] int 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         2       0       0       0       0       0       0       0       0
   327 ;;      Temps:          4       0       0       0       0       0       0       0       0
   328 ;;      Totals:         6       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        6 bytes
   330 ;; Hardware stack levels required when called: 4
   331 ;; This function calls:
   332 ;;		_BorraLCD
   333 ;;		_DireccionaLCD
   334 ;;		_EscribeLCD_c
   335 ;;		_InicializaLCD
   336 ;;		_LeerTeclado
   337 ;;		_MensajeLCD_Word
   338 ;;		___lmul
   339 ;;		___lwdiv
   340 ;;		___lwmod
   341 ;;		___wmul
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348   00081E                     __ptext0:
   349                           	callstack 0
   350   00081E                     _main:
   351                           	callstack 27
   352                           
   353                           ;Laboratorio4.c: 21: ADCON1=15;
   354                           
   355                           ;incstack = 0
   356   00081E  0E0F               	movlw	15
   357   000820  6EC1               	movwf	193,c	;volatile
   358                           
   359                           ;Laboratorio4.c: 22: TRISD=0;
   360   000822  0E00               	movlw	0
   361   000824  6E95               	movwf	149,c	;volatile
   362                           
   363                           ;Laboratorio4.c: 23: TRISB=0b11110000;
   364   000826  0EF0               	movlw	240
   365   000828  6E93               	movwf	147,c	;volatile
   366                           
   367                           ;Laboratorio4.c: 24: TRISE=0;
   368   00082A  0E00               	movlw	0
   369   00082C  6E96               	movwf	150,c	;volatile
   370                           
   371                           ;Laboratorio4.c: 25: RBPU=0;
   372   00082E  9EF1               	bcf	4081,7,c	;volatile
   373                           
   374                           ;Laboratorio4.c: 26: InicializaLCD();
   375   000830  ECBA  F007         	call	_InicializaLCD	;wreg free
   376                           
   377                           ;Laboratorio4.c: 27: BorraLCD();
   378   000834  EC3A  F008         	call	_BorraLCD	;wreg free
   379                           
   380                           ;Laboratorio4.c: 28: MensajeLCD_Word("Hola mundo");
   381   000838  0E12               	movlw	low STR_1
   382   00083A  6E18               	movwf	MensajeLCD_Word@a^0,c
   383   00083C  ECF6  F007         	call	_MensajeLCD_Word	;wreg free
   384                           
   385                           ;Laboratorio4.c: 29: _delay((unsigned long)((2000)*(1000000/4000.0)));
   386   000840  0E03               	movlw	3
   387   000842  6E22               	movwf	(??_main+1)^0,c
   388   000844  0E8A               	movlw	138
   389   000846  6E21               	movwf	??_main^0,c
   390   000848  0E56               	movlw	86
   391   00084A                     u1417:
   392   00084A  2EE8               	decfsz	wreg,f,c
   393   00084C  D7FE               	bra	u1417
   394   00084E  2E21               	decfsz	??_main^0,f,c
   395   000850  D7FC               	bra	u1417
   396   000852  2E22               	decfsz	(??_main+1)^0,f,c
   397   000854  D7FA               	bra	u1417
   398                           
   399                           ;Laboratorio4.c: 30: BorraLCD();
   400   000856  EC3A  F008         	call	_BorraLCD	;wreg free
   401   00085A                     l1539:
   402                           
   403                           ;Laboratorio4.c: 32: LATB=0B00000000;
   404   00085A  0E00               	movlw	0
   405   00085C  6E8A               	movwf	138,c	;volatile
   406                           
   407                           ;Laboratorio4.c: 33: Tecla = LeerTeclado();
   408   00085E  ECC9  F006         	call	_LeerTeclado	;wreg free
   409   000862  6E0F               	movwf	_Tecla^0,c
   410                           
   411                           ;Laboratorio4.c: 34: if(Tecla=='C'){
   412   000864  0E43               	movlw	67
   413   000866  180F               	xorwf	_Tecla^0,w,c
   414   000868  A4D8               	btfss	status,2,c
   415   00086A  D02B               	goto	l1569
   416                           
   417                           ;Laboratorio4.c: 35: DireccionaLCD(0xC0);
   418   00086C  0EC0               	movlw	192
   419   00086E  EC2F  F008         	call	_DireccionaLCD
   420                           
   421                           ;Laboratorio4.c: 37: op = ' ';
   422   000872  0E20               	movlw	32
   423   000874  6E29               	movwf	_op^0,c
   424                           
   425                           ;Laboratorio4.c: 38: n1c = ' ';
   426   000876  0E20               	movlw	32
   427   000878  6E28               	movwf	_n1c^0,c
   428                           
   429                           ;Laboratorio4.c: 39: n2c = ' ';
   430   00087A  0E20               	movlw	32
   431   00087C  6E27               	movwf	_n2c^0,c
   432                           
   433                           ;Laboratorio4.c: 40: n1 = 0;
   434   00087E  0E00               	movlw	0
   435   000880  6E0E               	movwf	(_n1+1)^0,c
   436   000882  0E00               	movlw	0
   437   000884  6E0D               	movwf	_n1^0,c
   438                           
   439                           ;Laboratorio4.c: 41: n2 = 0;
   440   000886  0E00               	movlw	0
   441   000888  6E0C               	movwf	(_n2+1)^0,c
   442   00088A  0E00               	movlw	0
   443   00088C  6E0B               	movwf	_n2^0,c
   444                           
   445                           ;Laboratorio4.c: 42: i = 0;
   446   00088E  0E00               	movlw	0
   447   000890  6E0A               	movwf	(_i+1)^0,c
   448   000892  0E00               	movlw	0
   449   000894  6E09               	movwf	_i^0,c
   450                           
   451                           ;Laboratorio4.c: 43: partdecl = 0;
   452   000896  0E00               	movlw	0
   453   000898  6E05               	movwf	_partdecl^0,c
   454   00089A  0E00               	movlw	0
   455   00089C  6E06               	movwf	(_partdecl+1)^0,c
   456   00089E  0E00               	movlw	0
   457   0008A0  6E07               	movwf	(_partdecl+2)^0,c
   458   0008A2  0E00               	movlw	0
   459   0008A4  6E08               	movwf	(_partdecl+3)^0,c
   460                           
   461                           ;Laboratorio4.c: 44: DireccionaLCD(0x80);
   462   0008A6  0E80               	movlw	128
   463   0008A8  EC2F  F008         	call	_DireccionaLCD
   464                           
   465                           ;Laboratorio4.c: 45: MensajeLCD_Word("                ");
   466   0008AC  0E01               	movlw	low STR_2
   467   0008AE  6E18               	movwf	MensajeLCD_Word@a^0,c
   468   0008B0  ECF6  F007         	call	_MensajeLCD_Word	;wreg free
   469                           
   470                           ;Laboratorio4.c: 46: DireccionaLCD(0xC0);
   471   0008B4  0EC0               	movlw	192
   472   0008B6  EC2F  F008         	call	_DireccionaLCD
   473                           
   474                           ;Laboratorio4.c: 47: DireccionaLCD(0x80);
   475   0008BA  0E80               	movlw	128
   476   0008BC  EC2F  F008         	call	_DireccionaLCD
   477                           
   478                           ;Laboratorio4.c: 48: }else{
   479   0008C0  D7CC               	goto	l1539
   480   0008C2                     l1569:
   481                           
   482                           ;Laboratorio4.c: 49: if(n1c==' '|n2c==' '|op==' '){
   483   0008C2  0E20               	movlw	32
   484   0008C4  1828               	xorwf	_n1c^0,w,c
   485   0008C6  B4D8               	btfsc	status,2,c
   486   0008C8  D008               	goto	u930
   487   0008CA  0E20               	movlw	32
   488   0008CC  1827               	xorwf	_n2c^0,w,c
   489   0008CE  B4D8               	btfsc	status,2,c
   490   0008D0  D004               	goto	u930
   491   0008D2  0E20               	movlw	32
   492   0008D4  1829               	xorwf	_op^0,w,c
   493   0008D6  A4D8               	btfss	status,2,c
   494   0008D8  D083               	goto	l1637
   495   0008DA                     u930:
   496                           
   497                           ;Laboratorio4.c: 50: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   498   0008DA  0E20               	movlw	32
   499   0008DC  1829               	xorwf	_op^0,w,c
   500   0008DE  A4D8               	btfss	status,2,c
   501   0008E0  D021               	goto	l1593
   502   0008E2  0E2B               	movlw	43
   503   0008E4  180F               	xorwf	_Tecla^0,w,c
   504   0008E6  B4D8               	btfsc	status,2,c
   505   0008E8  D00C               	goto	u980
   506   0008EA  0E2D               	movlw	45
   507   0008EC  180F               	xorwf	_Tecla^0,w,c
   508   0008EE  B4D8               	btfsc	status,2,c
   509   0008F0  D008               	goto	u980
   510   0008F2  0E2F               	movlw	47
   511   0008F4  180F               	xorwf	_Tecla^0,w,c
   512   0008F6  B4D8               	btfsc	status,2,c
   513   0008F8  D004               	goto	u980
   514   0008FA  0E78               	movlw	120
   515   0008FC  180F               	xorwf	_Tecla^0,w,c
   516   0008FE  A4D8               	btfss	status,2,c
   517   000900  D011               	goto	l1593
   518   000902                     u980:
   519   000902  0E20               	movlw	32
   520   000904  1828               	xorwf	_n1c^0,w,c
   521   000906  B4D8               	btfsc	status,2,c
   522   000908  D00D               	goto	l1593
   523   00090A  0E20               	movlw	32
   524   00090C  1827               	xorwf	_n2c^0,w,c
   525   00090E  A4D8               	btfss	status,2,c
   526   000910  D009               	goto	l1593
   527                           
   528                           ;Laboratorio4.c: 51: DireccionaLCD(0x81);
   529   000912  0E81               	movlw	129
   530   000914  EC2F  F008         	call	_DireccionaLCD
   531                           
   532                           ;Laboratorio4.c: 52: EscribeLCD_c(Tecla);
   533   000918  500F               	movf	_Tecla^0,w,c
   534   00091A  EC24  F008         	call	_EscribeLCD_c
   535                           
   536                           ;Laboratorio4.c: 53: op = Tecla;
   537   00091E  C00F  F029         	movff	_Tecla,_op
   538                           
   539                           ;Laboratorio4.c: 54: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   540   000922  D22E               	goto	l1745
   541   000924                     l1593:
   542   000924  0E20               	movlw	32
   543   000926  1828               	xorwf	_n1c^0,w,c
   544   000928  A4D8               	btfss	status,2,c
   545   00092A  D027               	goto	l1613
   546   00092C  0E2B               	movlw	43
   547   00092E  180F               	xorwf	_Tecla^0,w,c
   548   000930  A4D8               	btfss	status,2,c
   549   000932  D014               	goto	u1070
   550   000934  0E2D               	movlw	45
   551   000936  180F               	xorwf	_Tecla^0,w,c
   552   000938  A4D8               	btfss	status,2,c
   553   00093A  D010               	goto	u1070
   554   00093C  0E2F               	movlw	47
   555   00093E  180F               	xorwf	_Tecla^0,w,c
   556   000940  A4D8               	btfss	status,2,c
   557   000942  D00C               	goto	u1070
   558   000944  0E78               	movlw	120
   559   000946  180F               	xorwf	_Tecla^0,w,c
   560   000948  A4D8               	btfss	status,2,c
   561   00094A  D008               	goto	u1070
   562   00094C  0E3D               	movlw	61
   563   00094E  180F               	xorwf	_Tecla^0,w,c
   564   000950  A4D8               	btfss	status,2,c
   565   000952  D004               	goto	u1070
   566   000954  0E43               	movlw	67
   567   000956  180F               	xorwf	_Tecla^0,w,c
   568   000958  B4D8               	btfsc	status,2,c
   569   00095A  D00F               	goto	l1613
   570   00095C                     u1070:
   571                           
   572                           ;Laboratorio4.c: 55: DireccionaLCD(0x80);
   573   00095C  0E80               	movlw	128
   574   00095E  EC2F  F008         	call	_DireccionaLCD
   575                           
   576                           ;Laboratorio4.c: 56: EscribeLCD_c(Tecla);
   577   000962  500F               	movf	_Tecla^0,w,c
   578   000964  EC24  F008         	call	_EscribeLCD_c
   579                           
   580                           ;Laboratorio4.c: 57: n1c=Tecla;
   581   000968  C00F  F028         	movff	_Tecla,_n1c
   582                           
   583                           ;Laboratorio4.c: 58: n1 = Tecla-'0';
   584   00096C  0ED0               	movlw	208
   585   00096E  240F               	addwf	_Tecla^0,w,c
   586   000970  6E0D               	movwf	_n1^0,c
   587   000972  6A0E               	clrf	(_n1+1)^0,c
   588   000974  0EFF               	movlw	255
   589   000976  220E               	addwfc	(_n1+1)^0,f,c
   590                           
   591                           ;Laboratorio4.c: 59: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   592   000978  D203               	goto	l1745
   593   00097A                     l1613:
   594   00097A  0E20               	movlw	32
   595   00097C  1827               	xorwf	_n2c^0,w,c
   596   00097E  A4D8               	btfss	status,2,c
   597   000980  D1FF               	goto	l1745
   598   000982  0E20               	movlw	32
   599   000984  1829               	xorwf	_op^0,w,c
   600   000986  B4D8               	btfsc	status,2,c
   601   000988  D1FB               	goto	l1745
   602   00098A  0E20               	movlw	32
   603   00098C  1828               	xorwf	_n1c^0,w,c
   604   00098E  B4D8               	btfsc	status,2,c
   605   000990  D1F7               	goto	l1745
   606   000992  0E2B               	movlw	43
   607   000994  180F               	xorwf	_Tecla^0,w,c
   608   000996  A4D8               	btfss	status,2,c
   609   000998  D014               	goto	u1160
   610   00099A  0E2D               	movlw	45
   611   00099C  180F               	xorwf	_Tecla^0,w,c
   612   00099E  A4D8               	btfss	status,2,c
   613   0009A0  D010               	goto	u1160
   614   0009A2  0E2F               	movlw	47
   615   0009A4  180F               	xorwf	_Tecla^0,w,c
   616   0009A6  A4D8               	btfss	status,2,c
   617   0009A8  D00C               	goto	u1160
   618   0009AA  0E78               	movlw	120
   619   0009AC  180F               	xorwf	_Tecla^0,w,c
   620   0009AE  A4D8               	btfss	status,2,c
   621   0009B0  D008               	goto	u1160
   622   0009B2  0E3D               	movlw	61
   623   0009B4  180F               	xorwf	_Tecla^0,w,c
   624   0009B6  A4D8               	btfss	status,2,c
   625   0009B8  D004               	goto	u1160
   626   0009BA  0E43               	movlw	67
   627   0009BC  180F               	xorwf	_Tecla^0,w,c
   628   0009BE  B4D8               	btfsc	status,2,c
   629   0009C0  D1DF               	goto	l1745
   630   0009C2                     u1160:
   631                           
   632                           ;Laboratorio4.c: 60: DireccionaLCD(0x82);
   633   0009C2  0E82               	movlw	130
   634   0009C4  EC2F  F008         	call	_DireccionaLCD
   635                           
   636                           ;Laboratorio4.c: 61: EscribeLCD_c(Tecla);
   637   0009C8  500F               	movf	_Tecla^0,w,c
   638   0009CA  EC24  F008         	call	_EscribeLCD_c
   639                           
   640                           ;Laboratorio4.c: 62: n2c=Tecla;
   641   0009CE  C00F  F027         	movff	_Tecla,_n2c
   642                           
   643                           ;Laboratorio4.c: 63: n2 = Tecla-'0';
   644   0009D2  0ED0               	movlw	208
   645   0009D4  240F               	addwf	_Tecla^0,w,c
   646   0009D6  6E0B               	movwf	_n2^0,c
   647   0009D8  6A0C               	clrf	(_n2+1)^0,c
   648   0009DA  0EFF               	movlw	255
   649   0009DC  220C               	addwfc	(_n2+1)^0,f,c
   650                           
   651                           ;Laboratorio4.c: 64: };Laboratorio4.c: 65: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   652   0009DE  D1D0               	goto	l1745
   653   0009E0                     l1637:
   654   0009E0  0E3D               	movlw	61
   655   0009E2  180F               	xorwf	_Tecla^0,w,c
   656   0009E4  A4D8               	btfss	status,2,c
   657   0009E6  D1C9               	goto	l1743
   658   0009E8  0E20               	movlw	32
   659   0009EA  1827               	xorwf	_n2c^0,w,c
   660   0009EC  B4D8               	btfsc	status,2,c
   661   0009EE  D1C5               	goto	l1743
   662   0009F0  0E20               	movlw	32
   663   0009F2  1829               	xorwf	_op^0,w,c
   664   0009F4  B4D8               	btfsc	status,2,c
   665   0009F6  D1C1               	goto	l1743
   666   0009F8  0E20               	movlw	32
   667   0009FA  1828               	xorwf	_n1c^0,w,c
   668   0009FC  B4D8               	btfsc	status,2,c
   669   0009FE  D1BD               	goto	l1743
   670                           
   671                           ;Laboratorio4.c: 66: DireccionaLCD(0x83);
   672   000A00  0E83               	movlw	131
   673   000A02  EC2F  F008         	call	_DireccionaLCD
   674                           
   675                           ;Laboratorio4.c: 67: EscribeLCD_c('=');
   676   000A06  0E3D               	movlw	61
   677   000A08  EC24  F008         	call	_EscribeLCD_c
   678                           
   679                           ;Laboratorio4.c: 68: switch(op){
   680   000A0C  D093               	goto	l1685
   681   000A0E                     l1647:
   682                           
   683                           ;Laboratorio4.c: 70: r = n1 + n2;
   684   000A0E  500B               	movf	_n2^0,w,c
   685   000A10  240D               	addwf	_n1^0,w,c
   686   000A12  6E21               	movwf	??_main^0,c
   687   000A14  500C               	movf	(_n2+1)^0,w,c
   688   000A16  200E               	addwfc	(_n1+1)^0,w,c
   689   000A18  6E22               	movwf	(??_main+1)^0,c
   690   000A1A  C021  F001         	movff	??_main,_r
   691   000A1E  C022  F002         	movff	??_main+1,_r+1
   692   000A22  6A03               	clrf	(_r+2)^0,c
   693   000A24  6A04               	clrf	(_r+3)^0,c
   694   000A26                     l1649:
   695                           
   696                           ;Laboratorio4.c: 71: partdecl = r*100;
   697   000A26  C001  F014         	movff	_r,___lmul@multiplier
   698   000A2A  C002  F015         	movff	_r+1,___lmul@multiplier+1
   699   000A2E  C003  F016         	movff	_r+2,___lmul@multiplier+2
   700   000A32  C004  F017         	movff	_r+3,___lmul@multiplier+3
   701   000A36  0E64               	movlw	100
   702   000A38  6E18               	movwf	___lmul@multiplicand^0,c
   703   000A3A  0E00               	movlw	0
   704   000A3C  6E19               	movwf	(___lmul@multiplicand+1)^0,c
   705   000A3E  0E00               	movlw	0
   706   000A40  6E1A               	movwf	(___lmul@multiplicand+2)^0,c
   707   000A42  0E00               	movlw	0
   708   000A44  6E1B               	movwf	(___lmul@multiplicand+3)^0,c
   709   000A46  EC1A  F007         	call	___lmul	;wreg free
   710   000A4A  C014  F005         	movff	?___lmul,_partdecl
   711   000A4E  C015  F006         	movff	?___lmul+1,_partdecl+1
   712   000A52  C016  F007         	movff	?___lmul+2,_partdecl+2
   713   000A56  C017  F008         	movff	?___lmul+3,_partdecl+3
   714                           
   715                           ;Laboratorio4.c: 72: break;
   716   000A5A  D07A               	goto	l1687
   717   000A5C                     l1651:
   718                           
   719                           ;Laboratorio4.c: 74: r = n1 - n2;
   720   000A5C  500B               	movf	_n2^0,w,c
   721   000A5E  5C0D               	subwf	_n1^0,w,c
   722   000A60  6E21               	movwf	??_main^0,c
   723   000A62  500C               	movf	(_n2+1)^0,w,c
   724   000A64  580E               	subwfb	(_n1+1)^0,w,c
   725   000A66  D7D8               	goto	L1
   726   000A68                     l1655:
   727                           
   728                           ;Laboratorio4.c: 78: r = n1*n2;
   729   000A68  C00D  F014         	movff	_n1,___wmul@multiplier
   730   000A6C  C00E  F015         	movff	_n1+1,___wmul@multiplier+1
   731   000A70  C00B  F016         	movff	_n2,___wmul@multiplicand
   732   000A74  C00C  F017         	movff	_n2+1,___wmul@multiplicand+1
   733   000A78  EC11  F008         	call	___wmul	;wreg free
   734   000A7C  C014  F001         	movff	?___wmul,_r
   735   000A80  C015  F002         	movff	?___wmul+1,_r+1
   736   000A84  D7CE               	goto	L2
   737   000A86                     l1659:
   738                           
   739                           ;Laboratorio4.c: 82: if(n2!=0){
   740   000A86  500B               	movf	_n2^0,w,c
   741   000A88  100C               	iorwf	(_n2+1)^0,w,c
   742   000A8A  B4D8               	btfsc	status,2,c
   743   000A8C  D02F               	goto	l1667
   744                           
   745                           ;Laboratorio4.c: 83: if(n1!=0){
   746   000A8E  500D               	movf	_n1^0,w,c
   747   000A90  100E               	iorwf	(_n1+1)^0,w,c
   748   000A92  B4D8               	btfsc	status,2,c
   749   000A94  D05D               	goto	l1687
   750                           
   751                           ;Laboratorio4.c: 84: r = n1/n2;
   752   000A96  C00D  F01A         	movff	_n1,___lwdiv@dividend
   753   000A9A  C00E  F01B         	movff	_n1+1,___lwdiv@dividend+1
   754   000A9E  C00B  F01C         	movff	_n2,___lwdiv@divisor
   755   000AA2  C00C  F01D         	movff	_n2+1,___lwdiv@divisor+1
   756   000AA6  EC70  F007         	call	___lwdiv	;wreg free
   757   000AAA  C01A  F001         	movff	?___lwdiv,_r
   758   000AAE  C01B  F002         	movff	?___lwdiv+1,_r+1
   759   000AB2  6A03               	clrf	(_r+2)^0,c
   760   000AB4  6A04               	clrf	(_r+3)^0,c
   761                           
   762                           ;Laboratorio4.c: 85: partdecl = (n1*100)/n2;
   763   000AB6  C00D  F014         	movff	_n1,___wmul@multiplier
   764   000ABA  C00E  F015         	movff	_n1+1,___wmul@multiplier+1
   765   000ABE  0E00               	movlw	0
   766   000AC0  6E17               	movwf	(___wmul@multiplicand+1)^0,c
   767   000AC2  0E64               	movlw	100
   768   000AC4  6E16               	movwf	___wmul@multiplicand^0,c
   769   000AC6  EC11  F008         	call	___wmul	;wreg free
   770   000ACA  C014  F01A         	movff	?___wmul,___lwdiv@dividend
   771   000ACE  C015  F01B         	movff	?___wmul+1,___lwdiv@dividend+1
   772   000AD2  C00B  F01C         	movff	_n2,___lwdiv@divisor
   773   000AD6  C00C  F01D         	movff	_n2+1,___lwdiv@divisor+1
   774   000ADA  EC70  F007         	call	___lwdiv	;wreg free
   775   000ADE  C01A  F005         	movff	?___lwdiv,_partdecl
   776   000AE2  C01B  F006         	movff	?___lwdiv+1,_partdecl+1
   777   000AE6  6A07               	clrf	(_partdecl+2)^0,c
   778   000AE8  6A08               	clrf	(_partdecl+3)^0,c
   779   000AEA  D032               	goto	l1687
   780   000AEC                     l1667:
   781                           
   782                           ;Laboratorio4.c: 88: if(n1 != 0 & n2 == 0) r = 1000;
   783   000AEC  500D               	movf	_n1^0,w,c
   784   000AEE  100E               	iorwf	(_n1+1)^0,w,c
   785   000AF0  B4D8               	btfsc	status,2,c
   786   000AF2  D006               	goto	l1673
   787   000AF4  500B               	movf	_n2^0,w,c
   788   000AF6  100C               	iorwf	(_n2+1)^0,w,c
   789   000AF8  A4D8               	btfss	status,2,c
   790   000AFA  D002               	goto	l1673
   791   000AFC  0EE8               	movlw	232
   792   000AFE  D009               	goto	L3
   793   000B00                     l1673:
   794                           
   795                           ;Laboratorio4.c: 89: else if(n1 == 0 & n2 == 0) r = 1001;
   796   000B00  500D               	movf	_n1^0,w,c
   797   000B02  100E               	iorwf	(_n1+1)^0,w,c
   798   000B04  A4D8               	btfss	status,2,c
   799   000B06  D78F               	goto	l1649
   800   000B08  500B               	movf	_n2^0,w,c
   801   000B0A  100C               	iorwf	(_n2+1)^0,w,c
   802   000B0C  A4D8               	btfss	status,2,c
   803   000B0E  D78B               	goto	l1649
   804   000B10  0EE9               	movlw	233
   805   000B12                     L3:
   806   000B12  6E01               	movwf	_r^0,c
   807   000B14  0E03               	movlw	3
   808   000B16  6E02               	movwf	(_r+1)^0,c
   809   000B18  0E00               	movlw	0
   810   000B1A  6E03               	movwf	(_r+2)^0,c
   811   000B1C  0E00               	movlw	0
   812   000B1E  6E04               	movwf	(_r+3)^0,c
   813   000B20  D782               	goto	l1649
   814   000B22                     l1681:
   815                           
   816                           ;Laboratorio4.c: 94: r = 0;
   817   000B22  0E00               	movlw	0
   818   000B24  6E01               	movwf	_r^0,c
   819   000B26  0E00               	movlw	0
   820   000B28  6E02               	movwf	(_r+1)^0,c
   821   000B2A  0E00               	movlw	0
   822   000B2C  6E03               	movwf	(_r+2)^0,c
   823   000B2E  0E00               	movlw	0
   824   000B30  6E04               	movwf	(_r+3)^0,c
   825                           
   826                           ;Laboratorio4.c: 95: break;
   827   000B32  D00E               	goto	l1687
   828   000B34                     l1685:
   829   000B34  5029               	movf	_op^0,w,c
   830                           
   831                           ; Switch size 1, requested type "simple"
   832                           ; Number of cases is 4, Range of values is 43 to 120
   833                           ; switch strategies available:
   834                           ; Name         Instructions Cycles
   835                           ; simple_byte           13     7 (average)
   836                           ;	Chosen strategy is simple_byte
   837   000B36  0A2B               	xorlw	43	; case 43
   838   000B38  B4D8               	btfsc	status,2,c
   839   000B3A  D769               	goto	l1647
   840   000B3C  0A06               	xorlw	6	; case 45
   841   000B3E  B4D8               	btfsc	status,2,c
   842   000B40  D78D               	goto	l1651
   843   000B42  0A02               	xorlw	2	; case 47
   844   000B44  B4D8               	btfsc	status,2,c
   845   000B46  D79F               	goto	l1659
   846   000B48  0A57               	xorlw	87	; case 120
   847   000B4A  B4D8               	btfsc	status,2,c
   848   000B4C  D78D               	goto	l1655
   849   000B4E  D7E9               	goto	l1681
   850   000B50                     l1687:
   851                           
   852                           ;Laboratorio4.c: 97: DireccionaLCD(0x84);
   853   000B50  0E84               	movlw	132
   854   000B52  EC2F  F008         	call	_DireccionaLCD
   855                           
   856                           ;Laboratorio4.c: 98: if ((partdecl-(r*100))!= 0){
   857   000B56  C001  F014         	movff	_r,___lmul@multiplier
   858   000B5A  C002  F015         	movff	_r+1,___lmul@multiplier+1
   859   000B5E  C003  F016         	movff	_r+2,___lmul@multiplier+2
   860   000B62  C004  F017         	movff	_r+3,___lmul@multiplier+3
   861   000B66  0E9C               	movlw	156
   862   000B68  6E18               	movwf	___lmul@multiplicand^0,c
   863   000B6A  0EFF               	movlw	255
   864   000B6C  6E19               	movwf	(___lmul@multiplicand+1)^0,c
   865   000B6E  0EFF               	movlw	255
   866   000B70  6E1A               	movwf	(___lmul@multiplicand+2)^0,c
   867   000B72  0EFF               	movlw	255
   868   000B74  6E1B               	movwf	(___lmul@multiplicand+3)^0,c
   869   000B76  EC1A  F007         	call	___lmul	;wreg free
   870   000B7A  5005               	movf	_partdecl^0,w,c
   871   000B7C  2414               	addwf	?___lmul^0,w,c
   872   000B7E  6E21               	movwf	??_main^0,c
   873   000B80  5006               	movf	(_partdecl+1)^0,w,c
   874   000B82  2015               	addwfc	(?___lmul+1)^0,w,c
   875   000B84  6E22               	movwf	(??_main+1)^0,c
   876   000B86  5007               	movf	(_partdecl+2)^0,w,c
   877   000B88  2016               	addwfc	(?___lmul+2)^0,w,c
   878   000B8A  6E23               	movwf	(??_main+2)^0,c
   879   000B8C  5008               	movf	(_partdecl+3)^0,w,c
   880   000B8E  2017               	addwfc	(?___lmul+3)^0,w,c
   881   000B90  6E24               	movwf	(??_main+3)^0,c
   882   000B92  5021               	movf	??_main^0,w,c
   883   000B94  1022               	iorwf	(??_main+1)^0,w,c
   884   000B96  1023               	iorwf	(??_main+2)^0,w,c
   885   000B98  1024               	iorwf	(??_main+3)^0,w,c
   886   000B9A  B4D8               	btfsc	status,2,c
   887   000B9C  D056               	goto	l1711
   888                           
   889                           ;Laboratorio4.c: 99: for (int i = 0; i < 3; i++) {
   890   000B9E  0E00               	movlw	0
   891   000BA0  6E26               	movwf	(main@i+1)^0,c
   892   000BA2  0E00               	movlw	0
   893   000BA4  6E25               	movwf	main@i^0,c
   894   000BA6                     l1691:
   895   000BA6  BE26               	btfsc	(main@i+1)^0,7,c
   896   000BA8  D008               	goto	l1695
   897   000BAA  5026               	movf	(main@i+1)^0,w,c
   898   000BAC  E105               	bnz	u1280
   899   000BAE  0E03               	movlw	3
   900   000BB0  5C25               	subwf	main@i^0,w,c
   901   000BB2  B0D8               	btfsc	status,0,c
   902   000BB4  D0E5               	goto	l1745
   903   000BB6  D001               	goto	l1695
   904   000BB8                     u1280:
   905   000BB8  D0E3               	goto	l1745
   906   000BBA                     l1695:
   907                           
   908                           ;Laboratorio4.c: 100: r = n1 / n2;
   909   000BBA  C00D  F01A         	movff	_n1,___lwdiv@dividend
   910   000BBE  C00E  F01B         	movff	_n1+1,___lwdiv@dividend+1
   911   000BC2  C00B  F01C         	movff	_n2,___lwdiv@divisor
   912   000BC6  C00C  F01D         	movff	_n2+1,___lwdiv@divisor+1
   913   000BCA  EC70  F007         	call	___lwdiv	;wreg free
   914   000BCE  C01A  F001         	movff	?___lwdiv,_r
   915   000BD2  C01B  F002         	movff	?___lwdiv+1,_r+1
   916   000BD6  6A03               	clrf	(_r+2)^0,c
   917   000BD8  6A04               	clrf	(_r+3)^0,c
   918                           
   919                           ;Laboratorio4.c: 101: m = n1 % n2;
   920   000BDA  C00D  F014         	movff	_n1,___lwmod@dividend
   921   000BDE  C00E  F015         	movff	_n1+1,___lwmod@dividend+1
   922   000BE2  C00B  F016         	movff	_n2,___lwmod@divisor
   923   000BE6  C00C  F017         	movff	_n2+1,___lwmod@divisor+1
   924   000BEA  EC99  F007         	call	___lwmod	;wreg free
   925   000BEE  C014  F010         	movff	?___lwmod,_m
   926   000BF2  C015  F011         	movff	?___lwmod+1,_m+1
   927   000BF6  6A12               	clrf	(_m+2)^0,c
   928   000BF8  6A13               	clrf	(_m+3)^0,c
   929                           
   930                           ;Laboratorio4.c: 102: EscribeLCD_c(r+'0');
   931   000BFA  5001               	movf	_r^0,w,c
   932   000BFC  0F30               	addlw	48
   933   000BFE  EC24  F008         	call	_EscribeLCD_c
   934                           
   935                           ;Laboratorio4.c: 103: if(i == 0 && m != 0) {
   936   000C02  5025               	movf	main@i^0,w,c
   937   000C04  1026               	iorwf	(main@i+1)^0,w,c
   938   000C06  A4D8               	btfss	status,2,c
   939   000C08  D009               	goto	l1703
   940   000C0A  5010               	movf	_m^0,w,c
   941   000C0C  1011               	iorwf	(_m+1)^0,w,c
   942   000C0E  1012               	iorwf	(_m+2)^0,w,c
   943   000C10  1013               	iorwf	(_m+3)^0,w,c
   944   000C12  B4D8               	btfsc	status,2,c
   945   000C14  D003               	goto	l1703
   946                           
   947                           ;Laboratorio4.c: 104: EscribeLCD_c(',');
   948   000C16  0E2C               	movlw	44
   949   000C18  EC24  F008         	call	_EscribeLCD_c
   950   000C1C                     l1703:
   951                           
   952                           ;Laboratorio4.c: 105: };Laboratorio4.c: 107: if (m != 0) {
   953   000C1C  5010               	movf	_m^0,w,c
   954   000C1E  1011               	iorwf	(_m+1)^0,w,c
   955   000C20  1012               	iorwf	(_m+2)^0,w,c
   956   000C22  1013               	iorwf	(_m+3)^0,w,c
   957   000C24  B4D8               	btfsc	status,2,c
   958   000C26  D0AC               	goto	l1745
   959                           
   960                           ;Laboratorio4.c: 108: n1 = m * 10;
   961   000C28  C010  F014         	movff	_m,___wmul@multiplier
   962   000C2C  C011  F015         	movff	_m+1,___wmul@multiplier+1
   963   000C30  0E00               	movlw	0
   964   000C32  6E17               	movwf	(___wmul@multiplicand+1)^0,c
   965   000C34  0E0A               	movlw	10
   966   000C36  6E16               	movwf	___wmul@multiplicand^0,c
   967   000C38  EC11  F008         	call	___wmul	;wreg free
   968   000C3C  C014  F00D         	movff	?___wmul,_n1
   969   000C40  C015  F00E         	movff	?___wmul+1,_n1+1
   970                           
   971                           ;Laboratorio4.c: 109: } else {
   972   000C44  4A25               	infsnz	main@i^0,f,c
   973   000C46  2A26               	incf	(main@i+1)^0,f,c
   974   000C48  D7AE               	goto	l1691
   975   000C4A                     l1711:
   976   000C4A  5004               	movf	(_r+3)^0,w,c
   977   000C4C  1003               	iorwf	(_r+2)^0,w,c
   978   000C4E  1002               	iorwf	(_r+1)^0,w,c
   979   000C50  E104               	bnz	u1320
   980   000C52  0E52               	movlw	82
   981   000C54  5C01               	subwf	_r^0,w,c
   982   000C56  A0D8               	btfss	status,0,c
   983   000C58  D025               	goto	l1723
   984   000C5A                     u1320:
   985   000C5A  0EE8               	movlw	232
   986   000C5C  1801               	xorwf	_r^0,w,c
   987   000C5E  E106               	bnz	u1330
   988   000C60  0E03               	movlw	3
   989   000C62  1802               	xorwf	(_r+1)^0,w,c
   990   000C64  1003               	iorwf	(_r+2)^0,w,c
   991   000C66  1004               	iorwf	(_r+3)^0,w,c
   992   000C68  B4D8               	btfsc	status,2,c
   993   000C6A  D01C               	goto	l1723
   994   000C6C                     u1330:
   995   000C6C  0EE9               	movlw	233
   996   000C6E  1801               	xorwf	_r^0,w,c
   997   000C70  E106               	bnz	u1340
   998   000C72  0E03               	movlw	3
   999   000C74  1802               	xorwf	(_r+1)^0,w,c
  1000   000C76  1003               	iorwf	(_r+2)^0,w,c
  1001   000C78  1004               	iorwf	(_r+3)^0,w,c
  1002   000C7A  B4D8               	btfsc	status,2,c
  1003   000C7C  D013               	goto	l1723
  1004   000C7E                     u1340:
  1005                           
  1006                           ;Laboratorio4.c: 115: EscribeLCD_c('-');
  1007   000C7E  0E2D               	movlw	45
  1008   000C80  EC24  F008         	call	_EscribeLCD_c
  1009                           
  1010                           ;Laboratorio4.c: 116: DireccionaLCD(0x85);
  1011   000C84  0E85               	movlw	133
  1012   000C86  EC2F  F008         	call	_DireccionaLCD
  1013                           
  1014                           ;Laboratorio4.c: 117: r = ~r+1;
  1015   000C8A  1E04               	comf	(_r+3)^0,f,c
  1016   000C8C  1E03               	comf	(_r+2)^0,f,c
  1017   000C8E  1E02               	comf	(_r+1)^0,f,c
  1018   000C90  6C01               	negf	_r^0,c
  1019   000C92  0E00               	movlw	0
  1020   000C94  2202               	addwfc	(_r+1)^0,f,c
  1021   000C96  2203               	addwfc	(_r+2)^0,f,c
  1022   000C98  2204               	addwfc	(_r+3)^0,f,c
  1023                           
  1024                           ;Laboratorio4.c: 118: EscribeLCD_c(r+'0');
  1025   000C9A  5001               	movf	_r^0,w,c
  1026   000C9C  0F30               	addlw	48
  1027   000C9E  EC24  F008         	call	_EscribeLCD_c
  1028                           
  1029                           ;Laboratorio4.c: 119: }else{
  1030   000CA2  D06E               	goto	l1745
  1031   000CA4                     l1723:
  1032                           
  1033                           ;Laboratorio4.c: 120: if(r>0xA & r!=1000 & r !=1001){
  1034   000CA4  5004               	movf	(_r+3)^0,w,c
  1035   000CA6  1003               	iorwf	(_r+2)^0,w,c
  1036   000CA8  1002               	iorwf	(_r+1)^0,w,c
  1037   000CAA  E104               	bnz	u1350
  1038   000CAC  0E0B               	movlw	11
  1039   000CAE  5C01               	subwf	_r^0,w,c
  1040   000CB0  A0D8               	btfss	status,0,c
  1041   000CB2  D038               	goto	l1733
  1042   000CB4                     u1350:
  1043   000CB4  0EE8               	movlw	232
  1044   000CB6  1801               	xorwf	_r^0,w,c
  1045   000CB8  E106               	bnz	u1360
  1046   000CBA  0E03               	movlw	3
  1047   000CBC  1802               	xorwf	(_r+1)^0,w,c
  1048   000CBE  1003               	iorwf	(_r+2)^0,w,c
  1049   000CC0  1004               	iorwf	(_r+3)^0,w,c
  1050   000CC2  B4D8               	btfsc	status,2,c
  1051   000CC4  D02F               	goto	l1733
  1052   000CC6                     u1360:
  1053   000CC6  0EE9               	movlw	233
  1054   000CC8  1801               	xorwf	_r^0,w,c
  1055   000CCA  E106               	bnz	u1370
  1056   000CCC  0E03               	movlw	3
  1057   000CCE  1802               	xorwf	(_r+1)^0,w,c
  1058   000CD0  1003               	iorwf	(_r+2)^0,w,c
  1059   000CD2  1004               	iorwf	(_r+3)^0,w,c
  1060   000CD4  B4D8               	btfsc	status,2,c
  1061   000CD6  D026               	goto	l1733
  1062   000CD8                     u1370:
  1063   000CD8                     l1729:
  1064                           
  1065                           ;Laboratorio4.c: 122: i = i+1;
  1066   000CD8  0E01               	movlw	1
  1067   000CDA  2409               	addwf	_i^0,w,c
  1068   000CDC  6E09               	movwf	_i^0,c
  1069   000CDE  0E00               	movlw	0
  1070   000CE0  200A               	addwfc	(_i+1)^0,w,c
  1071   000CE2  6E0A               	movwf	(_i+1)^0,c
  1072                           
  1073                           ;Laboratorio4.c: 123: r = r - 10;
  1074   000CE4  0EF6               	movlw	246
  1075   000CE6  2401               	addwf	_r^0,w,c
  1076   000CE8  6E01               	movwf	_r^0,c
  1077   000CEA  0EFF               	movlw	255
  1078   000CEC  2002               	addwfc	(_r+1)^0,w,c
  1079   000CEE  6E02               	movwf	(_r+1)^0,c
  1080   000CF0  0EFF               	movlw	255
  1081   000CF2  2003               	addwfc	(_r+2)^0,w,c
  1082   000CF4  6E03               	movwf	(_r+2)^0,c
  1083   000CF6  0EFF               	movlw	255
  1084   000CF8  2004               	addwfc	(_r+3)^0,w,c
  1085   000CFA  6E04               	movwf	(_r+3)^0,c
  1086                           
  1087                           ;Laboratorio4.c: 124: }while(r>0xA);
  1088   000CFC  5004               	movf	(_r+3)^0,w,c
  1089   000CFE  1003               	iorwf	(_r+2)^0,w,c
  1090   000D00  1002               	iorwf	(_r+1)^0,w,c
  1091   000D02  E1EA               	bnz	l1729
  1092   000D04  0E0B               	movlw	11
  1093   000D06  5C01               	subwf	_r^0,w,c
  1094   000D08  B0D8               	btfsc	status,0,c
  1095   000D0A  D7E6               	goto	u1370
  1096                           
  1097                           ;Laboratorio4.c: 125: EscribeLCD_c(i+'0');
  1098   000D0C  5009               	movf	_i^0,w,c
  1099   000D0E  0F30               	addlw	48
  1100   000D10  EC24  F008         	call	_EscribeLCD_c
  1101                           
  1102                           ;Laboratorio4.c: 126: DireccionaLCD(0x85);
  1103   000D14  0E85               	movlw	133
  1104   000D16  EC2F  F008         	call	_DireccionaLCD
  1105                           
  1106                           ;Laboratorio4.c: 127: EscribeLCD_c(r+'0');
  1107   000D1A  5001               	movf	_r^0,w,c
  1108   000D1C  0F30               	addlw	48
  1109   000D1E  EC24  F008         	call	_EscribeLCD_c
  1110                           
  1111                           ;Laboratorio4.c: 128: }else{
  1112   000D22  D02E               	goto	l1745
  1113   000D24                     l1733:
  1114                           
  1115                           ;Laboratorio4.c: 129: if(r==1000){
  1116   000D24  0EE8               	movlw	232
  1117   000D26  1801               	xorwf	_r^0,w,c
  1118   000D28  E110               	bnz	l1737
  1119   000D2A  0E03               	movlw	3
  1120   000D2C  1802               	xorwf	(_r+1)^0,w,c
  1121   000D2E  1003               	iorwf	(_r+2)^0,w,c
  1122   000D30  1004               	iorwf	(_r+3)^0,w,c
  1123   000D32  A4D8               	btfss	status,2,c
  1124   000D34  D00A               	goto	l1737
  1125                           
  1126                           ;Laboratorio4.c: 130: EscribeLCD_c('I');
  1127   000D36  0E49               	movlw	73
  1128   000D38  EC24  F008         	call	_EscribeLCD_c
  1129                           
  1130                           ;Laboratorio4.c: 131: EscribeLCD_c('N');
  1131   000D3C  0E4E               	movlw	78
  1132   000D3E  EC24  F008         	call	_EscribeLCD_c
  1133                           
  1134                           ;Laboratorio4.c: 132: EscribeLCD_c('F');
  1135   000D42  0E46               	movlw	70
  1136   000D44  EC24  F008         	call	_EscribeLCD_c
  1137                           
  1138                           ;Laboratorio4.c: 133: }else{
  1139   000D48  D01B               	goto	l1745
  1140   000D4A                     l1737:
  1141                           
  1142                           ;Laboratorio4.c: 134: if(r==1001){
  1143   000D4A  0EE9               	movlw	233
  1144   000D4C  1801               	xorwf	_r^0,w,c
  1145   000D4E  E110               	bnz	l1741
  1146   000D50  0E03               	movlw	3
  1147   000D52  1802               	xorwf	(_r+1)^0,w,c
  1148   000D54  1003               	iorwf	(_r+2)^0,w,c
  1149   000D56  1004               	iorwf	(_r+3)^0,w,c
  1150   000D58  A4D8               	btfss	status,2,c
  1151   000D5A  D00A               	goto	l1741
  1152                           
  1153                           ;Laboratorio4.c: 135: EscribeLCD_c('I');
  1154   000D5C  0E49               	movlw	73
  1155   000D5E  EC24  F008         	call	_EscribeLCD_c
  1156                           
  1157                           ;Laboratorio4.c: 136: EscribeLCD_c('N');
  1158   000D62  0E4E               	movlw	78
  1159   000D64  EC24  F008         	call	_EscribeLCD_c
  1160                           
  1161                           ;Laboratorio4.c: 137: EscribeLCD_c('D');
  1162   000D68  0E44               	movlw	68
  1163   000D6A  EC24  F008         	call	_EscribeLCD_c
  1164                           
  1165                           ;Laboratorio4.c: 138: }else{
  1166   000D6E  D008               	goto	l1745
  1167   000D70                     l1741:
  1168                           
  1169                           ;Laboratorio4.c: 139: EscribeLCD_c(r+'0');
  1170   000D70  5001               	movf	_r^0,w,c
  1171   000D72  0F30               	addlw	48
  1172   000D74  EC24  F008         	call	_EscribeLCD_c
  1173   000D78  D003               	goto	l1745
  1174   000D7A                     l1743:
  1175                           
  1176                           ;Laboratorio4.c: 145: EscribeLCD_c('W');
  1177   000D7A  0E57               	movlw	87
  1178   000D7C  EC24  F008         	call	_EscribeLCD_c
  1179   000D80                     l1745:
  1180                           
  1181                           ;Laboratorio4.c: 146: };Laboratorio4.c: 147: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1182   000D80  0EE4               	movlw	228
  1183   000D82  6E21               	movwf	??_main^0,c
  1184   000D84  0E44               	movlw	68
  1185   000D86                     u1427:
  1186   000D86  2EE8               	decfsz	wreg,f,c
  1187   000D88  D7FE               	bra	u1427
  1188   000D8A  2E21               	decfsz	??_main^0,f,c
  1189   000D8C  D7FC               	bra	u1427
  1190   000D8E  D000               	nop2	
  1191   000D90  D564               	goto	l1539
  1192   000D92                     __end_of_main:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function ___wmul *****************
  1196 ;; Defined at:
  1197 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  multiplier      2    0[COMRAM] unsigned int 
  1200 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  product         2    4[COMRAM] unsigned int 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    0[COMRAM] unsigned int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, prodl, prodh
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         4       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        6 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text1
  1226   001022                     __ptext1:
  1227                           	callstack 0
  1228   001022                     ___wmul:
  1229                           	callstack 30
  1230                           
  1231                           ;incstack = 0
  1232   001022  5014               	movf	___wmul@multiplier^0,w,c
  1233   001024  0216               	mulwf	___wmul@multiplicand^0,c
  1234   001026  CFF3 F018          	movff	prodl,___wmul@product
  1235   00102A  CFF4 F019          	movff	prodh,___wmul@product+1
  1236   00102E  5014               	movf	___wmul@multiplier^0,w,c
  1237   001030  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  1238   001032  50F3               	movf	243,w,c
  1239   001034  2619               	addwf	(___wmul@product+1)^0,f,c
  1240   001036  5015               	movf	(___wmul@multiplier+1)^0,w,c
  1241   001038  0216               	mulwf	___wmul@multiplicand^0,c
  1242   00103A  50F3               	movf	243,w,c
  1243   00103C  2619               	addwf	(___wmul@product+1)^0,f,c
  1244   00103E  C018  F014         	movff	___wmul@product,?___wmul
  1245   001042  C019  F015         	movff	___wmul@product+1,?___wmul+1
  1246   001046  0012               	return		;funcret
  1247   001048                     __end_of___wmul:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function ___lwmod *****************
  1251 ;; Defined at:
  1252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  dividend        2    0[COMRAM] unsigned int 
  1255 ;;  divisor         2    2[COMRAM] unsigned int 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  counter         1    4[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    0[COMRAM] unsigned int 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         4       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1270 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1271 ;;Total ram usage:        5 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text2
  1281   000F32                     __ptext2:
  1282                           	callstack 0
  1283   000F32                     ___lwmod:
  1284                           	callstack 30
  1285                           
  1286                           ;incstack = 0
  1287   000F32  5016               	movf	___lwmod@divisor^0,w,c
  1288   000F34  1017               	iorwf	(___lwmod@divisor+1)^0,w,c
  1289   000F36  B4D8               	btfsc	status,2,c
  1290   000F38  D018               	goto	l695
  1291   000F3A  0E01               	movlw	1
  1292   000F3C  6E18               	movwf	___lwmod@counter^0,c
  1293   000F3E  D004               	goto	l1515
  1294   000F40                     l1513:
  1295   000F40  90D8               	bcf	status,0,c
  1296   000F42  3616               	rlcf	___lwmod@divisor^0,f,c
  1297   000F44  3617               	rlcf	(___lwmod@divisor+1)^0,f,c
  1298   000F46  2A18               	incf	___lwmod@counter^0,f,c
  1299   000F48                     l1515:
  1300   000F48  AE17               	btfss	(___lwmod@divisor+1)^0,7,c
  1301   000F4A  D7FA               	goto	l1513
  1302   000F4C                     u880:
  1303   000F4C  5016               	movf	___lwmod@divisor^0,w,c
  1304   000F4E  5C14               	subwf	___lwmod@dividend^0,w,c
  1305   000F50  5017               	movf	(___lwmod@divisor+1)^0,w,c
  1306   000F52  5815               	subwfb	(___lwmod@dividend+1)^0,w,c
  1307   000F54  A0D8               	btfss	status,0,c
  1308   000F56  D004               	goto	l1521
  1309   000F58  5016               	movf	___lwmod@divisor^0,w,c
  1310   000F5A  5E14               	subwf	___lwmod@dividend^0,f,c
  1311   000F5C  5017               	movf	(___lwmod@divisor+1)^0,w,c
  1312   000F5E  5A15               	subwfb	(___lwmod@dividend+1)^0,f,c
  1313   000F60                     l1521:
  1314   000F60  90D8               	bcf	status,0,c
  1315   000F62  3217               	rrcf	(___lwmod@divisor+1)^0,f,c
  1316   000F64  3216               	rrcf	___lwmod@divisor^0,f,c
  1317   000F66  2E18               	decfsz	___lwmod@counter^0,f,c
  1318   000F68  D7F1               	goto	u880
  1319   000F6A                     l695:
  1320   000F6A  C014  F014         	movff	___lwmod@dividend,?___lwmod
  1321   000F6E  C015  F015         	movff	___lwmod@dividend+1,?___lwmod+1
  1322   000F72  0012               	return		;funcret
  1323   000F74                     __end_of___lwmod:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function ___lwdiv *****************
  1327 ;; Defined at:
  1328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  dividend        2    6[COMRAM] unsigned int 
  1331 ;;  divisor         2    8[COMRAM] unsigned int 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  quotient        2   10[COMRAM] unsigned int 
  1334 ;;  counter         1   12[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2    6[COMRAM] unsigned int 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         4       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        7 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text3
  1358   000EE0                     __ptext3:
  1359                           	callstack 0
  1360   000EE0                     ___lwdiv:
  1361                           	callstack 30
  1362                           
  1363                           ;incstack = 0
  1364   000EE0  0E00               	movlw	0
  1365   000EE2  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  1366   000EE4  0E00               	movlw	0
  1367   000EE6  6E1E               	movwf	___lwdiv@quotient^0,c
  1368   000EE8  501C               	movf	___lwdiv@divisor^0,w,c
  1369   000EEA  101D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1370   000EEC  B4D8               	btfsc	status,2,c
  1371   000EEE  D01C               	goto	l685
  1372   000EF0  0E01               	movlw	1
  1373   000EF2  6E20               	movwf	___lwdiv@counter^0,c
  1374   000EF4  D004               	goto	l1495
  1375   000EF6                     l1493:
  1376   000EF6  90D8               	bcf	status,0,c
  1377   000EF8  361C               	rlcf	___lwdiv@divisor^0,f,c
  1378   000EFA  361D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1379   000EFC  2A20               	incf	___lwdiv@counter^0,f,c
  1380   000EFE                     l1495:
  1381   000EFE  AE1D               	btfss	(___lwdiv@divisor+1)^0,7,c
  1382   000F00  D7FA               	goto	l1493
  1383   000F02                     u850:
  1384   000F02  90D8               	bcf	status,0,c
  1385   000F04  361E               	rlcf	___lwdiv@quotient^0,f,c
  1386   000F06  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1387   000F08  501C               	movf	___lwdiv@divisor^0,w,c
  1388   000F0A  5C1A               	subwf	___lwdiv@dividend^0,w,c
  1389   000F0C  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  1390   000F0E  581B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1391   000F10  A0D8               	btfss	status,0,c
  1392   000F12  D005               	goto	l1505
  1393   000F14  501C               	movf	___lwdiv@divisor^0,w,c
  1394   000F16  5E1A               	subwf	___lwdiv@dividend^0,f,c
  1395   000F18  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  1396   000F1A  5A1B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1397   000F1C  801E               	bsf	___lwdiv@quotient^0,0,c
  1398   000F1E                     l1505:
  1399   000F1E  90D8               	bcf	status,0,c
  1400   000F20  321D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1401   000F22  321C               	rrcf	___lwdiv@divisor^0,f,c
  1402   000F24  2E20               	decfsz	___lwdiv@counter^0,f,c
  1403   000F26  D7ED               	goto	u850
  1404   000F28                     l685:
  1405   000F28  C01E  F01A         	movff	___lwdiv@quotient,?___lwdiv
  1406   000F2C  C01F  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1407   000F30  0012               	return		;funcret
  1408   000F32                     __end_of___lwdiv:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function ___lmul *****************
  1412 ;; Defined at:
  1413 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  multiplier      4    0[COMRAM] unsigned long 
  1416 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  product         4    8[COMRAM] unsigned long 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  4    0[COMRAM] unsigned long 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         8       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:       12 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text4
  1442   000E34                     __ptext4:
  1443                           	callstack 0
  1444   000E34                     ___lmul:
  1445                           	callstack 30
  1446                           
  1447                           ;incstack = 0
  1448   000E34  0E00               	movlw	0
  1449   000E36  6E1C               	movwf	___lmul@product^0,c
  1450   000E38  0E00               	movlw	0
  1451   000E3A  6E1D               	movwf	(___lmul@product+1)^0,c
  1452   000E3C  0E00               	movlw	0
  1453   000E3E  6E1E               	movwf	(___lmul@product+2)^0,c
  1454   000E40  0E00               	movlw	0
  1455   000E42  6E1F               	movwf	(___lmul@product+3)^0,c
  1456   000E44                     l1479:
  1457   000E44  A014               	btfss	___lmul@multiplier^0,0,c
  1458   000E46  D008               	goto	l1483
  1459   000E48  5018               	movf	___lmul@multiplicand^0,w,c
  1460   000E4A  261C               	addwf	___lmul@product^0,f,c
  1461   000E4C  5019               	movf	(___lmul@multiplicand+1)^0,w,c
  1462   000E4E  221D               	addwfc	(___lmul@product+1)^0,f,c
  1463   000E50  501A               	movf	(___lmul@multiplicand+2)^0,w,c
  1464   000E52  221E               	addwfc	(___lmul@product+2)^0,f,c
  1465   000E54  501B               	movf	(___lmul@multiplicand+3)^0,w,c
  1466   000E56  221F               	addwfc	(___lmul@product+3)^0,f,c
  1467   000E58                     l1483:
  1468   000E58  90D8               	bcf	status,0,c
  1469   000E5A  3618               	rlcf	___lmul@multiplicand^0,f,c
  1470   000E5C  3619               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1471   000E5E  361A               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1472   000E60  361B               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1473   000E62  90D8               	bcf	status,0,c
  1474   000E64  3217               	rrcf	(___lmul@multiplier+3)^0,f,c
  1475   000E66  3216               	rrcf	(___lmul@multiplier+2)^0,f,c
  1476   000E68  3215               	rrcf	(___lmul@multiplier+1)^0,f,c
  1477   000E6A  3214               	rrcf	___lmul@multiplier^0,f,c
  1478   000E6C  5014               	movf	___lmul@multiplier^0,w,c
  1479   000E6E  1015               	iorwf	(___lmul@multiplier+1)^0,w,c
  1480   000E70  1016               	iorwf	(___lmul@multiplier+2)^0,w,c
  1481   000E72  1017               	iorwf	(___lmul@multiplier+3)^0,w,c
  1482   000E74  A4D8               	btfss	status,2,c
  1483   000E76  D7E6               	goto	l1479
  1484   000E78  C01C  F014         	movff	___lmul@product,?___lmul
  1485   000E7C  C01D  F015         	movff	___lmul@product+1,?___lmul+1
  1486   000E80  C01E  F016         	movff	___lmul@product+2,?___lmul+2
  1487   000E84  C01F  F017         	movff	___lmul@product+3,?___lmul+3
  1488   000E88  0012               	return		;funcret
  1489   000E8A                     __end_of___lmul:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _MensajeLCD_Word *****************
  1493 ;; Defined at:
  1494 ;;		line 239 in file "LibLCDXC8.h"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  a               1    4[COMRAM] PTR unsigned char 
  1497 ;;		 -> STR_2(17), STR_1(11), 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  i               2    6[COMRAM] int 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         1       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        4 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		_EscribeLCD_c
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text5
  1524   000FEC                     __ptext5:
  1525                           	callstack 0
  1526   000FEC                     _MensajeLCD_Word:
  1527                           	callstack 27
  1528                           
  1529                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1530                           
  1531                           ;incstack = 0
  1532   000FEC  0E00               	movlw	0
  1533   000FEE  6E1B               	movwf	(MensajeLCD_Word@i+1)^0,c
  1534   000FF0  0E00               	movlw	0
  1535   000FF2  6E1A               	movwf	MensajeLCD_Word@i^0,c
  1536   000FF4                     l1465:
  1537                           
  1538                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1539   000FF4  5018               	movf	MensajeLCD_Word@a^0,w,c
  1540   000FF6  241A               	addwf	MensajeLCD_Word@i^0,w,c
  1541   000FF8  6E19               	movwf	??_MensajeLCD_Word^0,c
  1542   000FFA  C019  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1543   000FFE                     	if	1	;There is more than 1 active tblptr byte
  1544   000FFE  0E08               	movlw	high __smallconst
  1545   001000  6EF7               	movwf	tblptrh,c
  1546   001002                     	endif
  1547   001002                     	if	0	;tblptru may be non-zero
  1548   001002                     	endif
  1549   001002                     	if	0	;tblptru may be non-zero
  1550   001002                     	endif
  1551   001002  0008               	tblrd		*
  1552   001004  50F5               	movf	tablat,w,c
  1553   001006  EC24  F008         	call	_EscribeLCD_c
  1554   00100A  4A1A               	infsnz	MensajeLCD_Word@i^0,f,c
  1555   00100C  2A1B               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1556   00100E  BE1B               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1557   001010  D7F1               	goto	l1465
  1558   001012  501B               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1559   001014  E105               	bnz	u810
  1560   001016  0E10               	movlw	16
  1561   001018  5C1A               	subwf	MensajeLCD_Word@i^0,w,c
  1562   00101A  B0D8               	btfsc	status,0,c
  1563   00101C  0012               	return	
  1564   00101E  D7EA               	goto	l1465
  1565   001020                     u810:
  1566   001020  0012               	return		;funcret
  1567   001022                     __end_of_MensajeLCD_Word:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _EscribeLCD_c *****************
  1571 ;; Defined at:
  1572 ;;		line 140 in file "LibLCDXC8.h"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  a               1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  a               1    3[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 2
  1593 ;; This function calls:
  1594 ;;		_EnviaDato
  1595 ;;		_HabilitaLCD
  1596 ;;		_RetardoLCD
  1597 ;; This function is called by:
  1598 ;;		_MensajeLCD_Word
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text6
  1604   001048                     __ptext6:
  1605                           	callstack 0
  1606   001048                     _EscribeLCD_c:
  1607                           	callstack 27
  1608                           
  1609                           ;incstack = 0
  1610                           ;EscribeLCD_c@a stored from wreg
  1611   001048  6E17               	movwf	EscribeLCD_c@a^0,c
  1612                           
  1613                           ;LibLCDXC8.h: 144: LATE0=1;
  1614   00104A  808D               	bsf	3981,0,c	;volatile
  1615                           
  1616                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1617   00104C  5017               	movf	EscribeLCD_c@a^0,w,c
  1618   00104E  EC4B  F008         	call	_EnviaDato
  1619                           
  1620                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1621   001052  EC44  F008         	call	_HabilitaLCD	;wreg free
  1622                           
  1623                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1624   001056  0E04               	movlw	4
  1625   001058  EC45  F007         	call	_RetardoLCD
  1626   00105C  0012               	return		;funcret
  1627   00105E                     __end_of_EscribeLCD_c:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _LeerTeclado *****************
  1631 ;; Defined at:
  1632 ;;		line 153 in file "Laboratorio4.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      unsigned char 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text7
  1660   000D92                     __ptext7:
  1661                           	callstack 0
  1662   000D92                     _LeerTeclado:
  1663                           	callstack 30
  1664                           
  1665                           ;Laboratorio4.c: 154: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1666                           
  1667                           ;incstack = 0
  1668   000D92  B881               	btfsc	3969,4,c	;volatile
  1669   000D94  AA81               	btfss	3969,5,c	;volatile
  1670   000D96  D004               	goto	u50
  1671   000D98  AC81               	btfss	3969,6,c	;volatile
  1672   000D9A  D002               	goto	u50
  1673   000D9C  BE81               	btfsc	3969,7,c	;volatile
  1674   000D9E  D7F9               	goto	__ptext7
  1675   000DA0                     u50:
  1676                           
  1677                           ;Laboratorio4.c: 155: LATB=0b11111110;
  1678   000DA0  0EFE               	movlw	254
  1679   000DA2  6E8A               	movwf	138,c	;volatile
  1680                           
  1681                           ;Laboratorio4.c: 156: if(RB4==0) return '1';
  1682   000DA4  B881               	btfsc	3969,4,c	;volatile
  1683   000DA6  D002               	goto	l172
  1684   000DA8  0E31               	movlw	49
  1685   000DAA  0012               	return	
  1686   000DAC                     l172:
  1687                           
  1688                           ;Laboratorio4.c: 157: else if(RB5==0) return '2';
  1689   000DAC  BA81               	btfsc	3969,5,c	;volatile
  1690   000DAE  D002               	goto	l175
  1691   000DB0  0E32               	movlw	50
  1692   000DB2  0012               	return	
  1693   000DB4                     l175:
  1694                           
  1695                           ;Laboratorio4.c: 158: else if(RB6==0) return '3';
  1696   000DB4  BC81               	btfsc	3969,6,c	;volatile
  1697   000DB6  D002               	goto	l177
  1698   000DB8  0E33               	movlw	51
  1699   000DBA  0012               	return	
  1700   000DBC                     l177:
  1701                           
  1702                           ;Laboratorio4.c: 159: else if(RB7==0) return '+';
  1703   000DBC  BE81               	btfsc	3969,7,c	;volatile
  1704   000DBE  D002               	goto	l1097
  1705   000DC0  0E2B               	movlw	43
  1706   000DC2  0012               	return	
  1707   000DC4                     l1097:
  1708                           
  1709                           ;Laboratorio4.c: 160: else{;Laboratorio4.c: 161: LATB=0b11111101;
  1710   000DC4  0EFD               	movlw	253
  1711   000DC6  6E8A               	movwf	138,c	;volatile
  1712                           
  1713                           ;Laboratorio4.c: 162: if(RB4==0) return '4';
  1714   000DC8  B881               	btfsc	3969,4,c	;volatile
  1715   000DCA  D002               	goto	l181
  1716   000DCC  0E34               	movlw	52
  1717   000DCE  0012               	return	
  1718   000DD0                     l181:
  1719                           
  1720                           ;Laboratorio4.c: 163: else if(RB5==0) return '5';
  1721   000DD0  BA81               	btfsc	3969,5,c	;volatile
  1722   000DD2  D002               	goto	l183
  1723   000DD4  0E35               	movlw	53
  1724   000DD6  0012               	return	
  1725   000DD8                     l183:
  1726                           
  1727                           ;Laboratorio4.c: 164: else if(RB6==0) return '6';
  1728   000DD8  BC81               	btfsc	3969,6,c	;volatile
  1729   000DDA  D002               	goto	l185
  1730   000DDC  0E36               	movlw	54
  1731   000DDE  0012               	return	
  1732   000DE0                     l185:
  1733                           
  1734                           ;Laboratorio4.c: 165: else if(RB7==0) return '-';
  1735   000DE0  BE81               	btfsc	3969,7,c	;volatile
  1736   000DE2  D002               	goto	l1125
  1737   000DE4  0E2D               	movlw	45
  1738   000DE6  0012               	return	
  1739   000DE8                     l1125:
  1740                           
  1741                           ;Laboratorio4.c: 166: else{;Laboratorio4.c: 167: LATB=0b11111011;
  1742   000DE8  0EFB               	movlw	251
  1743   000DEA  6E8A               	movwf	138,c	;volatile
  1744                           
  1745                           ;Laboratorio4.c: 168: if(RB4==0) return '7';
  1746   000DEC  B881               	btfsc	3969,4,c	;volatile
  1747   000DEE  D002               	goto	l189
  1748   000DF0  0E37               	movlw	55
  1749   000DF2  0012               	return	
  1750   000DF4                     l189:
  1751                           
  1752                           ;Laboratorio4.c: 169: else if(RB5==0) return '8';
  1753   000DF4  BA81               	btfsc	3969,5,c	;volatile
  1754   000DF6  D002               	goto	l191
  1755   000DF8  0E38               	movlw	56
  1756   000DFA  0012               	return	
  1757   000DFC                     l191:
  1758                           
  1759                           ;Laboratorio4.c: 170: else if(RB6==0) return '9';
  1760   000DFC  BC81               	btfsc	3969,6,c	;volatile
  1761   000DFE  D002               	goto	l193
  1762   000E00  0E39               	movlw	57
  1763   000E02  0012               	return	
  1764   000E04                     l193:
  1765                           
  1766                           ;Laboratorio4.c: 171: else if(RB7==0) return '/';
  1767   000E04  BE81               	btfsc	3969,7,c	;volatile
  1768   000E06  D002               	goto	l1153
  1769   000E08  0E2F               	movlw	47
  1770   000E0A  0012               	return	
  1771   000E0C                     l1153:
  1772                           
  1773                           ;Laboratorio4.c: 172: else{;Laboratorio4.c: 173: LATB=0b11110111;
  1774   000E0C  0EF7               	movlw	247
  1775   000E0E  6E8A               	movwf	138,c	;volatile
  1776                           
  1777                           ;Laboratorio4.c: 174: if(RB4==0) return 'C';
  1778   000E10  B881               	btfsc	3969,4,c	;volatile
  1779   000E12  D002               	goto	l197
  1780   000E14  0E43               	movlw	67
  1781   000E16  0012               	return	
  1782   000E18                     l197:
  1783                           
  1784                           ;Laboratorio4.c: 175: else if(RB5==0) return '0';
  1785   000E18  BA81               	btfsc	3969,5,c	;volatile
  1786   000E1A  D002               	goto	l199
  1787   000E1C  0E30               	movlw	48
  1788   000E1E  0012               	return	
  1789   000E20                     l199:
  1790                           
  1791                           ;Laboratorio4.c: 176: else if(RB6==0) return '=';
  1792   000E20  BC81               	btfsc	3969,6,c	;volatile
  1793   000E22  D002               	goto	l201
  1794   000E24  0E3D               	movlw	61
  1795   000E26  0012               	return	
  1796   000E28                     l201:
  1797                           
  1798                           ;Laboratorio4.c: 177: else if(RB7==0) return 'x';
  1799   000E28  BE81               	btfsc	3969,7,c	;volatile
  1800   000E2A  D002               	goto	l198
  1801   000E2C  0E78               	movlw	120
  1802   000E2E  0012               	return	
  1803   000E30                     l198:
  1804                           
  1805                           ;Laboratorio4.c: 178: };Laboratorio4.c: 179: };Laboratorio4.c: 180: };Laboratorio4.c: 18
      +                          1: return '?';
  1806   000E30  0E3F               	movlw	63
  1807   000E32  0012               	return		;funcret
  1808   000E34                     __end_of_LeerTeclado:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _InicializaLCD *****************
  1812 ;; Defined at:
  1813 ;;		line 71 in file "LibLCDXC8.h"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 3
  1834 ;; This function calls:
  1835 ;;		_BorraLCD
  1836 ;;		_EnviaDato
  1837 ;;		_HabilitaLCD
  1838 ;;		_RetardoLCD
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text8
  1845   000F74                     __ptext8:
  1846                           	callstack 0
  1847   000F74                     _InicializaLCD:
  1848                           	callstack 27
  1849                           
  1850                           ;LibLCDXC8.h: 73: LATE0=0;
  1851                           
  1852                           ;incstack = 0
  1853   000F74  908D               	bcf	3981,0,c	;volatile
  1854                           
  1855                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1856                           
  1857                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1858   000F76  0E3F               	movlw	63
  1859   000F78  6E8C               	movwf	140,c	;volatile
  1860                           
  1861                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1862   000F7A  EC44  F008         	call	_HabilitaLCD	;wreg free
  1863                           
  1864                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1865   000F7E  0E01               	movlw	1
  1866   000F80  EC45  F007         	call	_RetardoLCD
  1867                           
  1868                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1869                           
  1870                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1871   000F84  0E3F               	movlw	63
  1872   000F86  6E8C               	movwf	140,c	;volatile
  1873                           
  1874                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1875   000F88  EC44  F008         	call	_HabilitaLCD	;wreg free
  1876                           
  1877                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1878   000F8C  0E03               	movlw	3
  1879   000F8E  EC45  F007         	call	_RetardoLCD
  1880                           
  1881                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1882                           
  1883                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1884   000F92  0E3F               	movlw	63
  1885   000F94  6E8C               	movwf	140,c	;volatile
  1886                           
  1887                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1888   000F96  EC44  F008         	call	_HabilitaLCD	;wreg free
  1889                           
  1890                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1891   000F9A  0E04               	movlw	4
  1892   000F9C  EC45  F007         	call	_RetardoLCD
  1893                           
  1894                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1895                           
  1896                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1897   000FA0  EC3A  F008         	call	_BorraLCD	;wreg free
  1898                           
  1899                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1900   000FA4  0E0F               	movlw	15
  1901   000FA6  EC4B  F008         	call	_EnviaDato
  1902                           
  1903                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1904   000FAA  EC44  F008         	call	_HabilitaLCD	;wreg free
  1905                           
  1906                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1907   000FAE  0E04               	movlw	4
  1908   000FB0  EC45  F007         	call	_RetardoLCD
  1909   000FB4  0012               	return		;funcret
  1910   000FB6                     __end_of_InicializaLCD:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _BorraLCD *****************
  1914 ;; Defined at:
  1915 ;;		line 112 in file "LibLCDXC8.h"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 2
  1936 ;; This function calls:
  1937 ;;		_EnviaDato
  1938 ;;		_HabilitaLCD
  1939 ;;		_RetardoLCD
  1940 ;; This function is called by:
  1941 ;;		_InicializaLCD
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text9
  1947   001074                     __ptext9:
  1948                           	callstack 0
  1949   001074                     _BorraLCD:
  1950                           	callstack 27
  1951                           
  1952                           ;LibLCDXC8.h: 114: LATE0=0;
  1953                           
  1954                           ;incstack = 0
  1955   001074  908D               	bcf	3981,0,c	;volatile
  1956                           
  1957                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1958   001076  0E01               	movlw	1
  1959   001078  EC4B  F008         	call	_EnviaDato
  1960                           
  1961                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1962   00107C  EC44  F008         	call	_HabilitaLCD	;wreg free
  1963                           
  1964                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1965   001080  0E02               	movlw	2
  1966   001082  EC45  F007         	call	_RetardoLCD
  1967   001086  0012               	return		;funcret
  1968   001088                     __end_of_BorraLCD:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _DireccionaLCD *****************
  1972 ;; Defined at:
  1973 ;;		line 250 in file "LibLCDXC8.h"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  a               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  a               1    3[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1990 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 2
  1994 ;; This function calls:
  1995 ;;		_EnviaDato
  1996 ;;		_HabilitaLCD
  1997 ;;		_RetardoLCD
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text10
  2004   00105E                     __ptext10:
  2005                           	callstack 0
  2006   00105E                     _DireccionaLCD:
  2007                           	callstack 28
  2008                           
  2009                           ;incstack = 0
  2010                           ;DireccionaLCD@a stored from wreg
  2011   00105E  6E17               	movwf	DireccionaLCD@a^0,c
  2012                           
  2013                           ;LibLCDXC8.h: 253: LATE0=0;
  2014   001060  908D               	bcf	3981,0,c	;volatile
  2015                           
  2016                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2017   001062  5017               	movf	DireccionaLCD@a^0,w,c
  2018   001064  EC4B  F008         	call	_EnviaDato
  2019                           
  2020                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2021   001068  EC44  F008         	call	_HabilitaLCD	;wreg free
  2022                           
  2023                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2024   00106C  0E04               	movlw	4
  2025   00106E  EC45  F007         	call	_RetardoLCD
  2026   001072  0012               	return		;funcret
  2027   001074                     __end_of_DireccionaLCD:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _EnviaDato *****************
  2031 ;; Defined at:
  2032 ;;		line 59 in file "LibLCDXC8.h"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  a               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  a               1    2[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 1
  2053 ;; This function calls:
  2054 ;;		_HabilitaLCD
  2055 ;;		_RetardoLCD
  2056 ;; This function is called by:
  2057 ;;		_InicializaLCD
  2058 ;;		_BorraLCD
  2059 ;;		_EscribeLCD_c
  2060 ;;		_DireccionaLCD
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text11
  2065   001096                     __ptext11:
  2066                           	callstack 0
  2067   001096                     _EnviaDato:
  2068                           	callstack 27
  2069                           
  2070                           ;incstack = 0
  2071                           ;EnviaDato@a stored from wreg
  2072   001096  6E16               	movwf	EnviaDato@a^0,c
  2073                           
  2074                           ;LibLCDXC8.h: 68: LATD=a;
  2075                           
  2076                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2077   001098  C016  FF8C         	movff	EnviaDato@a,3980	;volatile
  2078   00109C  0012               	return		;funcret
  2079   00109E                     __end_of_EnviaDato:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _RetardoLCD *****************
  2083 ;; Defined at:
  2084 ;;		line 286 in file "LibLCDXC8.h"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  a               1    wreg     unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  a               1    1[COMRAM] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2100 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2101 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2102 ;;Total ram usage:        2 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_EnviaDato
  2108 ;;		_InicializaLCD
  2109 ;;		_BorraLCD
  2110 ;;		_EscribeLCD_c
  2111 ;;		_DireccionaLCD
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text12
  2116   000E8A                     __ptext12:
  2117                           	callstack 0
  2118   000E8A                     _RetardoLCD:
  2119                           	callstack 28
  2120                           
  2121                           ;incstack = 0
  2122                           ;RetardoLCD@a stored from wreg
  2123   000E8A  6E15               	movwf	RetardoLCD@a^0,c
  2124                           
  2125                           ;LibLCDXC8.h: 287: switch(a){
  2126   000E8C  D01B               	goto	l969
  2127   000E8E                     l959:
  2128   000E8E  0E05               	movlw	5
  2129   000E90  6E14               	movwf	??_RetardoLCD^0,c
  2130   000E92  0EDE               	movlw	222
  2131   000E94                     u1437:
  2132   000E94  2EE8               	decfsz	wreg,f,c
  2133   000E96  D7FE               	bra	u1437
  2134   000E98  2E14               	decfsz	??_RetardoLCD^0,f,c
  2135   000E9A  D7FC               	bra	u1437
  2136                           
  2137                           ;LibLCDXC8.h: 290: break;
  2138   000E9C  0012               	return	
  2139   000E9E                     l961:
  2140   000E9E  0E53               	movlw	83
  2141   000EA0                     u1447:
  2142   000EA0  2EE8               	decfsz	wreg,f,c
  2143   000EA2  D7FE               	bra	u1447
  2144   000EA4  F000               	nop	
  2145                           
  2146                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2147   000EA6  0E35               	movlw	53
  2148   000EA8                     u1457:
  2149   000EA8  2EE8               	decfsz	wreg,f,c
  2150   000EAA  D7FE               	bra	u1457
  2151   000EAC  F000               	nop	
  2152                           
  2153                           ;LibLCDXC8.h: 294: break;
  2154   000EAE  0012               	return	
  2155   000EB0                     l963:
  2156   000EB0  0E08               	movlw	8
  2157   000EB2                     u1467:
  2158   000EB2  2EE8               	decfsz	wreg,f,c
  2159   000EB4  D7FE               	bra	u1467
  2160   000EB6  F000               	nop	
  2161                           
  2162                           ;LibLCDXC8.h: 297: break;
  2163   000EB8  0012               	return	
  2164   000EBA                     l965:
  2165   000EBA  0E03               	movlw	3
  2166   000EBC                     u1477:
  2167   000EBC  2EE8               	decfsz	wreg,f,c
  2168   000EBE  D7FE               	bra	u1477
  2169   000EC0  F000               	nop	
  2170                           
  2171                           ;LibLCDXC8.h: 300: break;
  2172   000EC2  0012               	return	
  2173   000EC4                     l969:
  2174   000EC4  5015               	movf	RetardoLCD@a^0,w,c
  2175                           
  2176                           ; Switch size 1, requested type "simple"
  2177                           ; Number of cases is 4, Range of values is 1 to 4
  2178                           ; switch strategies available:
  2179                           ; Name         Instructions Cycles
  2180                           ; simple_byte           13     7 (average)
  2181                           ;	Chosen strategy is simple_byte
  2182   000EC6  0A01               	xorlw	1	; case 1
  2183   000EC8  B4D8               	btfsc	status,2,c
  2184   000ECA  D7E1               	goto	l959
  2185   000ECC  0A03               	xorlw	3	; case 2
  2186   000ECE  B4D8               	btfsc	status,2,c
  2187   000ED0  D7E6               	goto	l961
  2188   000ED2  0A01               	xorlw	1	; case 3
  2189   000ED4  B4D8               	btfsc	status,2,c
  2190   000ED6  D7EC               	goto	l963
  2191   000ED8  0A07               	xorlw	7	; case 4
  2192   000EDA  A4D8               	btfss	status,2,c
  2193   000EDC  0012               	return	
  2194   000EDE  D7ED               	goto	l965
  2195   000EE0                     __end_of_RetardoLCD:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _HabilitaLCD *****************
  2199 ;; Defined at:
  2200 ;;		line 105 in file "LibLCDXC8.h"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_EnviaDato
  2224 ;;		_InicializaLCD
  2225 ;;		_BorraLCD
  2226 ;;		_EscribeLCD_c
  2227 ;;		_DireccionaLCD
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text13
  2232   001088                     __ptext13:
  2233                           	callstack 0
  2234   001088                     _HabilitaLCD:
  2235                           	callstack 28
  2236                           
  2237                           ;LibLCDXC8.h: 107: LATE1=1;
  2238                           
  2239                           ;incstack = 0
  2240   001088  828D               	bsf	3981,1,c	;volatile
  2241                           
  2242                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2243   00108A  0E03               	movlw	3
  2244   00108C                     u1487:
  2245   00108C  2EE8               	decfsz	wreg,f,c
  2246   00108E  D7FE               	bra	u1487
  2247   001090  F000               	nop	
  2248                           
  2249                           ;LibLCDXC8.h: 110: LATE1=0;
  2250   001092  928D               	bcf	3981,1,c	;volatile
  2251   001094  0012               	return		;funcret
  2252   001096                     __end_of_HabilitaLCD:
  2253                           	callstack 0
  2254                           
  2255                           	psect	rparam
  2256   000000                     
  2257                           	psect	idloc
  2258                           
  2259                           ;Config register IDLOC0 @ 0x200000
  2260                           ;	unspecified, using default values
  2261   200000                     	org	2097152
  2262   200000  FF                 	db	255
  2263                           
  2264                           ;Config register IDLOC1 @ 0x200001
  2265                           ;	unspecified, using default values
  2266   200001                     	org	2097153
  2267   200001  FF                 	db	255
  2268                           
  2269                           ;Config register IDLOC2 @ 0x200002
  2270                           ;	unspecified, using default values
  2271   200002                     	org	2097154
  2272   200002  FF                 	db	255
  2273                           
  2274                           ;Config register IDLOC3 @ 0x200003
  2275                           ;	unspecified, using default values
  2276   200003                     	org	2097155
  2277   200003  FF                 	db	255
  2278                           
  2279                           ;Config register IDLOC4 @ 0x200004
  2280                           ;	unspecified, using default values
  2281   200004                     	org	2097156
  2282   200004  FF                 	db	255
  2283                           
  2284                           ;Config register IDLOC5 @ 0x200005
  2285                           ;	unspecified, using default values
  2286   200005                     	org	2097157
  2287   200005  FF                 	db	255
  2288                           
  2289                           ;Config register IDLOC6 @ 0x200006
  2290                           ;	unspecified, using default values
  2291   200006                     	org	2097158
  2292   200006  FF                 	db	255
  2293                           
  2294                           ;Config register IDLOC7 @ 0x200007
  2295                           ;	unspecified, using default values
  2296   200007                     	org	2097159
  2297   200007  FF                 	db	255
  2298                           
  2299                           	psect	config
  2300                           
  2301                           ;Config register CONFIG1L @ 0x300000
  2302                           ;	unspecified, using default values
  2303                           ;	PLL Prescaler Selection bits
  2304                           ;	PLLDIV = 0x0, unprogrammed default
  2305                           ;	System Clock Postscaler Selection bits
  2306                           ;	CPUDIV = 0x0, unprogrammed default
  2307                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2308                           ;	USBDIV = 0x0, unprogrammed default
  2309   300000                     	org	3145728
  2310   300000  00                 	db	0
  2311                           
  2312                           ;Config register CONFIG1H @ 0x300001
  2313                           ;	Oscillator Selection bits
  2314                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2315                           ;	Fail-Safe Clock Monitor Enable bit
  2316                           ;	FCMEN = 0x0, unprogrammed default
  2317                           ;	Internal/External Oscillator Switchover bit
  2318                           ;	IESO = 0x0, unprogrammed default
  2319   300001                     	org	3145729
  2320   300001  09                 	db	9
  2321                           
  2322                           ;Config register CONFIG2L @ 0x300002
  2323                           ;	unspecified, using default values
  2324                           ;	Power-up Timer Enable bit
  2325                           ;	PWRT = 0x1, unprogrammed default
  2326                           ;	Brown-out Reset Enable bits
  2327                           ;	BOR = 0x3, unprogrammed default
  2328                           ;	Brown-out Reset Voltage bits
  2329                           ;	BORV = 0x3, unprogrammed default
  2330                           ;	USB Voltage Regulator Enable bit
  2331                           ;	VREGEN = 0x0, unprogrammed default
  2332   300002                     	org	3145730
  2333   300002  1F                 	db	31
  2334                           
  2335                           ;Config register CONFIG2H @ 0x300003
  2336                           ;	Watchdog Timer Enable bit
  2337                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2338                           ;	Watchdog Timer Postscale Select bits
  2339                           ;	WDTPS = 0xF, unprogrammed default
  2340   300003                     	org	3145731
  2341   300003  1E                 	db	30
  2342                           
  2343                           ; Padding undefined space
  2344   300004                     	org	3145732
  2345   300004  FF                 	db	255
  2346                           
  2347                           ;Config register CONFIG3H @ 0x300005
  2348                           ;	unspecified, using default values
  2349                           ;	CCP2 MUX bit
  2350                           ;	CCP2MX = 0x1, unprogrammed default
  2351                           ;	PORTB A/D Enable bit
  2352                           ;	PBADEN = 0x1, unprogrammed default
  2353                           ;	Low-Power Timer 1 Oscillator Enable bit
  2354                           ;	LPT1OSC = 0x0, unprogrammed default
  2355                           ;	MCLR Pin Enable bit
  2356                           ;	MCLRE = 0x1, unprogrammed default
  2357   300005                     	org	3145733
  2358   300005  83                 	db	131
  2359                           
  2360                           ;Config register CONFIG4L @ 0x300006
  2361                           ;	unspecified, using default values
  2362                           ;	Stack Full/Underflow Reset Enable bit
  2363                           ;	STVREN = 0x1, unprogrammed default
  2364                           ;	Single-Supply ICSP Enable bit
  2365                           ;	LVP = 0x1, unprogrammed default
  2366                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2367                           ;	ICPRT = 0x0, unprogrammed default
  2368                           ;	Extended Instruction Set Enable bit
  2369                           ;	XINST = 0x0, unprogrammed default
  2370                           ;	Background Debugger Enable bit
  2371                           ;	DEBUG = 0x1, unprogrammed default
  2372   300006                     	org	3145734
  2373   300006  85                 	db	133
  2374                           
  2375                           ; Padding undefined space
  2376   300007                     	org	3145735
  2377   300007  FF                 	db	255
  2378                           
  2379                           ;Config register CONFIG5L @ 0x300008
  2380                           ;	unspecified, using default values
  2381                           ;	Code Protection bit
  2382                           ;	CP0 = 0x1, unprogrammed default
  2383                           ;	Code Protection bit
  2384                           ;	CP1 = 0x1, unprogrammed default
  2385                           ;	Code Protection bit
  2386                           ;	CP2 = 0x1, unprogrammed default
  2387                           ;	Code Protection bit
  2388                           ;	CP3 = 0x1, unprogrammed default
  2389   300008                     	org	3145736
  2390   300008  0F                 	db	15
  2391                           
  2392                           ;Config register CONFIG5H @ 0x300009
  2393                           ;	unspecified, using default values
  2394                           ;	Boot Block Code Protection bit
  2395                           ;	CPB = 0x1, unprogrammed default
  2396                           ;	Data EEPROM Code Protection bit
  2397                           ;	CPD = 0x1, unprogrammed default
  2398   300009                     	org	3145737
  2399   300009  C0                 	db	192
  2400                           
  2401                           ;Config register CONFIG6L @ 0x30000A
  2402                           ;	unspecified, using default values
  2403                           ;	Write Protection bit
  2404                           ;	WRT0 = 0x1, unprogrammed default
  2405                           ;	Write Protection bit
  2406                           ;	WRT1 = 0x1, unprogrammed default
  2407                           ;	Write Protection bit
  2408                           ;	WRT2 = 0x1, unprogrammed default
  2409                           ;	Write Protection bit
  2410                           ;	WRT3 = 0x1, unprogrammed default
  2411   30000A                     	org	3145738
  2412   30000A  0F                 	db	15
  2413                           
  2414                           ;Config register CONFIG6H @ 0x30000B
  2415                           ;	unspecified, using default values
  2416                           ;	Configuration Register Write Protection bit
  2417                           ;	WRTC = 0x1, unprogrammed default
  2418                           ;	Boot Block Write Protection bit
  2419                           ;	WRTB = 0x1, unprogrammed default
  2420                           ;	Data EEPROM Write Protection bit
  2421                           ;	WRTD = 0x1, unprogrammed default
  2422   30000B                     	org	3145739
  2423   30000B  E0                 	db	224
  2424                           
  2425                           ;Config register CONFIG7L @ 0x30000C
  2426                           ;	unspecified, using default values
  2427                           ;	Table Read Protection bit
  2428                           ;	EBTR0 = 0x1, unprogrammed default
  2429                           ;	Table Read Protection bit
  2430                           ;	EBTR1 = 0x1, unprogrammed default
  2431                           ;	Table Read Protection bit
  2432                           ;	EBTR2 = 0x1, unprogrammed default
  2433                           ;	Table Read Protection bit
  2434                           ;	EBTR3 = 0x1, unprogrammed default
  2435   30000C                     	org	3145740
  2436   30000C  0F                 	db	15
  2437                           
  2438                           ;Config register CONFIG7H @ 0x30000D
  2439                           ;	unspecified, using default values
  2440                           ;	Boot Block Table Read Protection bit
  2441                           ;	EBTRB = 0x1, unprogrammed default
  2442   30000D                     	org	3145741
  2443   30000D  40                 	db	64
  2444                           tosu	equ	0xFFF
  2445                           tosh	equ	0xFFE
  2446                           tosl	equ	0xFFD
  2447                           stkptr	equ	0xFFC
  2448                           pclatu	equ	0xFFB
  2449                           pclath	equ	0xFFA
  2450                           pcl	equ	0xFF9
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           indf0	equ	0xFEF
  2458                           postinc0	equ	0xFEE
  2459                           postdec0	equ	0xFED
  2460                           preinc0	equ	0xFEC
  2461                           plusw0	equ	0xFEB
  2462                           fsr0h	equ	0xFEA
  2463                           fsr0l	equ	0xFE9
  2464                           wreg	equ	0xFE8
  2465                           indf1	equ	0xFE7
  2466                           postinc1	equ	0xFE6
  2467                           postdec1	equ	0xFE5
  2468                           preinc1	equ	0xFE4
  2469                           plusw1	equ	0xFE3
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           bsr	equ	0xFE0
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           preinc2	equ	0xFDC
  2477                           plusw2	equ	0xFDB
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      2A       1       44.2%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      28        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 16:51:18 2023

                      _i 0009                        _m 0010                        _r 0001  
                     u50 0DA0                       _n1 000D                       _n2 000B  
             EnviaDato@a 0016                       _op 0029      ___wmul@multiplicand 0016  
          ??_LeerTeclado 0014                      l201 0E28            _InicializaLCD 0F74  
                    l172 0DAC                      l181 0DD0                      l191 0DFC  
                    l183 0DD8                      l175 0DB4                      l193 0E04  
                    l185 0DE0                      l177 0DBC                      l197 0E18  
                    l189 0DF4                      l198 0E30                      l199 0E20  
                    l685 0F28                      l695 0F6A                      l961 0E9E  
                    l963 0EB0                      l965 0EBA                      l959 0E8E  
                    l969 0EC4                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u810 1020  
                    u850 0F02                      u930 08DA                      u880 0F4C  
                    u980 0902                      _n1c 0028                      _n2c 0027  
                    wreg 000FE8                     l1125 0DE8                     l1153 0E0C  
                   l1097 0DC4                     l1505 0F1E                     l1521 0F60  
                   l1513 0F40                     l1515 0F48                     l1613 097A  
                   l1703 0C1C                     l1711 0C4A                     l1465 0FF4  
                   l1483 0E58                     l1723 0CA4                     l1651 0A5C  
                   l1539 085A                     l1493 0EF6                     l1741 0D70  
                   l1733 0D24                     l1637 09E0                     l1479 0E44  
                   l1495 0EFE                     l1655 0A68                     l1647 0A0E  
                   l1743 0D7A                     l1737 0D4A                     l1729 0CD8  
                   l1681 0B22                     l1673 0B00                     l1649 0A26  
                   l1745 0D80                     l1593 0924                     l1569 08C2  
                   l1691 0BA6                     l1667 0AEC                     l1659 0A86  
                   l1685 0B34                     l1695 0BBA                     l1687 0B50  
                   STR_1 0812                     STR_2 0801                     u1070 095C  
                   u1320 0C5A                     u1160 09C2                     u1330 0C6C  
                   u1340 0C7E                     u1350 0CB4                     _LATB 000F8A  
                   u1360 0CC6                     u1280 0BB8                     _LATD 000F8C  
                   u1417 084A                     u1370 0CD8                     u1427 0D86  
                   u1437 0E94                     u1447 0EA0                     u1457 0EA8  
                   u1467 0EB2                     u1477 0EBC                     u1487 108C  
                   _RBPU 007F8F           ??_EscribeLCD_c 0017                     _main 081E  
                   fsr1l 000FE1                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           ?_InicializaLCD 0014  
                  ?_main 0014            EscribeLCD_c@a 0017                    _LATE0 007C68  
                  _LATE1 007C69          __end_of___lwdiv 0F32          __end_of___lwmod 0F74  
                  _TRISB 000F93                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 0018                    _Tecla 000F      __end_of_LeerTeclado 0E34  
                  main@i 0025                    tablat 000FF5              _HabilitaLCD 1088  
                  status 000FD8         __end_of_BorraLCD 1088          __initialization 0FB6  
           __end_of_main 0D92                   ??_main 0021            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 0017    __end_of_DireccionaLCD 1074  
             _RetardoLCD 0E8A                   ___lmul 0E34                   ___wmul 1022  
              ??___lwdiv 001E                ??___lwmod 0018          ??_InicializaLCD 0017  
                 clear_0 0FDC                   isa$std 000001     __end_of_EscribeLCD_c 105E  
            _LeerTeclado 0D92             __pdataCOMRAM 0027             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0FE2            ___rparam_used 000001  
         __pcstackCOMRAM 0014        __end_of_EnviaDato 109E                ?_BorraLCD 0014  
            ?_RetardoLCD 0014              RetardoLCD@a 0015                  ?___lmul 0014  
                ?___wmul 0014           ___lmul@product 001C               ??_BorraLCD 0017  
      ??_MensajeLCD_Word 0019             ?_HabilitaLCD 0014                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0EE0                  ___lwmod 0F32  
           __psmallconst 0800                  __pcinit 0FB6                  __ramtop 0800  
                __ptext0 081E                  __ptext1 1022                  __ptext2 0F32  
                __ptext3 0EE0                  __ptext4 0E34                  __ptext5 0FEC  
                __ptext6 1048                  __ptext7 0D92                  __ptext8 0F74  
                __ptext9 1074     end_of_initialization 0FE2            __Lmediumconst 0000  
           _EscribeLCD_c 1048                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 0014           __end_of___lmul 0E8A           __end_of___wmul 1048  
          __pidataCOMRAM 109E    __end_of_InicializaLCD 0FB6                _EnviaDato 1096  
    start_initialization 0FB6             ??_RetardoLCD 0014                 ??___lmul 001C  
               ??___wmul 0018          _MensajeLCD_Word 0FEC               ?_EnviaDato 0014  
            __pbssCOMRAM 0001       __end_of_RetardoLCD 0EE0         MensajeLCD_Word@a 0018  
       MensajeLCD_Word@i 001A            _DireccionaLCD 105E         ___lwdiv@dividend 001A  
               ?___lwdiv 001A                 ?___lwmod 0014              __smallconst 0800  
       ___lwdiv@quotient 001E           ___wmul@product 0018           ?_DireccionaLCD 0014  
__end_of_MensajeLCD_Word 1022        ___wmul@multiplier 0014              ??_EnviaDato 0016  
               _BorraLCD 1074        ___lmul@multiplier 0014                copy_data0 0FCA  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 001C  
        ___lwdiv@counter 0020                 __ptext10 105E                 __ptext11 1096  
               __ptext12 0E8A                 __ptext13 1088          ??_DireccionaLCD 0017  
               _interfaz 002A                 _partdecl 0005                 isa$xinst 000000  
       ?_MensajeLCD_Word 0018            ??_HabilitaLCD 0014         ___lwmod@dividend 0014  
        ___lwmod@divisor 0016          ___lwmod@counter 0018            ?_EscribeLCD_c 0014  
    __end_of_HabilitaLCD 1096  

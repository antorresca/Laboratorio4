

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 16:12:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.40
    43                           ; Generated 04/07/2022 GMT
    44                           ; 
    45                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   0017DC                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _n2c
    83   0017DC  20                 	db	32
    84                           
    85                           ;initializer for _n1c
    86   0017DD  20                 	db	32
    87                           
    88                           ;initializer for _op
    89   0017DE  20                 	db	32
    90                           
    91                           ;initializer for _interfaz
    92   0017DF  08                 	db	8
    93   000000                     _LATC	set	3979
    94   000000                     _TRISC	set	3988
    95   000000                     _LATE2	set	31850
    96   000000                     _RB7	set	31759
    97   000000                     _RB6	set	31758
    98   000000                     _RB5	set	31757
    99   000000                     _PD	set	32386
   100   000000                     _RI	set	32388
   101   000000                     _TMR0ON	set	32431
   102   000000                     _GIE	set	32663
   103   000000                     _TMR0IE	set	32661
   104   000000                     _LATE1	set	31849
   105   000000                     _LATB	set	3978
   106   000000                     _LATD	set	3980
   107   000000                     _RB4	set	31756
   108   000000                     _TRISB	set	3987
   109   000000                     _TRISD	set	3989
   110   000000                     _ADCON1	set	4033
   111   000000                     _LATE0	set	31848
   112   000000                     _OSCCON	set	4051
   113   000000                     _T0CON	set	4053
   114   000000                     _TO	set	32387
   115   000000                     _RBPU	set	32655
   116   000000                     _TRISE	set	3990
   117   000000                     _TMR0IF	set	32658
   118   000000                     _TMR0	set	4054
   119   000000                     _RC6	set	31766
   120                           
   121                           	psect	smallconst
   122   000800                     __psmallconst:
   123                           	callstack 0
   124   000800  00                 	db	0
   125   000801                     STR_3:
   126   000801  20                 	db	32
   127   000802  20                 	db	32
   128   000803  20                 	db	32
   129   000804  20                 	db	32
   130   000805  20                 	db	32
   131   000806  20                 	db	32
   132   000807  20                 	db	32
   133   000808  20                 	db	32
   134   000809  20                 	db	32
   135   00080A  20                 	db	32
   136   00080B  20                 	db	32
   137   00080C  20                 	db	32
   138   00080D  20                 	db	32
   139   00080E  20                 	db	32
   140   00080F  20                 	db	32
   141   000810  20                 	db	32
   142   000811  00                 	db	0
   143   000812                     STR_6:
   144   000812  45                 	db	69	;'E'
   145   000813  6E                 	db	110	;'n'
   146   000814  20                 	db	32
   147   000815  52                 	db	82	;'R'
   148   000816  65                 	db	101	;'e'
   149   000817  73                 	db	115	;'s'
   150   000818  70                 	db	112	;'p'
   151   000819  6F                 	db	111	;'o'
   152   00081A  73                 	db	115	;'s'
   153   00081B  6F                 	db	111	;'o'
   154   00081C  00                 	db	0
   155   00081D                     STR_1:
   156   00081D  45                 	db	69	;'E'
   157   00081E  6E                 	db	110	;'n'
   158   00081F  65                 	db	101	;'e'
   159   000820  72                 	db	114	;'r'
   160   000821  67                 	db	103	;'g'
   161   000822  69                 	db	105	;'i'
   162   000823  61                 	db	97	;'a'
   163   000824  00                 	db	0
   164   000825                     STR_5:
   165   000825  49                 	db	73	;'I'
   166   000826  6E                 	db	110	;'n'
   167   000827  64                 	db	100	;'d'
   168   000828  2E                 	db	46
   169   000829  00                 	db	0
   170   00082A                     STR_4:
   171   00082A  49                 	db	73	;'I'
   172   00082B  6E                 	db	110	;'n'
   173   00082C  66                 	db	102	;'f'
   174   00082D  2E                 	db	46
   175   00082E  00                 	db	0
   176   00082F                     STR_2:
   177   00082F  4D                 	db	77	;'M'
   178   000830  43                 	db	67	;'C'
   179   000831  4C                 	db	76	;'L'
   180   000832  52                 	db	82	;'R'
   181   000833  00                 	db	0
   182   000834  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   0016F6                     __pcinit:
   188                           	callstack 0
   189   0016F6                     start_initialization:
   190                           	callstack 0
   191   0016F6                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (4 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   0016F6  0EDC               	movlw	low __pidataCOMRAM
   197   0016F8  6EF6               	movwf	tblptrl,c
   198   0016FA  0E17               	movlw	high __pidataCOMRAM
   199   0016FC  6EF7               	movwf	tblptrh,c
   200   0016FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001700  6EF8               	movwf	tblptru,c
   202   001702  EE00  F03F         	lfsr	0,__pdataCOMRAM
   203   001706  EE10 F004          	lfsr	1,4
   204   00170A                     copy_data0:
   205   00170A  0009               	tblrd		*+
   206   00170C  CFF5 FFEE          	movff	tablat,postinc0
   207   001710  50E5               	movf	postdec1,w,c
   208   001712  50E1               	movf	fsr1l,w,c
   209   001714  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to COMRAM (26 bytes)
   212   001716  EE00  F025         	lfsr	0,__pbssCOMRAM
   213   00171A  0E1A               	movlw	26
   214   00171C                     clear_0:
   215   00171C  6AEE               	clrf	postinc0,c
   216   00171E  06E8               	decf	wreg,f,c
   217   001720  E1FD               	bnz	clear_0
   218   001722                     end_of_initialization:
   219                           	callstack 0
   220   001722                     __end_of__initialization:
   221                           	callstack 0
   222   001722  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223   001724  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224   001726  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225   001728  6EF8               	movwf	tblptru,c
   226   00172A  0100               	movlb	0
   227   00172C  EF1B  F004         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMRAM
   230   000025                     __pbssCOMRAM:
   231                           	callstack 0
   232   000025                     _r:
   233                           	callstack 0
   234   000025                     	ds	4
   235   000029                     _partdecl:
   236                           	callstack 0
   237   000029                     	ds	4
   238   00002D                     _verificador:
   239                           	callstack 0
   240   00002D                     	ds	2
   241   00002F                     _contador:
   242                           	callstack 0
   243   00002F                     	ds	2
   244   000031                     _color:
   245                           	callstack 0
   246   000031                     	ds	2
   247   000033                     _i:
   248                           	callstack 0
   249   000033                     	ds	2
   250   000035                     _n2:
   251                           	callstack 0
   252   000035                     	ds	2
   253   000037                     _n1:
   254                           	callstack 0
   255   000037                     	ds	2
   256   000039                     _flag:
   257                           	callstack 0
   258   000039                     	ds	1
   259   00003A                     _Tecla:
   260                           	callstack 0
   261   00003A                     	ds	1
   262   00003B                     _m:
   263                           	callstack 0
   264   00003B                     	ds	4
   265                           
   266                           	psect	dataCOMRAM
   267   00003F                     __pdataCOMRAM:
   268                           	callstack 0
   269   00003F                     _n2c:
   270                           	callstack 0
   271   00003F                     	ds	1
   272   000040                     _n1c:
   273                           	callstack 0
   274   000040                     	ds	1
   275   000041                     _op:
   276                           	callstack 0
   277   000041                     	ds	1
   278   000042                     _interfaz:
   279                           	callstack 0
   280   000042                     	ds	1
   281                           
   282                           	psect	cstackCOMRAM
   283   000001                     __pcstackCOMRAM:
   284                           	callstack 0
   285   000001                     ??i2_RetardoLCD:
   286                           
   287                           ; 1 bytes @ 0x0
   288   000001                     	ds	1
   289   000002                     i2RetardoLCD@a:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293   000002                     	ds	1
   294   000003                     ??i2_EnviaDato:
   295                           
   296                           ; 1 bytes @ 0x2
   297   000003                     	ds	1
   298   000004                     i2EnviaDato@a:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x3
   302   000004                     	ds	1
   303   000005                     i2EscribeLCD_c@a:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x4
   307   000005                     	ds	1
   308   000006                     i2MensajeLCD_Word@a:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x5
   312   000006                     	ds	1
   313   000007                     ??i2_MensajeLCD_Word:
   314                           
   315                           ; 1 bytes @ 0x6
   316   000007                     	ds	1
   317   000008                     i2MensajeLCD_Word@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x7
   321   000008                     	ds	2
   322   00000A                     ??_ISR:
   323                           
   324                           ; 1 bytes @ 0x9
   325   00000A                     	ds	4
   326   00000E                     ??_RetardoLCD:
   327   00000E                     ??_LeerTeclado:
   328   00000E                     ??_ColorRGB:
   329   00000E                     ?___wmul:
   330                           	callstack 0
   331   00000E                     ?___lwmod:
   332                           	callstack 0
   333   00000E                     ?___lmul:
   334                           	callstack 0
   335   00000E                     ?___lldiv:
   336                           	callstack 0
   337   00000E                     ?___llmod:
   338                           	callstack 0
   339   00000E                     ___wmul@multiplier:
   340                           	callstack 0
   341   00000E                     ___lwmod@dividend:
   342                           	callstack 0
   343   00000E                     ___lmul@multiplier:
   344                           	callstack 0
   345   00000E                     ___lldiv@dividend:
   346                           	callstack 0
   347   00000E                     ___llmod@dividend:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0xD
   351   00000E                     	ds	1
   352   00000F                     RetardoLCD@a:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xE
   356   00000F                     	ds	1
   357   000010                     ??_EnviaDato:
   358   000010                     ___wmul@multiplicand:
   359                           	callstack 0
   360   000010                     ___lwmod@divisor:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xF
   364   000010                     	ds	1
   365   000011                     EnviaDato@a:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x10
   369   000011                     	ds	1
   370   000012                     EscribeLCD_c@a:
   371                           	callstack 0
   372   000012                     DireccionaLCD@a:
   373                           	callstack 0
   374   000012                     ___lwmod@counter:
   375                           	callstack 0
   376   000012                     ___wmul@product:
   377                           	callstack 0
   378   000012                     ___lmul@multiplicand:
   379                           	callstack 0
   380   000012                     ___lldiv@divisor:
   381                           	callstack 0
   382   000012                     ___llmod@divisor:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x11
   386   000012                     	ds	1
   387   000013                     MensajeLCD_Word@a:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x12
   391   000013                     	ds	1
   392   000014                     ??_MensajeLCD_Word:
   393   000014                     ?___lwdiv:
   394                           	callstack 0
   395   000014                     ___lwdiv@dividend:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x13
   399   000014                     	ds	1
   400   000015                     MensajeLCD_Word@i:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x14
   404   000015                     	ds	1
   405   000016                     ___llmod@counter:
   406                           	callstack 0
   407   000016                     ___lwdiv@divisor:
   408                           	callstack 0
   409   000016                     ___lmul@product:
   410                           	callstack 0
   411   000016                     ___lldiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x15
   415   000016                     	ds	2
   416   000018                     ___lwdiv@quotient:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x17
   420   000018                     	ds	2
   421   00001A                     ___lldiv@counter:
   422                           	callstack 0
   423   00001A                     ___lwdiv@counter:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x19
   427   00001A                     	ds	1
   428   00001B                     ??_main:
   429                           
   430                           ; 1 bytes @ 0x1A
   431   00001B                     	ds	4
   432   00001F                     main@k:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x1E
   436   00001F                     	ds	2
   437   000021                     main@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x20
   441   000021                     	ds	2
   442   000023                     main@j:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x22
   446   000023                     	ds	2
   447                           
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 29 in file "Laboratorio4.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  k               2   30[COMRAM] int 
   458 ;;  j               2   34[COMRAM] int 
   459 ;;  i               2   32[COMRAM] int 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         6       0       0       0       0       0       0       0       0
   471 ;;      Temps:          4       0       0       0       0       0       0       0       0
   472 ;;      Totals:        10       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:       10 bytes
   474 ;; Hardware stack levels required when called: 9
   475 ;; This function calls:
   476 ;;		_BorraLCD
   477 ;;		_ColorRGB
   478 ;;		_DireccionaLCD
   479 ;;		_EscribeLCD_c
   480 ;;		_InicializaLCD
   481 ;;		_LeerTeclado
   482 ;;		_MensajeLCD_Word
   483 ;;		___lldiv
   484 ;;		___llmod
   485 ;;		___lmul
   486 ;;		___lwdiv
   487 ;;		___lwmod
   488 ;;		___wmul
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495   000836                     __ptext0:
   496                           	callstack 0
   497   000836                     _main:
   498                           	callstack 22
   499                           
   500                           ;Laboratorio4.c: 30: ADCON1=15;
   501                           
   502                           ;incstack = 0
   503   000836  0E0F               	movlw	15
   504   000838  6EC1               	movwf	193,c	;volatile
   505                           
   506                           ;Laboratorio4.c: 31: TRISD=0;
   507   00083A  0E00               	movlw	0
   508   00083C  6E95               	movwf	149,c	;volatile
   509                           
   510                           ;Laboratorio4.c: 32: TRISB=0b11110000;
   511   00083E  0EF0               	movlw	240
   512   000840  6E93               	movwf	147,c	;volatile
   513                           
   514                           ;Laboratorio4.c: 33: TRISE=0;
   515   000842  0E00               	movlw	0
   516   000844  6E96               	movwf	150,c	;volatile
   517                           
   518                           ;Laboratorio4.c: 34: TRISC=0b11110000;
   519   000846  0EF0               	movlw	240
   520   000848  6E94               	movwf	148,c	;volatile
   521                           
   522                           ;Laboratorio4.c: 35: RBPU=0;
   523   00084A  9EF1               	bcf	4081,7,c	;volatile
   524                           
   525                           ;Laboratorio4.c: 36: InicializaLCD();
   526   00084C  ECDE  F008         	call	_InicializaLCD	;wreg free
   527                           
   528                           ;Laboratorio4.c: 38: T0CON=0b10000010;
   529   000850  0E82               	movlw	130
   530   000852  6ED5               	movwf	213,c	;volatile
   531                           
   532                           ;Laboratorio4.c: 39: TMR0IF=0;
   533   000854  94F2               	bcf	4082,2,c	;volatile
   534                           
   535                           ;Laboratorio4.c: 40: TMR0=49911;
   536   000856  0EC2               	movlw	194
   537   000858  6ED7               	movwf	215,c	;volatile
   538   00085A  0EF7               	movlw	247
   539   00085C  6ED6               	movwf	214,c	;volatile
   540                           
   541                           ;Laboratorio4.c: 41: TMR0IE=1;
   542   00085E  8AF2               	bsf	4082,5,c	;volatile
   543                           
   544                           ;Laboratorio4.c: 42: GIE=1;
   545   000860  8EF2               	bsf	4082,7,c	;volatile
   546                           
   547                           ;Laboratorio4.c: 43: TMR0ON=1;
   548   000862  8ED5               	bsf	4053,7,c	;volatile
   549                           
   550                           ;Laboratorio4.c: 46: OSCCON = 0b11000100;
   551   000864  0EC4               	movlw	196
   552   000866  6ED3               	movwf	211,c	;volatile
   553                           
   554                           ;Laboratorio4.c: 48: BorraLCD();
   555   000868  ECCC  F00B         	call	_BorraLCD	;wreg free
   556                           
   557                           ;Laboratorio4.c: 49: if(TO == 1 & RI == 1){
   558   00086C  0E01               	movlw	1
   559   00086E  A6D0               	btfss	4048,3,c	;volatile
   560   000870  0E00               	movlw	0
   561   000872  A8D0               	btfss	4048,4,c	;volatile
   562   000874  0E00               	movlw	0
   563   000876  A0E8               	btfss	wreg,0,c
   564   000878  D008               	goto	l2073
   565                           
   566                           ;Laboratorio4.c: 50: BorraLCD();
   567   00087A  ECCC  F00B         	call	_BorraLCD	;wreg free
   568                           
   569                           ;Laboratorio4.c: 51: RI = 0;
   570   00087E  98D0               	bcf	4048,4,c	;volatile
   571                           
   572                           ;Laboratorio4.c: 52: MensajeLCD_Word("Energia");
   573   000880  0E1D               	movlw	low STR_1
   574   000882  6E13               	movwf	MensajeLCD_Word@a^0,c
   575   000884  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   576                           
   577                           ;Laboratorio4.c: 53: }else{
   578   000888  D014               	goto	l2079
   579   00088A                     l2073:
   580                           
   581                           ;Laboratorio4.c: 54: if(TO == 1 | PD == 0 ){
   582   00088A  A6D0               	btfss	4048,3,c	;volatile
   583   00088C  D002               	goto	u1610
   584   00088E  0E01               	movlw	1
   585   000890  D001               	goto	u1612
   586   000892                     u1610:
   587   000892  0E00               	movlw	0
   588   000894                     u1612:
   589   000894  6E1B               	movwf	??_main^0,c
   590   000896  B4D0               	btfsc	4048,2,c	;volatile
   591   000898  D002               	goto	u1620
   592   00089A  0E01               	movlw	1
   593   00089C  D001               	goto	u1622
   594   00089E                     u1620:
   595   00089E  0E00               	movlw	0
   596   0008A0                     u1622:
   597   0008A0  101B               	iorwf	??_main^0,w,c
   598   0008A2  A0E8               	btfss	wreg,0,c
   599   0008A4  D006               	goto	l2079
   600                           
   601                           ;Laboratorio4.c: 55: BorraLCD();
   602   0008A6  ECCC  F00B         	call	_BorraLCD	;wreg free
   603                           
   604                           ;Laboratorio4.c: 56: MensajeLCD_Word("MCLR");
   605   0008AA  0E2F               	movlw	low STR_2
   606   0008AC  6E13               	movwf	MensajeLCD_Word@a^0,c
   607   0008AE  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   608   0008B2                     l2079:
   609                           
   610                           ;Laboratorio4.c: 57: };Laboratorio4.c: 58: };Laboratorio4.c: 59: _delay((unsigned long)(
      +                          (2000)*(1000000/4000.0)));
   611   0008B2  0E03               	movlw	3
   612   0008B4  6E1C               	movwf	(??_main+1)^0,c
   613   0008B6  0E8A               	movlw	138
   614   0008B8  6E1B               	movwf	??_main^0,c
   615   0008BA  0E56               	movlw	86
   616   0008BC                     u2427:
   617   0008BC  2EE8               	decfsz	wreg,f,c
   618   0008BE  D7FE               	bra	u2427
   619   0008C0  2E1B               	decfsz	??_main^0,f,c
   620   0008C2  D7FC               	bra	u2427
   621   0008C4  2E1C               	decfsz	(??_main+1)^0,f,c
   622   0008C6  D7FA               	bra	u2427
   623                           
   624                           ;Laboratorio4.c: 60: BorraLCD();
   625   0008C8  ECCC  F00B         	call	_BorraLCD	;wreg free
   626   0008CC                     l2083:
   627                           
   628                           ;Laboratorio4.c: 62: LATB=0B00000000;
   629   0008CC  0E00               	movlw	0
   630   0008CE  6E8A               	movwf	138,c	;volatile
   631                           
   632                           ;Laboratorio4.c: 63: verificador = 0;
   633   0008D0  0E00               	movlw	0
   634   0008D2  6E2E               	movwf	(_verificador+1)^0,c
   635   0008D4  0E00               	movlw	0
   636   0008D6  6E2D               	movwf	_verificador^0,c
   637                           
   638                           ;Laboratorio4.c: 64: Tecla = LeerTeclado();
   639   0008D8  EC51  F008         	call	_LeerTeclado	;wreg free
   640   0008DC  6E3A               	movwf	_Tecla^0,c
   641                           
   642                           ;Laboratorio4.c: 65: ColorRGB();
   643   0008DE  ECAC  F009         	call	_ColorRGB	;wreg free
   644                           
   645                           ;Laboratorio4.c: 66: if(Tecla=='C'){
   646   0008E2  0E43               	movlw	67
   647   0008E4  183A               	xorwf	_Tecla^0,w,c
   648   0008E6  A4D8               	btfss	status,2,c
   649   0008E8  D02D               	goto	l2117
   650                           
   651                           ;Laboratorio4.c: 67: DireccionaLCD(0xC0);
   652   0008EA  0EC0               	movlw	192
   653   0008EC  ECB6  F00B         	call	_DireccionaLCD
   654                           
   655                           ;Laboratorio4.c: 69: op = ' ';
   656   0008F0  0E20               	movlw	32
   657   0008F2  6E41               	movwf	_op^0,c
   658                           
   659                           ;Laboratorio4.c: 70: n1c = ' ';
   660   0008F4  0E20               	movlw	32
   661   0008F6  6E40               	movwf	_n1c^0,c
   662                           
   663                           ;Laboratorio4.c: 71: n2c = ' ';
   664   0008F8  0E20               	movlw	32
   665   0008FA  6E3F               	movwf	_n2c^0,c
   666                           
   667                           ;Laboratorio4.c: 72: n1 = 0;
   668   0008FC  0E00               	movlw	0
   669   0008FE  6E38               	movwf	(_n1+1)^0,c
   670   000900  0E00               	movlw	0
   671   000902  6E37               	movwf	_n1^0,c
   672                           
   673                           ;Laboratorio4.c: 73: n2 = 0;
   674   000904  0E00               	movlw	0
   675   000906  6E36               	movwf	(_n2+1)^0,c
   676   000908  0E00               	movlw	0
   677   00090A  6E35               	movwf	_n2^0,c
   678                           
   679                           ;Laboratorio4.c: 74: i = 0;
   680   00090C  0E00               	movlw	0
   681   00090E  6E34               	movwf	(_i+1)^0,c
   682   000910  0E00               	movlw	0
   683   000912  6E33               	movwf	_i^0,c
   684                           
   685                           ;Laboratorio4.c: 75: partdecl = 0;
   686   000914  0E00               	movlw	0
   687   000916  6E29               	movwf	_partdecl^0,c
   688   000918  0E00               	movlw	0
   689   00091A  6E2A               	movwf	(_partdecl+1)^0,c
   690   00091C  0E00               	movlw	0
   691   00091E  6E2B               	movwf	(_partdecl+2)^0,c
   692   000920  0E00               	movlw	0
   693   000922  6E2C               	movwf	(_partdecl+3)^0,c
   694                           
   695                           ;Laboratorio4.c: 76: flag = 0;
   696   000924  0E00               	movlw	0
   697   000926  6E39               	movwf	_flag^0,c
   698                           
   699                           ;Laboratorio4.c: 77: DireccionaLCD(0x80);
   700   000928  0E80               	movlw	128
   701   00092A  ECB6  F00B         	call	_DireccionaLCD
   702                           
   703                           ;Laboratorio4.c: 78: MensajeLCD_Word("                ");
   704   00092E  0E01               	movlw	low STR_3
   705   000930  6E13               	movwf	MensajeLCD_Word@a^0,c
   706   000932  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
   707                           
   708                           ;Laboratorio4.c: 79: DireccionaLCD(0xC0);
   709   000936  0EC0               	movlw	192
   710   000938  ECB6  F00B         	call	_DireccionaLCD
   711                           
   712                           ;Laboratorio4.c: 80: DireccionaLCD(0x80);
   713   00093C  0E80               	movlw	128
   714   00093E  ECB6  F00B         	call	_DireccionaLCD
   715                           
   716                           ;Laboratorio4.c: 81: }else{
   717   000942  D7C4               	goto	l2083
   718   000944                     l2117:
   719                           
   720                           ;Laboratorio4.c: 82: if(n1c==' '|n2c==' '|op==' '){
   721   000944  0E20               	movlw	32
   722   000946  1840               	xorwf	_n1c^0,w,c
   723   000948  B4D8               	btfsc	status,2,c
   724   00094A  D008               	goto	u1670
   725   00094C  0E20               	movlw	32
   726   00094E  183F               	xorwf	_n2c^0,w,c
   727   000950  B4D8               	btfsc	status,2,c
   728   000952  D004               	goto	u1670
   729   000954  0E20               	movlw	32
   730   000956  1841               	xorwf	_op^0,w,c
   731   000958  A4D8               	btfss	status,2,c
   732   00095A  D0AD               	goto	l2207
   733   00095C                     u1670:
   734                           
   735                           ;Laboratorio4.c: 83: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla!='=
      +                          ') & n1c != ' ' & n2c ==' '){
   736   00095C  0E20               	movlw	32
   737   00095E  1841               	xorwf	_op^0,w,c
   738   000960  A4D8               	btfss	status,2,c
   739   000962  D02B               	goto	l2147
   740   000964  0E2B               	movlw	43
   741   000966  183A               	xorwf	_Tecla^0,w,c
   742   000968  B4D8               	btfsc	status,2,c
   743   00096A  D010               	goto	u1730
   744   00096C  0E2D               	movlw	45
   745   00096E  183A               	xorwf	_Tecla^0,w,c
   746   000970  B4D8               	btfsc	status,2,c
   747   000972  D00C               	goto	u1730
   748   000974  0E2F               	movlw	47
   749   000976  183A               	xorwf	_Tecla^0,w,c
   750   000978  B4D8               	btfsc	status,2,c
   751   00097A  D008               	goto	u1730
   752   00097C  0E78               	movlw	120
   753   00097E  183A               	xorwf	_Tecla^0,w,c
   754   000980  B4D8               	btfsc	status,2,c
   755   000982  D004               	goto	u1730
   756   000984  0E3D               	movlw	61
   757   000986  183A               	xorwf	_Tecla^0,w,c
   758   000988  B4D8               	btfsc	status,2,c
   759   00098A  D017               	goto	l2147
   760   00098C                     u1730:
   761   00098C  0E20               	movlw	32
   762   00098E  1840               	xorwf	_n1c^0,w,c
   763   000990  B4D8               	btfsc	status,2,c
   764   000992  D013               	goto	l2147
   765   000994  0E20               	movlw	32
   766   000996  183F               	xorwf	_n2c^0,w,c
   767   000998  A4D8               	btfss	status,2,c
   768   00099A  D00F               	goto	l2147
   769                           
   770                           ;Laboratorio4.c: 84: DireccionaLCD(0x81);
   771   00099C  0E81               	movlw	129
   772   00099E  ECB6  F00B         	call	_DireccionaLCD
   773                           
   774                           ;Laboratorio4.c: 85: EscribeLCD_c(Tecla);
   775   0009A2  503A               	movf	_Tecla^0,w,c
   776   0009A4  ECAB  F00B         	call	_EscribeLCD_c
   777                           
   778                           ;Laboratorio4.c: 86: op = Tecla;
   779   0009A8  C03A  F041         	movff	_Tecla,_op
   780                           
   781                           ;Laboratorio4.c: 87: if(Tecla=='!') n2c = 'A';
   782   0009AC  0E21               	movlw	33
   783   0009AE  183A               	xorwf	_Tecla^0,w,c
   784   0009B0  A4D8               	btfss	status,2,c
   785   0009B2  D36E               	goto	l2387
   786   0009B4  0E41               	movlw	65
   787   0009B6  6E3F               	movwf	_n2c^0,c
   788   0009B8  D36B               	goto	l2387
   789   0009BA                     l2147:
   790   0009BA  0E20               	movlw	32
   791   0009BC  1840               	xorwf	_n1c^0,w,c
   792   0009BE  A4D8               	btfss	status,2,c
   793   0009C0  D037               	goto	l2175
   794   0009C2  0E2B               	movlw	43
   795   0009C4  183A               	xorwf	_Tecla^0,w,c
   796   0009C6  A4D8               	btfss	status,2,c
   797   0009C8  D020               	goto	u1860
   798   0009CA  0E2D               	movlw	45
   799   0009CC  183A               	xorwf	_Tecla^0,w,c
   800   0009CE  A4D8               	btfss	status,2,c
   801   0009D0  D01C               	goto	u1860
   802   0009D2  0E2F               	movlw	47
   803   0009D4  183A               	xorwf	_Tecla^0,w,c
   804   0009D6  A4D8               	btfss	status,2,c
   805   0009D8  D018               	goto	u1860
   806   0009DA  0E78               	movlw	120
   807   0009DC  183A               	xorwf	_Tecla^0,w,c
   808   0009DE  A4D8               	btfss	status,2,c
   809   0009E0  D014               	goto	u1860
   810   0009E2  0E3D               	movlw	61
   811   0009E4  183A               	xorwf	_Tecla^0,w,c
   812   0009E6  A4D8               	btfss	status,2,c
   813   0009E8  D010               	goto	u1860
   814   0009EA  0E43               	movlw	67
   815   0009EC  183A               	xorwf	_Tecla^0,w,c
   816   0009EE  A4D8               	btfss	status,2,c
   817   0009F0  D00C               	goto	u1860
   818   0009F2  0E21               	movlw	33
   819   0009F4  183A               	xorwf	_Tecla^0,w,c
   820   0009F6  A4D8               	btfss	status,2,c
   821   0009F8  D008               	goto	u1860
   822   0009FA  0E5E               	movlw	94
   823   0009FC  183A               	xorwf	_Tecla^0,w,c
   824   0009FE  A4D8               	btfss	status,2,c
   825   000A00  D004               	goto	u1860
   826   000A02  0E3D               	movlw	61
   827   000A04  183A               	xorwf	_Tecla^0,w,c
   828   000A06  B4D8               	btfsc	status,2,c
   829   000A08  D013               	goto	l2175
   830   000A0A                     u1860:
   831   000A0A  0E20               	movlw	32
   832   000A0C  1841               	xorwf	_op^0,w,c
   833   000A0E  A4D8               	btfss	status,2,c
   834   000A10  D00F               	goto	l2175
   835                           
   836                           ;Laboratorio4.c: 89: DireccionaLCD(0x80);
   837   000A12  0E80               	movlw	128
   838   000A14  ECB6  F00B         	call	_DireccionaLCD
   839                           
   840                           ;Laboratorio4.c: 90: EscribeLCD_c(Tecla);
   841   000A18  503A               	movf	_Tecla^0,w,c
   842   000A1A  ECAB  F00B         	call	_EscribeLCD_c
   843                           
   844                           ;Laboratorio4.c: 91: n1c=Tecla;
   845   000A1E  C03A  F040         	movff	_Tecla,_n1c
   846                           
   847                           ;Laboratorio4.c: 92: n1 = Tecla-'0';
   848   000A22  0ED0               	movlw	208
   849   000A24  243A               	addwf	_Tecla^0,w,c
   850   000A26  6E37               	movwf	_n1^0,c
   851   000A28  6A38               	clrf	(_n1+1)^0,c
   852   000A2A  0EFF               	movlw	255
   853   000A2C  2238               	addwfc	(_n1+1)^0,f,c
   854                           
   855                           ;Laboratorio4.c: 93: }else if(n2c==' ' & op!=' ' & op!='!' & n1c != ' ' & (Tecla!='+'|Te
      +                          cla!='-'|Tecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='!'|Tecla!='^'|Tecla!='=')){
   856   000A2E  D330               	goto	l2387
   857   000A30                     l2175:
   858   000A30  0E20               	movlw	32
   859   000A32  183F               	xorwf	_n2c^0,w,c
   860   000A34  A4D8               	btfss	status,2,c
   861   000A36  D32C               	goto	l2387
   862   000A38  0E20               	movlw	32
   863   000A3A  1841               	xorwf	_op^0,w,c
   864   000A3C  B4D8               	btfsc	status,2,c
   865   000A3E  D328               	goto	l2387
   866   000A40  0E21               	movlw	33
   867   000A42  1841               	xorwf	_op^0,w,c
   868   000A44  B4D8               	btfsc	status,2,c
   869   000A46  D324               	goto	l2387
   870   000A48  0E20               	movlw	32
   871   000A4A  1840               	xorwf	_n1c^0,w,c
   872   000A4C  B4D8               	btfsc	status,2,c
   873   000A4E  D320               	goto	l2387
   874   000A50  0E2B               	movlw	43
   875   000A52  183A               	xorwf	_Tecla^0,w,c
   876   000A54  A4D8               	btfss	status,2,c
   877   000A56  D020               	goto	u2000
   878   000A58  0E2D               	movlw	45
   879   000A5A  183A               	xorwf	_Tecla^0,w,c
   880   000A5C  A4D8               	btfss	status,2,c
   881   000A5E  D01C               	goto	u2000
   882   000A60  0E2F               	movlw	47
   883   000A62  183A               	xorwf	_Tecla^0,w,c
   884   000A64  A4D8               	btfss	status,2,c
   885   000A66  D018               	goto	u2000
   886   000A68  0E78               	movlw	120
   887   000A6A  183A               	xorwf	_Tecla^0,w,c
   888   000A6C  A4D8               	btfss	status,2,c
   889   000A6E  D014               	goto	u2000
   890   000A70  0E3D               	movlw	61
   891   000A72  183A               	xorwf	_Tecla^0,w,c
   892   000A74  A4D8               	btfss	status,2,c
   893   000A76  D010               	goto	u2000
   894   000A78  0E43               	movlw	67
   895   000A7A  183A               	xorwf	_Tecla^0,w,c
   896   000A7C  A4D8               	btfss	status,2,c
   897   000A7E  D00C               	goto	u2000
   898   000A80  0E21               	movlw	33
   899   000A82  183A               	xorwf	_Tecla^0,w,c
   900   000A84  A4D8               	btfss	status,2,c
   901   000A86  D008               	goto	u2000
   902   000A88  0E5E               	movlw	94
   903   000A8A  183A               	xorwf	_Tecla^0,w,c
   904   000A8C  A4D8               	btfss	status,2,c
   905   000A8E  D004               	goto	u2000
   906   000A90  0E3D               	movlw	61
   907   000A92  183A               	xorwf	_Tecla^0,w,c
   908   000A94  B4D8               	btfsc	status,2,c
   909   000A96  D2FC               	goto	l2387
   910   000A98                     u2000:
   911                           
   912                           ;Laboratorio4.c: 94: DireccionaLCD(0x82);
   913   000A98  0E82               	movlw	130
   914   000A9A  ECB6  F00B         	call	_DireccionaLCD
   915                           
   916                           ;Laboratorio4.c: 95: EscribeLCD_c(Tecla);
   917   000A9E  503A               	movf	_Tecla^0,w,c
   918   000AA0  ECAB  F00B         	call	_EscribeLCD_c
   919                           
   920                           ;Laboratorio4.c: 96: n2c=Tecla;
   921   000AA4  C03A  F03F         	movff	_Tecla,_n2c
   922                           
   923                           ;Laboratorio4.c: 97: n2 = Tecla-'0';
   924   000AA8  0ED0               	movlw	208
   925   000AAA  243A               	addwf	_Tecla^0,w,c
   926   000AAC  6E35               	movwf	_n2^0,c
   927   000AAE  6A36               	clrf	(_n2+1)^0,c
   928   000AB0  0EFF               	movlw	255
   929   000AB2  2236               	addwfc	(_n2+1)^0,f,c
   930                           
   931                           ;Laboratorio4.c: 98: };Laboratorio4.c: 99: }else if(Tecla=='=' & n1c != ' ' & op!=' ' & 
      +                          n2c!=' '){
   932   000AB4  D2ED               	goto	l2387
   933   000AB6                     l2207:
   934   000AB6  0E3D               	movlw	61
   935   000AB8  183A               	xorwf	_Tecla^0,w,c
   936   000ABA  A4D8               	btfss	status,2,c
   937   000ABC  D2E6               	goto	l2385
   938   000ABE  0E20               	movlw	32
   939   000AC0  1840               	xorwf	_n1c^0,w,c
   940   000AC2  B4D8               	btfsc	status,2,c
   941   000AC4  D2E2               	goto	l2385
   942   000AC6  0E20               	movlw	32
   943   000AC8  1841               	xorwf	_op^0,w,c
   944   000ACA  B4D8               	btfsc	status,2,c
   945   000ACC  D2DE               	goto	l2385
   946   000ACE  0E20               	movlw	32
   947   000AD0  183F               	xorwf	_n2c^0,w,c
   948   000AD2  B4D8               	btfsc	status,2,c
   949   000AD4  D2DA               	goto	l2385
   950                           
   951                           ;Laboratorio4.c: 100: if(op=='!') DireccionaLCD(0x82);
   952   000AD6  0E21               	movlw	33
   953   000AD8  1841               	xorwf	_op^0,w,c
   954   000ADA  A4D8               	btfss	status,2,c
   955   000ADC  D004               	goto	l2219
   956   000ADE  0E82               	movlw	130
   957   000AE0  ECB6  F00B         	call	_DireccionaLCD
   958   000AE4  D003               	goto	l175
   959   000AE6                     l2219:
   960                           
   961                           ;Laboratorio4.c: 101: else DireccionaLCD(0x83);
   962   000AE6  0E83               	movlw	131
   963   000AE8  ECB6  F00B         	call	_DireccionaLCD
   964   000AEC                     l175:
   965                           
   966                           ;Laboratorio4.c: 102: EscribeLCD_c('=');
   967   000AEC  0E3D               	movlw	61
   968   000AEE  ECAB  F00B         	call	_EscribeLCD_c
   969                           
   970                           ;Laboratorio4.c: 103: switch(op){
   971   000AF2  D0EF               	goto	l2281
   972   000AF4                     l2221:
   973                           
   974                           ;Laboratorio4.c: 105: r = n1 + n2;
   975   000AF4  5035               	movf	_n2^0,w,c
   976   000AF6  2437               	addwf	_n1^0,w,c
   977   000AF8  6E1B               	movwf	??_main^0,c
   978   000AFA  5036               	movf	(_n2+1)^0,w,c
   979   000AFC  2038               	addwfc	(_n1+1)^0,w,c
   980   000AFE  6E1C               	movwf	(??_main+1)^0,c
   981   000B00  C01B  F025         	movff	??_main,_r
   982   000B04  C01C  F026         	movff	??_main+1,_r+1
   983   000B08  6A27               	clrf	(_r+2)^0,c
   984   000B0A  6A28               	clrf	(_r+3)^0,c
   985   000B0C                     l2223:
   986                           
   987                           ;Laboratorio4.c: 106: partdecl = r*100;
   988   000B0C  C025  F00E         	movff	_r,___lmul@multiplier
   989   000B10  C026  F00F         	movff	_r+1,___lmul@multiplier+1
   990   000B14  C027  F010         	movff	_r+2,___lmul@multiplier+2
   991   000B18  C028  F011         	movff	_r+3,___lmul@multiplier+3
   992   000B1C  0E64               	movlw	100
   993   000B1E  6E12               	movwf	___lmul@multiplicand^0,c
   994   000B20  0E00               	movlw	0
   995   000B22  6E13               	movwf	(___lmul@multiplicand+1)^0,c
   996   000B24  0E00               	movlw	0
   997   000B26  6E14               	movwf	(___lmul@multiplicand+2)^0,c
   998   000B28  0E00               	movlw	0
   999   000B2A  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1000   000B2C  EC1C  F00A         	call	___lmul	;wreg free
  1001   000B30  C00E  F029         	movff	?___lmul,_partdecl
  1002   000B34  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1003   000B38  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1004   000B3C  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1005                           
  1006                           ;Laboratorio4.c: 107: break;
  1007   000B40  D0DC               	goto	l2283
  1008   000B42                     l2225:
  1009                           
  1010                           ;Laboratorio4.c: 109: r = n1 - n2;
  1011   000B42  5035               	movf	_n2^0,w,c
  1012   000B44  5C37               	subwf	_n1^0,w,c
  1013   000B46  6E1B               	movwf	??_main^0,c
  1014   000B48  5036               	movf	(_n2+1)^0,w,c
  1015   000B4A  5838               	subwfb	(_n1+1)^0,w,c
  1016   000B4C  D7D8               	goto	L1
  1017   000B4E                     l2229:
  1018                           
  1019                           ;Laboratorio4.c: 113: r = n1*n2;
  1020   000B4E  C037  F00E         	movff	_n1,___wmul@multiplier
  1021   000B52  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1022   000B56  C035  F010         	movff	_n2,___wmul@multiplicand
  1023   000B5A  C036  F011         	movff	_n2+1,___wmul@multiplicand+1
  1024   000B5E  EC98  F00B         	call	___wmul	;wreg free
  1025   000B62  C00E  F025         	movff	?___wmul,_r
  1026   000B66  C00F  F026         	movff	?___wmul+1,_r+1
  1027   000B6A  D7CE               	goto	L2
  1028   000B6C                     l2233:
  1029                           
  1030                           ;Laboratorio4.c: 117: if(n2!=0){
  1031   000B6C  5035               	movf	_n2^0,w,c
  1032   000B6E  1036               	iorwf	(_n2+1)^0,w,c
  1033   000B70  B4D8               	btfsc	status,2,c
  1034   000B72  D02F               	goto	l2241
  1035                           
  1036                           ;Laboratorio4.c: 118: if(n1!=0){
  1037   000B74  5037               	movf	_n1^0,w,c
  1038   000B76  1038               	iorwf	(_n1+1)^0,w,c
  1039   000B78  B4D8               	btfsc	status,2,c
  1040   000B7A  D0BF               	goto	l2283
  1041                           
  1042                           ;Laboratorio4.c: 119: r = n1/n2;
  1043   000B7C  C037  F014         	movff	_n1,___lwdiv@dividend
  1044   000B80  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1045   000B84  C035  F016         	movff	_n2,___lwdiv@divisor
  1046   000B88  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1047   000B8C  EC9D  F00A         	call	___lwdiv	;wreg free
  1048   000B90  C014  F025         	movff	?___lwdiv,_r
  1049   000B94  C015  F026         	movff	?___lwdiv+1,_r+1
  1050   000B98  6A27               	clrf	(_r+2)^0,c
  1051   000B9A  6A28               	clrf	(_r+3)^0,c
  1052                           
  1053                           ;Laboratorio4.c: 120: partdecl = (n1*100)/n2;
  1054   000B9C  C037  F00E         	movff	_n1,___wmul@multiplier
  1055   000BA0  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1056   000BA4  0E00               	movlw	0
  1057   000BA6  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1058   000BA8  0E64               	movlw	100
  1059   000BAA  6E10               	movwf	___wmul@multiplicand^0,c
  1060   000BAC  EC98  F00B         	call	___wmul	;wreg free
  1061   000BB0  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1062   000BB4  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1063   000BB8  C035  F016         	movff	_n2,___lwdiv@divisor
  1064   000BBC  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1065   000BC0  EC9D  F00A         	call	___lwdiv	;wreg free
  1066   000BC4  C014  F029         	movff	?___lwdiv,_partdecl
  1067   000BC8  C015  F02A         	movff	?___lwdiv+1,_partdecl+1
  1068   000BCC  6A2B               	clrf	(_partdecl+2)^0,c
  1069   000BCE  6A2C               	clrf	(_partdecl+3)^0,c
  1070   000BD0  D094               	goto	l2283
  1071   000BD2                     l2241:
  1072                           
  1073                           ;Laboratorio4.c: 123: if(n1 != 0 & n2 == 0) r = 1000;
  1074   000BD2  5037               	movf	_n1^0,w,c
  1075   000BD4  1038               	iorwf	(_n1+1)^0,w,c
  1076   000BD6  B4D8               	btfsc	status,2,c
  1077   000BD8  D006               	goto	l2247
  1078   000BDA  5035               	movf	_n2^0,w,c
  1079   000BDC  1036               	iorwf	(_n2+1)^0,w,c
  1080   000BDE  A4D8               	btfss	status,2,c
  1081   000BE0  D002               	goto	l2247
  1082   000BE2  0EE8               	movlw	232
  1083   000BE4  D009               	goto	L3
  1084   000BE6                     l2247:
  1085                           
  1086                           ;Laboratorio4.c: 124: else if(n1 == 0 & n2 == 0) r = 1001;
  1087   000BE6  5037               	movf	_n1^0,w,c
  1088   000BE8  1038               	iorwf	(_n1+1)^0,w,c
  1089   000BEA  A4D8               	btfss	status,2,c
  1090   000BEC  D78F               	goto	l2223
  1091   000BEE  5035               	movf	_n2^0,w,c
  1092   000BF0  1036               	iorwf	(_n2+1)^0,w,c
  1093   000BF2  A4D8               	btfss	status,2,c
  1094   000BF4  D78B               	goto	l2223
  1095   000BF6  0EE9               	movlw	233
  1096   000BF8                     L3:
  1097   000BF8  6E25               	movwf	_r^0,c
  1098   000BFA  0E03               	movlw	3
  1099   000BFC  6E26               	movwf	(_r+1)^0,c
  1100   000BFE  0E00               	movlw	0
  1101   000C00  6E27               	movwf	(_r+2)^0,c
  1102   000C02  0E00               	movlw	0
  1103   000C04  6E28               	movwf	(_r+3)^0,c
  1104   000C06  D782               	goto	l2223
  1105   000C08                     l2255:
  1106                           
  1107                           ;Laboratorio4.c: 129: r = n1;
  1108   000C08  C037  F025         	movff	_n1,_r
  1109   000C0C  C038  F026         	movff	_n1+1,_r+1
  1110   000C10  6A27               	clrf	(_r+2)^0,c
  1111   000C12  6A28               	clrf	(_r+3)^0,c
  1112   000C14  D021               	goto	l2261
  1113   000C16                     l2257:
  1114                           
  1115                           ;Laboratorio4.c: 131: r = r * (n1-1);
  1116   000C16  0EFF               	movlw	255
  1117   000C18  2437               	addwf	_n1^0,w,c
  1118   000C1A  6E1B               	movwf	??_main^0,c
  1119   000C1C  0EFF               	movlw	255
  1120   000C1E  2038               	addwfc	(_n1+1)^0,w,c
  1121   000C20  6E1C               	movwf	(??_main+1)^0,c
  1122   000C22  C01B  F00E         	movff	??_main,___lmul@multiplier
  1123   000C26  C01C  F00F         	movff	??_main+1,___lmul@multiplier+1
  1124   000C2A  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1125   000C2C  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1126   000C2E  C025  F012         	movff	_r,___lmul@multiplicand
  1127   000C32  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1128   000C36  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1129   000C3A  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1130   000C3E  EC1C  F00A         	call	___lmul	;wreg free
  1131   000C42  C00E  F025         	movff	?___lmul,_r
  1132   000C46  C00F  F026         	movff	?___lmul+1,_r+1
  1133   000C4A  C010  F027         	movff	?___lmul+2,_r+2
  1134   000C4E  C011  F028         	movff	?___lmul+3,_r+3
  1135   000C52  0637               	decf	_n1^0,f,c
  1136   000C54  A0D8               	btfss	status,0,c
  1137   000C56  0638               	decf	(_n1+1)^0,f,c
  1138   000C58                     l2261:
  1139   000C58  5038               	movf	(_n1+1)^0,w,c
  1140   000C5A  E1DD               	bnz	l2257
  1141   000C5C  0E02               	movlw	2
  1142   000C5E  5C37               	subwf	_n1^0,w,c
  1143   000C60  A0D8               	btfss	status,0,c
  1144   000C62  D754               	goto	l2223
  1145   000C64  D7D8               	goto	l2257
  1146   000C66                     l2265:
  1147                           
  1148                           ;Laboratorio4.c: 136: r = n1;
  1149   000C66  C037  F025         	movff	_n1,_r
  1150   000C6A  C038  F026         	movff	_n1+1,_r+1
  1151   000C6E  6A27               	clrf	(_r+2)^0,c
  1152   000C70  6A28               	clrf	(_r+3)^0,c
  1153                           
  1154                           ;Laboratorio4.c: 137: n2 = n2-1;
  1155   000C72  0EFF               	movlw	255
  1156   000C74  2435               	addwf	_n2^0,w,c
  1157   000C76  6E35               	movwf	_n2^0,c
  1158   000C78  0EFF               	movlw	255
  1159   000C7A  2036               	addwfc	(_n2+1)^0,w,c
  1160   000C7C  6E36               	movwf	(_n2+1)^0,c
  1161   000C7E  D01B               	goto	l2273
  1162   000C80                     l2269:
  1163                           
  1164                           ;Laboratorio4.c: 139: r = r * n1;
  1165   000C80  C037  F00E         	movff	_n1,___lmul@multiplier
  1166   000C84  C038  F00F         	movff	_n1+1,___lmul@multiplier+1
  1167   000C88  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1168   000C8A  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1169   000C8C  C025  F012         	movff	_r,___lmul@multiplicand
  1170   000C90  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1171   000C94  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1172   000C98  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1173   000C9C  EC1C  F00A         	call	___lmul	;wreg free
  1174   000CA0  C00E  F025         	movff	?___lmul,_r
  1175   000CA4  C00F  F026         	movff	?___lmul+1,_r+1
  1176   000CA8  C010  F027         	movff	?___lmul+2,_r+2
  1177   000CAC  C011  F028         	movff	?___lmul+3,_r+3
  1178   000CB0  0635               	decf	_n2^0,f,c
  1179   000CB2  A0D8               	btfss	status,0,c
  1180   000CB4  0636               	decf	(_n2+1)^0,f,c
  1181   000CB6                     l2273:
  1182   000CB6  5035               	movf	_n2^0,w,c
  1183   000CB8  1036               	iorwf	(_n2+1)^0,w,c
  1184   000CBA  B4D8               	btfsc	status,2,c
  1185   000CBC  D727               	goto	l2223
  1186   000CBE  D7E0               	goto	l2269
  1187   000CC0                     l2277:
  1188                           
  1189                           ;Laboratorio4.c: 144: r = 0;
  1190   000CC0  0E00               	movlw	0
  1191   000CC2  6E25               	movwf	_r^0,c
  1192   000CC4  0E00               	movlw	0
  1193   000CC6  6E26               	movwf	(_r+1)^0,c
  1194   000CC8  0E00               	movlw	0
  1195   000CCA  6E27               	movwf	(_r+2)^0,c
  1196   000CCC  0E00               	movlw	0
  1197   000CCE  6E28               	movwf	(_r+3)^0,c
  1198                           
  1199                           ;Laboratorio4.c: 145: break;
  1200   000CD0  D014               	goto	l2283
  1201   000CD2                     l2281:
  1202   000CD2  5041               	movf	_op^0,w,c
  1203                           
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 6, Range of values is 33 to 120
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte           19    10 (average)
  1209                           ;	Chosen strategy is simple_byte
  1210   000CD4  0A21               	xorlw	33	; case 33
  1211   000CD6  B4D8               	btfsc	status,2,c
  1212   000CD8  D797               	goto	l2255
  1213   000CDA  0A0A               	xorlw	10	; case 43
  1214   000CDC  B4D8               	btfsc	status,2,c
  1215   000CDE  D70A               	goto	l2221
  1216   000CE0  0A06               	xorlw	6	; case 45
  1217   000CE2  B4D8               	btfsc	status,2,c
  1218   000CE4  D72E               	goto	l2225
  1219   000CE6  0A02               	xorlw	2	; case 47
  1220   000CE8  B4D8               	btfsc	status,2,c
  1221   000CEA  D740               	goto	l2233
  1222   000CEC  0A71               	xorlw	113	; case 94
  1223   000CEE  B4D8               	btfsc	status,2,c
  1224   000CF0  D7BA               	goto	l2265
  1225   000CF2  0A26               	xorlw	38	; case 120
  1226   000CF4  B4D8               	btfsc	status,2,c
  1227   000CF6  D72B               	goto	l2229
  1228   000CF8  D7E3               	goto	l2277
  1229   000CFA                     l2283:
  1230                           
  1231                           ;Laboratorio4.c: 147: if(op=='!') DireccionaLCD(0x83);
  1232   000CFA  0E21               	movlw	33
  1233   000CFC  1841               	xorwf	_op^0,w,c
  1234   000CFE  A4D8               	btfss	status,2,c
  1235   000D00  D004               	goto	l2287
  1236   000D02  0E83               	movlw	131
  1237   000D04  ECB6  F00B         	call	_DireccionaLCD
  1238   000D08  D003               	goto	l198
  1239   000D0A                     l2287:
  1240                           
  1241                           ;Laboratorio4.c: 148: else DireccionaLCD(0x84);
  1242   000D0A  0E84               	movlw	132
  1243   000D0C  ECB6  F00B         	call	_DireccionaLCD
  1244   000D10                     l198:
  1245                           
  1246                           ;Laboratorio4.c: 149: if ((partdecl-(r*100))!= 0 & (partdecl-(r*100))>0){
  1247   000D10  C025  F00E         	movff	_r,___lmul@multiplier
  1248   000D14  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1249   000D18  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1250   000D1C  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1251   000D20  0E9C               	movlw	156
  1252   000D22  6E12               	movwf	___lmul@multiplicand^0,c
  1253   000D24  0EFF               	movlw	255
  1254   000D26  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1255   000D28  0EFF               	movlw	255
  1256   000D2A  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1257   000D2C  0EFF               	movlw	255
  1258   000D2E  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1259   000D30  EC1C  F00A         	call	___lmul	;wreg free
  1260   000D34  5029               	movf	_partdecl^0,w,c
  1261   000D36  240E               	addwf	?___lmul^0,w,c
  1262   000D38  6E1B               	movwf	??_main^0,c
  1263   000D3A  502A               	movf	(_partdecl+1)^0,w,c
  1264   000D3C  200F               	addwfc	(?___lmul+1)^0,w,c
  1265   000D3E  6E1C               	movwf	(??_main+1)^0,c
  1266   000D40  502B               	movf	(_partdecl+2)^0,w,c
  1267   000D42  2010               	addwfc	(?___lmul+2)^0,w,c
  1268   000D44  6E1D               	movwf	(??_main+2)^0,c
  1269   000D46  502C               	movf	(_partdecl+3)^0,w,c
  1270   000D48  2011               	addwfc	(?___lmul+3)^0,w,c
  1271   000D4A  6E1E               	movwf	(??_main+3)^0,c
  1272   000D4C  501B               	movf	??_main^0,w,c
  1273   000D4E  101C               	iorwf	(??_main+1)^0,w,c
  1274   000D50  101D               	iorwf	(??_main+2)^0,w,c
  1275   000D52  101E               	iorwf	(??_main+3)^0,w,c
  1276   000D54  B4D8               	btfsc	status,2,c
  1277   000D56  D07A               	goto	l2313
  1278   000D58  C025  F00E         	movff	_r,___lmul@multiplier
  1279   000D5C  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1280   000D60  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1281   000D64  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1282   000D68  0E9C               	movlw	156
  1283   000D6A  6E12               	movwf	___lmul@multiplicand^0,c
  1284   000D6C  0EFF               	movlw	255
  1285   000D6E  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1286   000D70  0EFF               	movlw	255
  1287   000D72  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1288   000D74  0EFF               	movlw	255
  1289   000D76  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1290   000D78  EC1C  F00A         	call	___lmul	;wreg free
  1291   000D7C  5029               	movf	_partdecl^0,w,c
  1292   000D7E  240E               	addwf	?___lmul^0,w,c
  1293   000D80  6E1B               	movwf	??_main^0,c
  1294   000D82  502A               	movf	(_partdecl+1)^0,w,c
  1295   000D84  200F               	addwfc	(?___lmul+1)^0,w,c
  1296   000D86  6E1C               	movwf	(??_main+1)^0,c
  1297   000D88  502B               	movf	(_partdecl+2)^0,w,c
  1298   000D8A  2010               	addwfc	(?___lmul+2)^0,w,c
  1299   000D8C  6E1D               	movwf	(??_main+2)^0,c
  1300   000D8E  502C               	movf	(_partdecl+3)^0,w,c
  1301   000D90  2011               	addwfc	(?___lmul+3)^0,w,c
  1302   000D92  6E1E               	movwf	(??_main+3)^0,c
  1303   000D94  501B               	movf	??_main^0,w,c
  1304   000D96  101C               	iorwf	(??_main+1)^0,w,c
  1305   000D98  101D               	iorwf	(??_main+2)^0,w,c
  1306   000D9A  101E               	iorwf	(??_main+3)^0,w,c
  1307   000D9C  B4D8               	btfsc	status,2,c
  1308   000D9E  D056               	goto	l2313
  1309                           
  1310                           ;Laboratorio4.c: 150: for (int i = 0; i < 3; i++) {
  1311   000DA0  0E00               	movlw	0
  1312   000DA2  6E22               	movwf	(main@i+1)^0,c
  1313   000DA4  0E00               	movlw	0
  1314   000DA6  6E21               	movwf	main@i^0,c
  1315   000DA8                     l2293:
  1316   000DA8  BE22               	btfsc	(main@i+1)^0,7,c
  1317   000DAA  D008               	goto	l2297
  1318   000DAC  5022               	movf	(main@i+1)^0,w,c
  1319   000DAE  E105               	bnz	u2170
  1320   000DB0  0E03               	movlw	3
  1321   000DB2  5C21               	subwf	main@i^0,w,c
  1322   000DB4  B0D8               	btfsc	status,0,c
  1323   000DB6  D16C               	goto	l2387
  1324   000DB8  D001               	goto	l2297
  1325   000DBA                     u2170:
  1326   000DBA  D16A               	goto	l2387
  1327   000DBC                     l2297:
  1328                           
  1329                           ;Laboratorio4.c: 151: r = n1 / n2;
  1330   000DBC  C037  F014         	movff	_n1,___lwdiv@dividend
  1331   000DC0  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1332   000DC4  C035  F016         	movff	_n2,___lwdiv@divisor
  1333   000DC8  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1334   000DCC  EC9D  F00A         	call	___lwdiv	;wreg free
  1335   000DD0  C014  F025         	movff	?___lwdiv,_r
  1336   000DD4  C015  F026         	movff	?___lwdiv+1,_r+1
  1337   000DD8  6A27               	clrf	(_r+2)^0,c
  1338   000DDA  6A28               	clrf	(_r+3)^0,c
  1339                           
  1340                           ;Laboratorio4.c: 152: m = n1 % n2;
  1341   000DDC  C037  F00E         	movff	_n1,___lwmod@dividend
  1342   000DE0  C038  F00F         	movff	_n1+1,___lwmod@dividend+1
  1343   000DE4  C035  F010         	movff	_n2,___lwmod@divisor
  1344   000DE8  C036  F011         	movff	_n2+1,___lwmod@divisor+1
  1345   000DEC  EC5A  F00B         	call	___lwmod	;wreg free
  1346   000DF0  C00E  F03B         	movff	?___lwmod,_m
  1347   000DF4  C00F  F03C         	movff	?___lwmod+1,_m+1
  1348   000DF8  6A3D               	clrf	(_m+2)^0,c
  1349   000DFA  6A3E               	clrf	(_m+3)^0,c
  1350                           
  1351                           ;Laboratorio4.c: 153: EscribeLCD_c(r+'0');
  1352   000DFC  5025               	movf	_r^0,w,c
  1353   000DFE  0F30               	addlw	48
  1354   000E00  ECAB  F00B         	call	_EscribeLCD_c
  1355                           
  1356                           ;Laboratorio4.c: 154: if(i == 0 && m != 0) {
  1357   000E04  5021               	movf	main@i^0,w,c
  1358   000E06  1022               	iorwf	(main@i+1)^0,w,c
  1359   000E08  A4D8               	btfss	status,2,c
  1360   000E0A  D009               	goto	l2305
  1361   000E0C  503B               	movf	_m^0,w,c
  1362   000E0E  103C               	iorwf	(_m+1)^0,w,c
  1363   000E10  103D               	iorwf	(_m+2)^0,w,c
  1364   000E12  103E               	iorwf	(_m+3)^0,w,c
  1365   000E14  B4D8               	btfsc	status,2,c
  1366   000E16  D003               	goto	l2305
  1367                           
  1368                           ;Laboratorio4.c: 155: EscribeLCD_c(',');
  1369   000E18  0E2C               	movlw	44
  1370   000E1A  ECAB  F00B         	call	_EscribeLCD_c
  1371   000E1E                     l2305:
  1372                           
  1373                           ;Laboratorio4.c: 156: };Laboratorio4.c: 157: if (m != 0) {
  1374   000E1E  503B               	movf	_m^0,w,c
  1375   000E20  103C               	iorwf	(_m+1)^0,w,c
  1376   000E22  103D               	iorwf	(_m+2)^0,w,c
  1377   000E24  103E               	iorwf	(_m+3)^0,w,c
  1378   000E26  B4D8               	btfsc	status,2,c
  1379   000E28  D133               	goto	l2387
  1380                           
  1381                           ;Laboratorio4.c: 158: n1 = m * 10;
  1382   000E2A  C03B  F00E         	movff	_m,___wmul@multiplier
  1383   000E2E  C03C  F00F         	movff	_m+1,___wmul@multiplier+1
  1384   000E32  0E00               	movlw	0
  1385   000E34  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1386   000E36  0E0A               	movlw	10
  1387   000E38  6E10               	movwf	___wmul@multiplicand^0,c
  1388   000E3A  EC98  F00B         	call	___wmul	;wreg free
  1389   000E3E  C00E  F037         	movff	?___wmul,_n1
  1390   000E42  C00F  F038         	movff	?___wmul+1,_n1+1
  1391                           
  1392                           ;Laboratorio4.c: 159: } else {
  1393   000E46  4A21               	infsnz	main@i^0,f,c
  1394   000E48  2A22               	incf	(main@i+1)^0,f,c
  1395   000E4A  D7AE               	goto	l2293
  1396   000E4C                     l2313:
  1397   000E4C  5028               	movf	(_r+3)^0,w,c
  1398   000E4E  1027               	iorwf	(_r+2)^0,w,c
  1399   000E50  1026               	iorwf	(_r+1)^0,w,c
  1400   000E52  E104               	bnz	u2210
  1401   000E54  0E52               	movlw	82
  1402   000E56  5C25               	subwf	_r^0,w,c
  1403   000E58  A0D8               	btfss	status,0,c
  1404   000E5A  D029               	goto	l2327
  1405   000E5C                     u2210:
  1406   000E5C  0EE8               	movlw	232
  1407   000E5E  1825               	xorwf	_r^0,w,c
  1408   000E60  E106               	bnz	u2220
  1409   000E62  0E03               	movlw	3
  1410   000E64  1826               	xorwf	(_r+1)^0,w,c
  1411   000E66  1027               	iorwf	(_r+2)^0,w,c
  1412   000E68  1028               	iorwf	(_r+3)^0,w,c
  1413   000E6A  B4D8               	btfsc	status,2,c
  1414   000E6C  D020               	goto	l2327
  1415   000E6E                     u2220:
  1416   000E6E  0EE9               	movlw	233
  1417   000E70  1825               	xorwf	_r^0,w,c
  1418   000E72  E106               	bnz	u2230
  1419   000E74  0E03               	movlw	3
  1420   000E76  1826               	xorwf	(_r+1)^0,w,c
  1421   000E78  1027               	iorwf	(_r+2)^0,w,c
  1422   000E7A  1028               	iorwf	(_r+3)^0,w,c
  1423   000E7C  B4D8               	btfsc	status,2,c
  1424   000E7E  D017               	goto	l2327
  1425   000E80                     u2230:
  1426   000E80  0E2D               	movlw	45
  1427   000E82  1841               	xorwf	_op^0,w,c
  1428   000E84  A4D8               	btfss	status,2,c
  1429   000E86  D013               	goto	l2327
  1430                           
  1431                           ;Laboratorio4.c: 165: EscribeLCD_c('-');
  1432   000E88  0E2D               	movlw	45
  1433   000E8A  ECAB  F00B         	call	_EscribeLCD_c
  1434                           
  1435                           ;Laboratorio4.c: 166: DireccionaLCD(0x85);
  1436   000E8E  0E85               	movlw	133
  1437   000E90  ECB6  F00B         	call	_DireccionaLCD
  1438                           
  1439                           ;Laboratorio4.c: 167: r = ~r+1;
  1440   000E94  1E28               	comf	(_r+3)^0,f,c
  1441   000E96  1E27               	comf	(_r+2)^0,f,c
  1442   000E98  1E26               	comf	(_r+1)^0,f,c
  1443   000E9A  6C25               	negf	_r^0,c
  1444   000E9C  0E00               	movlw	0
  1445   000E9E  2226               	addwfc	(_r+1)^0,f,c
  1446   000EA0  2227               	addwfc	(_r+2)^0,f,c
  1447   000EA2  2228               	addwfc	(_r+3)^0,f,c
  1448                           
  1449                           ;Laboratorio4.c: 168: EscribeLCD_c(r+'0');
  1450   000EA4  5025               	movf	_r^0,w,c
  1451   000EA6  0F30               	addlw	48
  1452   000EA8  ECAB  F00B         	call	_EscribeLCD_c
  1453                           
  1454                           ;Laboratorio4.c: 169: }else{
  1455   000EAC  D0F1               	goto	l2387
  1456   000EAE                     l2327:
  1457                           
  1458                           ;Laboratorio4.c: 170: if(r==1000){
  1459   000EAE  0EE8               	movlw	232
  1460   000EB0  1825               	xorwf	_r^0,w,c
  1461   000EB2  E10B               	bnz	l2331
  1462   000EB4  0E03               	movlw	3
  1463   000EB6  1826               	xorwf	(_r+1)^0,w,c
  1464   000EB8  1027               	iorwf	(_r+2)^0,w,c
  1465   000EBA  1028               	iorwf	(_r+3)^0,w,c
  1466   000EBC  A4D8               	btfss	status,2,c
  1467   000EBE  D005               	goto	l2331
  1468                           
  1469                           ;Laboratorio4.c: 171: MensajeLCD_Word("Inf.");
  1470   000EC0  0E2A               	movlw	low STR_4
  1471   000EC2  6E13               	movwf	MensajeLCD_Word@a^0,c
  1472   000EC4  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
  1473                           
  1474                           ;Laboratorio4.c: 172: }else{
  1475   000EC8  D0E3               	goto	l2387
  1476   000ECA                     l2331:
  1477                           
  1478                           ;Laboratorio4.c: 173: if(r==1001){
  1479   000ECA  0EE9               	movlw	233
  1480   000ECC  1825               	xorwf	_r^0,w,c
  1481   000ECE  E10B               	bnz	l2335
  1482   000ED0  0E03               	movlw	3
  1483   000ED2  1826               	xorwf	(_r+1)^0,w,c
  1484   000ED4  1027               	iorwf	(_r+2)^0,w,c
  1485   000ED6  1028               	iorwf	(_r+3)^0,w,c
  1486   000ED8  A4D8               	btfss	status,2,c
  1487   000EDA  D005               	goto	l2335
  1488                           
  1489                           ;Laboratorio4.c: 174: MensajeLCD_Word("Ind.");
  1490   000EDC  0E25               	movlw	low STR_5
  1491   000EDE  6E13               	movwf	MensajeLCD_Word@a^0,c
  1492   000EE0  ECC6  F00A         	call	_MensajeLCD_Word	;wreg free
  1493                           
  1494                           ;Laboratorio4.c: 175: }else{
  1495   000EE4  D0D5               	goto	l2387
  1496   000EE6                     l2335:
  1497                           
  1498                           ;Laboratorio4.c: 176: if(r>=0xA & r!=1000 & r !=1001){
  1499   000EE6  5028               	movf	(_r+3)^0,w,c
  1500   000EE8  1027               	iorwf	(_r+2)^0,w,c
  1501   000EEA  1026               	iorwf	(_r+1)^0,w,c
  1502   000EEC  E104               	bnz	u2270
  1503   000EEE  0E0A               	movlw	10
  1504   000EF0  5C25               	subwf	_r^0,w,c
  1505   000EF2  A0D8               	btfss	status,0,c
  1506   000EF4  D0C5               	goto	l2383
  1507   000EF6                     u2270:
  1508   000EF6  0EE8               	movlw	232
  1509   000EF8  1825               	xorwf	_r^0,w,c
  1510   000EFA  E106               	bnz	u2280
  1511   000EFC  0E03               	movlw	3
  1512   000EFE  1826               	xorwf	(_r+1)^0,w,c
  1513   000F00  1027               	iorwf	(_r+2)^0,w,c
  1514   000F02  1028               	iorwf	(_r+3)^0,w,c
  1515   000F04  B4D8               	btfsc	status,2,c
  1516   000F06  D0BC               	goto	l2383
  1517   000F08                     u2280:
  1518   000F08  0EE9               	movlw	233
  1519   000F0A  1825               	xorwf	_r^0,w,c
  1520   000F0C  E106               	bnz	u2290
  1521   000F0E  0E03               	movlw	3
  1522   000F10  1826               	xorwf	(_r+1)^0,w,c
  1523   000F12  1027               	iorwf	(_r+2)^0,w,c
  1524   000F14  1028               	iorwf	(_r+3)^0,w,c
  1525   000F16  B4D8               	btfsc	status,2,c
  1526   000F18  D0B3               	goto	l2383
  1527   000F1A                     u2290:
  1528                           
  1529                           ;Laboratorio4.c: 177: for(int j=9;j>=0;j--){
  1530   000F1A  0E00               	movlw	0
  1531   000F1C  6E24               	movwf	(main@j+1)^0,c
  1532   000F1E  0E09               	movlw	9
  1533   000F20  6E23               	movwf	main@j^0,c
  1534   000F22                     l2343:
  1535   000F22  BE24               	btfsc	(main@j+1)^0,7,c
  1536   000F24  D0B5               	goto	l2387
  1537                           
  1538                           ;Laboratorio4.c: 178: partdecl = 10;
  1539   000F26  0E0A               	movlw	10
  1540   000F28  6E29               	movwf	_partdecl^0,c
  1541   000F2A  0E00               	movlw	0
  1542   000F2C  6E2A               	movwf	(_partdecl+1)^0,c
  1543   000F2E  0E00               	movlw	0
  1544   000F30  6E2B               	movwf	(_partdecl+2)^0,c
  1545   000F32  0E00               	movlw	0
  1546   000F34  6E2C               	movwf	(_partdecl+3)^0,c
  1547                           
  1548                           ;Laboratorio4.c: 179: for(int k=j-1;k>0;k--){
  1549   000F36  0EFF               	movlw	255
  1550   000F38  2423               	addwf	main@j^0,w,c
  1551   000F3A  6E1F               	movwf	main@k^0,c
  1552   000F3C  0EFF               	movlw	255
  1553   000F3E  2024               	addwfc	(main@j+1)^0,w,c
  1554   000F40  6E20               	movwf	(main@k+1)^0,c
  1555   000F42                     l2351:
  1556   000F42  BE20               	btfsc	(main@k+1)^0,7,c
  1557   000F44  D023               	goto	l2361
  1558   000F46  5020               	movf	(main@k+1)^0,w,c
  1559   000F48  E103               	bnz	l2355
  1560   000F4A  041F               	decf	main@k^0,w,c
  1561   000F4C  A0D8               	btfss	status,0,c
  1562   000F4E  D01E               	goto	l2361
  1563   000F50                     l2355:
  1564                           
  1565                           ;Laboratorio4.c: 180: partdecl = partdecl*10;
  1566   000F50  C029  F00E         	movff	_partdecl,___lmul@multiplier
  1567   000F54  C02A  F00F         	movff	_partdecl+1,___lmul@multiplier+1
  1568   000F58  C02B  F010         	movff	_partdecl+2,___lmul@multiplier+2
  1569   000F5C  C02C  F011         	movff	_partdecl+3,___lmul@multiplier+3
  1570   000F60  0E0A               	movlw	10
  1571   000F62  6E12               	movwf	___lmul@multiplicand^0,c
  1572   000F64  0E00               	movlw	0
  1573   000F66  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1574   000F68  0E00               	movlw	0
  1575   000F6A  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1576   000F6C  0E00               	movlw	0
  1577   000F6E  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1578   000F70  EC1C  F00A         	call	___lmul	;wreg free
  1579   000F74  C00E  F029         	movff	?___lmul,_partdecl
  1580   000F78  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1581   000F7C  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1582   000F80  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1583   000F84  061F               	decf	main@k^0,f,c
  1584   000F86  A0D8               	btfss	status,0,c
  1585   000F88  0620               	decf	(main@k+1)^0,f,c
  1586   000F8A  D7DB               	goto	l2351
  1587   000F8C                     l2361:
  1588                           
  1589                           ;Laboratorio4.c: 181: };Laboratorio4.c: 182: if(r/partdecl>0){
  1590   000F8C  C025  F00E         	movff	_r,___lldiv@dividend
  1591   000F90  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1592   000F94  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1593   000F98  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1594   000F9C  C029  F012         	movff	_partdecl,___lldiv@divisor
  1595   000FA0  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1596   000FA4  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1597   000FA8  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1598   000FAC  EC2C  F009         	call	___lldiv	;wreg free
  1599   000FB0  500E               	movf	?___lldiv^0,w,c
  1600   000FB2  100F               	iorwf	(?___lldiv+1)^0,w,c
  1601   000FB4  1010               	iorwf	(?___lldiv+2)^0,w,c
  1602   000FB6  1011               	iorwf	(?___lldiv+3)^0,w,c
  1603   000FB8  B4D8               	btfsc	status,2,c
  1604   000FBA  D033               	goto	l2369
  1605                           
  1606                           ;Laboratorio4.c: 183: flag = 1;
  1607   000FBC  0E01               	movlw	1
  1608   000FBE  6E39               	movwf	_flag^0,c
  1609                           
  1610                           ;Laboratorio4.c: 184: EscribeLCD_c(r/partdecl+48);
  1611   000FC0  C025  F00E         	movff	_r,___lldiv@dividend
  1612   000FC4  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1613   000FC8  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1614   000FCC  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1615   000FD0  C029  F012         	movff	_partdecl,___lldiv@divisor
  1616   000FD4  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1617   000FD8  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1618   000FDC  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1619   000FE0  EC2C  F009         	call	___lldiv	;wreg free
  1620   000FE4  500E               	movf	?___lldiv^0,w,c
  1621   000FE6  0F30               	addlw	48
  1622   000FE8  ECAB  F00B         	call	_EscribeLCD_c
  1623                           
  1624                           ;Laboratorio4.c: 185: r=r%partdecl;
  1625   000FEC  C025  F00E         	movff	_r,___llmod@dividend
  1626   000FF0  C026  F00F         	movff	_r+1,___llmod@dividend+1
  1627   000FF4  C027  F010         	movff	_r+2,___llmod@dividend+2
  1628   000FF8  C028  F011         	movff	_r+3,___llmod@dividend+3
  1629   000FFC  C029  F012         	movff	_partdecl,___llmod@divisor
  1630   001000  C02A  F013         	movff	_partdecl+1,___llmod@divisor+1
  1631   001004  C02B  F014         	movff	_partdecl+2,___llmod@divisor+2
  1632   001008  C02C  F015         	movff	_partdecl+3,___llmod@divisor+3
  1633   00100C  ECE9  F009         	call	___llmod	;wreg free
  1634   001010  C00E  F025         	movff	?___llmod,_r
  1635   001014  C00F  F026         	movff	?___llmod+1,_r+1
  1636   001018  C010  F027         	movff	?___llmod+2,_r+2
  1637   00101C  C011  F028         	movff	?___llmod+3,_r+3
  1638                           
  1639                           ;Laboratorio4.c: 186: }else if( (r/partdecl)==0 && flag){
  1640   001020  D02B               	goto	l2379
  1641   001022                     l2369:
  1642   001022  C025  F00E         	movff	_r,___lldiv@dividend
  1643   001026  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1644   00102A  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1645   00102E  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1646   001032  C029  F012         	movff	_partdecl,___lldiv@divisor
  1647   001036  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1648   00103A  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1649   00103E  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1650   001042  EC2C  F009         	call	___lldiv	;wreg free
  1651   001046  500E               	movf	?___lldiv^0,w,c
  1652   001048  100F               	iorwf	(?___lldiv+1)^0,w,c
  1653   00104A  1010               	iorwf	(?___lldiv+2)^0,w,c
  1654   00104C  1011               	iorwf	(?___lldiv+3)^0,w,c
  1655   00104E  A4D8               	btfss	status,2,c
  1656   001050  D013               	goto	l2379
  1657   001052  5039               	movf	_flag^0,w,c
  1658   001054  B4D8               	btfsc	status,2,c
  1659   001056  D010               	goto	l2379
  1660                           
  1661                           ;Laboratorio4.c: 187: if(r<10) EscribeLCD_c(r+48);
  1662   001058  5028               	movf	(_r+3)^0,w,c
  1663   00105A  1027               	iorwf	(_r+2)^0,w,c
  1664   00105C  1026               	iorwf	(_r+1)^0,w,c
  1665   00105E  E109               	bnz	l2377
  1666   001060  0E0A               	movlw	10
  1667   001062  5C25               	subwf	_r^0,w,c
  1668   001064  B0D8               	btfsc	status,0,c
  1669   001066  D005               	goto	l2377
  1670   001068  5025               	movf	_r^0,w,c
  1671   00106A  0F30               	addlw	48
  1672   00106C  ECAB  F00B         	call	_EscribeLCD_c
  1673   001070  D003               	goto	l2379
  1674   001072                     l2377:
  1675                           
  1676                           ;Laboratorio4.c: 188: else EscribeLCD_c(48);
  1677   001072  0E30               	movlw	48
  1678   001074  ECAB  F00B         	call	_EscribeLCD_c
  1679   001078                     l2379:
  1680   001078  0623               	decf	main@j^0,f,c
  1681   00107A  A0D8               	btfss	status,0,c
  1682   00107C  0624               	decf	(main@j+1)^0,f,c
  1683   00107E  D751               	goto	l2343
  1684   001080                     l2383:
  1685                           
  1686                           ;Laboratorio4.c: 192: EscribeLCD_c(r+'0');
  1687   001080  5025               	movf	_r^0,w,c
  1688   001082  0F30               	addlw	48
  1689   001084  ECAB  F00B         	call	_EscribeLCD_c
  1690   001088  D003               	goto	l2387
  1691   00108A                     l2385:
  1692                           
  1693                           ;Laboratorio4.c: 198: EscribeLCD_c(' ');
  1694   00108A  0E20               	movlw	32
  1695   00108C  ECAB  F00B         	call	_EscribeLCD_c
  1696   001090                     l2387:
  1697                           
  1698                           ;Laboratorio4.c: 199: };Laboratorio4.c: 200: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1699   001090  0EE4               	movlw	228
  1700   001092  6E1B               	movwf	??_main^0,c
  1701   001094  0E44               	movlw	68
  1702   001096                     u2437:
  1703   001096  2EE8               	decfsz	wreg,f,c
  1704   001098  D7FE               	bra	u2437
  1705   00109A  2E1B               	decfsz	??_main^0,f,c
  1706   00109C  D7FC               	bra	u2437
  1707   00109E  D000               	nop2	
  1708   0010A0  D415               	goto	l2083
  1709   0010A2                     __end_of_main:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function ___wmul *****************
  1713 ;; Defined at:
  1714 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  multiplier      2   13[COMRAM] unsigned int 
  1717 ;;  multiplicand    2   15[COMRAM] unsigned int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  product         2   17[COMRAM] unsigned int 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2   13[COMRAM] unsigned int 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, prodl, prodh
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         4       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        6 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 5
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text1
  1744   001730                     __ptext1:
  1745                           	callstack 0
  1746   001730                     ___wmul:
  1747                           	callstack 25
  1748                           
  1749                           ;incstack = 0
  1750   001730  500E               	movf	___wmul@multiplier^0,w,c
  1751   001732  0210               	mulwf	___wmul@multiplicand^0,c
  1752   001734  CFF3 F012          	movff	prodl,___wmul@product
  1753   001738  CFF4 F013          	movff	prodh,___wmul@product+1
  1754   00173C  500E               	movf	___wmul@multiplier^0,w,c
  1755   00173E  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  1756   001740  50F3               	movf	243,w,c
  1757   001742  2613               	addwf	(___wmul@product+1)^0,f,c
  1758   001744  500F               	movf	(___wmul@multiplier+1)^0,w,c
  1759   001746  0210               	mulwf	___wmul@multiplicand^0,c
  1760   001748  50F3               	movf	243,w,c
  1761   00174A  2613               	addwf	(___wmul@product+1)^0,f,c
  1762   00174C  C012  F00E         	movff	___wmul@product,?___wmul
  1763   001750  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  1764   001754  0012               	return		;funcret
  1765   001756                     __end_of___wmul:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function ___lwmod *****************
  1769 ;; Defined at:
  1770 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  dividend        2   13[COMRAM] unsigned int 
  1773 ;;  divisor         2   15[COMRAM] unsigned int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  counter         1   17[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2   13[COMRAM] unsigned int 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1785 ;;      Params:         4       0       0       0       0       0       0       0       0
  1786 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1788 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        5 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 5
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text2
  1800   0016B4                     __ptext2:
  1801                           	callstack 0
  1802   0016B4                     ___lwmod:
  1803                           	callstack 25
  1804                           
  1805                           ;incstack = 0
  1806   0016B4  5010               	movf	___lwmod@divisor^0,w,c
  1807   0016B6  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1808   0016B8  B4D8               	btfsc	status,2,c
  1809   0016BA  D018               	goto	l789
  1810   0016BC  0E01               	movlw	1
  1811   0016BE  6E12               	movwf	___lwmod@counter^0,c
  1812   0016C0  D004               	goto	l2011
  1813   0016C2                     l2009:
  1814   0016C2  90D8               	bcf	status,0,c
  1815   0016C4  3610               	rlcf	___lwmod@divisor^0,f,c
  1816   0016C6  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1817   0016C8  2A12               	incf	___lwmod@counter^0,f,c
  1818   0016CA                     l2011:
  1819   0016CA  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1820   0016CC  D7FA               	goto	l2009
  1821   0016CE                     u1560:
  1822   0016CE  5010               	movf	___lwmod@divisor^0,w,c
  1823   0016D0  5C0E               	subwf	___lwmod@dividend^0,w,c
  1824   0016D2  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1825   0016D4  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1826   0016D6  A0D8               	btfss	status,0,c
  1827   0016D8  D004               	goto	l2017
  1828   0016DA  5010               	movf	___lwmod@divisor^0,w,c
  1829   0016DC  5E0E               	subwf	___lwmod@dividend^0,f,c
  1830   0016DE  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1831   0016E0  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1832   0016E2                     l2017:
  1833   0016E2  90D8               	bcf	status,0,c
  1834   0016E4  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1835   0016E6  3210               	rrcf	___lwmod@divisor^0,f,c
  1836   0016E8  2E12               	decfsz	___lwmod@counter^0,f,c
  1837   0016EA  D7F1               	goto	u1560
  1838   0016EC                     l789:
  1839   0016EC  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1840   0016F0  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1841   0016F4  0012               	return		;funcret
  1842   0016F6                     __end_of___lwmod:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function ___lwdiv *****************
  1846 ;; Defined at:
  1847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  dividend        2   19[COMRAM] unsigned int 
  1850 ;;  divisor         2   21[COMRAM] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  quotient        2   23[COMRAM] unsigned int 
  1853 ;;  counter         1   25[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2   19[COMRAM] unsigned int 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         4       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        7 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 5
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text3
  1878   00153A                     __ptext3:
  1879                           	callstack 0
  1880   00153A                     ___lwdiv:
  1881                           	callstack 25
  1882                           
  1883                           ;incstack = 0
  1884   00153A  0E00               	movlw	0
  1885   00153C  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  1886   00153E  0E00               	movlw	0
  1887   001540  6E18               	movwf	___lwdiv@quotient^0,c
  1888   001542  5016               	movf	___lwdiv@divisor^0,w,c
  1889   001544  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1890   001546  B4D8               	btfsc	status,2,c
  1891   001548  D01C               	goto	l779
  1892   00154A  0E01               	movlw	1
  1893   00154C  6E1A               	movwf	___lwdiv@counter^0,c
  1894   00154E  D004               	goto	l1991
  1895   001550                     l1989:
  1896   001550  90D8               	bcf	status,0,c
  1897   001552  3616               	rlcf	___lwdiv@divisor^0,f,c
  1898   001554  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1899   001556  2A1A               	incf	___lwdiv@counter^0,f,c
  1900   001558                     l1991:
  1901   001558  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1902   00155A  D7FA               	goto	l1989
  1903   00155C                     u1530:
  1904   00155C  90D8               	bcf	status,0,c
  1905   00155E  3618               	rlcf	___lwdiv@quotient^0,f,c
  1906   001560  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1907   001562  5016               	movf	___lwdiv@divisor^0,w,c
  1908   001564  5C14               	subwf	___lwdiv@dividend^0,w,c
  1909   001566  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1910   001568  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1911   00156A  A0D8               	btfss	status,0,c
  1912   00156C  D005               	goto	l2001
  1913   00156E  5016               	movf	___lwdiv@divisor^0,w,c
  1914   001570  5E14               	subwf	___lwdiv@dividend^0,f,c
  1915   001572  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1916   001574  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1917   001576  8018               	bsf	___lwdiv@quotient^0,0,c
  1918   001578                     l2001:
  1919   001578  90D8               	bcf	status,0,c
  1920   00157A  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1921   00157C  3216               	rrcf	___lwdiv@divisor^0,f,c
  1922   00157E  2E1A               	decfsz	___lwdiv@counter^0,f,c
  1923   001580  D7ED               	goto	u1530
  1924   001582                     l779:
  1925   001582  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1926   001586  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1927   00158A  0012               	return		;funcret
  1928   00158C                     __end_of___lwdiv:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function ___lmul *****************
  1932 ;; Defined at:
  1933 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  multiplier      4   13[COMRAM] unsigned long 
  1936 ;;  multiplicand    4   17[COMRAM] unsigned long 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  product         4   21[COMRAM] unsigned long 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  4   13[COMRAM] unsigned long 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         8       0       0       0       0       0       0       0       0
  1949 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1951 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1952 ;;Total ram usage:       12 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 5
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text4
  1963   001438                     __ptext4:
  1964                           	callstack 0
  1965   001438                     ___lmul:
  1966                           	callstack 25
  1967                           
  1968                           ;incstack = 0
  1969   001438  0E00               	movlw	0
  1970   00143A  6E16               	movwf	___lmul@product^0,c
  1971   00143C  0E00               	movlw	0
  1972   00143E  6E17               	movwf	(___lmul@product+1)^0,c
  1973   001440  0E00               	movlw	0
  1974   001442  6E18               	movwf	(___lmul@product+2)^0,c
  1975   001444  0E00               	movlw	0
  1976   001446  6E19               	movwf	(___lmul@product+3)^0,c
  1977   001448                     l1937:
  1978   001448  A00E               	btfss	___lmul@multiplier^0,0,c
  1979   00144A  D008               	goto	l1941
  1980   00144C  5012               	movf	___lmul@multiplicand^0,w,c
  1981   00144E  2616               	addwf	___lmul@product^0,f,c
  1982   001450  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  1983   001452  2217               	addwfc	(___lmul@product+1)^0,f,c
  1984   001454  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  1985   001456  2218               	addwfc	(___lmul@product+2)^0,f,c
  1986   001458  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  1987   00145A  2219               	addwfc	(___lmul@product+3)^0,f,c
  1988   00145C                     l1941:
  1989   00145C  90D8               	bcf	status,0,c
  1990   00145E  3612               	rlcf	___lmul@multiplicand^0,f,c
  1991   001460  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1992   001462  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1993   001464  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1994   001466  90D8               	bcf	status,0,c
  1995   001468  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  1996   00146A  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  1997   00146C  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  1998   00146E  320E               	rrcf	___lmul@multiplier^0,f,c
  1999   001470  500E               	movf	___lmul@multiplier^0,w,c
  2000   001472  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2001   001474  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2002   001476  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2003   001478  A4D8               	btfss	status,2,c
  2004   00147A  D7E6               	goto	l1937
  2005   00147C  C016  F00E         	movff	___lmul@product,?___lmul
  2006   001480  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2007   001484  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2008   001488  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2009   00148C  0012               	return		;funcret
  2010   00148E                     __end_of___lmul:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function ___llmod *****************
  2014 ;; Defined at:
  2015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  dividend        4   13[COMRAM] unsigned long 
  2018 ;;  divisor         4   17[COMRAM] unsigned long 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  counter         1   21[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  4   13[COMRAM] unsigned long 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2030 ;;      Params:         8       0       0       0       0       0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2033 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2034 ;;Total ram usage:        9 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 5
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text5
  2045   0013D2                     __ptext5:
  2046                           	callstack 0
  2047   0013D2                     ___llmod:
  2048                           	callstack 25
  2049                           
  2050                           ;incstack = 0
  2051   0013D2  5012               	movf	___llmod@divisor^0,w,c
  2052   0013D4  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2053   0013D6  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2054   0013D8  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2055   0013DA  B4D8               	btfsc	status,2,c
  2056   0013DC  D024               	goto	l708
  2057   0013DE  0E01               	movlw	1
  2058   0013E0  6E16               	movwf	___llmod@counter^0,c
  2059   0013E2  D006               	goto	l1973
  2060   0013E4                     l1971:
  2061   0013E4  90D8               	bcf	status,0,c
  2062   0013E6  3612               	rlcf	___llmod@divisor^0,f,c
  2063   0013E8  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2064   0013EA  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2065   0013EC  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2066   0013EE  2A16               	incf	___llmod@counter^0,f,c
  2067   0013F0                     l1973:
  2068   0013F0  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2069   0013F2  D7F8               	goto	l1971
  2070   0013F4                     u1500:
  2071   0013F4  5012               	movf	___llmod@divisor^0,w,c
  2072   0013F6  5C0E               	subwf	___llmod@dividend^0,w,c
  2073   0013F8  5013               	movf	(___llmod@divisor+1)^0,w,c
  2074   0013FA  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2075   0013FC  5014               	movf	(___llmod@divisor+2)^0,w,c
  2076   0013FE  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2077   001400  5015               	movf	(___llmod@divisor+3)^0,w,c
  2078   001402  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2079   001404  A0D8               	btfss	status,0,c
  2080   001406  D008               	goto	l1979
  2081   001408  5012               	movf	___llmod@divisor^0,w,c
  2082   00140A  5E0E               	subwf	___llmod@dividend^0,f,c
  2083   00140C  5013               	movf	(___llmod@divisor+1)^0,w,c
  2084   00140E  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2085   001410  5014               	movf	(___llmod@divisor+2)^0,w,c
  2086   001412  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2087   001414  5015               	movf	(___llmod@divisor+3)^0,w,c
  2088   001416  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2089   001418                     l1979:
  2090   001418  90D8               	bcf	status,0,c
  2091   00141A  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2092   00141C  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2093   00141E  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2094   001420  3212               	rrcf	___llmod@divisor^0,f,c
  2095   001422  2E16               	decfsz	___llmod@counter^0,f,c
  2096   001424  D7E7               	goto	u1500
  2097   001426                     l708:
  2098   001426  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2099   00142A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2100   00142E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2101   001432  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2102   001436  0012               	return		;funcret
  2103   001438                     __end_of___llmod:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function ___lldiv *****************
  2107 ;; Defined at:
  2108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  dividend        4   13[COMRAM] unsigned long 
  2111 ;;  divisor         4   17[COMRAM] unsigned long 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  quotient        4   21[COMRAM] unsigned long 
  2114 ;;  counter         1   25[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  4   13[COMRAM] unsigned long 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         8       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2127 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:       13 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 5
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text6
  2139   001258                     __ptext6:
  2140                           	callstack 0
  2141   001258                     ___lldiv:
  2142                           	callstack 25
  2143                           
  2144                           ;incstack = 0
  2145   001258  0E00               	movlw	0
  2146   00125A  6E16               	movwf	___lldiv@quotient^0,c
  2147   00125C  0E00               	movlw	0
  2148   00125E  6E17               	movwf	(___lldiv@quotient+1)^0,c
  2149   001260  0E00               	movlw	0
  2150   001262  6E18               	movwf	(___lldiv@quotient+2)^0,c
  2151   001264  0E00               	movlw	0
  2152   001266  6E19               	movwf	(___lldiv@quotient+3)^0,c
  2153   001268  5012               	movf	___lldiv@divisor^0,w,c
  2154   00126A  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  2155   00126C  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  2156   00126E  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  2157   001270  B4D8               	btfsc	status,2,c
  2158   001272  D02A               	goto	l327
  2159   001274  0E01               	movlw	1
  2160   001276  6E1A               	movwf	___lldiv@counter^0,c
  2161   001278  D006               	goto	l1953
  2162   00127A                     l1951:
  2163   00127A  90D8               	bcf	status,0,c
  2164   00127C  3612               	rlcf	___lldiv@divisor^0,f,c
  2165   00127E  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  2166   001280  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  2167   001282  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  2168   001284  2A1A               	incf	___lldiv@counter^0,f,c
  2169   001286                     l1953:
  2170   001286  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  2171   001288  D7F8               	goto	l1951
  2172   00128A                     u1470:
  2173   00128A  90D8               	bcf	status,0,c
  2174   00128C  3616               	rlcf	___lldiv@quotient^0,f,c
  2175   00128E  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  2176   001290  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  2177   001292  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  2178   001294  5012               	movf	___lldiv@divisor^0,w,c
  2179   001296  5C0E               	subwf	___lldiv@dividend^0,w,c
  2180   001298  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2181   00129A  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  2182   00129C  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2183   00129E  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  2184   0012A0  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2185   0012A2  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  2186   0012A4  A0D8               	btfss	status,0,c
  2187   0012A6  D009               	goto	l1963
  2188   0012A8  5012               	movf	___lldiv@divisor^0,w,c
  2189   0012AA  5E0E               	subwf	___lldiv@dividend^0,f,c
  2190   0012AC  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2191   0012AE  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  2192   0012B0  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2193   0012B2  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  2194   0012B4  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2195   0012B6  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  2196   0012B8  8016               	bsf	___lldiv@quotient^0,0,c
  2197   0012BA                     l1963:
  2198   0012BA  90D8               	bcf	status,0,c
  2199   0012BC  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  2200   0012BE  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  2201   0012C0  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  2202   0012C2  3212               	rrcf	___lldiv@divisor^0,f,c
  2203   0012C4  2E1A               	decfsz	___lldiv@counter^0,f,c
  2204   0012C6  D7E1               	goto	u1470
  2205   0012C8                     l327:
  2206   0012C8  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  2207   0012CC  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  2208   0012D0  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  2209   0012D4  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  2210   0012D8  0012               	return		;funcret
  2211   0012DA                     __end_of___lldiv:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _MensajeLCD_Word *****************
  2215 ;; Defined at:
  2216 ;;		line 245 in file "LibLCDXC8.h"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  a               1   18[COMRAM] PTR unsigned char 
  2219 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  2220 ;;		 -> STR_2(5), STR_1(8), 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  i               2   20[COMRAM] int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2232 ;;      Params:         1       0       0       0       0       0       0       0       0
  2233 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2234 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2235 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2236 ;;Total ram usage:        4 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 8
  2239 ;; This function calls:
  2240 ;;		_EscribeLCD_c
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text7
  2247   00158C                     __ptext7:
  2248                           	callstack 0
  2249   00158C                     _MensajeLCD_Word:
  2250                           	callstack 22
  2251                           
  2252                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  2253                           
  2254                           ;incstack = 0
  2255   00158C  0E00               	movlw	0
  2256   00158E  6E16               	movwf	(MensajeLCD_Word@i+1)^0,c
  2257   001590  0E00               	movlw	0
  2258   001592  6E15               	movwf	MensajeLCD_Word@i^0,c
  2259   001594                     l1919:
  2260                           
  2261                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  2262   001594  5013               	movf	MensajeLCD_Word@a^0,w,c
  2263   001596  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2264   001598  6E14               	movwf	??_MensajeLCD_Word^0,c
  2265   00159A  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2266   00159E                     	if	1	;There is more than 1 active tblptr byte
  2267   00159E  0E08               	movlw	high __smallconst
  2268   0015A0  6EF7               	movwf	tblptrh,c
  2269   0015A2                     	endif
  2270   0015A2                     	if	0	;tblptru may be non-zero
  2271   0015A2                     	endif
  2272   0015A2                     	if	0	;tblptru may be non-zero
  2273   0015A2                     	endif
  2274   0015A2  0008               	tblrd		*
  2275   0015A4  50F5               	movf	tablat,w,c
  2276   0015A6  0900               	iorlw	0
  2277   0015A8  B4D8               	btfsc	status,2,c
  2278   0015AA  0012               	return	
  2279                           
  2280                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  2281   0015AC  5013               	movf	MensajeLCD_Word@a^0,w,c
  2282   0015AE  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2283   0015B0  6E14               	movwf	??_MensajeLCD_Word^0,c
  2284   0015B2  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2285   0015B6                     	if	1	;There is more than 1 active tblptr byte
  2286   0015B6  0E08               	movlw	high __smallconst
  2287   0015B8  6EF7               	movwf	tblptrh,c
  2288   0015BA                     	endif
  2289   0015BA                     	if	0	;tblptru may be non-zero
  2290   0015BA                     	endif
  2291   0015BA                     	if	0	;tblptru may be non-zero
  2292   0015BA                     	endif
  2293   0015BA  0008               	tblrd		*
  2294   0015BC  50F5               	movf	tablat,w,c
  2295   0015BE  ECAB  F00B         	call	_EscribeLCD_c
  2296   0015C2  4A15               	infsnz	MensajeLCD_Word@i^0,f,c
  2297   0015C4  2A16               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2298   0015C6  BE16               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2299   0015C8  D7E5               	goto	l1919
  2300   0015CA  5016               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2301   0015CC  E105               	bnz	u1430
  2302   0015CE  0E10               	movlw	16
  2303   0015D0  5C15               	subwf	MensajeLCD_Word@i^0,w,c
  2304   0015D2  B0D8               	btfsc	status,0,c
  2305   0015D4  0012               	return	
  2306   0015D6  D7DE               	goto	l1919
  2307   0015D8                     u1430:
  2308   0015D8  0012               	return		;funcret
  2309   0015DA                     __end_of_MensajeLCD_Word:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _EscribeLCD_c *****************
  2313 ;; Defined at:
  2314 ;;		line 146 in file "LibLCDXC8.h"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  a               1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  a               1   17[COMRAM] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2331 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 7
  2335 ;; This function calls:
  2336 ;;		_EnviaDato
  2337 ;;		_HabilitaLCD
  2338 ;;		_RetardoLCD
  2339 ;; This function is called by:
  2340 ;;		_MensajeLCD_Word
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text8
  2346   001756                     __ptext8:
  2347                           	callstack 0
  2348   001756                     _EscribeLCD_c:
  2349                           	callstack 22
  2350                           
  2351                           ;incstack = 0
  2352                           ;EscribeLCD_c@a stored from wreg
  2353   001756  6E12               	movwf	EscribeLCD_c@a^0,c
  2354                           
  2355                           ;LibLCDXC8.h: 150: LATE0=1;
  2356   001758  808D               	bsf	3981,0,c	;volatile
  2357                           
  2358                           ;LibLCDXC8.h: 151: EnviaDato(a);
  2359   00175A  5012               	movf	EscribeLCD_c@a^0,w,c
  2360   00175C  EC14  F00B         	call	_EnviaDato
  2361                           
  2362                           ;LibLCDXC8.h: 152: HabilitaLCD();
  2363   001760  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2364                           
  2365                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  2366   001764  0E04               	movlw	4
  2367   001766  EC47  F00A         	call	_RetardoLCD
  2368   00176A  0012               	return		;funcret
  2369   00176C                     __end_of_EscribeLCD_c:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _LeerTeclado *****************
  2373 ;; Defined at:
  2374 ;;		line 206 in file "Laboratorio4.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        1 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 5
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text9
  2403   0010A2                     __ptext9:
  2404                           	callstack 0
  2405   0010A2                     _LeerTeclado:
  2406                           	callstack 25
  2407                           
  2408                           ;Laboratorio4.c: 207: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2409                           
  2410                           ;incstack = 0
  2411   0010A2  B881               	btfsc	3969,4,c	;volatile
  2412   0010A4  AA81               	btfss	3969,5,c	;volatile
  2413   0010A6  D004               	goto	u140
  2414   0010A8  AC81               	btfss	3969,6,c	;volatile
  2415   0010AA  D002               	goto	u140
  2416   0010AC  BE81               	btfsc	3969,7,c	;volatile
  2417   0010AE  D7F9               	goto	__ptext9
  2418   0010B0                     u140:
  2419                           
  2420                           ;Laboratorio4.c: 208: verificador = 1;
  2421   0010B0  0E00               	movlw	0
  2422   0010B2  6E2E               	movwf	(_verificador+1)^0,c
  2423   0010B4  0E01               	movlw	1
  2424   0010B6  6E2D               	movwf	_verificador^0,c
  2425                           
  2426                           ;Laboratorio4.c: 209: LATB=0b11111110;
  2427   0010B8  0EFE               	movlw	254
  2428   0010BA  6E8A               	movwf	138,c	;volatile
  2429                           
  2430                           ;Laboratorio4.c: 210: if(RB4==0) return '1';
  2431   0010BC  B881               	btfsc	3969,4,c	;volatile
  2432   0010BE  D002               	goto	l234
  2433   0010C0  0E31               	movlw	49
  2434   0010C2  0012               	return	
  2435   0010C4                     l234:
  2436                           
  2437                           ;Laboratorio4.c: 211: else if(RB5==0) return '2';
  2438   0010C4  BA81               	btfsc	3969,5,c	;volatile
  2439   0010C6  D002               	goto	l237
  2440   0010C8  0E32               	movlw	50
  2441   0010CA  0012               	return	
  2442   0010CC                     l237:
  2443                           
  2444                           ;Laboratorio4.c: 212: else if(RB6==0) return '3';
  2445   0010CC  BC81               	btfsc	3969,6,c	;volatile
  2446   0010CE  D002               	goto	l1245
  2447   0010D0  0E33               	movlw	51
  2448   0010D2  0012               	return	
  2449   0010D4                     l1245:
  2450                           
  2451                           ;Laboratorio4.c: 213: else if(RB7==0 & RC6==0) return '+';
  2452   0010D4  BC82               	btfsc	3970,6,c	;volatile
  2453   0010D6  D002               	goto	u180
  2454   0010D8  0E01               	movlw	1
  2455   0010DA  D001               	goto	u182
  2456   0010DC                     u180:
  2457   0010DC  0E00               	movlw	0
  2458   0010DE                     u182:
  2459   0010DE  6E0E               	movwf	??_LeerTeclado^0,c
  2460   0010E0  BE81               	btfsc	3969,7,c	;volatile
  2461   0010E2  D002               	goto	u190
  2462   0010E4  0E01               	movlw	1
  2463   0010E6  D001               	goto	u192
  2464   0010E8                     u190:
  2465   0010E8  0E00               	movlw	0
  2466   0010EA                     u192:
  2467   0010EA  140E               	andwf	??_LeerTeclado^0,w,c
  2468   0010EC  A0E8               	btfss	wreg,0,c
  2469   0010EE  D002               	goto	l1253
  2470   0010F0  0E2B               	movlw	43
  2471   0010F2  0012               	return	
  2472   0010F4                     l1253:
  2473                           
  2474                           ;Laboratorio4.c: 214: else if(RB7==0 & RC6==1) return '!';
  2475   0010F4  AC82               	btfss	3970,6,c	;volatile
  2476   0010F6  D002               	goto	u210
  2477   0010F8  0E01               	movlw	1
  2478   0010FA  D001               	goto	u212
  2479   0010FC                     u210:
  2480   0010FC  0E00               	movlw	0
  2481   0010FE                     u212:
  2482   0010FE  6E0E               	movwf	??_LeerTeclado^0,c
  2483   001100  BE81               	btfsc	3969,7,c	;volatile
  2484   001102  D002               	goto	u220
  2485   001104  0E01               	movlw	1
  2486   001106  D001               	goto	u222
  2487   001108                     u220:
  2488   001108  0E00               	movlw	0
  2489   00110A                     u222:
  2490   00110A  140E               	andwf	??_LeerTeclado^0,w,c
  2491   00110C  A0E8               	btfss	wreg,0,c
  2492   00110E  D002               	goto	l1261
  2493   001110  0E21               	movlw	33
  2494   001112  0012               	return	
  2495   001114                     l1261:
  2496                           
  2497                           ;Laboratorio4.c: 215: else{;Laboratorio4.c: 216: LATB=0b11111101;
  2498   001114  0EFD               	movlw	253
  2499   001116  6E8A               	movwf	138,c	;volatile
  2500                           
  2501                           ;Laboratorio4.c: 217: if(RB4==0) return '4';
  2502   001118  B881               	btfsc	3969,4,c	;volatile
  2503   00111A  D002               	goto	l245
  2504   00111C  0E34               	movlw	52
  2505   00111E  0012               	return	
  2506   001120                     l245:
  2507                           
  2508                           ;Laboratorio4.c: 218: else if(RB5==0) return '5';
  2509   001120  BA81               	btfsc	3969,5,c	;volatile
  2510   001122  D002               	goto	l247
  2511   001124  0E35               	movlw	53
  2512   001126  0012               	return	
  2513   001128                     l247:
  2514                           
  2515                           ;Laboratorio4.c: 219: else if(RB6==0) return '6';
  2516   001128  BC81               	btfsc	3969,6,c	;volatile
  2517   00112A  D002               	goto	l1283
  2518   00112C  0E36               	movlw	54
  2519   00112E  0012               	return	
  2520   001130                     l1283:
  2521                           
  2522                           ;Laboratorio4.c: 220: else if(RB7==0 & RC6==0) return '-';
  2523   001130  BC82               	btfsc	3970,6,c	;volatile
  2524   001132  D002               	goto	u270
  2525   001134  0E01               	movlw	1
  2526   001136  D001               	goto	u272
  2527   001138                     u270:
  2528   001138  0E00               	movlw	0
  2529   00113A                     u272:
  2530   00113A  6E0E               	movwf	??_LeerTeclado^0,c
  2531   00113C  BE81               	btfsc	3969,7,c	;volatile
  2532   00113E  D002               	goto	u280
  2533   001140  0E01               	movlw	1
  2534   001142  D001               	goto	u282
  2535   001144                     u280:
  2536   001144  0E00               	movlw	0
  2537   001146                     u282:
  2538   001146  140E               	andwf	??_LeerTeclado^0,w,c
  2539   001148  A0E8               	btfss	wreg,0,c
  2540   00114A  D002               	goto	l1291
  2541   00114C  0E2D               	movlw	45
  2542   00114E  0012               	return	
  2543   001150                     l1291:
  2544                           
  2545                           ;Laboratorio4.c: 221: else if(RB7==0 & RC6==1) return '^';
  2546   001150  AC82               	btfss	3970,6,c	;volatile
  2547   001152  D002               	goto	u300
  2548   001154  0E01               	movlw	1
  2549   001156  D001               	goto	u302
  2550   001158                     u300:
  2551   001158  0E00               	movlw	0
  2552   00115A                     u302:
  2553   00115A  6E0E               	movwf	??_LeerTeclado^0,c
  2554   00115C  BE81               	btfsc	3969,7,c	;volatile
  2555   00115E  D002               	goto	u310
  2556   001160  0E01               	movlw	1
  2557   001162  D001               	goto	u312
  2558   001164                     u310:
  2559   001164  0E00               	movlw	0
  2560   001166                     u312:
  2561   001166  140E               	andwf	??_LeerTeclado^0,w,c
  2562   001168  A0E8               	btfss	wreg,0,c
  2563   00116A  D002               	goto	l1299
  2564   00116C  0E5E               	movlw	94
  2565   00116E  0012               	return	
  2566   001170                     l1299:
  2567                           
  2568                           ;Laboratorio4.c: 222: else{;Laboratorio4.c: 223: LATB=0b11111011;
  2569   001170  0EFB               	movlw	251
  2570   001172  6E8A               	movwf	138,c	;volatile
  2571                           
  2572                           ;Laboratorio4.c: 224: if(RB4==0) return '7';
  2573   001174  B881               	btfsc	3969,4,c	;volatile
  2574   001176  D002               	goto	l255
  2575   001178  0E37               	movlw	55
  2576   00117A  0012               	return	
  2577   00117C                     l255:
  2578                           
  2579                           ;Laboratorio4.c: 225: else if(RB5==0) return '8';
  2580   00117C  BA81               	btfsc	3969,5,c	;volatile
  2581   00117E  D002               	goto	l257
  2582   001180  0E38               	movlw	56
  2583   001182  0012               	return	
  2584   001184                     l257:
  2585                           
  2586                           ;Laboratorio4.c: 226: else if(RB6==0) return '9';
  2587   001184  BC81               	btfsc	3969,6,c	;volatile
  2588   001186  D002               	goto	l259
  2589   001188  0E39               	movlw	57
  2590   00118A  0012               	return	
  2591   00118C                     l259:
  2592                           
  2593                           ;Laboratorio4.c: 227: else if(RB7==0) return '/';
  2594   00118C  BE81               	btfsc	3969,7,c	;volatile
  2595   00118E  D002               	goto	l1327
  2596   001190  0E2F               	movlw	47
  2597   001192  0012               	return	
  2598   001194                     l1327:
  2599                           
  2600                           ;Laboratorio4.c: 228: else{;Laboratorio4.c: 229: LATB=0b11110111;
  2601   001194  0EF7               	movlw	247
  2602   001196  6E8A               	movwf	138,c	;volatile
  2603                           
  2604                           ;Laboratorio4.c: 230: if(RB4==0) return 'C';
  2605   001198  B881               	btfsc	3969,4,c	;volatile
  2606   00119A  D002               	goto	l263
  2607   00119C  0E43               	movlw	67
  2608   00119E  0012               	return	
  2609   0011A0                     l263:
  2610                           
  2611                           ;Laboratorio4.c: 231: else if(RB5==0) return '0';
  2612   0011A0  BA81               	btfsc	3969,5,c	;volatile
  2613   0011A2  D002               	goto	l265
  2614   0011A4  0E30               	movlw	48
  2615   0011A6  0012               	return	
  2616   0011A8                     l265:
  2617                           
  2618                           ;Laboratorio4.c: 232: else if(RB6==0) return '=';
  2619   0011A8  BC81               	btfsc	3969,6,c	;volatile
  2620   0011AA  D002               	goto	l267
  2621   0011AC  0E3D               	movlw	61
  2622   0011AE  0012               	return	
  2623   0011B0                     l267:
  2624                           
  2625                           ;Laboratorio4.c: 233: else if(RB7==0) return 'x';
  2626   0011B0  BE81               	btfsc	3969,7,c	;volatile
  2627   0011B2  D002               	goto	l264
  2628   0011B4  0E78               	movlw	120
  2629   0011B6  0012               	return	
  2630   0011B8                     l264:
  2631                           
  2632                           ;Laboratorio4.c: 234: };Laboratorio4.c: 235: };Laboratorio4.c: 236: };Laboratorio4.c: 23
      +                          7: return '?';
  2633   0011B8  0E3F               	movlw	63
  2634   0011BA  0012               	return		;funcret
  2635   0011BC                     __end_of_LeerTeclado:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _InicializaLCD *****************
  2639 ;; Defined at:
  2640 ;;		line 72 in file "LibLCDXC8.h"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 8
  2661 ;; This function calls:
  2662 ;;		_BorraLCD
  2663 ;;		_EnviaDato
  2664 ;;		_HabilitaLCD
  2665 ;;		_RetardoLCD
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text10
  2672   0011BC                     __ptext10:
  2673                           	callstack 0
  2674   0011BC                     _InicializaLCD:
  2675                           	callstack 22
  2676                           
  2677                           ;LibLCDXC8.h: 74: LATE0=0;
  2678                           
  2679                           ;incstack = 0
  2680   0011BC  908D               	bcf	3981,0,c	;volatile
  2681                           
  2682                           ;LibLCDXC8.h: 75: if(interfaz==4)
  2683   0011BE  0E04               	movlw	4
  2684   0011C0  1842               	xorwf	_interfaz^0,w,c
  2685   0011C2  A4D8               	btfss	status,2,c
  2686   0011C4  D004               	goto	l1143
  2687                           
  2688                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2689   0011C6  508C               	movf	140,w,c	;volatile
  2690   0011C8  0B0F               	andlw	15
  2691   0011CA  0930               	iorlw	48
  2692   0011CC  D001               	goto	L4
  2693   0011CE                     l1143:
  2694                           
  2695                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  2696   0011CE  0E3F               	movlw	63
  2697   0011D0                     L4:
  2698   0011D0  6E8C               	movwf	140,c	;volatile
  2699                           
  2700                           ;LibLCDXC8.h: 79: HabilitaLCD();
  2701   0011D2  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2702                           
  2703                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  2704   0011D6  0E01               	movlw	1
  2705   0011D8  EC47  F00A         	call	_RetardoLCD
  2706                           
  2707                           ;LibLCDXC8.h: 81: if(interfaz==4)
  2708   0011DC  0E04               	movlw	4
  2709   0011DE  1842               	xorwf	_interfaz^0,w,c
  2710   0011E0  A4D8               	btfss	status,2,c
  2711   0011E2  D004               	goto	l1153
  2712                           
  2713                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2714   0011E4  508C               	movf	140,w,c	;volatile
  2715   0011E6  0B0F               	andlw	15
  2716   0011E8  0930               	iorlw	48
  2717   0011EA  D001               	goto	L5
  2718   0011EC                     l1153:
  2719                           
  2720                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  2721   0011EC  0E3F               	movlw	63
  2722   0011EE                     L5:
  2723   0011EE  6E8C               	movwf	140,c	;volatile
  2724                           
  2725                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2726   0011F0  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2727                           
  2728                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  2729   0011F4  0E03               	movlw	3
  2730   0011F6  EC47  F00A         	call	_RetardoLCD
  2731                           
  2732                           ;LibLCDXC8.h: 87: if(interfaz==4)
  2733   0011FA  0E04               	movlw	4
  2734   0011FC  1842               	xorwf	_interfaz^0,w,c
  2735   0011FE  A4D8               	btfss	status,2,c
  2736   001200  D004               	goto	l1163
  2737                           
  2738                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  2739   001202  508C               	movf	140,w,c	;volatile
  2740   001204  0B0F               	andlw	15
  2741   001206  0930               	iorlw	48
  2742   001208  D001               	goto	L6
  2743   00120A                     l1163:
  2744                           
  2745                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  2746   00120A  0E3F               	movlw	63
  2747   00120C                     L6:
  2748   00120C  6E8C               	movwf	140,c	;volatile
  2749                           
  2750                           ;LibLCDXC8.h: 91: HabilitaLCD();
  2751   00120E  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2752                           
  2753                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  2754   001212  0E04               	movlw	4
  2755   001214  EC47  F00A         	call	_RetardoLCD
  2756                           
  2757                           ;LibLCDXC8.h: 93: if(interfaz==4){
  2758   001218  0E04               	movlw	4
  2759   00121A  1842               	xorwf	_interfaz^0,w,c
  2760   00121C  A4D8               	btfss	status,2,c
  2761   00121E  D011               	goto	l1183
  2762                           
  2763                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  2764   001220  508C               	movf	140,w,c	;volatile
  2765   001222  0B0F               	andlw	15
  2766   001224  0920               	iorlw	32
  2767   001226  6E8C               	movwf	140,c	;volatile
  2768                           
  2769                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2770   001228  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2771                           
  2772                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2773   00122C  0E04               	movlw	4
  2774   00122E  EC47  F00A         	call	_RetardoLCD
  2775                           
  2776                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  2777   001232  0E2F               	movlw	47
  2778   001234  EC14  F00B         	call	_EnviaDato
  2779                           
  2780                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2781   001238  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2782                           
  2783                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2784   00123C  0E04               	movlw	4
  2785   00123E  EC47  F00A         	call	_RetardoLCD
  2786   001242                     l1183:
  2787                           
  2788                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  2789   001242  ECCC  F00B         	call	_BorraLCD	;wreg free
  2790                           
  2791                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  2792   001246  0E0F               	movlw	15
  2793   001248  EC14  F00B         	call	_EnviaDato
  2794                           
  2795                           ;LibLCDXC8.h: 103: HabilitaLCD();
  2796   00124C  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2797                           
  2798                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  2799   001250  0E04               	movlw	4
  2800   001252  EC47  F00A         	call	_RetardoLCD
  2801   001256  0012               	return		;funcret
  2802   001258                     __end_of_InicializaLCD:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _BorraLCD *****************
  2806 ;; Defined at:
  2807 ;;		line 113 in file "LibLCDXC8.h"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 7
  2828 ;; This function calls:
  2829 ;;		_EnviaDato
  2830 ;;		_HabilitaLCD
  2831 ;;		_RetardoLCD
  2832 ;; This function is called by:
  2833 ;;		_InicializaLCD
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text11
  2839   001798                     __ptext11:
  2840                           	callstack 0
  2841   001798                     _BorraLCD:
  2842                           	callstack 22
  2843                           
  2844                           ;LibLCDXC8.h: 115: LATE0=0;
  2845                           
  2846                           ;incstack = 0
  2847   001798  908D               	bcf	3981,0,c	;volatile
  2848                           
  2849                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  2850   00179A  0E01               	movlw	1
  2851   00179C  EC14  F00B         	call	_EnviaDato
  2852                           
  2853                           ;LibLCDXC8.h: 117: HabilitaLCD();
  2854   0017A0  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2855                           
  2856                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  2857   0017A4  0E02               	movlw	2
  2858   0017A6  EC47  F00A         	call	_RetardoLCD
  2859   0017AA  0012               	return		;funcret
  2860   0017AC                     __end_of_BorraLCD:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _DireccionaLCD *****************
  2864 ;; Defined at:
  2865 ;;		line 257 in file "LibLCDXC8.h"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  a               1    wreg     unsigned char 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  a               1   17[COMRAM] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        1 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 7
  2886 ;; This function calls:
  2887 ;;		_EnviaDato
  2888 ;;		_HabilitaLCD
  2889 ;;		_RetardoLCD
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text12
  2896   00176C                     __ptext12:
  2897                           	callstack 0
  2898   00176C                     _DireccionaLCD:
  2899                           	callstack 23
  2900                           
  2901                           ;incstack = 0
  2902                           ;DireccionaLCD@a stored from wreg
  2903   00176C  6E12               	movwf	DireccionaLCD@a^0,c
  2904                           
  2905                           ;LibLCDXC8.h: 260: LATE0=0;
  2906   00176E  908D               	bcf	3981,0,c	;volatile
  2907                           
  2908                           ;LibLCDXC8.h: 261: EnviaDato(a);
  2909   001770  5012               	movf	DireccionaLCD@a^0,w,c
  2910   001772  EC14  F00B         	call	_EnviaDato
  2911                           
  2912                           ;LibLCDXC8.h: 262: HabilitaLCD();
  2913   001776  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2914                           
  2915                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  2916   00177A  0E04               	movlw	4
  2917   00177C  EC47  F00A         	call	_RetardoLCD
  2918   001780  0012               	return		;funcret
  2919   001782                     __end_of_DireccionaLCD:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _EnviaDato *****************
  2923 ;; Defined at:
  2924 ;;		line 60 in file "LibLCDXC8.h"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  a               1    wreg     unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  a               1   16[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        2 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 6
  2945 ;; This function calls:
  2946 ;;		_HabilitaLCD
  2947 ;;		_RetardoLCD
  2948 ;; This function is called by:
  2949 ;;		_InicializaLCD
  2950 ;;		_BorraLCD
  2951 ;;		_EscribeLCD_c
  2952 ;;		_DireccionaLCD
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text13
  2957   001628                     __ptext13:
  2958                           	callstack 0
  2959   001628                     _EnviaDato:
  2960                           	callstack 22
  2961                           
  2962                           ;incstack = 0
  2963                           ;EnviaDato@a stored from wreg
  2964   001628  6E11               	movwf	EnviaDato@a^0,c
  2965                           
  2966                           ;LibLCDXC8.h: 61: if(interfaz==4){
  2967   00162A  0E04               	movlw	4
  2968   00162C  1842               	xorwf	_interfaz^0,w,c
  2969   00162E  A4D8               	btfss	status,2,c
  2970   001630  D017               	goto	l1095
  2971                           
  2972                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2973   001632  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  2974   001636  0EF0               	movlw	240
  2975   001638  1610               	andwf	??_EnviaDato^0,f,c
  2976   00163A  508C               	movf	140,w,c	;volatile
  2977   00163C  0B0F               	andlw	15
  2978   00163E  1010               	iorwf	??_EnviaDato^0,w,c
  2979   001640  6E8C               	movwf	140,c	;volatile
  2980                           
  2981                           ;LibLCDXC8.h: 63: HabilitaLCD();
  2982   001642  ECE0  F00B         	call	_HabilitaLCD	;wreg free
  2983                           
  2984                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  2985   001646  0E01               	movlw	1
  2986   001648  EC47  F00A         	call	_RetardoLCD
  2987                           
  2988                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  2989   00164C  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  2990   001650  3A10               	swapf	??_EnviaDato^0,f,c
  2991   001652  0EF0               	movlw	240
  2992   001654  1610               	andwf	??_EnviaDato^0,f,c
  2993   001656  508C               	movf	140,w,c	;volatile
  2994   001658  0B0F               	andlw	15
  2995   00165A  1010               	iorwf	??_EnviaDato^0,w,c
  2996   00165C  6E8C               	movwf	140,c	;volatile
  2997                           
  2998                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  2999   00165E  0012               	return	
  3000   001660                     l1095:
  3001   001660  0E08               	movlw	8
  3002   001662  1842               	xorwf	_interfaz^0,w,c
  3003   001664  A4D8               	btfss	status,2,c
  3004   001666  0012               	return	
  3005                           
  3006                           ;LibLCDXC8.h: 69: LATD=a;
  3007   001668  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3008   00166C  0012               	return		;funcret
  3009   00166E                     __end_of_EnviaDato:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _RetardoLCD *****************
  3013 ;; Defined at:
  3014 ;;		line 293 in file "LibLCDXC8.h"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  a               1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  a               1   14[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3030 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3031 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3032 ;;Total ram usage:        2 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 5
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_EnviaDato
  3039 ;;		_InicializaLCD
  3040 ;;		_BorraLCD
  3041 ;;		_EscribeLCD_c
  3042 ;;		_DireccionaLCD
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text14
  3047   00148E                     __ptext14:
  3048                           	callstack 0
  3049   00148E                     _RetardoLCD:
  3050                           	callstack 23
  3051                           
  3052                           ;incstack = 0
  3053                           ;RetardoLCD@a stored from wreg
  3054   00148E  6E0F               	movwf	RetardoLCD@a^0,c
  3055                           
  3056                           ;LibLCDXC8.h: 294: switch(a){
  3057   001490  D01B               	goto	l1063
  3058   001492                     l1053:
  3059   001492  0E05               	movlw	5
  3060   001494  6E0E               	movwf	??_RetardoLCD^0,c
  3061   001496  0EDE               	movlw	222
  3062   001498                     u2447:
  3063   001498  2EE8               	decfsz	wreg,f,c
  3064   00149A  D7FE               	bra	u2447
  3065   00149C  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3066   00149E  D7FC               	bra	u2447
  3067                           
  3068                           ;LibLCDXC8.h: 297: break;
  3069   0014A0  0012               	return	
  3070   0014A2                     l1055:
  3071   0014A2  0E53               	movlw	83
  3072   0014A4                     u2457:
  3073   0014A4  2EE8               	decfsz	wreg,f,c
  3074   0014A6  D7FE               	bra	u2457
  3075   0014A8  F000               	nop	
  3076                           
  3077                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3078   0014AA  0E35               	movlw	53
  3079   0014AC                     u2467:
  3080   0014AC  2EE8               	decfsz	wreg,f,c
  3081   0014AE  D7FE               	bra	u2467
  3082   0014B0  F000               	nop	
  3083                           
  3084                           ;LibLCDXC8.h: 301: break;
  3085   0014B2  0012               	return	
  3086   0014B4                     l1057:
  3087   0014B4  0E08               	movlw	8
  3088   0014B6                     u2477:
  3089   0014B6  2EE8               	decfsz	wreg,f,c
  3090   0014B8  D7FE               	bra	u2477
  3091   0014BA  F000               	nop	
  3092                           
  3093                           ;LibLCDXC8.h: 304: break;
  3094   0014BC  0012               	return	
  3095   0014BE                     l1059:
  3096   0014BE  0E03               	movlw	3
  3097   0014C0                     u2487:
  3098   0014C0  2EE8               	decfsz	wreg,f,c
  3099   0014C2  D7FE               	bra	u2487
  3100   0014C4  F000               	nop	
  3101                           
  3102                           ;LibLCDXC8.h: 307: break;
  3103   0014C6  0012               	return	
  3104   0014C8                     l1063:
  3105   0014C8  500F               	movf	RetardoLCD@a^0,w,c
  3106                           
  3107                           ; Switch size 1, requested type "simple"
  3108                           ; Number of cases is 4, Range of values is 1 to 4
  3109                           ; switch strategies available:
  3110                           ; Name         Instructions Cycles
  3111                           ; simple_byte           13     7 (average)
  3112                           ;	Chosen strategy is simple_byte
  3113   0014CA  0A01               	xorlw	1	; case 1
  3114   0014CC  B4D8               	btfsc	status,2,c
  3115   0014CE  D7E1               	goto	l1053
  3116   0014D0  0A03               	xorlw	3	; case 2
  3117   0014D2  B4D8               	btfsc	status,2,c
  3118   0014D4  D7E6               	goto	l1055
  3119   0014D6  0A01               	xorlw	1	; case 3
  3120   0014D8  B4D8               	btfsc	status,2,c
  3121   0014DA  D7EC               	goto	l1057
  3122   0014DC  0A07               	xorlw	7	; case 4
  3123   0014DE  A4D8               	btfss	status,2,c
  3124   0014E0  0012               	return	
  3125   0014E2  D7ED               	goto	l1059
  3126   0014E4                     __end_of_RetardoLCD:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _HabilitaLCD *****************
  3130 ;; Defined at:
  3131 ;;		line 106 in file "LibLCDXC8.h"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 5
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_EnviaDato
  3156 ;;		_InicializaLCD
  3157 ;;		_BorraLCD
  3158 ;;		_EscribeLCD_c
  3159 ;;		_DireccionaLCD
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text15
  3164   0017C0                     __ptext15:
  3165                           	callstack 0
  3166   0017C0                     _HabilitaLCD:
  3167                           	callstack 23
  3168                           
  3169                           ;LibLCDXC8.h: 108: LATE1=1;
  3170                           
  3171                           ;incstack = 0
  3172   0017C0  828D               	bsf	3981,1,c	;volatile
  3173                           
  3174                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3175   0017C2  0E03               	movlw	3
  3176   0017C4                     u2497:
  3177   0017C4  2EE8               	decfsz	wreg,f,c
  3178   0017C6  D7FE               	bra	u2497
  3179   0017C8  F000               	nop	
  3180                           
  3181                           ;LibLCDXC8.h: 111: LATE1=0;
  3182   0017CA  928D               	bcf	3981,1,c	;volatile
  3183   0017CC  0012               	return		;funcret
  3184   0017CE                     __end_of_HabilitaLCD:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _ColorRGB *****************
  3188 ;; Defined at:
  3189 ;;		line 240 in file "Laboratorio4.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3205 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3206 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 5
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text16
  3218   001358                     __ptext16:
  3219                           	callstack 0
  3220   001358                     _ColorRGB:
  3221                           	callstack 25
  3222                           
  3223                           ;Laboratorio4.c: 241: if(color==8) color = 0;
  3224                           
  3225                           ;incstack = 0
  3226   001358  0E08               	movlw	8
  3227   00135A  1831               	xorwf	_color^0,w,c
  3228   00135C  1032               	iorwf	(_color+1)^0,w,c
  3229   00135E  A4D8               	btfss	status,2,c
  3230   001360  D014               	goto	l1379
  3231   001362  0E00               	movlw	0
  3232   001364  6E32               	movwf	(_color+1)^0,c
  3233   001366  0E00               	movlw	0
  3234   001368  6E31               	movwf	_color^0,c
  3235   00136A  D00F               	goto	l1379
  3236   00136C                     l1361:
  3237                           
  3238                           ;Laboratorio4.c: 244: LATC = 0b00000000;
  3239   00136C  0E00               	movlw	0
  3240   00136E  D00B               	goto	L12
  3241   001370                     l1363:
  3242                           
  3243                           ;Laboratorio4.c: 247: LATC = 0b00000101;
  3244   001370  0E05               	movlw	5
  3245   001372  D009               	goto	L12
  3246   001374                     l1365:
  3247                           
  3248                           ;Laboratorio4.c: 250: LATC = 0b00000110;
  3249   001374  0E06               	movlw	6
  3250   001376  D007               	goto	L12
  3251   001378                     l1367:
  3252                           
  3253                           ;Laboratorio4.c: 253: LATC = 0b00000011;
  3254   001378  0E03               	movlw	3
  3255   00137A  D005               	goto	L12
  3256   00137C                     l1369:
  3257                           
  3258                           ;Laboratorio4.c: 256: LATC = 0b00000010;
  3259   00137C  0E02               	movlw	2
  3260   00137E  D003               	goto	L12
  3261   001380                     l1373:
  3262                           
  3263                           ;Laboratorio4.c: 262: LATC = 0b00000100;
  3264   001380  0E04               	movlw	4
  3265   001382  D001               	goto	L12
  3266   001384                     l1375:
  3267                           
  3268                           ;Laboratorio4.c: 265: LATC = 0b00000111;
  3269   001384  0E07               	movlw	7
  3270   001386                     L12:
  3271   001386  6E8B               	movwf	139,c	;volatile
  3272                           
  3273                           ;Laboratorio4.c: 266: break;
  3274   001388  D021               	goto	l1381
  3275   00138A                     l1379:
  3276   00138A  C031  F00E         	movff	_color,??_ColorRGB
  3277   00138E  C032  F00F         	movff	_color+1,??_ColorRGB+1
  3278                           
  3279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3280                           ; Switch size 1, requested type "simple"
  3281                           ; Number of cases is 1, Range of values is 0 to 0
  3282                           ; switch strategies available:
  3283                           ; Name         Instructions Cycles
  3284                           ; simple_byte            4     3 (average)
  3285                           ;	Chosen strategy is simple_byte
  3286   001392  500F               	movf	(??_ColorRGB+1)^0,w,c
  3287   001394  0A00               	xorlw	0	; case 0
  3288   001396  A4D8               	btfss	status,2,c
  3289   001398  D019               	goto	l1381
  3290                           
  3291                           ; Switch size 1, requested type "simple"
  3292                           ; Number of cases is 8, Range of values is 0 to 7
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; simple_byte           25    13 (average)
  3296                           ;	Chosen strategy is simple_byte
  3297   00139A  500E               	movf	??_ColorRGB^0,w,c
  3298   00139C  0A00               	xorlw	0	; case 0
  3299   00139E  B4D8               	btfsc	status,2,c
  3300   0013A0  D7E5               	goto	l1361
  3301   0013A2  0A01               	xorlw	1	; case 1
  3302   0013A4  B4D8               	btfsc	status,2,c
  3303   0013A6  D7E4               	goto	l1363
  3304   0013A8  0A03               	xorlw	3	; case 2
  3305   0013AA  B4D8               	btfsc	status,2,c
  3306   0013AC  D7E3               	goto	l1365
  3307   0013AE  0A01               	xorlw	1	; case 3
  3308   0013B0  B4D8               	btfsc	status,2,c
  3309   0013B2  D7E2               	goto	l1367
  3310   0013B4  0A07               	xorlw	7	; case 4
  3311   0013B6  B4D8               	btfsc	status,2,c
  3312   0013B8  D7E1               	goto	l1369
  3313   0013BA  0A01               	xorlw	1	; case 5
  3314   0013BC  B4D8               	btfsc	status,2,c
  3315   0013BE  D7DA               	goto	l1365
  3316   0013C0  0A03               	xorlw	3	; case 6
  3317   0013C2  B4D8               	btfsc	status,2,c
  3318   0013C4  D7DD               	goto	l1373
  3319   0013C6  0A01               	xorlw	1	; case 7
  3320   0013C8  B4D8               	btfsc	status,2,c
  3321   0013CA  D7DC               	goto	l1375
  3322   0013CC                     l1381:
  3323                           
  3324                           ;Laboratorio4.c: 270: color += 1;
  3325   0013CC  4A31               	infsnz	_color^0,f,c
  3326   0013CE  2A32               	incf	(_color+1)^0,f,c
  3327   0013D0  0012               	return		;funcret
  3328   0013D2                     __end_of_ColorRGB:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _ISR *****************
  3332 ;; Defined at:
  3333 ;;		line 273 in file "Laboratorio4.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 4
  3354 ;; This function calls:
  3355 ;;		i2_BorraLCD
  3356 ;;		i2_MensajeLCD_Word
  3357 ;; This function is called by:
  3358 ;;		Interrupt level 2
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	intcode
  3363   000008                     __pintcode:
  3364                           	callstack 0
  3365   000008                     _ISR:
  3366                           	callstack 22
  3367                           
  3368                           ;incstack = 0
  3369   000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3370   00000A  ED6D  F009         	call	int_func,f	;refresh shadow registers
  3371                           
  3372                           	psect	intcode_body
  3373   0012DA                     __pintcode_body:
  3374                           	callstack 22
  3375   0012DA                     int_func:
  3376                           	callstack 22
  3377   0012DA  0006               	pop		; remove dummy address from shadow register refresh
  3378   0012DC  CFF6 F00A          	movff	tblptrl,??_ISR
  3379   0012E0  CFF7 F00B          	movff	tblptrh,??_ISR+1
  3380   0012E4  CFF8 F00C          	movff	tblptru,??_ISR+2
  3381   0012E8  CFF5 F00D          	movff	tablat,??_ISR+3
  3382                           
  3383                           ;Laboratorio4.c: 274: if(TMR0IF==1){
  3384   0012EC  A4F2               	btfss	4082,2,c	;volatile
  3385   0012EE  D019               	goto	i2l2401
  3386                           
  3387                           ;Laboratorio4.c: 275: if(!verificador) contador = contador +1;
  3388   0012F0  502D               	movf	_verificador^0,w,c
  3389   0012F2  102E               	iorwf	(_verificador+1)^0,w,c
  3390   0012F4  A4D8               	btfss	status,2,c
  3391   0012F6  D007               	goto	i2l2395
  3392   0012F8  0E01               	movlw	1
  3393   0012FA  242F               	addwf	_contador^0,w,c
  3394   0012FC  6E2F               	movwf	_contador^0,c
  3395   0012FE  0E00               	movlw	0
  3396   001300  2030               	addwfc	(_contador+1)^0,w,c
  3397   001302  6E30               	movwf	(_contador+1)^0,c
  3398   001304  D004               	goto	i2l2397
  3399   001306                     i2l2395:
  3400                           
  3401                           ;Laboratorio4.c: 276: else contador = 0;
  3402   001306  0E00               	movlw	0
  3403   001308  6E30               	movwf	(_contador+1)^0,c
  3404   00130A  0E00               	movlw	0
  3405   00130C  6E2F               	movwf	_contador^0,c
  3406   00130E                     i2l2397:
  3407                           
  3408                           ;Laboratorio4.c: 277: TMR0IF=0;
  3409   00130E  94F2               	bcf	4082,2,c	;volatile
  3410                           
  3411                           ;Laboratorio4.c: 278: LATE2 = !LATE2;
  3412   001310  B48D               	btfsc	3981,2,c	;volatile
  3413   001312  D002               	goto	i2u238_40
  3414   001314  848D               	bsf	3981,2,c	;volatile
  3415   001316  D001               	goto	i2u239_45
  3416   001318                     i2u238_40:
  3417   001318  948D               	bcf	3981,2,c	;volatile
  3418   00131A                     i2u239_45:
  3419                           
  3420                           ;Laboratorio4.c: 279: TMR0 = 49911;
  3421   00131A  0EC2               	movlw	194
  3422   00131C  6ED7               	movwf	215,c	;volatile
  3423   00131E  0EF7               	movlw	247
  3424   001320  6ED6               	movwf	214,c	;volatile
  3425   001322                     i2l2401:
  3426                           
  3427                           ;Laboratorio4.c: 280: };Laboratorio4.c: 282: if(contador == 20){
  3428   001322  0E14               	movlw	20
  3429   001324  182F               	xorwf	_contador^0,w,c
  3430   001326  1030               	iorwf	(_contador+1)^0,w,c
  3431   001328  A4D8               	btfss	status,2,c
  3432   00132A  D00C               	goto	i2l297
  3433                           
  3434                           ;Laboratorio4.c: 283: if(!verificador){
  3435   00132C  502D               	movf	_verificador^0,w,c
  3436   00132E  102E               	iorwf	(_verificador+1)^0,w,c
  3437   001330  A4D8               	btfss	status,2,c
  3438   001332  D008               	goto	i2l297
  3439                           
  3440                           ;Laboratorio4.c: 284: BorraLCD();
  3441   001334  ECD6  F00B         	call	i2_BorraLCD	;wreg free
  3442                           
  3443                           ;Laboratorio4.c: 285: MensajeLCD_Word("En Resposo");
  3444   001338  0E12               	movlw	low STR_6
  3445   00133A  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3446   00133C  ECED  F00A         	call	i2_MensajeLCD_Word	;wreg free
  3447   001340  0003               	sleep		;# 
  3448   001342                     i2l294:
  3449   001342  D7FF               	goto	i2l294
  3450   001344                     i2l297:
  3451   001344  C00D  FFF5         	movff	??_ISR+3,tablat
  3452   001348  C00C  FFF8         	movff	??_ISR+2,tblptru
  3453   00134C  C00B  FFF7         	movff	??_ISR+1,tblptrh
  3454   001350  C00A  FFF6         	movff	??_ISR,tblptrl
  3455   001354  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3456   001356  0011               	retfie		f
  3457   001358                     __end_of_ISR:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function i2_MensajeLCD_Word *****************
  3461 ;; Defined at:
  3462 ;;		line 245 in file "LibLCDXC8.h"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  a               1    5[COMRAM] PTR unsigned char 
  3465 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  3466 ;;		 -> STR_2(5), STR_1(8), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  i               2    7[COMRAM] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:         1       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3481 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:        4 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 3
  3485 ;; This function calls:
  3486 ;;		i2_EscribeLCD_c
  3487 ;; This function is called by:
  3488 ;;		_ISR
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text18
  3493   0015DA                     __ptext18:
  3494                           	callstack 0
  3495   0015DA                     i2_MensajeLCD_Word:
  3496                           	callstack 22
  3497                           
  3498                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  3499                           
  3500                           ;incstack = 0
  3501   0015DA  0E00               	movlw	0
  3502   0015DC  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  3503   0015DE  0E00               	movlw	0
  3504   0015E0  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  3505   0015E2                     i2l2035:
  3506                           
  3507                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  3508   0015E2  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3509   0015E4  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3510   0015E6  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3511   0015E8  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3512   0015EC                     	if	1	;There is more than 1 active tblptr byte
  3513   0015EC  0E08               	movlw	high __smallconst
  3514   0015EE  6EF7               	movwf	tblptrh,c
  3515   0015F0                     	endif
  3516   0015F0                     	if	0	;tblptru may be non-zero
  3517   0015F0                     	endif
  3518   0015F0                     	if	0	;tblptru may be non-zero
  3519   0015F0                     	endif
  3520   0015F0  0008               	tblrd		*
  3521   0015F2  50F5               	movf	tablat,w,c
  3522   0015F4  0900               	iorlw	0
  3523   0015F6  B4D8               	btfsc	status,2,c
  3524   0015F8  0012               	return	
  3525                           
  3526                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  3527   0015FA  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3528   0015FC  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3529   0015FE  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3530   001600  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3531   001604                     	if	1	;There is more than 1 active tblptr byte
  3532   001604  0E08               	movlw	high __smallconst
  3533   001606  6EF7               	movwf	tblptrh,c
  3534   001608                     	endif
  3535   001608                     	if	0	;tblptru may be non-zero
  3536   001608                     	endif
  3537   001608                     	if	0	;tblptru may be non-zero
  3538   001608                     	endif
  3539   001608  0008               	tblrd		*
  3540   00160A  50F5               	movf	tablat,w,c
  3541   00160C  ECC1  F00B         	call	i2_EscribeLCD_c
  3542   001610  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  3543   001612  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  3544   001614  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  3545   001616  D7E5               	goto	i2l2035
  3546   001618  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  3547   00161A  E105               	bnz	i2u159_40
  3548   00161C  0E10               	movlw	16
  3549   00161E  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  3550   001620  B0D8               	btfsc	status,0,c
  3551   001622  0012               	return	
  3552   001624  D7DE               	goto	i2l2035
  3553   001626                     i2u159_40:
  3554   001626  0012               	return		;funcret
  3555   001628                     __end_ofi2_MensajeLCD_Word:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function i2_EscribeLCD_c *****************
  3559 ;; Defined at:
  3560 ;;		line 146 in file "LibLCDXC8.h"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  a               1    wreg     unsigned char 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  a               1    4[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0
  3575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3577 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3578 ;;Total ram usage:        1 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 2
  3581 ;; This function calls:
  3582 ;;		i2_EnviaDato
  3583 ;;		i2_HabilitaLCD
  3584 ;;		i2_RetardoLCD
  3585 ;; This function is called by:
  3586 ;;		i2_MensajeLCD_Word
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text19
  3591   001782                     __ptext19:
  3592                           	callstack 0
  3593   001782                     i2_EscribeLCD_c:
  3594                           	callstack 22
  3595                           
  3596                           ;incstack = 0
  3597                           ;i2EscribeLCD_c@a stored from wreg
  3598   001782  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3599                           
  3600                           ;LibLCDXC8.h: 150: LATE0=1;
  3601   001784  808D               	bsf	3981,0,c	;volatile
  3602                           
  3603                           ;LibLCDXC8.h: 151: EnviaDato(a);
  3604   001786  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3605   001788  EC37  F00B         	call	i2_EnviaDato
  3606                           
  3607                           ;LibLCDXC8.h: 152: HabilitaLCD();
  3608   00178C  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3609                           
  3610                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  3611   001790  0E04               	movlw	4
  3612   001792  EC72  F00A         	call	i2_RetardoLCD
  3613   001796  0012               	return		;funcret
  3614   001798                     __end_ofi2_EscribeLCD_c:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function i2_BorraLCD *****************
  3618 ;; Defined at:
  3619 ;;		line 113 in file "LibLCDXC8.h"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 2
  3640 ;; This function calls:
  3641 ;;		i2_EnviaDato
  3642 ;;		i2_HabilitaLCD
  3643 ;;		i2_RetardoLCD
  3644 ;; This function is called by:
  3645 ;;		_ISR
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text20
  3650   0017AC                     __ptext20:
  3651                           	callstack 0
  3652   0017AC                     i2_BorraLCD:
  3653                           	callstack 23
  3654                           
  3655                           ;LibLCDXC8.h: 115: LATE0=0;
  3656                           
  3657                           ;incstack = 0
  3658   0017AC  908D               	bcf	3981,0,c	;volatile
  3659                           
  3660                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3661   0017AE  0E01               	movlw	1
  3662   0017B0  EC37  F00B         	call	i2_EnviaDato
  3663                           
  3664                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3665   0017B4  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3666                           
  3667                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3668   0017B8  0E02               	movlw	2
  3669   0017BA  EC72  F00A         	call	i2_RetardoLCD
  3670   0017BE  0012               	return		;funcret
  3671   0017C0                     __end_ofi2_BorraLCD:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function i2_EnviaDato *****************
  3675 ;; Defined at:
  3676 ;;		line 60 in file "LibLCDXC8.h"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  a               1    wreg     unsigned char 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  a               1    3[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3693 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3694 ;;Total ram usage:        2 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 1
  3697 ;; This function calls:
  3698 ;;		i2_HabilitaLCD
  3699 ;;		i2_RetardoLCD
  3700 ;; This function is called by:
  3701 ;;		i2_BorraLCD
  3702 ;;		i2_EscribeLCD_c
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text21
  3707   00166E                     __ptext21:
  3708                           	callstack 0
  3709   00166E                     i2_EnviaDato:
  3710                           	callstack 22
  3711                           
  3712                           ;incstack = 0
  3713                           ;i2EnviaDato@a stored from wreg
  3714   00166E  6E04               	movwf	i2EnviaDato@a^0,c
  3715                           
  3716                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3717   001670  0E04               	movlw	4
  3718   001672  1842               	xorwf	_interfaz^0,w,c
  3719   001674  A4D8               	btfss	status,2,c
  3720   001676  D017               	goto	i2l1901
  3721                           
  3722                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3723   001678  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3724   00167C  0EF0               	movlw	240
  3725   00167E  1603               	andwf	??i2_EnviaDato^0,f,c
  3726   001680  508C               	movf	140,w,c	;volatile
  3727   001682  0B0F               	andlw	15
  3728   001684  1003               	iorwf	??i2_EnviaDato^0,w,c
  3729   001686  6E8C               	movwf	140,c	;volatile
  3730                           
  3731                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3732   001688  ECE7  F00B         	call	i2_HabilitaLCD	;wreg free
  3733                           
  3734                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3735   00168C  0E01               	movlw	1
  3736   00168E  EC72  F00A         	call	i2_RetardoLCD
  3737                           
  3738                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3739   001692  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3740   001696  3A03               	swapf	??i2_EnviaDato^0,f,c
  3741   001698  0EF0               	movlw	240
  3742   00169A  1603               	andwf	??i2_EnviaDato^0,f,c
  3743   00169C  508C               	movf	140,w,c	;volatile
  3744   00169E  0B0F               	andlw	15
  3745   0016A0  1003               	iorwf	??i2_EnviaDato^0,w,c
  3746   0016A2  6E8C               	movwf	140,c	;volatile
  3747                           
  3748                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  3749   0016A4  0012               	return	
  3750   0016A6                     i2l1901:
  3751   0016A6  0E08               	movlw	8
  3752   0016A8  1842               	xorwf	_interfaz^0,w,c
  3753   0016AA  A4D8               	btfss	status,2,c
  3754   0016AC  0012               	return	
  3755                           
  3756                           ;LibLCDXC8.h: 69: LATD=a;
  3757   0016AE  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3758   0016B2  0012               	return		;funcret
  3759   0016B4                     __end_ofi2_EnviaDato:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function i2_RetardoLCD *****************
  3763 ;; Defined at:
  3764 ;;		line 293 in file "LibLCDXC8.h"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  a               1    wreg     unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  a               1    1[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		i2_EnviaDato
  3788 ;;		i2_BorraLCD
  3789 ;;		i2_EscribeLCD_c
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text22
  3794   0014E4                     __ptext22:
  3795                           	callstack 0
  3796   0014E4                     i2_RetardoLCD:
  3797                           	callstack 23
  3798                           
  3799                           ;incstack = 0
  3800                           ;i2RetardoLCD@a stored from wreg
  3801   0014E4  6E02               	movwf	i2RetardoLCD@a^0,c
  3802                           
  3803                           ;LibLCDXC8.h: 294: switch(a){
  3804   0014E6  D01B               	goto	i2l1889
  3805   0014E8                     i2l1879:
  3806   0014E8  0E05               	movlw	5
  3807   0014EA  6E01               	movwf	??i2_RetardoLCD^0,c
  3808   0014EC  0EDE               	movlw	222
  3809   0014EE                     i2u250_47:
  3810   0014EE  2EE8               	decfsz	wreg,f,c
  3811   0014F0  D7FE               	bra	i2u250_47
  3812   0014F2  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3813   0014F4  D7FC               	bra	i2u250_47
  3814                           
  3815                           ;LibLCDXC8.h: 297: break;
  3816   0014F6  0012               	return	
  3817   0014F8                     i2l1881:
  3818   0014F8  0E53               	movlw	83
  3819   0014FA                     i2u251_47:
  3820   0014FA  2EE8               	decfsz	wreg,f,c
  3821   0014FC  D7FE               	bra	i2u251_47
  3822   0014FE  F000               	nop	
  3823                           
  3824                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3825   001500  0E35               	movlw	53
  3826   001502                     i2u252_47:
  3827   001502  2EE8               	decfsz	wreg,f,c
  3828   001504  D7FE               	bra	i2u252_47
  3829   001506  F000               	nop	
  3830                           
  3831                           ;LibLCDXC8.h: 301: break;
  3832   001508  0012               	return	
  3833   00150A                     i2l1883:
  3834   00150A  0E08               	movlw	8
  3835   00150C                     i2u253_47:
  3836   00150C  2EE8               	decfsz	wreg,f,c
  3837   00150E  D7FE               	bra	i2u253_47
  3838   001510  F000               	nop	
  3839                           
  3840                           ;LibLCDXC8.h: 304: break;
  3841   001512  0012               	return	
  3842   001514                     i2l1885:
  3843   001514  0E03               	movlw	3
  3844   001516                     i2u254_47:
  3845   001516  2EE8               	decfsz	wreg,f,c
  3846   001518  D7FE               	bra	i2u254_47
  3847   00151A  F000               	nop	
  3848                           
  3849                           ;LibLCDXC8.h: 307: break;
  3850   00151C  0012               	return	
  3851   00151E                     i2l1889:
  3852   00151E  5002               	movf	i2RetardoLCD@a^0,w,c
  3853                           
  3854                           ; Switch size 1, requested type "simple"
  3855                           ; Number of cases is 4, Range of values is 1 to 4
  3856                           ; switch strategies available:
  3857                           ; Name         Instructions Cycles
  3858                           ; simple_byte           13     7 (average)
  3859                           ;	Chosen strategy is simple_byte
  3860   001520  0A01               	xorlw	1	; case 1
  3861   001522  B4D8               	btfsc	status,2,c
  3862   001524  D7E1               	goto	i2l1879
  3863   001526  0A03               	xorlw	3	; case 2
  3864   001528  B4D8               	btfsc	status,2,c
  3865   00152A  D7E6               	goto	i2l1881
  3866   00152C  0A01               	xorlw	1	; case 3
  3867   00152E  B4D8               	btfsc	status,2,c
  3868   001530  D7EC               	goto	i2l1883
  3869   001532  0A07               	xorlw	7	; case 4
  3870   001534  A4D8               	btfss	status,2,c
  3871   001536  0012               	return	
  3872   001538  D7ED               	goto	i2l1885
  3873   00153A                     __end_ofi2_RetardoLCD:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function i2_HabilitaLCD *****************
  3877 ;; Defined at:
  3878 ;;		line 106 in file "LibLCDXC8.h"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		i2_EnviaDato
  3902 ;;		i2_BorraLCD
  3903 ;;		i2_EscribeLCD_c
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text23
  3908   0017CE                     __ptext23:
  3909                           	callstack 0
  3910   0017CE                     i2_HabilitaLCD:
  3911                           	callstack 23
  3912                           
  3913                           ;LibLCDXC8.h: 108: LATE1=1;
  3914                           
  3915                           ;incstack = 0
  3916   0017CE  828D               	bsf	3981,1,c	;volatile
  3917                           
  3918                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3919   0017D0  0E03               	movlw	3
  3920   0017D2                     i2u255_47:
  3921   0017D2  2EE8               	decfsz	wreg,f,c
  3922   0017D4  D7FE               	bra	i2u255_47
  3923   0017D6  F000               	nop	
  3924                           
  3925                           ;LibLCDXC8.h: 111: LATE1=0;
  3926   0017D8  928D               	bcf	3981,1,c	;volatile
  3927   0017DA  0012               	return		;funcret
  3928   0017DC                     __end_ofi2_HabilitaLCD:
  3929                           	callstack 0
  3930                           
  3931                           	psect	rparam
  3932   000000                     
  3933                           	psect	temp
  3934   000043                     btemp:
  3935                           	callstack 0
  3936   000043                     	ds	1
  3937   000000                     int$flags	set	btemp
  3938   000000                     wtemp8	set	btemp+1
  3939   000000                     ttemp5	set	btemp+1
  3940   000000                     ttemp6	set	btemp+4
  3941   000000                     ttemp7	set	btemp+8
  3942                           
  3943                           	psect	idloc
  3944                           
  3945                           ;Config register IDLOC0 @ 0x200000
  3946                           ;	unspecified, using default values
  3947   200000                     	org	2097152
  3948   200000  FF                 	db	255
  3949                           
  3950                           ;Config register IDLOC1 @ 0x200001
  3951                           ;	unspecified, using default values
  3952   200001                     	org	2097153
  3953   200001  FF                 	db	255
  3954                           
  3955                           ;Config register IDLOC2 @ 0x200002
  3956                           ;	unspecified, using default values
  3957   200002                     	org	2097154
  3958   200002  FF                 	db	255
  3959                           
  3960                           ;Config register IDLOC3 @ 0x200003
  3961                           ;	unspecified, using default values
  3962   200003                     	org	2097155
  3963   200003  FF                 	db	255
  3964                           
  3965                           ;Config register IDLOC4 @ 0x200004
  3966                           ;	unspecified, using default values
  3967   200004                     	org	2097156
  3968   200004  FF                 	db	255
  3969                           
  3970                           ;Config register IDLOC5 @ 0x200005
  3971                           ;	unspecified, using default values
  3972   200005                     	org	2097157
  3973   200005  FF                 	db	255
  3974                           
  3975                           ;Config register IDLOC6 @ 0x200006
  3976                           ;	unspecified, using default values
  3977   200006                     	org	2097158
  3978   200006  FF                 	db	255
  3979                           
  3980                           ;Config register IDLOC7 @ 0x200007
  3981                           ;	unspecified, using default values
  3982   200007                     	org	2097159
  3983   200007  FF                 	db	255
  3984                           
  3985                           	psect	config
  3986                           
  3987                           ;Config register CONFIG1L @ 0x300000
  3988                           ;	unspecified, using default values
  3989                           ;	PLL Prescaler Selection bits
  3990                           ;	PLLDIV = 0x0, unprogrammed default
  3991                           ;	System Clock Postscaler Selection bits
  3992                           ;	CPUDIV = 0x0, unprogrammed default
  3993                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3994                           ;	USBDIV = 0x0, unprogrammed default
  3995   300000                     	org	3145728
  3996   300000  00                 	db	0
  3997                           
  3998                           ;Config register CONFIG1H @ 0x300001
  3999                           ;	Oscillator Selection bits
  4000                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4001                           ;	Fail-Safe Clock Monitor Enable bit
  4002                           ;	FCMEN = 0x0, unprogrammed default
  4003                           ;	Internal/External Oscillator Switchover bit
  4004                           ;	IESO = 0x0, unprogrammed default
  4005   300001                     	org	3145729
  4006   300001  09                 	db	9
  4007                           
  4008                           ;Config register CONFIG2L @ 0x300002
  4009                           ;	unspecified, using default values
  4010                           ;	Power-up Timer Enable bit
  4011                           ;	PWRT = 0x1, unprogrammed default
  4012                           ;	Brown-out Reset Enable bits
  4013                           ;	BOR = 0x3, unprogrammed default
  4014                           ;	Brown-out Reset Voltage bits
  4015                           ;	BORV = 0x3, unprogrammed default
  4016                           ;	USB Voltage Regulator Enable bit
  4017                           ;	VREGEN = 0x0, unprogrammed default
  4018   300002                     	org	3145730
  4019   300002  1F                 	db	31
  4020                           
  4021                           ;Config register CONFIG2H @ 0x300003
  4022                           ;	Watchdog Timer Enable bit
  4023                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4024                           ;	Watchdog Timer Postscale Select bits
  4025                           ;	WDTPS = 0xF, unprogrammed default
  4026   300003                     	org	3145731
  4027   300003  1E                 	db	30
  4028                           
  4029                           ; Padding undefined space
  4030   300004                     	org	3145732
  4031   300004  FF                 	db	255
  4032                           
  4033                           ;Config register CONFIG3H @ 0x300005
  4034                           ;	CCP2 MUX bit
  4035                           ;	CCP2MX = 0x1, unprogrammed default
  4036                           ;	PORTB A/D Enable bit
  4037                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4038                           ;	Low-Power Timer 1 Oscillator Enable bit
  4039                           ;	LPT1OSC = 0x0, unprogrammed default
  4040                           ;	MCLR Pin Enable bit
  4041                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4042   300005                     	org	3145733
  4043   300005  81                 	db	129
  4044                           
  4045                           ;Config register CONFIG4L @ 0x300006
  4046                           ;	Stack Full/Underflow Reset Enable bit
  4047                           ;	STVREN = 0x1, unprogrammed default
  4048                           ;	Single-Supply ICSP Enable bit
  4049                           ;	LVP = OFF, Single-Supply ICSP disabled
  4050                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4051                           ;	ICPRT = 0x0, unprogrammed default
  4052                           ;	Extended Instruction Set Enable bit
  4053                           ;	XINST = 0x0, unprogrammed default
  4054                           ;	Background Debugger Enable bit
  4055                           ;	DEBUG = 0x1, unprogrammed default
  4056   300006                     	org	3145734
  4057   300006  81                 	db	129
  4058                           
  4059                           ; Padding undefined space
  4060   300007                     	org	3145735
  4061   300007  FF                 	db	255
  4062                           
  4063                           ;Config register CONFIG5L @ 0x300008
  4064                           ;	unspecified, using default values
  4065                           ;	Code Protection bit
  4066                           ;	CP0 = 0x1, unprogrammed default
  4067                           ;	Code Protection bit
  4068                           ;	CP1 = 0x1, unprogrammed default
  4069                           ;	Code Protection bit
  4070                           ;	CP2 = 0x1, unprogrammed default
  4071                           ;	Code Protection bit
  4072                           ;	CP3 = 0x1, unprogrammed default
  4073   300008                     	org	3145736
  4074   300008  0F                 	db	15
  4075                           
  4076                           ;Config register CONFIG5H @ 0x300009
  4077                           ;	unspecified, using default values
  4078                           ;	Boot Block Code Protection bit
  4079                           ;	CPB = 0x1, unprogrammed default
  4080                           ;	Data EEPROM Code Protection bit
  4081                           ;	CPD = 0x1, unprogrammed default
  4082   300009                     	org	3145737
  4083   300009  C0                 	db	192
  4084                           
  4085                           ;Config register CONFIG6L @ 0x30000A
  4086                           ;	unspecified, using default values
  4087                           ;	Write Protection bit
  4088                           ;	WRT0 = 0x1, unprogrammed default
  4089                           ;	Write Protection bit
  4090                           ;	WRT1 = 0x1, unprogrammed default
  4091                           ;	Write Protection bit
  4092                           ;	WRT2 = 0x1, unprogrammed default
  4093                           ;	Write Protection bit
  4094                           ;	WRT3 = 0x1, unprogrammed default
  4095   30000A                     	org	3145738
  4096   30000A  0F                 	db	15
  4097                           
  4098                           ;Config register CONFIG6H @ 0x30000B
  4099                           ;	unspecified, using default values
  4100                           ;	Configuration Register Write Protection bit
  4101                           ;	WRTC = 0x1, unprogrammed default
  4102                           ;	Boot Block Write Protection bit
  4103                           ;	WRTB = 0x1, unprogrammed default
  4104                           ;	Data EEPROM Write Protection bit
  4105                           ;	WRTD = 0x1, unprogrammed default
  4106   30000B                     	org	3145739
  4107   30000B  E0                 	db	224
  4108                           
  4109                           ;Config register CONFIG7L @ 0x30000C
  4110                           ;	unspecified, using default values
  4111                           ;	Table Read Protection bit
  4112                           ;	EBTR0 = 0x1, unprogrammed default
  4113                           ;	Table Read Protection bit
  4114                           ;	EBTR1 = 0x1, unprogrammed default
  4115                           ;	Table Read Protection bit
  4116                           ;	EBTR2 = 0x1, unprogrammed default
  4117                           ;	Table Read Protection bit
  4118                           ;	EBTR3 = 0x1, unprogrammed default
  4119   30000C                     	org	3145740
  4120   30000C  0F                 	db	15
  4121                           
  4122                           ;Config register CONFIG7H @ 0x30000D
  4123                           ;	unspecified, using default values
  4124                           ;	Boot Block Table Read Protection bit
  4125                           ;	EBTRB = 0x1, unprogrammed default
  4126   30000D                     	org	3145741
  4127   30000D  40                 	db	64
  4128                           tosu	equ	0xFFF
  4129                           tosh	equ	0xFFE
  4130                           tosl	equ	0xFFD
  4131                           stkptr	equ	0xFFC
  4132                           pclatu	equ	0xFFB
  4133                           pclath	equ	0xFFA
  4134                           pcl	equ	0xFF9
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           indf0	equ	0xFEF
  4142                           postinc0	equ	0xFEE
  4143                           postdec0	equ	0xFED
  4144                           preinc0	equ	0xFEC
  4145                           plusw0	equ	0xFEB
  4146                           fsr0h	equ	0xFEA
  4147                           fsr0l	equ	0xFE9
  4148                           wreg	equ	0xFE8
  4149                           indf1	equ	0xFE7
  4150                           postinc1	equ	0xFE6
  4151                           postdec1	equ	0xFE5
  4152                           preinc1	equ	0xFE4
  4153                           plusw1	equ	0xFE3
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           bsr	equ	0xFE0
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           preinc2	equ	0xFDC
  4161                           plusw2	equ	0xFDB
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        4
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[11]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[17]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    5604
                                             26 COMRAM    10    10      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1890
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     654
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     402
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lldiv
   ___llmod
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      42       1       70.2%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         7      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      29        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 16:12:58 2023

                        _i 0033                          _m 003B                          _r 0025  
                       _PD 007E82                         _RI 007E84                         _TO 007E83  
                       _n1 0037                         _n2 0035                 EnviaDato@a 0011  
                       _op 0041        ___wmul@multiplicand 0010              ??_LeerTeclado 000E  
            _InicializaLCD 11BC                        l234 10C4                        l245 1120  
                      l237 10CC                        l263 11A0                        l255 117C  
                      l247 1128                        l327 12C8                        l175 0AEC  
                      l264 11B8                        l265 11A8                        l257 1184  
                      l267 11B0                        l259 118C                        l198 0D10  
                      l708 1426                        l779 1582                        l789 16EC  
                      _GIE 007F97                        _RB4 007C0C                        _RB5 007C0D  
                      _RB6 007C0E                        _RB7 007C0F                        _RC6 007C16  
                      u210 10FC                        u300 1158                        u220 1108  
                      u212 10FE                        u140 10B0                        u310 1164  
                      u302 115A                        u222 110A                        u312 1166  
                      u180 10DC                        u270 1138                        u190 10E8  
                      u182 10DE                        u280 1144                        u272 113A  
                      u192 10EA                        u282 1146                        _ISR 0008  
                      _n1c 0040                        _n2c 003F                        wreg 000FE8  
                     ?_ISR 0001           ??i2_EscribeLCD_c 0005                       l2001 1578  
                     l2011 16CA                       l1053 1492                       l1055 14A2  
                     l1063 14C8                       l1143 11CE                       l1057 14B4  
                     l1153 11EC                       l2017 16E2                       l2009 16C2  
                     l1059 14BE                       l1163 120A                       l1261 1114  
                     l1253 10F4                       l1245 10D4                       l2221 0AF4  
                     l2117 0944                       l1095 1660                       l1183 1242  
                     l1327 1194                       l2223 0B0C                       l2207 0AB6  
                     l1361 136C                       l2305 0E1E                       l2313 0E4C  
                     l2241 0BD2                       l2233 0B6C                       l2225 0B42  
                     l2073 088A                       l1363 1370                       l1291 1150  
                     l1283 1130                       l2331 0ECA                       l2219 0AE6  
                     l2147 09BA                       l2083 08CC                       l1373 1380  
                     l1365 1374                       l1381 13CC                       l2261 0C58  
                     l2229 0B4E                       l1375 1384                       l1367 1378  
                     l2351 0F42                       l2343 0F22                       l2335 0EE6  
                     l2327 0EAE                       l2255 0C08                       l2247 0BE6  
                     l2175 0A30                       l2079 08B2                       l1369 137C  
                     l2361 0F8C                       l2273 0CB6                       l2265 0C66  
                     l2257 0C16                       l2281 0CD2                       l1379 138A  
                     l1299 1170                       l2355 0F50                       l2283 0CFA  
                     l2293 0DA8                       l2277 0CC0                       l2269 0C80  
                     l2383 1080                       l2287 0D0A                       l2377 1072  
                     l2369 1022                       l2297 0DBC                       l2385 108A  
                     l2379 1078                       l2387 1090                       l1941 145C  
                     l1919 1594                       l1951 127A                       l1953 1286  
                     l1937 1448                       l1963 12BA                       l1971 13E4  
                     l1973 13F0                       l1991 1558                       l1979 1418  
                     l1989 1550                       STR_1 081D                       STR_2 082F  
                     STR_3 0801                       STR_4 082A                       STR_5 0825  
                     STR_6 0812                       u2000 0A98                       u2210 0E5C  
                     u1500 13F4                       u2220 0E6E                       u1430 15D8  
                     u2230 0E80                       _LATB 000F8A                       _LATC 000F8B  
                     _LATD 000F8C                       u1530 155C                       u2170 0DBA  
                     u1610 0892                       u1620 089E                       u1612 0894  
                     u1470 128A                       u2270 0EF6                       u1622 08A0  
                     u1560 16CE                       u2280 0F08                       u2290 0F1A  
                     u1730 098C                       u2427 08BC                       u2437 1096  
                     u1670 095C                       u2447 1498                       u2457 14A4  
                     u2467 14AC                       u1860 0A0A                       u2477 14B6  
                     u2487 14C0                       u2497 17C4                       _RBPU 007F8F  
                     _TMR0 000FD6             ??_EscribeLCD_c 0012                       _flag 0039  
                     _main 0836                       fsr1l 000FE1                       btemp 0043  
                     prodh 000FF4                       prodl 000FF3                       start 000E  
             ___param_bank 000000                      ??_ISR 000A             ?_InicializaLCD 0001  
                    ?_main 0001              EscribeLCD_c@a 0012            __end_of___lldiv 12DA  
                    _T0CON 000FD5            __end_of___llmod 1438                      _LATE0 007C68  
                    _LATE1 007C69                      _LATE2 007C6A            __end_of___lwdiv 158C  
          __end_of___lwmod 16F6                      i2l294 1342                      i2l297 1344  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96        ___lmul@multiplicand 0012                      _Tecla 003A  
      __end_of_LeerTeclado 11BC                      _color 0031                ?i2_BorraLCD 0001  
                    main@i 0021                      main@j 0023                      main@k 001F  
                    tablat 000FF5                _HabilitaLCD 17C0                      ttemp5 0044  
                    ttemp6 0047                      ttemp7 004B                      status 000FD8  
                    wtemp8 0044           __end_of_BorraLCD 17AC           __end_of_ColorRGB 13D2  
          __initialization 16F6               __end_of_main 10A2                     ??_main 001B  
            __activetblptr 000002                     _ADCON1 000FC1           ___llmod@dividend 000E  
           DireccionaLCD@a 0012                     i2l2035 15E2                     i2l2401 1322  
                   i2l1901 16A6                     i2l2395 1306                     i2l2397 130E  
                   i2l1881 14F8                     i2l1883 150A                     i2l1885 1514  
                   i2l1879 14E8                     i2l1889 151E                     _OSCCON 000FD3  
                   _TMR0IE 007F95                     _TMR0IF 007F92                     _TMR0ON 007EAF  
    __end_of_DireccionaLCD 1782                 _RetardoLCD 148E                     ___lmul 1438  
                   ___wmul 1730                  ??___lldiv 0016                  ??___llmod 0016  
                ??___lwdiv 0018                  ??___lwmod 0012            ??_InicializaLCD 0012  
                   clear_0 171C                     isa$std 000001       __end_of_EscribeLCD_c 176C  
              _LeerTeclado 10A2               ?i2_EnviaDato 0001               __pdataCOMRAM 003F  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8      __end_ofi2_HabilitaLCD 17DC                 __accesstop 0060  
  __end_of__initialization 1722              ___rparam_used 000001             __pcstackCOMRAM 0001  
        __end_of_EnviaDato 166E          i2_MensajeLCD_Word 15DA         ?i2_MensajeLCD_Word 0006  
                ?_BorraLCD 0001                  ?_ColorRGB 0001        ??i2_MensajeLCD_Word 0007  
              ?_RetardoLCD 0001                RetardoLCD@a 000F                    ?___lmul 000E  
                  ?___wmul 000E             ___lmul@product 0016  __end_ofi2_MensajeLCD_Word 1628  
             ??i2_BorraLCD 0005                 ??_BorraLCD 0012                 ??_ColorRGB 000E  
        ??_MensajeLCD_Word 0014               ?_HabilitaLCD 0001                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 1258                    ___llmod 13D2  
                  ___lwdiv 153A                    ___lwmod 16B4               __psmallconst 0800  
       __end_ofi2_BorraLCD 17C0                    __pcinit 16F6                    __ramtop 0800  
                  __ptext0 0836                    __ptext1 1730                    __ptext2 16B4  
                  __ptext3 153A                    __ptext4 1438                    __ptext5 13D2  
                  __ptext6 1258                    __ptext7 158C                    __ptext8 1756  
                  __ptext9 10A2             __pintcode_body 12DA       end_of_initialization 1722  
            __Lmediumconst 0000                    int_func 12DA               _EscribeLCD_c 1756  
          ___lldiv@divisor 0012            ___lldiv@counter 001A                    postdec1 000FE5  
                  postinc0 000FEE               ?_LeerTeclado 0001            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001             __end_of___lmul 148E             __end_of___wmul 1756  
            __pidataCOMRAM 17DC      __end_of_InicializaLCD 1258                  _EnviaDato 1628  
      start_initialization 16F6                __end_of_ISR 1358             ??i2_RetardoLCD 0001  
             ??_RetardoLCD 000E            ___llmod@divisor 0012            ___llmod@counter 0016  
                 ??___lmul 0016                   ??___wmul 0012            _MensajeLCD_Word 158C  
               ?_EnviaDato 0001                __pbssCOMRAM 0025         __end_of_RetardoLCD 14E4  
         MensajeLCD_Word@a 0013           MensajeLCD_Word@i 0015              _DireccionaLCD 176C  
           i2_EscribeLCD_c 1782           ___lwdiv@dividend 0014                  __pintcode 0008  
                 ?___lldiv 000E                   ?___llmod 000E                   ?___lwdiv 0014  
                 ?___lwmod 000E                __smallconst 0800           ___lwdiv@quotient 0018  
           ___wmul@product 0012              i2_HabilitaLCD 17CE             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 1798                   i2u250_47 14EE                   i2u251_47 14FA  
                 i2u252_47 1502                   i2u253_47 150C                   i2u238_40 1318  
                 i2u254_47 1516                   i2u159_40 1626                   i2u239_45 131A  
                 i2u255_47 17D2    __end_of_MensajeLCD_Word 15DA          ___wmul@multiplier 000E  
            ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 153A                ??_EnviaDato 0010  
                 _BorraLCD 1798                   _ColorRGB 1358          ___lmul@multiplier 000E  
                copy_data0 170A             ?i2_HabilitaLCD 0001            ?i2_EscribeLCD_c 0001  
                 __Hrparam 0000                   __Lrparam 0000               i2EnviaDato@a 0004  
          ___lwdiv@divisor 0016            ___lwdiv@counter 001A                   __ptext10 11BC  
                 __ptext11 1798                   __ptext20 17AC                   __ptext12 176C  
                 __ptext21 166E                   __ptext13 1628                   __ptext22 14E4  
                 __ptext14 148E                   __ptext23 17CE                   __ptext15 17C0  
                 __ptext16 1358                   __ptext18 15DA                   __ptext19 1782  
      __end_ofi2_EnviaDato 16B4                   _contador 002F            ??_DireccionaLCD 0012  
                 _interfaz 0042                   _partdecl 0029                   isa$xinst 000000  
         ?_MensajeLCD_Word 0013                   int$flags 0043            ??i2_HabilitaLCD 0001  
                 intlevel2 0000              ??_HabilitaLCD 000E           ___lwmod@dividend 000E  
         ___lldiv@dividend 000E              i2RetardoLCD@a 0002                i2_EnviaDato 166E  
         ___lldiv@quotient 0016            ___lwmod@divisor 0010            ___lwmod@counter 0012  
               i2_BorraLCD 17AC         i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008  
            ?_EscribeLCD_c 0001                _verificador 002D               i2_RetardoLCD 14E4  
      __end_of_HabilitaLCD 17CE  

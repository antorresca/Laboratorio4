

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 17 13:23:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   0011EA                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75   0011EA  20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78   0011EB  20                 	db	32
    79                           
    80                           ;initializer for _op
    81   0011EC  20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84   0011ED  08                 	db	8
    85   000000                     _LATC	set	3979
    86   000000                     _TRISC	set	3988
    87   000000                     _LATC7	set	31839
    88   000000                     _LATE2	set	31850
    89   000000                     _RB7	set	31759
    90   000000                     _RB6	set	31758
    91   000000                     _RB5	set	31757
    92   000000                     _POR	set	32385
    93   000000                     _PD	set	32386
    94   000000                     _TMR0ON	set	32431
    95   000000                     _GIE	set	32663
    96   000000                     _TMR0IE	set	32661
    97   000000                     _LATE1	set	31849
    98   000000                     _LATB	set	3978
    99   000000                     _LATD	set	3980
   100   000000                     _RB4	set	31756
   101   000000                     _TRISB	set	3987
   102   000000                     _TRISD	set	3989
   103   000000                     _ADCON1	set	4033
   104   000000                     _LATE0	set	31848
   105   000000                     _OSCCON	set	4051
   106   000000                     _T0CON	set	4053
   107   000000                     _TO	set	32387
   108   000000                     _RBPU	set	32655
   109   000000                     _TRISE	set	3990
   110   000000                     _TMR0IF	set	32658
   111   000000                     _TMR0	set	4054
   112                           
   113                           	psect	smallconst
   114   000800                     __psmallconst:
   115                           	callstack 0
   116   000800  00                 	db	0
   117   000801                     STR_1:
   118   000801  20                 	db	32
   119   000802  20                 	db	32
   120   000803  20                 	db	32
   121   000804  20                 	db	32
   122   000805  20                 	db	32
   123   000806  20                 	db	32
   124   000807  20                 	db	32
   125   000808  20                 	db	32
   126   000809  20                 	db	32
   127   00080A  20                 	db	32
   128   00080B  20                 	db	32
   129   00080C  20                 	db	32
   130   00080D  20                 	db	32
   131   00080E  20                 	db	32
   132   00080F  20                 	db	32
   133   000810  20                 	db	32
   134   000811  00                 	db	0
   135   000812  00                 	db	0	; dummy byte at the end
   136   000000                     
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140   0010FE                     __pcinit:
   141                           	callstack 0
   142   0010FE                     start_initialization:
   143                           	callstack 0
   144   0010FE                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (4 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149   0010FE  0EEA               	movlw	low __pidataCOMRAM
   150   001100  6EF6               	movwf	tblptrl,c
   151   001102  0E11               	movlw	high __pidataCOMRAM
   152   001104  6EF7               	movwf	tblptrh,c
   153   001106  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154   001108  6EF8               	movwf	tblptru,c
   155   00110A  EE00  F02D         	lfsr	0,__pdataCOMRAM
   156   00110E  EE10 F004          	lfsr	1,4
   157   001112                     copy_data0:
   158   001112  0009               	tblrd		*+
   159   001114  CFF5 FFEE          	movff	tablat,postinc0
   160   001118  50E5               	movf	postdec1,w,c
   161   00111A  50E1               	movf	fsr1l,w,c
   162   00111C  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (25 bytes)
   165   00111E  EE00  F001         	lfsr	0,__pbssCOMRAM
   166   001122  0E19               	movlw	25
   167   001124                     clear_0:
   168   001124  6AEE               	clrf	postinc0,c
   169   001126  06E8               	decf	wreg,f,c
   170   001128  E1FD               	bnz	clear_0
   171   00112A                     end_of_initialization:
   172                           	callstack 0
   173   00112A                     __end_of__initialization:
   174                           	callstack 0
   175   00112A  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   176   00112C  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   177   00112E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178   001130  6EF8               	movwf	tblptru,c
   179   001132  0100               	movlb	0
   180   001134  EF0A  F004         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000001                     __pbssCOMRAM:
   184                           	callstack 0
   185   000001                     _r:
   186                           	callstack 0
   187   000001                     	ds	4
   188   000005                     _partdecl:
   189                           	callstack 0
   190   000005                     	ds	4
   191   000009                     _verificador:
   192                           	callstack 0
   193   000009                     	ds	2
   194   00000B                     _contador:
   195                           	callstack 0
   196   00000B                     	ds	2
   197   00000D                     _color:
   198                           	callstack 0
   199   00000D                     	ds	2
   200   00000F                     _i:
   201                           	callstack 0
   202   00000F                     	ds	2
   203   000011                     _n2:
   204                           	callstack 0
   205   000011                     	ds	2
   206   000013                     _n1:
   207                           	callstack 0
   208   000013                     	ds	2
   209   000015                     _Tecla:
   210                           	callstack 0
   211   000015                     	ds	1
   212   000016                     _m:
   213                           	callstack 0
   214   000016                     	ds	4
   215                           
   216                           	psect	dataCOMRAM
   217   00002D                     __pdataCOMRAM:
   218                           	callstack 0
   219   00002D                     _n2c:
   220                           	callstack 0
   221   00002D                     	ds	1
   222   00002E                     _n1c:
   223                           	callstack 0
   224   00002E                     	ds	1
   225   00002F                     _op:
   226                           	callstack 0
   227   00002F                     	ds	1
   228   000030                     _interfaz:
   229                           	callstack 0
   230   000030                     	ds	1
   231                           
   232                           	psect	cstackCOMRAM
   233   00001A                     __pcstackCOMRAM:
   234                           	callstack 0
   235   00001A                     ??_RetardoLCD:
   236   00001A                     ??_ColorRGB:
   237   00001A                     ?___wmul:
   238                           	callstack 0
   239   00001A                     ?___lwmod:
   240                           	callstack 0
   241   00001A                     ?___lmul:
   242                           	callstack 0
   243   00001A                     ___wmul@multiplier:
   244                           	callstack 0
   245   00001A                     ___lwmod@dividend:
   246                           	callstack 0
   247   00001A                     ___lmul@multiplier:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0x0
   251   00001A                     	ds	1
   252   00001B                     RetardoLCD@a:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256   00001B                     	ds	1
   257   00001C                     EnviaDato@a:
   258                           	callstack 0
   259   00001C                     ___wmul@multiplicand:
   260                           	callstack 0
   261   00001C                     ___lwmod@divisor:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265   00001C                     	ds	1
   266   00001D                     EscribeLCD_c@a:
   267                           	callstack 0
   268   00001D                     DireccionaLCD@a:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x3
   272   00001D                     	ds	1
   273   00001E                     MensajeLCD_Word@a:
   274                           	callstack 0
   275   00001E                     ___lwmod@counter:
   276                           	callstack 0
   277   00001E                     ___wmul@product:
   278                           	callstack 0
   279   00001E                     ___lmul@multiplicand:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283   00001E                     	ds	1
   284   00001F                     ??_MensajeLCD_Word:
   285                           
   286                           ; 1 bytes @ 0x5
   287   00001F                     	ds	1
   288   000020                     ?___lwdiv:
   289                           	callstack 0
   290   000020                     MensajeLCD_Word@i:
   291                           	callstack 0
   292   000020                     ___lwdiv@dividend:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x6
   296   000020                     	ds	2
   297   000022                     ___lwdiv@divisor:
   298                           	callstack 0
   299   000022                     ___lmul@product:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x8
   303   000022                     	ds	2
   304   000024                     ___lwdiv@quotient:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xA
   308   000024                     	ds	2
   309   000026                     ___lwdiv@counter:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xC
   313   000026                     	ds	1
   314   000027                     ??_main:
   315                           
   316                           ; 1 bytes @ 0xD
   317   000027                     	ds	4
   318   00002B                     main@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x11
   322   00002B                     	ds	2
   323                           
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 27 in file "Laboratorio4.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  i               2   17[COMRAM] int 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         2       0       0       0       0       0       0       0       0
   345 ;;      Temps:          4       0       0       0       0       0       0       0       0
   346 ;;      Totals:         6       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        6 bytes
   348 ;; Hardware stack levels required when called: 5
   349 ;; This function calls:
   350 ;;		_BorraLCD
   351 ;;		_ColorRGB
   352 ;;		_DireccionaLCD
   353 ;;		_EscribeLCD_c
   354 ;;		_InicializaLCD
   355 ;;		_LeerTeclado
   356 ;;		_MensajeLCD_Word
   357 ;;		___lmul
   358 ;;		___lwdiv
   359 ;;		___lwmod
   360 ;;		___wmul
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text0
   367   000814                     __ptext0:
   368                           	callstack 0
   369   000814                     _main:
   370                           	callstack 26
   371                           
   372                           ;Laboratorio4.c: 28: ADCON1=15;
   373                           
   374                           ;incstack = 0
   375   000814  0E0F               	movlw	15
   376   000816  6EC1               	movwf	193,c	;volatile
   377                           
   378                           ;Laboratorio4.c: 29: TRISD=0;
   379   000818  0E00               	movlw	0
   380   00081A  6E95               	movwf	149,c	;volatile
   381                           
   382                           ;Laboratorio4.c: 30: TRISB=0b11110000;
   383   00081C  0EF0               	movlw	240
   384   00081E  6E93               	movwf	147,c	;volatile
   385                           
   386                           ;Laboratorio4.c: 31: TRISE=0;
   387   000820  0E00               	movlw	0
   388   000822  6E96               	movwf	150,c	;volatile
   389                           
   390                           ;Laboratorio4.c: 32: TRISC=0;
   391   000824  0E00               	movlw	0
   392   000826  6E94               	movwf	148,c	;volatile
   393                           
   394                           ;Laboratorio4.c: 33: RBPU=0;
   395   000828  9EF1               	bcf	4081,7,c	;volatile
   396                           
   397                           ;Laboratorio4.c: 34: InicializaLCD();
   398   00082A  EC5E  F008         	call	_InicializaLCD	;wreg free
   399                           
   400                           ;Laboratorio4.c: 36: T0CON=0b10000011;
   401   00082E  0E83               	movlw	131
   402   000830  6ED5               	movwf	213,c	;volatile
   403                           
   404                           ;Laboratorio4.c: 37: TMR0IF=0;
   405   000832  94F2               	bcf	4082,2,c	;volatile
   406                           
   407                           ;Laboratorio4.c: 38: TMR0=49911;
   408   000834  0EC2               	movlw	194
   409   000836  6ED7               	movwf	215,c	;volatile
   410   000838  0EF7               	movlw	247
   411   00083A  6ED6               	movwf	214,c	;volatile
   412                           
   413                           ;Laboratorio4.c: 39: TMR0IE=1;
   414   00083C  8AF2               	bsf	4082,5,c	;volatile
   415                           
   416                           ;Laboratorio4.c: 40: GIE=1;
   417   00083E  8EF2               	bsf	4082,7,c	;volatile
   418                           
   419                           ;Laboratorio4.c: 41: TMR0ON=1;
   420   000840  8ED5               	bsf	4053,7,c	;volatile
   421                           
   422                           ;Laboratorio4.c: 44: OSCCON = 0b11000100;
   423   000842  0EC4               	movlw	196
   424   000844  6ED3               	movwf	211,c	;volatile
   425                           
   426                           ;Laboratorio4.c: 46: BorraLCD();
   427   000846  ECE0  F008         	call	_BorraLCD	;wreg free
   428                           
   429                           ;Laboratorio4.c: 47: if(TO == 1 && PD == 0){
   430   00084A  B6D0               	btfsc	4048,3,c	;volatile
   431   00084C  B4D0               	btfsc	4048,2,c	;volatile
   432   00084E  D018               	goto	l148
   433                           
   434                           ;Laboratorio4.c: 48: BorraLCD();
   435   000850  ECE0  F008         	call	_BorraLCD	;wreg free
   436                           
   437                           ;Laboratorio4.c: 49: EscribeLCD_c('E');
   438   000854  0E45               	movlw	69
   439   000856  ECCA  F008         	call	_EscribeLCD_c
   440                           
   441                           ;Laboratorio4.c: 50: EscribeLCD_c('N');
   442   00085A  0E4E               	movlw	78
   443   00085C  ECCA  F008         	call	_EscribeLCD_c
   444                           
   445                           ;Laboratorio4.c: 51: EscribeLCD_c('E');
   446   000860  0E45               	movlw	69
   447   000862  ECCA  F008         	call	_EscribeLCD_c
   448                           
   449                           ;Laboratorio4.c: 52: EscribeLCD_c('R');
   450   000866  0E52               	movlw	82
   451   000868  ECCA  F008         	call	_EscribeLCD_c
   452                           
   453                           ;Laboratorio4.c: 53: EscribeLCD_c('G');
   454   00086C  0E47               	movlw	71
   455   00086E  ECCA  F008         	call	_EscribeLCD_c
   456                           
   457                           ;Laboratorio4.c: 54: EscribeLCD_c('I');
   458   000872  0E49               	movlw	73
   459   000874  ECCA  F008         	call	_EscribeLCD_c
   460                           
   461                           ;Laboratorio4.c: 55: EscribeLCD_c('A');
   462   000878  0E41               	movlw	65
   463   00087A  ECCA  F008         	call	_EscribeLCD_c
   464                           
   465                           ;Laboratorio4.c: 57: }else{
   466   00087E  D010               	goto	l1691
   467   000880                     l148:
   468                           
   469                           ;Laboratorio4.c: 58: if(POR==0){
   470   000880  B2D0               	btfsc	4048,1,c	;volatile
   471   000882  D00E               	goto	l1691
   472                           
   473                           ;Laboratorio4.c: 59: BorraLCD();
   474   000884  ECE0  F008         	call	_BorraLCD	;wreg free
   475                           
   476                           ;Laboratorio4.c: 60: EscribeLCD_c('M');
   477   000888  0E4D               	movlw	77
   478   00088A  ECCA  F008         	call	_EscribeLCD_c
   479                           
   480                           ;Laboratorio4.c: 61: EscribeLCD_c('C');
   481   00088E  0E43               	movlw	67
   482   000890  ECCA  F008         	call	_EscribeLCD_c
   483                           
   484                           ;Laboratorio4.c: 62: EscribeLCD_c('L');
   485   000894  0E4C               	movlw	76
   486   000896  ECCA  F008         	call	_EscribeLCD_c
   487                           
   488                           ;Laboratorio4.c: 63: EscribeLCD_c('R');
   489   00089A  0E52               	movlw	82
   490   00089C  ECCA  F008         	call	_EscribeLCD_c
   491   0008A0                     l1691:
   492                           
   493                           ;Laboratorio4.c: 64: };Laboratorio4.c: 65: };Laboratorio4.c: 66: _delay((unsigned long)(
      +                          (2000)*(1000000/4000.0)));
   494   0008A0  0E03               	movlw	3
   495   0008A2  6E28               	movwf	(??_main+1)^0,c
   496   0008A4  0E8A               	movlw	138
   497   0008A6  6E27               	movwf	??_main^0,c
   498   0008A8  0E56               	movlw	86
   499   0008AA                     u1567:
   500   0008AA  2EE8               	decfsz	wreg,f,c
   501   0008AC  D7FE               	bra	u1567
   502   0008AE  2E27               	decfsz	??_main^0,f,c
   503   0008B0  D7FC               	bra	u1567
   504   0008B2  2E28               	decfsz	(??_main+1)^0,f,c
   505   0008B4  D7FA               	bra	u1567
   506                           
   507                           ;Laboratorio4.c: 67: BorraLCD();
   508   0008B6  ECE0  F008         	call	_BorraLCD	;wreg free
   509   0008BA                     l1695:
   510                           
   511                           ;Laboratorio4.c: 69: LATB=0B00000000;
   512   0008BA  0E00               	movlw	0
   513   0008BC  6E8A               	movwf	138,c	;volatile
   514                           
   515                           ;Laboratorio4.c: 70: verificador = 0;
   516   0008BE  0E00               	movlw	0
   517   0008C0  6E0A               	movwf	(_verificador+1)^0,c
   518   0008C2  0E00               	movlw	0
   519   0008C4  6E09               	movwf	_verificador^0,c
   520                           
   521                           ;Laboratorio4.c: 71: Tecla = LeerTeclado();
   522   0008C6  ECFF  F006         	call	_LeerTeclado	;wreg free
   523   0008CA  6E15               	movwf	_Tecla^0,c
   524                           
   525                           ;Laboratorio4.c: 72: ColorRGB();
   526   0008CC  EC54  F007         	call	_ColorRGB	;wreg free
   527                           
   528                           ;Laboratorio4.c: 73: if(Tecla=='C'){
   529   0008D0  0E43               	movlw	67
   530   0008D2  1815               	xorwf	_Tecla^0,w,c
   531   0008D4  A4D8               	btfss	status,2,c
   532   0008D6  D02B               	goto	l1729
   533                           
   534                           ;Laboratorio4.c: 74: DireccionaLCD(0xC0);
   535   0008D8  0EC0               	movlw	192
   536   0008DA  ECD5  F008         	call	_DireccionaLCD
   537                           
   538                           ;Laboratorio4.c: 76: op = ' ';
   539   0008DE  0E20               	movlw	32
   540   0008E0  6E2F               	movwf	_op^0,c
   541                           
   542                           ;Laboratorio4.c: 77: n1c = ' ';
   543   0008E2  0E20               	movlw	32
   544   0008E4  6E2E               	movwf	_n1c^0,c
   545                           
   546                           ;Laboratorio4.c: 78: n2c = ' ';
   547   0008E6  0E20               	movlw	32
   548   0008E8  6E2D               	movwf	_n2c^0,c
   549                           
   550                           ;Laboratorio4.c: 79: n1 = 0;
   551   0008EA  0E00               	movlw	0
   552   0008EC  6E14               	movwf	(_n1+1)^0,c
   553   0008EE  0E00               	movlw	0
   554   0008F0  6E13               	movwf	_n1^0,c
   555                           
   556                           ;Laboratorio4.c: 80: n2 = 0;
   557   0008F2  0E00               	movlw	0
   558   0008F4  6E12               	movwf	(_n2+1)^0,c
   559   0008F6  0E00               	movlw	0
   560   0008F8  6E11               	movwf	_n2^0,c
   561                           
   562                           ;Laboratorio4.c: 81: i = 0;
   563   0008FA  0E00               	movlw	0
   564   0008FC  6E10               	movwf	(_i+1)^0,c
   565   0008FE  0E00               	movlw	0
   566   000900  6E0F               	movwf	_i^0,c
   567                           
   568                           ;Laboratorio4.c: 82: partdecl = 0;
   569   000902  0E00               	movlw	0
   570   000904  6E05               	movwf	_partdecl^0,c
   571   000906  0E00               	movlw	0
   572   000908  6E06               	movwf	(_partdecl+1)^0,c
   573   00090A  0E00               	movlw	0
   574   00090C  6E07               	movwf	(_partdecl+2)^0,c
   575   00090E  0E00               	movlw	0
   576   000910  6E08               	movwf	(_partdecl+3)^0,c
   577                           
   578                           ;Laboratorio4.c: 83: DireccionaLCD(0x80);
   579   000912  0E80               	movlw	128
   580   000914  ECD5  F008         	call	_DireccionaLCD
   581                           
   582                           ;Laboratorio4.c: 84: MensajeLCD_Word("                ");
   583   000918  0E01               	movlw	low STR_1
   584   00091A  6E1E               	movwf	MensajeLCD_Word@a^0,c
   585   00091C  EC9C  F008         	call	_MensajeLCD_Word	;wreg free
   586                           
   587                           ;Laboratorio4.c: 85: DireccionaLCD(0xC0);
   588   000920  0EC0               	movlw	192
   589   000922  ECD5  F008         	call	_DireccionaLCD
   590                           
   591                           ;Laboratorio4.c: 86: DireccionaLCD(0x80);
   592   000926  0E80               	movlw	128
   593   000928  ECD5  F008         	call	_DireccionaLCD
   594                           
   595                           ;Laboratorio4.c: 87: }else{
   596   00092C  D7C6               	goto	l1695
   597   00092E                     l1729:
   598                           
   599                           ;Laboratorio4.c: 88: if(n1c==' '|n2c==' '|op==' '){
   600   00092E  0E20               	movlw	32
   601   000930  182E               	xorwf	_n1c^0,w,c
   602   000932  B4D8               	btfsc	status,2,c
   603   000934  D008               	goto	u1080
   604   000936  0E20               	movlw	32
   605   000938  182D               	xorwf	_n2c^0,w,c
   606   00093A  B4D8               	btfsc	status,2,c
   607   00093C  D004               	goto	u1080
   608   00093E  0E20               	movlw	32
   609   000940  182F               	xorwf	_op^0,w,c
   610   000942  A4D8               	btfss	status,2,c
   611   000944  D083               	goto	l1797
   612   000946                     u1080:
   613                           
   614                           ;Laboratorio4.c: 89: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   615   000946  0E20               	movlw	32
   616   000948  182F               	xorwf	_op^0,w,c
   617   00094A  A4D8               	btfss	status,2,c
   618   00094C  D021               	goto	l1753
   619   00094E  0E2B               	movlw	43
   620   000950  1815               	xorwf	_Tecla^0,w,c
   621   000952  B4D8               	btfsc	status,2,c
   622   000954  D00C               	goto	u1130
   623   000956  0E2D               	movlw	45
   624   000958  1815               	xorwf	_Tecla^0,w,c
   625   00095A  B4D8               	btfsc	status,2,c
   626   00095C  D008               	goto	u1130
   627   00095E  0E2F               	movlw	47
   628   000960  1815               	xorwf	_Tecla^0,w,c
   629   000962  B4D8               	btfsc	status,2,c
   630   000964  D004               	goto	u1130
   631   000966  0E78               	movlw	120
   632   000968  1815               	xorwf	_Tecla^0,w,c
   633   00096A  A4D8               	btfss	status,2,c
   634   00096C  D011               	goto	l1753
   635   00096E                     u1130:
   636   00096E  0E20               	movlw	32
   637   000970  182E               	xorwf	_n1c^0,w,c
   638   000972  B4D8               	btfsc	status,2,c
   639   000974  D00D               	goto	l1753
   640   000976  0E20               	movlw	32
   641   000978  182D               	xorwf	_n2c^0,w,c
   642   00097A  A4D8               	btfss	status,2,c
   643   00097C  D009               	goto	l1753
   644                           
   645                           ;Laboratorio4.c: 90: DireccionaLCD(0x81);
   646   00097E  0E81               	movlw	129
   647   000980  ECD5  F008         	call	_DireccionaLCD
   648                           
   649                           ;Laboratorio4.c: 91: EscribeLCD_c(Tecla);
   650   000984  5015               	movf	_Tecla^0,w,c
   651   000986  ECCA  F008         	call	_EscribeLCD_c
   652                           
   653                           ;Laboratorio4.c: 92: op = Tecla;
   654   00098A  C015  F02F         	movff	_Tecla,_op
   655                           
   656                           ;Laboratorio4.c: 93: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   657   00098E  D22E               	goto	l1905
   658   000990                     l1753:
   659   000990  0E20               	movlw	32
   660   000992  182E               	xorwf	_n1c^0,w,c
   661   000994  A4D8               	btfss	status,2,c
   662   000996  D027               	goto	l1773
   663   000998  0E2B               	movlw	43
   664   00099A  1815               	xorwf	_Tecla^0,w,c
   665   00099C  A4D8               	btfss	status,2,c
   666   00099E  D014               	goto	u1220
   667   0009A0  0E2D               	movlw	45
   668   0009A2  1815               	xorwf	_Tecla^0,w,c
   669   0009A4  A4D8               	btfss	status,2,c
   670   0009A6  D010               	goto	u1220
   671   0009A8  0E2F               	movlw	47
   672   0009AA  1815               	xorwf	_Tecla^0,w,c
   673   0009AC  A4D8               	btfss	status,2,c
   674   0009AE  D00C               	goto	u1220
   675   0009B0  0E78               	movlw	120
   676   0009B2  1815               	xorwf	_Tecla^0,w,c
   677   0009B4  A4D8               	btfss	status,2,c
   678   0009B6  D008               	goto	u1220
   679   0009B8  0E3D               	movlw	61
   680   0009BA  1815               	xorwf	_Tecla^0,w,c
   681   0009BC  A4D8               	btfss	status,2,c
   682   0009BE  D004               	goto	u1220
   683   0009C0  0E43               	movlw	67
   684   0009C2  1815               	xorwf	_Tecla^0,w,c
   685   0009C4  B4D8               	btfsc	status,2,c
   686   0009C6  D00F               	goto	l1773
   687   0009C8                     u1220:
   688                           
   689                           ;Laboratorio4.c: 94: DireccionaLCD(0x80);
   690   0009C8  0E80               	movlw	128
   691   0009CA  ECD5  F008         	call	_DireccionaLCD
   692                           
   693                           ;Laboratorio4.c: 95: EscribeLCD_c(Tecla);
   694   0009CE  5015               	movf	_Tecla^0,w,c
   695   0009D0  ECCA  F008         	call	_EscribeLCD_c
   696                           
   697                           ;Laboratorio4.c: 96: n1c=Tecla;
   698   0009D4  C015  F02E         	movff	_Tecla,_n1c
   699                           
   700                           ;Laboratorio4.c: 97: n1 = Tecla-'0';
   701   0009D8  0ED0               	movlw	208
   702   0009DA  2415               	addwf	_Tecla^0,w,c
   703   0009DC  6E13               	movwf	_n1^0,c
   704   0009DE  6A14               	clrf	(_n1+1)^0,c
   705   0009E0  0EFF               	movlw	255
   706   0009E2  2214               	addwfc	(_n1+1)^0,f,c
   707                           
   708                           ;Laboratorio4.c: 98: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   709   0009E4  D203               	goto	l1905
   710   0009E6                     l1773:
   711   0009E6  0E20               	movlw	32
   712   0009E8  182D               	xorwf	_n2c^0,w,c
   713   0009EA  A4D8               	btfss	status,2,c
   714   0009EC  D1FF               	goto	l1905
   715   0009EE  0E20               	movlw	32
   716   0009F0  182F               	xorwf	_op^0,w,c
   717   0009F2  B4D8               	btfsc	status,2,c
   718   0009F4  D1FB               	goto	l1905
   719   0009F6  0E20               	movlw	32
   720   0009F8  182E               	xorwf	_n1c^0,w,c
   721   0009FA  B4D8               	btfsc	status,2,c
   722   0009FC  D1F7               	goto	l1905
   723   0009FE  0E2B               	movlw	43
   724   000A00  1815               	xorwf	_Tecla^0,w,c
   725   000A02  A4D8               	btfss	status,2,c
   726   000A04  D014               	goto	u1310
   727   000A06  0E2D               	movlw	45
   728   000A08  1815               	xorwf	_Tecla^0,w,c
   729   000A0A  A4D8               	btfss	status,2,c
   730   000A0C  D010               	goto	u1310
   731   000A0E  0E2F               	movlw	47
   732   000A10  1815               	xorwf	_Tecla^0,w,c
   733   000A12  A4D8               	btfss	status,2,c
   734   000A14  D00C               	goto	u1310
   735   000A16  0E78               	movlw	120
   736   000A18  1815               	xorwf	_Tecla^0,w,c
   737   000A1A  A4D8               	btfss	status,2,c
   738   000A1C  D008               	goto	u1310
   739   000A1E  0E3D               	movlw	61
   740   000A20  1815               	xorwf	_Tecla^0,w,c
   741   000A22  A4D8               	btfss	status,2,c
   742   000A24  D004               	goto	u1310
   743   000A26  0E43               	movlw	67
   744   000A28  1815               	xorwf	_Tecla^0,w,c
   745   000A2A  B4D8               	btfsc	status,2,c
   746   000A2C  D1DF               	goto	l1905
   747   000A2E                     u1310:
   748                           
   749                           ;Laboratorio4.c: 99: DireccionaLCD(0x82);
   750   000A2E  0E82               	movlw	130
   751   000A30  ECD5  F008         	call	_DireccionaLCD
   752                           
   753                           ;Laboratorio4.c: 100: EscribeLCD_c(Tecla);
   754   000A34  5015               	movf	_Tecla^0,w,c
   755   000A36  ECCA  F008         	call	_EscribeLCD_c
   756                           
   757                           ;Laboratorio4.c: 101: n2c=Tecla;
   758   000A3A  C015  F02D         	movff	_Tecla,_n2c
   759                           
   760                           ;Laboratorio4.c: 102: n2 = Tecla-'0';
   761   000A3E  0ED0               	movlw	208
   762   000A40  2415               	addwf	_Tecla^0,w,c
   763   000A42  6E11               	movwf	_n2^0,c
   764   000A44  6A12               	clrf	(_n2+1)^0,c
   765   000A46  0EFF               	movlw	255
   766   000A48  2212               	addwfc	(_n2+1)^0,f,c
   767                           
   768                           ;Laboratorio4.c: 103: };Laboratorio4.c: 104: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & 
      +                          n1c != ' '){
   769   000A4A  D1D0               	goto	l1905
   770   000A4C                     l1797:
   771   000A4C  0E3D               	movlw	61
   772   000A4E  1815               	xorwf	_Tecla^0,w,c
   773   000A50  A4D8               	btfss	status,2,c
   774   000A52  D1C9               	goto	l1903
   775   000A54  0E20               	movlw	32
   776   000A56  182D               	xorwf	_n2c^0,w,c
   777   000A58  B4D8               	btfsc	status,2,c
   778   000A5A  D1C5               	goto	l1903
   779   000A5C  0E20               	movlw	32
   780   000A5E  182F               	xorwf	_op^0,w,c
   781   000A60  B4D8               	btfsc	status,2,c
   782   000A62  D1C1               	goto	l1903
   783   000A64  0E20               	movlw	32
   784   000A66  182E               	xorwf	_n1c^0,w,c
   785   000A68  B4D8               	btfsc	status,2,c
   786   000A6A  D1BD               	goto	l1903
   787                           
   788                           ;Laboratorio4.c: 105: DireccionaLCD(0x83);
   789   000A6C  0E83               	movlw	131
   790   000A6E  ECD5  F008         	call	_DireccionaLCD
   791                           
   792                           ;Laboratorio4.c: 106: EscribeLCD_c('=');
   793   000A72  0E3D               	movlw	61
   794   000A74  ECCA  F008         	call	_EscribeLCD_c
   795                           
   796                           ;Laboratorio4.c: 107: switch(op){
   797   000A78  D093               	goto	l1845
   798   000A7A                     l1807:
   799                           
   800                           ;Laboratorio4.c: 109: r = n1 + n2;
   801   000A7A  5011               	movf	_n2^0,w,c
   802   000A7C  2413               	addwf	_n1^0,w,c
   803   000A7E  6E27               	movwf	??_main^0,c
   804   000A80  5012               	movf	(_n2+1)^0,w,c
   805   000A82  2014               	addwfc	(_n1+1)^0,w,c
   806   000A84  6E28               	movwf	(??_main+1)^0,c
   807   000A86  C027  F001         	movff	??_main,_r
   808   000A8A  C028  F002         	movff	??_main+1,_r+1
   809   000A8E  6A03               	clrf	(_r+2)^0,c
   810   000A90  6A04               	clrf	(_r+3)^0,c
   811   000A92                     l1809:
   812                           
   813                           ;Laboratorio4.c: 110: partdecl = r*100;
   814   000A92  C001  F01A         	movff	_r,___lmul@multiplier
   815   000A96  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   816   000A9A  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   817   000A9E  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   818   000AA2  0E64               	movlw	100
   819   000AA4  6E1E               	movwf	___lmul@multiplicand^0,c
   820   000AA6  0E00               	movlw	0
   821   000AA8  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   822   000AAA  0E00               	movlw	0
   823   000AAC  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   824   000AAE  0E00               	movlw	0
   825   000AB0  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   826   000AB2  ECBE  F007         	call	___lmul	;wreg free
   827   000AB6  C01A  F005         	movff	?___lmul,_partdecl
   828   000ABA  C01B  F006         	movff	?___lmul+1,_partdecl+1
   829   000ABE  C01C  F007         	movff	?___lmul+2,_partdecl+2
   830   000AC2  C01D  F008         	movff	?___lmul+3,_partdecl+3
   831                           
   832                           ;Laboratorio4.c: 111: break;
   833   000AC6  D07A               	goto	l1847
   834   000AC8                     l1811:
   835                           
   836                           ;Laboratorio4.c: 113: r = n1 - n2;
   837   000AC8  5011               	movf	_n2^0,w,c
   838   000ACA  5C13               	subwf	_n1^0,w,c
   839   000ACC  6E27               	movwf	??_main^0,c
   840   000ACE  5012               	movf	(_n2+1)^0,w,c
   841   000AD0  5814               	subwfb	(_n1+1)^0,w,c
   842   000AD2  D7D8               	goto	L1
   843   000AD4                     l1815:
   844                           
   845                           ;Laboratorio4.c: 117: r = n1*n2;
   846   000AD4  C013  F01A         	movff	_n1,___wmul@multiplier
   847   000AD8  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   848   000ADC  C011  F01C         	movff	_n2,___wmul@multiplicand
   849   000AE0  C012  F01D         	movff	_n2+1,___wmul@multiplicand+1
   850   000AE4  ECB7  F008         	call	___wmul	;wreg free
   851   000AE8  C01A  F001         	movff	?___wmul,_r
   852   000AEC  C01B  F002         	movff	?___wmul+1,_r+1
   853   000AF0  D7CE               	goto	L2
   854   000AF2                     l1819:
   855                           
   856                           ;Laboratorio4.c: 121: if(n2!=0){
   857   000AF2  5011               	movf	_n2^0,w,c
   858   000AF4  1012               	iorwf	(_n2+1)^0,w,c
   859   000AF6  B4D8               	btfsc	status,2,c
   860   000AF8  D02F               	goto	l1827
   861                           
   862                           ;Laboratorio4.c: 122: if(n1!=0){
   863   000AFA  5013               	movf	_n1^0,w,c
   864   000AFC  1014               	iorwf	(_n1+1)^0,w,c
   865   000AFE  B4D8               	btfsc	status,2,c
   866   000B00  D05D               	goto	l1847
   867                           
   868                           ;Laboratorio4.c: 123: r = n1/n2;
   869   000B02  C013  F020         	movff	_n1,___lwdiv@dividend
   870   000B06  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
   871   000B0A  C011  F022         	movff	_n2,___lwdiv@divisor
   872   000B0E  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   873   000B12  EC14  F008         	call	___lwdiv	;wreg free
   874   000B16  C020  F001         	movff	?___lwdiv,_r
   875   000B1A  C021  F002         	movff	?___lwdiv+1,_r+1
   876   000B1E  6A03               	clrf	(_r+2)^0,c
   877   000B20  6A04               	clrf	(_r+3)^0,c
   878                           
   879                           ;Laboratorio4.c: 124: partdecl = (n1*100)/n2;
   880   000B22  C013  F01A         	movff	_n1,___wmul@multiplier
   881   000B26  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   882   000B2A  0E00               	movlw	0
   883   000B2C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
   884   000B2E  0E64               	movlw	100
   885   000B30  6E1C               	movwf	___wmul@multiplicand^0,c
   886   000B32  ECB7  F008         	call	___wmul	;wreg free
   887   000B36  C01A  F020         	movff	?___wmul,___lwdiv@dividend
   888   000B3A  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
   889   000B3E  C011  F022         	movff	_n2,___lwdiv@divisor
   890   000B42  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   891   000B46  EC14  F008         	call	___lwdiv	;wreg free
   892   000B4A  C020  F005         	movff	?___lwdiv,_partdecl
   893   000B4E  C021  F006         	movff	?___lwdiv+1,_partdecl+1
   894   000B52  6A07               	clrf	(_partdecl+2)^0,c
   895   000B54  6A08               	clrf	(_partdecl+3)^0,c
   896   000B56  D032               	goto	l1847
   897   000B58                     l1827:
   898                           
   899                           ;Laboratorio4.c: 127: if(n1 != 0 & n2 == 0) r = 1000;
   900   000B58  5013               	movf	_n1^0,w,c
   901   000B5A  1014               	iorwf	(_n1+1)^0,w,c
   902   000B5C  B4D8               	btfsc	status,2,c
   903   000B5E  D006               	goto	l1833
   904   000B60  5011               	movf	_n2^0,w,c
   905   000B62  1012               	iorwf	(_n2+1)^0,w,c
   906   000B64  A4D8               	btfss	status,2,c
   907   000B66  D002               	goto	l1833
   908   000B68  0EE8               	movlw	232
   909   000B6A  D009               	goto	L3
   910   000B6C                     l1833:
   911                           
   912                           ;Laboratorio4.c: 128: else if(n1 == 0 & n2 == 0) r = 1001;
   913   000B6C  5013               	movf	_n1^0,w,c
   914   000B6E  1014               	iorwf	(_n1+1)^0,w,c
   915   000B70  A4D8               	btfss	status,2,c
   916   000B72  D78F               	goto	l1809
   917   000B74  5011               	movf	_n2^0,w,c
   918   000B76  1012               	iorwf	(_n2+1)^0,w,c
   919   000B78  A4D8               	btfss	status,2,c
   920   000B7A  D78B               	goto	l1809
   921   000B7C  0EE9               	movlw	233
   922   000B7E                     L3:
   923   000B7E  6E01               	movwf	_r^0,c
   924   000B80  0E03               	movlw	3
   925   000B82  6E02               	movwf	(_r+1)^0,c
   926   000B84  0E00               	movlw	0
   927   000B86  6E03               	movwf	(_r+2)^0,c
   928   000B88  0E00               	movlw	0
   929   000B8A  6E04               	movwf	(_r+3)^0,c
   930   000B8C  D782               	goto	l1809
   931   000B8E                     l1841:
   932                           
   933                           ;Laboratorio4.c: 133: r = 0;
   934   000B8E  0E00               	movlw	0
   935   000B90  6E01               	movwf	_r^0,c
   936   000B92  0E00               	movlw	0
   937   000B94  6E02               	movwf	(_r+1)^0,c
   938   000B96  0E00               	movlw	0
   939   000B98  6E03               	movwf	(_r+2)^0,c
   940   000B9A  0E00               	movlw	0
   941   000B9C  6E04               	movwf	(_r+3)^0,c
   942                           
   943                           ;Laboratorio4.c: 134: break;
   944   000B9E  D00E               	goto	l1847
   945   000BA0                     l1845:
   946   000BA0  502F               	movf	_op^0,w,c
   947                           
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 4, Range of values is 43 to 120
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte           13     7 (average)
   953                           ;	Chosen strategy is simple_byte
   954   000BA2  0A2B               	xorlw	43	; case 43
   955   000BA4  B4D8               	btfsc	status,2,c
   956   000BA6  D769               	goto	l1807
   957   000BA8  0A06               	xorlw	6	; case 45
   958   000BAA  B4D8               	btfsc	status,2,c
   959   000BAC  D78D               	goto	l1811
   960   000BAE  0A02               	xorlw	2	; case 47
   961   000BB0  B4D8               	btfsc	status,2,c
   962   000BB2  D79F               	goto	l1819
   963   000BB4  0A57               	xorlw	87	; case 120
   964   000BB6  B4D8               	btfsc	status,2,c
   965   000BB8  D78D               	goto	l1815
   966   000BBA  D7E9               	goto	l1841
   967   000BBC                     l1847:
   968                           
   969                           ;Laboratorio4.c: 136: DireccionaLCD(0x84);
   970   000BBC  0E84               	movlw	132
   971   000BBE  ECD5  F008         	call	_DireccionaLCD
   972                           
   973                           ;Laboratorio4.c: 137: if ((partdecl-(r*100))!= 0){
   974   000BC2  C001  F01A         	movff	_r,___lmul@multiplier
   975   000BC6  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   976   000BCA  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   977   000BCE  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   978   000BD2  0E9C               	movlw	156
   979   000BD4  6E1E               	movwf	___lmul@multiplicand^0,c
   980   000BD6  0EFF               	movlw	255
   981   000BD8  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   982   000BDA  0EFF               	movlw	255
   983   000BDC  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   984   000BDE  0EFF               	movlw	255
   985   000BE0  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   986   000BE2  ECBE  F007         	call	___lmul	;wreg free
   987   000BE6  5005               	movf	_partdecl^0,w,c
   988   000BE8  241A               	addwf	?___lmul^0,w,c
   989   000BEA  6E27               	movwf	??_main^0,c
   990   000BEC  5006               	movf	(_partdecl+1)^0,w,c
   991   000BEE  201B               	addwfc	(?___lmul+1)^0,w,c
   992   000BF0  6E28               	movwf	(??_main+1)^0,c
   993   000BF2  5007               	movf	(_partdecl+2)^0,w,c
   994   000BF4  201C               	addwfc	(?___lmul+2)^0,w,c
   995   000BF6  6E29               	movwf	(??_main+2)^0,c
   996   000BF8  5008               	movf	(_partdecl+3)^0,w,c
   997   000BFA  201D               	addwfc	(?___lmul+3)^0,w,c
   998   000BFC  6E2A               	movwf	(??_main+3)^0,c
   999   000BFE  5027               	movf	??_main^0,w,c
  1000   000C00  1028               	iorwf	(??_main+1)^0,w,c
  1001   000C02  1029               	iorwf	(??_main+2)^0,w,c
  1002   000C04  102A               	iorwf	(??_main+3)^0,w,c
  1003   000C06  B4D8               	btfsc	status,2,c
  1004   000C08  D056               	goto	l1871
  1005                           
  1006                           ;Laboratorio4.c: 138: for (int i = 0; i < 3; i++) {
  1007   000C0A  0E00               	movlw	0
  1008   000C0C  6E2C               	movwf	(main@i+1)^0,c
  1009   000C0E  0E00               	movlw	0
  1010   000C10  6E2B               	movwf	main@i^0,c
  1011   000C12                     l1851:
  1012   000C12  BE2C               	btfsc	(main@i+1)^0,7,c
  1013   000C14  D008               	goto	l1855
  1014   000C16  502C               	movf	(main@i+1)^0,w,c
  1015   000C18  E105               	bnz	u1430
  1016   000C1A  0E03               	movlw	3
  1017   000C1C  5C2B               	subwf	main@i^0,w,c
  1018   000C1E  B0D8               	btfsc	status,0,c
  1019   000C20  D0E5               	goto	l1905
  1020   000C22  D001               	goto	l1855
  1021   000C24                     u1430:
  1022   000C24  D0E3               	goto	l1905
  1023   000C26                     l1855:
  1024                           
  1025                           ;Laboratorio4.c: 139: r = n1 / n2;
  1026   000C26  C013  F020         	movff	_n1,___lwdiv@dividend
  1027   000C2A  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
  1028   000C2E  C011  F022         	movff	_n2,___lwdiv@divisor
  1029   000C32  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
  1030   000C36  EC14  F008         	call	___lwdiv	;wreg free
  1031   000C3A  C020  F001         	movff	?___lwdiv,_r
  1032   000C3E  C021  F002         	movff	?___lwdiv+1,_r+1
  1033   000C42  6A03               	clrf	(_r+2)^0,c
  1034   000C44  6A04               	clrf	(_r+3)^0,c
  1035                           
  1036                           ;Laboratorio4.c: 140: m = n1 % n2;
  1037   000C46  C013  F01A         	movff	_n1,___lwmod@dividend
  1038   000C4A  C014  F01B         	movff	_n1+1,___lwmod@dividend+1
  1039   000C4E  C011  F01C         	movff	_n2,___lwmod@divisor
  1040   000C52  C012  F01D         	movff	_n2+1,___lwmod@divisor+1
  1041   000C56  EC3D  F008         	call	___lwmod	;wreg free
  1042   000C5A  C01A  F016         	movff	?___lwmod,_m
  1043   000C5E  C01B  F017         	movff	?___lwmod+1,_m+1
  1044   000C62  6A18               	clrf	(_m+2)^0,c
  1045   000C64  6A19               	clrf	(_m+3)^0,c
  1046                           
  1047                           ;Laboratorio4.c: 141: EscribeLCD_c(r+'0');
  1048   000C66  5001               	movf	_r^0,w,c
  1049   000C68  0F30               	addlw	48
  1050   000C6A  ECCA  F008         	call	_EscribeLCD_c
  1051                           
  1052                           ;Laboratorio4.c: 142: if(i == 0 && m != 0) {
  1053   000C6E  502B               	movf	main@i^0,w,c
  1054   000C70  102C               	iorwf	(main@i+1)^0,w,c
  1055   000C72  A4D8               	btfss	status,2,c
  1056   000C74  D009               	goto	l1863
  1057   000C76  5016               	movf	_m^0,w,c
  1058   000C78  1017               	iorwf	(_m+1)^0,w,c
  1059   000C7A  1018               	iorwf	(_m+2)^0,w,c
  1060   000C7C  1019               	iorwf	(_m+3)^0,w,c
  1061   000C7E  B4D8               	btfsc	status,2,c
  1062   000C80  D003               	goto	l1863
  1063                           
  1064                           ;Laboratorio4.c: 143: EscribeLCD_c(',');
  1065   000C82  0E2C               	movlw	44
  1066   000C84  ECCA  F008         	call	_EscribeLCD_c
  1067   000C88                     l1863:
  1068                           
  1069                           ;Laboratorio4.c: 144: };Laboratorio4.c: 146: if (m != 0) {
  1070   000C88  5016               	movf	_m^0,w,c
  1071   000C8A  1017               	iorwf	(_m+1)^0,w,c
  1072   000C8C  1018               	iorwf	(_m+2)^0,w,c
  1073   000C8E  1019               	iorwf	(_m+3)^0,w,c
  1074   000C90  B4D8               	btfsc	status,2,c
  1075   000C92  D0AC               	goto	l1905
  1076                           
  1077                           ;Laboratorio4.c: 147: n1 = m * 10;
  1078   000C94  C016  F01A         	movff	_m,___wmul@multiplier
  1079   000C98  C017  F01B         	movff	_m+1,___wmul@multiplier+1
  1080   000C9C  0E00               	movlw	0
  1081   000C9E  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1082   000CA0  0E0A               	movlw	10
  1083   000CA2  6E1C               	movwf	___wmul@multiplicand^0,c
  1084   000CA4  ECB7  F008         	call	___wmul	;wreg free
  1085   000CA8  C01A  F013         	movff	?___wmul,_n1
  1086   000CAC  C01B  F014         	movff	?___wmul+1,_n1+1
  1087                           
  1088                           ;Laboratorio4.c: 148: } else {
  1089   000CB0  4A2B               	infsnz	main@i^0,f,c
  1090   000CB2  2A2C               	incf	(main@i+1)^0,f,c
  1091   000CB4  D7AE               	goto	l1851
  1092   000CB6                     l1871:
  1093   000CB6  5004               	movf	(_r+3)^0,w,c
  1094   000CB8  1003               	iorwf	(_r+2)^0,w,c
  1095   000CBA  1002               	iorwf	(_r+1)^0,w,c
  1096   000CBC  E104               	bnz	u1470
  1097   000CBE  0E52               	movlw	82
  1098   000CC0  5C01               	subwf	_r^0,w,c
  1099   000CC2  A0D8               	btfss	status,0,c
  1100   000CC4  D025               	goto	l1883
  1101   000CC6                     u1470:
  1102   000CC6  0EE8               	movlw	232
  1103   000CC8  1801               	xorwf	_r^0,w,c
  1104   000CCA  E106               	bnz	u1480
  1105   000CCC  0E03               	movlw	3
  1106   000CCE  1802               	xorwf	(_r+1)^0,w,c
  1107   000CD0  1003               	iorwf	(_r+2)^0,w,c
  1108   000CD2  1004               	iorwf	(_r+3)^0,w,c
  1109   000CD4  B4D8               	btfsc	status,2,c
  1110   000CD6  D01C               	goto	l1883
  1111   000CD8                     u1480:
  1112   000CD8  0EE9               	movlw	233
  1113   000CDA  1801               	xorwf	_r^0,w,c
  1114   000CDC  E106               	bnz	u1490
  1115   000CDE  0E03               	movlw	3
  1116   000CE0  1802               	xorwf	(_r+1)^0,w,c
  1117   000CE2  1003               	iorwf	(_r+2)^0,w,c
  1118   000CE4  1004               	iorwf	(_r+3)^0,w,c
  1119   000CE6  B4D8               	btfsc	status,2,c
  1120   000CE8  D013               	goto	l1883
  1121   000CEA                     u1490:
  1122                           
  1123                           ;Laboratorio4.c: 154: EscribeLCD_c('-');
  1124   000CEA  0E2D               	movlw	45
  1125   000CEC  ECCA  F008         	call	_EscribeLCD_c
  1126                           
  1127                           ;Laboratorio4.c: 155: DireccionaLCD(0x85);
  1128   000CF0  0E85               	movlw	133
  1129   000CF2  ECD5  F008         	call	_DireccionaLCD
  1130                           
  1131                           ;Laboratorio4.c: 156: r = ~r+1;
  1132   000CF6  1E04               	comf	(_r+3)^0,f,c
  1133   000CF8  1E03               	comf	(_r+2)^0,f,c
  1134   000CFA  1E02               	comf	(_r+1)^0,f,c
  1135   000CFC  6C01               	negf	_r^0,c
  1136   000CFE  0E00               	movlw	0
  1137   000D00  2202               	addwfc	(_r+1)^0,f,c
  1138   000D02  2203               	addwfc	(_r+2)^0,f,c
  1139   000D04  2204               	addwfc	(_r+3)^0,f,c
  1140                           
  1141                           ;Laboratorio4.c: 157: EscribeLCD_c(r+'0');
  1142   000D06  5001               	movf	_r^0,w,c
  1143   000D08  0F30               	addlw	48
  1144   000D0A  ECCA  F008         	call	_EscribeLCD_c
  1145                           
  1146                           ;Laboratorio4.c: 158: }else{
  1147   000D0E  D06E               	goto	l1905
  1148   000D10                     l1883:
  1149                           
  1150                           ;Laboratorio4.c: 159: if(r>0xA & r!=1000 & r !=1001){
  1151   000D10  5004               	movf	(_r+3)^0,w,c
  1152   000D12  1003               	iorwf	(_r+2)^0,w,c
  1153   000D14  1002               	iorwf	(_r+1)^0,w,c
  1154   000D16  E104               	bnz	u1500
  1155   000D18  0E0B               	movlw	11
  1156   000D1A  5C01               	subwf	_r^0,w,c
  1157   000D1C  A0D8               	btfss	status,0,c
  1158   000D1E  D038               	goto	l1893
  1159   000D20                     u1500:
  1160   000D20  0EE8               	movlw	232
  1161   000D22  1801               	xorwf	_r^0,w,c
  1162   000D24  E106               	bnz	u1510
  1163   000D26  0E03               	movlw	3
  1164   000D28  1802               	xorwf	(_r+1)^0,w,c
  1165   000D2A  1003               	iorwf	(_r+2)^0,w,c
  1166   000D2C  1004               	iorwf	(_r+3)^0,w,c
  1167   000D2E  B4D8               	btfsc	status,2,c
  1168   000D30  D02F               	goto	l1893
  1169   000D32                     u1510:
  1170   000D32  0EE9               	movlw	233
  1171   000D34  1801               	xorwf	_r^0,w,c
  1172   000D36  E106               	bnz	u1520
  1173   000D38  0E03               	movlw	3
  1174   000D3A  1802               	xorwf	(_r+1)^0,w,c
  1175   000D3C  1003               	iorwf	(_r+2)^0,w,c
  1176   000D3E  1004               	iorwf	(_r+3)^0,w,c
  1177   000D40  B4D8               	btfsc	status,2,c
  1178   000D42  D026               	goto	l1893
  1179   000D44                     u1520:
  1180   000D44                     l1889:
  1181                           
  1182                           ;Laboratorio4.c: 161: i = i+1;
  1183   000D44  0E01               	movlw	1
  1184   000D46  240F               	addwf	_i^0,w,c
  1185   000D48  6E0F               	movwf	_i^0,c
  1186   000D4A  0E00               	movlw	0
  1187   000D4C  2010               	addwfc	(_i+1)^0,w,c
  1188   000D4E  6E10               	movwf	(_i+1)^0,c
  1189                           
  1190                           ;Laboratorio4.c: 162: r = r - 10;
  1191   000D50  0EF6               	movlw	246
  1192   000D52  2401               	addwf	_r^0,w,c
  1193   000D54  6E01               	movwf	_r^0,c
  1194   000D56  0EFF               	movlw	255
  1195   000D58  2002               	addwfc	(_r+1)^0,w,c
  1196   000D5A  6E02               	movwf	(_r+1)^0,c
  1197   000D5C  0EFF               	movlw	255
  1198   000D5E  2003               	addwfc	(_r+2)^0,w,c
  1199   000D60  6E03               	movwf	(_r+2)^0,c
  1200   000D62  0EFF               	movlw	255
  1201   000D64  2004               	addwfc	(_r+3)^0,w,c
  1202   000D66  6E04               	movwf	(_r+3)^0,c
  1203                           
  1204                           ;Laboratorio4.c: 163: }while(r>0xA);
  1205   000D68  5004               	movf	(_r+3)^0,w,c
  1206   000D6A  1003               	iorwf	(_r+2)^0,w,c
  1207   000D6C  1002               	iorwf	(_r+1)^0,w,c
  1208   000D6E  E1EA               	bnz	l1889
  1209   000D70  0E0B               	movlw	11
  1210   000D72  5C01               	subwf	_r^0,w,c
  1211   000D74  B0D8               	btfsc	status,0,c
  1212   000D76  D7E6               	goto	u1520
  1213                           
  1214                           ;Laboratorio4.c: 164: EscribeLCD_c(i+'0');
  1215   000D78  500F               	movf	_i^0,w,c
  1216   000D7A  0F30               	addlw	48
  1217   000D7C  ECCA  F008         	call	_EscribeLCD_c
  1218                           
  1219                           ;Laboratorio4.c: 165: DireccionaLCD(0x85);
  1220   000D80  0E85               	movlw	133
  1221   000D82  ECD5  F008         	call	_DireccionaLCD
  1222                           
  1223                           ;Laboratorio4.c: 166: EscribeLCD_c(r+'0');
  1224   000D86  5001               	movf	_r^0,w,c
  1225   000D88  0F30               	addlw	48
  1226   000D8A  ECCA  F008         	call	_EscribeLCD_c
  1227                           
  1228                           ;Laboratorio4.c: 167: }else{
  1229   000D8E  D02E               	goto	l1905
  1230   000D90                     l1893:
  1231                           
  1232                           ;Laboratorio4.c: 168: if(r==1000){
  1233   000D90  0EE8               	movlw	232
  1234   000D92  1801               	xorwf	_r^0,w,c
  1235   000D94  E110               	bnz	l1897
  1236   000D96  0E03               	movlw	3
  1237   000D98  1802               	xorwf	(_r+1)^0,w,c
  1238   000D9A  1003               	iorwf	(_r+2)^0,w,c
  1239   000D9C  1004               	iorwf	(_r+3)^0,w,c
  1240   000D9E  A4D8               	btfss	status,2,c
  1241   000DA0  D00A               	goto	l1897
  1242                           
  1243                           ;Laboratorio4.c: 169: EscribeLCD_c('I');
  1244   000DA2  0E49               	movlw	73
  1245   000DA4  ECCA  F008         	call	_EscribeLCD_c
  1246                           
  1247                           ;Laboratorio4.c: 170: EscribeLCD_c('N');
  1248   000DA8  0E4E               	movlw	78
  1249   000DAA  ECCA  F008         	call	_EscribeLCD_c
  1250                           
  1251                           ;Laboratorio4.c: 171: EscribeLCD_c('F');
  1252   000DAE  0E46               	movlw	70
  1253   000DB0  ECCA  F008         	call	_EscribeLCD_c
  1254                           
  1255                           ;Laboratorio4.c: 172: }else{
  1256   000DB4  D01B               	goto	l1905
  1257   000DB6                     l1897:
  1258                           
  1259                           ;Laboratorio4.c: 173: if(r==1001){
  1260   000DB6  0EE9               	movlw	233
  1261   000DB8  1801               	xorwf	_r^0,w,c
  1262   000DBA  E110               	bnz	l1901
  1263   000DBC  0E03               	movlw	3
  1264   000DBE  1802               	xorwf	(_r+1)^0,w,c
  1265   000DC0  1003               	iorwf	(_r+2)^0,w,c
  1266   000DC2  1004               	iorwf	(_r+3)^0,w,c
  1267   000DC4  A4D8               	btfss	status,2,c
  1268   000DC6  D00A               	goto	l1901
  1269                           
  1270                           ;Laboratorio4.c: 174: EscribeLCD_c('I');
  1271   000DC8  0E49               	movlw	73
  1272   000DCA  ECCA  F008         	call	_EscribeLCD_c
  1273                           
  1274                           ;Laboratorio4.c: 175: EscribeLCD_c('N');
  1275   000DCE  0E4E               	movlw	78
  1276   000DD0  ECCA  F008         	call	_EscribeLCD_c
  1277                           
  1278                           ;Laboratorio4.c: 176: EscribeLCD_c('D');
  1279   000DD4  0E44               	movlw	68
  1280   000DD6  ECCA  F008         	call	_EscribeLCD_c
  1281                           
  1282                           ;Laboratorio4.c: 177: }else{
  1283   000DDA  D008               	goto	l1905
  1284   000DDC                     l1901:
  1285                           
  1286                           ;Laboratorio4.c: 178: EscribeLCD_c(r+'0');
  1287   000DDC  5001               	movf	_r^0,w,c
  1288   000DDE  0F30               	addlw	48
  1289   000DE0  ECCA  F008         	call	_EscribeLCD_c
  1290   000DE4  D003               	goto	l1905
  1291   000DE6                     l1903:
  1292                           
  1293                           ;Laboratorio4.c: 184: EscribeLCD_c('W');
  1294   000DE6  0E57               	movlw	87
  1295   000DE8  ECCA  F008         	call	_EscribeLCD_c
  1296   000DEC                     l1905:
  1297                           
  1298                           ;Laboratorio4.c: 185: };Laboratorio4.c: 186: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1299   000DEC  0EE4               	movlw	228
  1300   000DEE  6E27               	movwf	??_main^0,c
  1301   000DF0  0E44               	movlw	68
  1302   000DF2                     u1577:
  1303   000DF2  2EE8               	decfsz	wreg,f,c
  1304   000DF4  D7FE               	bra	u1577
  1305   000DF6  2E27               	decfsz	??_main^0,f,c
  1306   000DF8  D7FC               	bra	u1577
  1307   000DFA  D000               	nop2	
  1308   000DFC  D55E               	goto	l1695
  1309   000DFE                     __end_of_main:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function ___wmul *****************
  1313 ;; Defined at:
  1314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  multiplier      2    0[COMRAM] unsigned int 
  1317 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  product         2    4[COMRAM] unsigned int 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2    0[COMRAM] unsigned int 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, prodl, prodh
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         4       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1332 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        6 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text1
  1344   00116E                     __ptext1:
  1345                           	callstack 0
  1346   00116E                     ___wmul:
  1347                           	callstack 29
  1348                           
  1349                           ;incstack = 0
  1350   00116E  501A               	movf	___wmul@multiplier^0,w,c
  1351   001170  021C               	mulwf	___wmul@multiplicand^0,c
  1352   001172  CFF3 F01E          	movff	prodl,___wmul@product
  1353   001176  CFF4 F01F          	movff	prodh,___wmul@product+1
  1354   00117A  501A               	movf	___wmul@multiplier^0,w,c
  1355   00117C  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  1356   00117E  50F3               	movf	243,w,c
  1357   001180  261F               	addwf	(___wmul@product+1)^0,f,c
  1358   001182  501B               	movf	(___wmul@multiplier+1)^0,w,c
  1359   001184  021C               	mulwf	___wmul@multiplicand^0,c
  1360   001186  50F3               	movf	243,w,c
  1361   001188  261F               	addwf	(___wmul@product+1)^0,f,c
  1362   00118A  C01E  F01A         	movff	___wmul@product,?___wmul
  1363   00118E  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  1364   001192  0012               	return		;funcret
  1365   001194                     __end_of___wmul:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function ___lwmod *****************
  1369 ;; Defined at:
  1370 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  dividend        2    0[COMRAM] unsigned int 
  1373 ;;  divisor         2    2[COMRAM] unsigned int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  counter         1    4[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    0[COMRAM] unsigned int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         4       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        5 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text2
  1400   00107A                     __ptext2:
  1401                           	callstack 0
  1402   00107A                     ___lwmod:
  1403                           	callstack 29
  1404                           
  1405                           ;incstack = 0
  1406   00107A  501C               	movf	___lwmod@divisor^0,w,c
  1407   00107C  101D               	iorwf	(___lwmod@divisor+1)^0,w,c
  1408   00107E  B4D8               	btfsc	status,2,c
  1409   001080  D018               	goto	l759
  1410   001082  0E01               	movlw	1
  1411   001084  6E1E               	movwf	___lwmod@counter^0,c
  1412   001086  D004               	goto	l1653
  1413   001088                     l1651:
  1414   001088  90D8               	bcf	status,0,c
  1415   00108A  361C               	rlcf	___lwmod@divisor^0,f,c
  1416   00108C  361D               	rlcf	(___lwmod@divisor+1)^0,f,c
  1417   00108E  2A1E               	incf	___lwmod@counter^0,f,c
  1418   001090                     l1653:
  1419   001090  AE1D               	btfss	(___lwmod@divisor+1)^0,7,c
  1420   001092  D7FA               	goto	l1651
  1421   001094                     u1000:
  1422   001094  501C               	movf	___lwmod@divisor^0,w,c
  1423   001096  5C1A               	subwf	___lwmod@dividend^0,w,c
  1424   001098  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1425   00109A  581B               	subwfb	(___lwmod@dividend+1)^0,w,c
  1426   00109C  A0D8               	btfss	status,0,c
  1427   00109E  D004               	goto	l1659
  1428   0010A0  501C               	movf	___lwmod@divisor^0,w,c
  1429   0010A2  5E1A               	subwf	___lwmod@dividend^0,f,c
  1430   0010A4  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1431   0010A6  5A1B               	subwfb	(___lwmod@dividend+1)^0,f,c
  1432   0010A8                     l1659:
  1433   0010A8  90D8               	bcf	status,0,c
  1434   0010AA  321D               	rrcf	(___lwmod@divisor+1)^0,f,c
  1435   0010AC  321C               	rrcf	___lwmod@divisor^0,f,c
  1436   0010AE  2E1E               	decfsz	___lwmod@counter^0,f,c
  1437   0010B0  D7F1               	goto	u1000
  1438   0010B2                     l759:
  1439   0010B2  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1440   0010B6  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1441   0010BA  0012               	return		;funcret
  1442   0010BC                     __end_of___lwmod:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function ___lwdiv *****************
  1446 ;; Defined at:
  1447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  dividend        2    6[COMRAM] unsigned int 
  1450 ;;  divisor         2    8[COMRAM] unsigned int 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  quotient        2   10[COMRAM] unsigned int 
  1453 ;;  counter         1   12[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2    6[COMRAM] unsigned int 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1463 ;;      Params:         4       0       0       0       0       0       0       0       0
  1464 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1466 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1467 ;;Total ram usage:        7 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text3
  1478   001028                     __ptext3:
  1479                           	callstack 0
  1480   001028                     ___lwdiv:
  1481                           	callstack 29
  1482                           
  1483                           ;incstack = 0
  1484   001028  0E00               	movlw	0
  1485   00102A  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  1486   00102C  0E00               	movlw	0
  1487   00102E  6E24               	movwf	___lwdiv@quotient^0,c
  1488   001030  5022               	movf	___lwdiv@divisor^0,w,c
  1489   001032  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1490   001034  B4D8               	btfsc	status,2,c
  1491   001036  D01C               	goto	l749
  1492   001038  0E01               	movlw	1
  1493   00103A  6E26               	movwf	___lwdiv@counter^0,c
  1494   00103C  D004               	goto	l1633
  1495   00103E                     l1631:
  1496   00103E  90D8               	bcf	status,0,c
  1497   001040  3622               	rlcf	___lwdiv@divisor^0,f,c
  1498   001042  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1499   001044  2A26               	incf	___lwdiv@counter^0,f,c
  1500   001046                     l1633:
  1501   001046  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  1502   001048  D7FA               	goto	l1631
  1503   00104A                     u970:
  1504   00104A  90D8               	bcf	status,0,c
  1505   00104C  3624               	rlcf	___lwdiv@quotient^0,f,c
  1506   00104E  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1507   001050  5022               	movf	___lwdiv@divisor^0,w,c
  1508   001052  5C20               	subwf	___lwdiv@dividend^0,w,c
  1509   001054  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1510   001056  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1511   001058  A0D8               	btfss	status,0,c
  1512   00105A  D005               	goto	l1643
  1513   00105C  5022               	movf	___lwdiv@divisor^0,w,c
  1514   00105E  5E20               	subwf	___lwdiv@dividend^0,f,c
  1515   001060  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1516   001062  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1517   001064  8024               	bsf	___lwdiv@quotient^0,0,c
  1518   001066                     l1643:
  1519   001066  90D8               	bcf	status,0,c
  1520   001068  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1521   00106A  3222               	rrcf	___lwdiv@divisor^0,f,c
  1522   00106C  2E26               	decfsz	___lwdiv@counter^0,f,c
  1523   00106E  D7ED               	goto	u970
  1524   001070                     l749:
  1525   001070  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  1526   001074  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1527   001078  0012               	return		;funcret
  1528   00107A                     __end_of___lwdiv:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function ___lmul *****************
  1532 ;; Defined at:
  1533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  multiplier      4    0[COMRAM] unsigned long 
  1536 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  product         4    8[COMRAM] unsigned long 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  4    0[COMRAM] unsigned long 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:         8       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:       12 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text4
  1563   000F7C                     __ptext4:
  1564                           	callstack 0
  1565   000F7C                     ___lmul:
  1566                           	callstack 29
  1567                           
  1568                           ;incstack = 0
  1569   000F7C  0E00               	movlw	0
  1570   000F7E  6E22               	movwf	___lmul@product^0,c
  1571   000F80  0E00               	movlw	0
  1572   000F82  6E23               	movwf	(___lmul@product+1)^0,c
  1573   000F84  0E00               	movlw	0
  1574   000F86  6E24               	movwf	(___lmul@product+2)^0,c
  1575   000F88  0E00               	movlw	0
  1576   000F8A  6E25               	movwf	(___lmul@product+3)^0,c
  1577   000F8C                     l1617:
  1578   000F8C  A01A               	btfss	___lmul@multiplier^0,0,c
  1579   000F8E  D008               	goto	l1621
  1580   000F90  501E               	movf	___lmul@multiplicand^0,w,c
  1581   000F92  2622               	addwf	___lmul@product^0,f,c
  1582   000F94  501F               	movf	(___lmul@multiplicand+1)^0,w,c
  1583   000F96  2223               	addwfc	(___lmul@product+1)^0,f,c
  1584   000F98  5020               	movf	(___lmul@multiplicand+2)^0,w,c
  1585   000F9A  2224               	addwfc	(___lmul@product+2)^0,f,c
  1586   000F9C  5021               	movf	(___lmul@multiplicand+3)^0,w,c
  1587   000F9E  2225               	addwfc	(___lmul@product+3)^0,f,c
  1588   000FA0                     l1621:
  1589   000FA0  90D8               	bcf	status,0,c
  1590   000FA2  361E               	rlcf	___lmul@multiplicand^0,f,c
  1591   000FA4  361F               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1592   000FA6  3620               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1593   000FA8  3621               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1594   000FAA  90D8               	bcf	status,0,c
  1595   000FAC  321D               	rrcf	(___lmul@multiplier+3)^0,f,c
  1596   000FAE  321C               	rrcf	(___lmul@multiplier+2)^0,f,c
  1597   000FB0  321B               	rrcf	(___lmul@multiplier+1)^0,f,c
  1598   000FB2  321A               	rrcf	___lmul@multiplier^0,f,c
  1599   000FB4  501A               	movf	___lmul@multiplier^0,w,c
  1600   000FB6  101B               	iorwf	(___lmul@multiplier+1)^0,w,c
  1601   000FB8  101C               	iorwf	(___lmul@multiplier+2)^0,w,c
  1602   000FBA  101D               	iorwf	(___lmul@multiplier+3)^0,w,c
  1603   000FBC  A4D8               	btfss	status,2,c
  1604   000FBE  D7E6               	goto	l1617
  1605   000FC0  C022  F01A         	movff	___lmul@product,?___lmul
  1606   000FC4  C023  F01B         	movff	___lmul@product+1,?___lmul+1
  1607   000FC8  C024  F01C         	movff	___lmul@product+2,?___lmul+2
  1608   000FCC  C025  F01D         	movff	___lmul@product+3,?___lmul+3
  1609   000FD0  0012               	return		;funcret
  1610   000FD2                     __end_of___lmul:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _MensajeLCD_Word *****************
  1614 ;; Defined at:
  1615 ;;		line 245 in file "LibLCDXC8.h"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  a               1    4[COMRAM] PTR unsigned char 
  1618 ;;		 -> STR_1(17), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  i               2    6[COMRAM] int 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         1       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 4
  1637 ;; This function calls:
  1638 ;;		_EscribeLCD_c
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text5
  1645   001138                     __ptext5:
  1646                           	callstack 0
  1647   001138                     _MensajeLCD_Word:
  1648                           	callstack 26
  1649                           
  1650                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  1651                           
  1652                           ;incstack = 0
  1653   001138  0E00               	movlw	0
  1654   00113A  6E21               	movwf	(MensajeLCD_Word@i+1)^0,c
  1655   00113C  0E00               	movlw	0
  1656   00113E  6E20               	movwf	MensajeLCD_Word@i^0,c
  1657   001140                     l1603:
  1658                           
  1659                           ;LibLCDXC8.h: 251: EscribeLCD_c(a[i]);
  1660   001140  501E               	movf	MensajeLCD_Word@a^0,w,c
  1661   001142  2420               	addwf	MensajeLCD_Word@i^0,w,c
  1662   001144  6E1F               	movwf	??_MensajeLCD_Word^0,c
  1663   001146  C01F  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1664   00114A                     	if	1	;There is more than 1 active tblptr byte
  1665   00114A  0E08               	movlw	high __smallconst
  1666   00114C  6EF7               	movwf	tblptrh,c
  1667   00114E                     	endif
  1668   00114E                     	if	0	;tblptru may be non-zero
  1669   00114E                     	endif
  1670   00114E                     	if	0	;tblptru may be non-zero
  1671   00114E                     	endif
  1672   00114E  0008               	tblrd		*
  1673   001150  50F5               	movf	tablat,w,c
  1674   001152  ECCA  F008         	call	_EscribeLCD_c
  1675   001156  4A20               	infsnz	MensajeLCD_Word@i^0,f,c
  1676   001158  2A21               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1677   00115A  BE21               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1678   00115C  D7F1               	goto	l1603
  1679   00115E  5021               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1680   001160  E105               	bnz	u930
  1681   001162  0E10               	movlw	16
  1682   001164  5C20               	subwf	MensajeLCD_Word@i^0,w,c
  1683   001166  B0D8               	btfsc	status,0,c
  1684   001168  0012               	return	
  1685   00116A  D7EA               	goto	l1603
  1686   00116C                     u930:
  1687   00116C  0012               	return		;funcret
  1688   00116E                     __end_of_MensajeLCD_Word:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _EscribeLCD_c *****************
  1692 ;; Defined at:
  1693 ;;		line 146 in file "LibLCDXC8.h"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  a               1    wreg     unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  a               1    3[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0
  1708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1710 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1711 ;;Total ram usage:        1 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 3
  1714 ;; This function calls:
  1715 ;;		_EnviaDato
  1716 ;;		_HabilitaLCD
  1717 ;;		_RetardoLCD
  1718 ;; This function is called by:
  1719 ;;		_MensajeLCD_Word
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text6
  1725   001194                     __ptext6:
  1726                           	callstack 0
  1727   001194                     _EscribeLCD_c:
  1728                           	callstack 26
  1729                           
  1730                           ;incstack = 0
  1731                           ;EscribeLCD_c@a stored from wreg
  1732   001194  6E1D               	movwf	EscribeLCD_c@a^0,c
  1733                           
  1734                           ;LibLCDXC8.h: 150: LATE0=1;
  1735   001196  808D               	bsf	3981,0,c	;volatile
  1736                           
  1737                           ;LibLCDXC8.h: 151: EnviaDato(a);
  1738   001198  501D               	movf	EscribeLCD_c@a^0,w,c
  1739   00119A  ECF1  F008         	call	_EnviaDato
  1740                           
  1741                           ;LibLCDXC8.h: 152: HabilitaLCD();
  1742   00119E  ECEA  F008         	call	_HabilitaLCD	;wreg free
  1743                           
  1744                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  1745   0011A2  0E04               	movlw	4
  1746   0011A4  ECE9  F007         	call	_RetardoLCD
  1747   0011A8  0012               	return		;funcret
  1748   0011AA                     __end_of_EscribeLCD_c:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _LeerTeclado *****************
  1752 ;; Defined at:
  1753 ;;		line 192 in file "Laboratorio4.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      unsigned char 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text7
  1782   000DFE                     __ptext7:
  1783                           	callstack 0
  1784   000DFE                     _LeerTeclado:
  1785                           	callstack 29
  1786                           
  1787                           ;Laboratorio4.c: 193: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1788                           
  1789                           ;incstack = 0
  1790   000DFE  B881               	btfsc	3969,4,c	;volatile
  1791   000E00  AA81               	btfss	3969,5,c	;volatile
  1792   000E02  D004               	goto	u50
  1793   000E04  AC81               	btfss	3969,6,c	;volatile
  1794   000E06  D002               	goto	u50
  1795   000E08  BE81               	btfsc	3969,7,c	;volatile
  1796   000E0A  D7F9               	goto	__ptext7
  1797   000E0C                     u50:
  1798                           
  1799                           ;Laboratorio4.c: 194: verificador = 1;
  1800   000E0C  0E00               	movlw	0
  1801   000E0E  6E0A               	movwf	(_verificador+1)^0,c
  1802   000E10  0E01               	movlw	1
  1803   000E12  6E09               	movwf	_verificador^0,c
  1804                           
  1805                           ;Laboratorio4.c: 195: LATB=0b11111110;
  1806   000E14  0EFE               	movlw	254
  1807   000E16  6E8A               	movwf	138,c	;volatile
  1808                           
  1809                           ;Laboratorio4.c: 196: if(RB4==0) return '1';
  1810   000E18  B881               	btfsc	3969,4,c	;volatile
  1811   000E1A  D002               	goto	l211
  1812   000E1C  0E31               	movlw	49
  1813   000E1E  0012               	return	
  1814   000E20                     l211:
  1815                           
  1816                           ;Laboratorio4.c: 197: else if(RB5==0) return '2';
  1817   000E20  BA81               	btfsc	3969,5,c	;volatile
  1818   000E22  D002               	goto	l214
  1819   000E24  0E32               	movlw	50
  1820   000E26  0012               	return	
  1821   000E28                     l214:
  1822                           
  1823                           ;Laboratorio4.c: 198: else if(RB6==0) return '3';
  1824   000E28  BC81               	btfsc	3969,6,c	;volatile
  1825   000E2A  D002               	goto	l216
  1826   000E2C  0E33               	movlw	51
  1827   000E2E  0012               	return	
  1828   000E30                     l216:
  1829                           
  1830                           ;Laboratorio4.c: 199: else if(RB7==0) return '+';
  1831   000E30  BE81               	btfsc	3969,7,c	;volatile
  1832   000E32  D002               	goto	l1161
  1833   000E34  0E2B               	movlw	43
  1834   000E36  0012               	return	
  1835   000E38                     l1161:
  1836                           
  1837                           ;Laboratorio4.c: 200: else{;Laboratorio4.c: 201: LATB=0b11111101;
  1838   000E38  0EFD               	movlw	253
  1839   000E3A  6E8A               	movwf	138,c	;volatile
  1840                           
  1841                           ;Laboratorio4.c: 202: if(RB4==0) return '4';
  1842   000E3C  B881               	btfsc	3969,4,c	;volatile
  1843   000E3E  D002               	goto	l220
  1844   000E40  0E34               	movlw	52
  1845   000E42  0012               	return	
  1846   000E44                     l220:
  1847                           
  1848                           ;Laboratorio4.c: 203: else if(RB5==0) return '5';
  1849   000E44  BA81               	btfsc	3969,5,c	;volatile
  1850   000E46  D002               	goto	l222
  1851   000E48  0E35               	movlw	53
  1852   000E4A  0012               	return	
  1853   000E4C                     l222:
  1854                           
  1855                           ;Laboratorio4.c: 204: else if(RB6==0) return '6';
  1856   000E4C  BC81               	btfsc	3969,6,c	;volatile
  1857   000E4E  D002               	goto	l224
  1858   000E50  0E36               	movlw	54
  1859   000E52  0012               	return	
  1860   000E54                     l224:
  1861                           
  1862                           ;Laboratorio4.c: 205: else if(RB7==0) return '-';
  1863   000E54  BE81               	btfsc	3969,7,c	;volatile
  1864   000E56  D002               	goto	l1189
  1865   000E58  0E2D               	movlw	45
  1866   000E5A  0012               	return	
  1867   000E5C                     l1189:
  1868                           
  1869                           ;Laboratorio4.c: 206: else{;Laboratorio4.c: 207: LATB=0b11111011;
  1870   000E5C  0EFB               	movlw	251
  1871   000E5E  6E8A               	movwf	138,c	;volatile
  1872                           
  1873                           ;Laboratorio4.c: 208: if(RB4==0) return '7';
  1874   000E60  B881               	btfsc	3969,4,c	;volatile
  1875   000E62  D002               	goto	l228
  1876   000E64  0E37               	movlw	55
  1877   000E66  0012               	return	
  1878   000E68                     l228:
  1879                           
  1880                           ;Laboratorio4.c: 209: else if(RB5==0) return '8';
  1881   000E68  BA81               	btfsc	3969,5,c	;volatile
  1882   000E6A  D002               	goto	l230
  1883   000E6C  0E38               	movlw	56
  1884   000E6E  0012               	return	
  1885   000E70                     l230:
  1886                           
  1887                           ;Laboratorio4.c: 210: else if(RB6==0) return '9';
  1888   000E70  BC81               	btfsc	3969,6,c	;volatile
  1889   000E72  D002               	goto	l232
  1890   000E74  0E39               	movlw	57
  1891   000E76  0012               	return	
  1892   000E78                     l232:
  1893                           
  1894                           ;Laboratorio4.c: 211: else if(RB7==0) return '/';
  1895   000E78  BE81               	btfsc	3969,7,c	;volatile
  1896   000E7A  D002               	goto	l1217
  1897   000E7C  0E2F               	movlw	47
  1898   000E7E  0012               	return	
  1899   000E80                     l1217:
  1900                           
  1901                           ;Laboratorio4.c: 212: else{;Laboratorio4.c: 213: LATB=0b11110111;
  1902   000E80  0EF7               	movlw	247
  1903   000E82  6E8A               	movwf	138,c	;volatile
  1904                           
  1905                           ;Laboratorio4.c: 214: if(RB4==0) return 'C';
  1906   000E84  B881               	btfsc	3969,4,c	;volatile
  1907   000E86  D002               	goto	l236
  1908   000E88  0E43               	movlw	67
  1909   000E8A  0012               	return	
  1910   000E8C                     l236:
  1911                           
  1912                           ;Laboratorio4.c: 215: else if(RB5==0) return '0';
  1913   000E8C  BA81               	btfsc	3969,5,c	;volatile
  1914   000E8E  D002               	goto	l238
  1915   000E90  0E30               	movlw	48
  1916   000E92  0012               	return	
  1917   000E94                     l238:
  1918                           
  1919                           ;Laboratorio4.c: 216: else if(RB6==0) return '=';
  1920   000E94  BC81               	btfsc	3969,6,c	;volatile
  1921   000E96  D002               	goto	l240
  1922   000E98  0E3D               	movlw	61
  1923   000E9A  0012               	return	
  1924   000E9C                     l240:
  1925                           
  1926                           ;Laboratorio4.c: 217: else if(RB7==0) return 'x';
  1927   000E9C  BE81               	btfsc	3969,7,c	;volatile
  1928   000E9E  D002               	goto	l237
  1929   000EA0  0E78               	movlw	120
  1930   000EA2  0012               	return	
  1931   000EA4                     l237:
  1932                           
  1933                           ;Laboratorio4.c: 218: };Laboratorio4.c: 219: };Laboratorio4.c: 220: };Laboratorio4.c: 22
      +                          1: return '?';
  1934   000EA4  0E3F               	movlw	63
  1935   000EA6  0012               	return		;funcret
  1936   000EA8                     __end_of_LeerTeclado:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _InicializaLCD *****************
  1940 ;; Defined at:
  1941 ;;		line 72 in file "LibLCDXC8.h"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 4
  1962 ;; This function calls:
  1963 ;;		_BorraLCD
  1964 ;;		_EnviaDato
  1965 ;;		_HabilitaLCD
  1966 ;;		_RetardoLCD
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text8
  1973   0010BC                     __ptext8:
  1974                           	callstack 0
  1975   0010BC                     _InicializaLCD:
  1976                           	callstack 26
  1977                           
  1978                           ;LibLCDXC8.h: 74: LATE0=0;
  1979                           
  1980                           ;incstack = 0
  1981   0010BC  908D               	bcf	3981,0,c	;volatile
  1982                           
  1983                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  1984                           
  1985                           ;LibLCDXC8.h: 75: if(interfaz==4)
  1986   0010BE  0E3F               	movlw	63
  1987   0010C0  6E8C               	movwf	140,c	;volatile
  1988                           
  1989                           ;LibLCDXC8.h: 79: HabilitaLCD();
  1990   0010C2  ECEA  F008         	call	_HabilitaLCD	;wreg free
  1991                           
  1992                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  1993   0010C6  0E01               	movlw	1
  1994   0010C8  ECE9  F007         	call	_RetardoLCD
  1995                           
  1996                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  1997                           
  1998                           ;LibLCDXC8.h: 81: if(interfaz==4)
  1999   0010CC  0E3F               	movlw	63
  2000   0010CE  6E8C               	movwf	140,c	;volatile
  2001                           
  2002                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2003   0010D0  ECEA  F008         	call	_HabilitaLCD	;wreg free
  2004                           
  2005                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  2006   0010D4  0E03               	movlw	3
  2007   0010D6  ECE9  F007         	call	_RetardoLCD
  2008                           
  2009                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  2010                           
  2011                           ;LibLCDXC8.h: 87: if(interfaz==4)
  2012   0010DA  0E3F               	movlw	63
  2013   0010DC  6E8C               	movwf	140,c	;volatile
  2014                           
  2015                           ;LibLCDXC8.h: 91: HabilitaLCD();
  2016   0010DE  ECEA  F008         	call	_HabilitaLCD	;wreg free
  2017                           
  2018                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  2019   0010E2  0E04               	movlw	4
  2020   0010E4  ECE9  F007         	call	_RetardoLCD
  2021                           
  2022                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  2023                           
  2024                           ;LibLCDXC8.h: 93: if(interfaz==4){
  2025   0010E8  ECE0  F008         	call	_BorraLCD	;wreg free
  2026                           
  2027                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  2028   0010EC  0E0F               	movlw	15
  2029   0010EE  ECF1  F008         	call	_EnviaDato
  2030                           
  2031                           ;LibLCDXC8.h: 103: HabilitaLCD();
  2032   0010F2  ECEA  F008         	call	_HabilitaLCD	;wreg free
  2033                           
  2034                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  2035   0010F6  0E04               	movlw	4
  2036   0010F8  ECE9  F007         	call	_RetardoLCD
  2037   0010FC  0012               	return		;funcret
  2038   0010FE                     __end_of_InicializaLCD:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _BorraLCD *****************
  2042 ;; Defined at:
  2043 ;;		line 113 in file "LibLCDXC8.h"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 3
  2064 ;; This function calls:
  2065 ;;		_EnviaDato
  2066 ;;		_HabilitaLCD
  2067 ;;		_RetardoLCD
  2068 ;; This function is called by:
  2069 ;;		_InicializaLCD
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text9
  2075   0011C0                     __ptext9:
  2076                           	callstack 0
  2077   0011C0                     _BorraLCD:
  2078                           	callstack 26
  2079                           
  2080                           ;LibLCDXC8.h: 115: LATE0=0;
  2081                           
  2082                           ;incstack = 0
  2083   0011C0  908D               	bcf	3981,0,c	;volatile
  2084                           
  2085                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  2086   0011C2  0E01               	movlw	1
  2087   0011C4  ECF1  F008         	call	_EnviaDato
  2088                           
  2089                           ;LibLCDXC8.h: 117: HabilitaLCD();
  2090   0011C8  ECEA  F008         	call	_HabilitaLCD	;wreg free
  2091                           
  2092                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  2093   0011CC  0E02               	movlw	2
  2094   0011CE  ECE9  F007         	call	_RetardoLCD
  2095   0011D2  0012               	return		;funcret
  2096   0011D4                     __end_of_BorraLCD:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _DireccionaLCD *****************
  2100 ;; Defined at:
  2101 ;;		line 256 in file "LibLCDXC8.h"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  a               1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  a               1    3[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0
  2116 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2118 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 3
  2122 ;; This function calls:
  2123 ;;		_EnviaDato
  2124 ;;		_HabilitaLCD
  2125 ;;		_RetardoLCD
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text10
  2132   0011AA                     __ptext10:
  2133                           	callstack 0
  2134   0011AA                     _DireccionaLCD:
  2135                           	callstack 27
  2136                           
  2137                           ;incstack = 0
  2138                           ;DireccionaLCD@a stored from wreg
  2139   0011AA  6E1D               	movwf	DireccionaLCD@a^0,c
  2140                           
  2141                           ;LibLCDXC8.h: 259: LATE0=0;
  2142   0011AC  908D               	bcf	3981,0,c	;volatile
  2143                           
  2144                           ;LibLCDXC8.h: 260: EnviaDato(a);
  2145   0011AE  501D               	movf	DireccionaLCD@a^0,w,c
  2146   0011B0  ECF1  F008         	call	_EnviaDato
  2147                           
  2148                           ;LibLCDXC8.h: 261: HabilitaLCD();
  2149   0011B4  ECEA  F008         	call	_HabilitaLCD	;wreg free
  2150                           
  2151                           ;LibLCDXC8.h: 262: RetardoLCD(4);
  2152   0011B8  0E04               	movlw	4
  2153   0011BA  ECE9  F007         	call	_RetardoLCD
  2154   0011BE  0012               	return		;funcret
  2155   0011C0                     __end_of_DireccionaLCD:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _EnviaDato *****************
  2159 ;; Defined at:
  2160 ;;		line 60 in file "LibLCDXC8.h"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  a               1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  a               1    2[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        1 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 2
  2181 ;; This function calls:
  2182 ;;		_HabilitaLCD
  2183 ;;		_RetardoLCD
  2184 ;; This function is called by:
  2185 ;;		_InicializaLCD
  2186 ;;		_BorraLCD
  2187 ;;		_EscribeLCD_c
  2188 ;;		_DireccionaLCD
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text11
  2193   0011E2                     __ptext11:
  2194                           	callstack 0
  2195   0011E2                     _EnviaDato:
  2196                           	callstack 26
  2197                           
  2198                           ;incstack = 0
  2199                           ;EnviaDato@a stored from wreg
  2200   0011E2  6E1C               	movwf	EnviaDato@a^0,c
  2201                           
  2202                           ;LibLCDXC8.h: 69: LATD=a;
  2203                           
  2204                           ;LibLCDXC8.h: 61: if(interfaz==4){
  2205   0011E4  C01C  FF8C         	movff	EnviaDato@a,3980	;volatile
  2206   0011E8  0012               	return		;funcret
  2207   0011EA                     __end_of_EnviaDato:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _RetardoLCD *****************
  2211 ;; Defined at:
  2212 ;;		line 292 in file "LibLCDXC8.h"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  a               1    wreg     unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  a               1    1[COMRAM] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        2 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_EnviaDato
  2237 ;;		_InicializaLCD
  2238 ;;		_BorraLCD
  2239 ;;		_EscribeLCD_c
  2240 ;;		_DireccionaLCD
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text12
  2245   000FD2                     __ptext12:
  2246                           	callstack 0
  2247   000FD2                     _RetardoLCD:
  2248                           	callstack 27
  2249                           
  2250                           ;incstack = 0
  2251                           ;RetardoLCD@a stored from wreg
  2252   000FD2  6E1B               	movwf	RetardoLCD@a^0,c
  2253                           
  2254                           ;LibLCDXC8.h: 293: switch(a){
  2255   000FD4  D01B               	goto	l1033
  2256   000FD6                     l1023:
  2257   000FD6  0E05               	movlw	5
  2258   000FD8  6E1A               	movwf	??_RetardoLCD^0,c
  2259   000FDA  0EDE               	movlw	222
  2260   000FDC                     u1587:
  2261   000FDC  2EE8               	decfsz	wreg,f,c
  2262   000FDE  D7FE               	bra	u1587
  2263   000FE0  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2264   000FE2  D7FC               	bra	u1587
  2265                           
  2266                           ;LibLCDXC8.h: 296: break;
  2267   000FE4  0012               	return	
  2268   000FE6                     l1025:
  2269   000FE6  0E53               	movlw	83
  2270   000FE8                     u1597:
  2271   000FE8  2EE8               	decfsz	wreg,f,c
  2272   000FEA  D7FE               	bra	u1597
  2273   000FEC  F000               	nop	
  2274                           
  2275                           ;LibLCDXC8.h: 298: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2276   000FEE  0E35               	movlw	53
  2277   000FF0                     u1607:
  2278   000FF0  2EE8               	decfsz	wreg,f,c
  2279   000FF2  D7FE               	bra	u1607
  2280   000FF4  F000               	nop	
  2281                           
  2282                           ;LibLCDXC8.h: 300: break;
  2283   000FF6  0012               	return	
  2284   000FF8                     l1027:
  2285   000FF8  0E08               	movlw	8
  2286   000FFA                     u1617:
  2287   000FFA  2EE8               	decfsz	wreg,f,c
  2288   000FFC  D7FE               	bra	u1617
  2289   000FFE  F000               	nop	
  2290                           
  2291                           ;LibLCDXC8.h: 303: break;
  2292   001000  0012               	return	
  2293   001002                     l1029:
  2294   001002  0E03               	movlw	3
  2295   001004                     u1627:
  2296   001004  2EE8               	decfsz	wreg,f,c
  2297   001006  D7FE               	bra	u1627
  2298   001008  F000               	nop	
  2299                           
  2300                           ;LibLCDXC8.h: 306: break;
  2301   00100A  0012               	return	
  2302   00100C                     l1033:
  2303   00100C  501B               	movf	RetardoLCD@a^0,w,c
  2304                           
  2305                           ; Switch size 1, requested type "simple"
  2306                           ; Number of cases is 4, Range of values is 1 to 4
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte           13     7 (average)
  2310                           ;	Chosen strategy is simple_byte
  2311   00100E  0A01               	xorlw	1	; case 1
  2312   001010  B4D8               	btfsc	status,2,c
  2313   001012  D7E1               	goto	l1023
  2314   001014  0A03               	xorlw	3	; case 2
  2315   001016  B4D8               	btfsc	status,2,c
  2316   001018  D7E6               	goto	l1025
  2317   00101A  0A01               	xorlw	1	; case 3
  2318   00101C  B4D8               	btfsc	status,2,c
  2319   00101E  D7EC               	goto	l1027
  2320   001020  0A07               	xorlw	7	; case 4
  2321   001022  A4D8               	btfss	status,2,c
  2322   001024  0012               	return	
  2323   001026  D7ED               	goto	l1029
  2324   001028                     __end_of_RetardoLCD:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _HabilitaLCD *****************
  2328 ;; Defined at:
  2329 ;;		line 106 in file "LibLCDXC8.h"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_EnviaDato
  2354 ;;		_InicializaLCD
  2355 ;;		_BorraLCD
  2356 ;;		_EscribeLCD_c
  2357 ;;		_DireccionaLCD
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text13
  2362   0011D4                     __ptext13:
  2363                           	callstack 0
  2364   0011D4                     _HabilitaLCD:
  2365                           	callstack 27
  2366                           
  2367                           ;LibLCDXC8.h: 108: LATE1=1;
  2368                           
  2369                           ;incstack = 0
  2370   0011D4  828D               	bsf	3981,1,c	;volatile
  2371                           
  2372                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2373   0011D6  0E03               	movlw	3
  2374   0011D8                     u1637:
  2375   0011D8  2EE8               	decfsz	wreg,f,c
  2376   0011DA  D7FE               	bra	u1637
  2377   0011DC  F000               	nop	
  2378                           
  2379                           ;LibLCDXC8.h: 111: LATE1=0;
  2380   0011DE  928D               	bcf	3981,1,c	;volatile
  2381   0011E0  0012               	return		;funcret
  2382   0011E2                     __end_of_HabilitaLCD:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _ColorRGB *****************
  2386 ;; Defined at:
  2387 ;;		line 224 in file "Laboratorio4.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2403 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2404 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text14
  2416   000EA8                     __ptext14:
  2417                           	callstack 0
  2418   000EA8                     _ColorRGB:
  2419                           	callstack 29
  2420                           
  2421                           ;Laboratorio4.c: 225: if(color==8) color = 0;
  2422                           
  2423                           ;incstack = 0
  2424   000EA8  0E08               	movlw	8
  2425   000EAA  180D               	xorwf	_color^0,w,c
  2426   000EAC  100E               	iorwf	(_color+1)^0,w,c
  2427   000EAE  A4D8               	btfss	status,2,c
  2428   000EB0  D014               	goto	l1269
  2429   000EB2  0E00               	movlw	0
  2430   000EB4  6E0E               	movwf	(_color+1)^0,c
  2431   000EB6  0E00               	movlw	0
  2432   000EB8  6E0D               	movwf	_color^0,c
  2433   000EBA  D00F               	goto	l1269
  2434   000EBC                     l1251:
  2435                           
  2436                           ;Laboratorio4.c: 228: LATC = 0b00000000;
  2437   000EBC  0E00               	movlw	0
  2438   000EBE  D00B               	goto	L9
  2439   000EC0                     l1253:
  2440                           
  2441                           ;Laboratorio4.c: 231: LATC = 0b00000101;
  2442   000EC0  0E05               	movlw	5
  2443   000EC2  D009               	goto	L9
  2444   000EC4                     l1255:
  2445                           
  2446                           ;Laboratorio4.c: 234: LATC = 0b00000110;
  2447   000EC4  0E06               	movlw	6
  2448   000EC6  D007               	goto	L9
  2449   000EC8                     l1257:
  2450                           
  2451                           ;Laboratorio4.c: 237: LATC = 0b00000011;
  2452   000EC8  0E03               	movlw	3
  2453   000ECA  D005               	goto	L9
  2454   000ECC                     l1259:
  2455                           
  2456                           ;Laboratorio4.c: 240: LATC = 0b00000010;
  2457   000ECC  0E02               	movlw	2
  2458   000ECE  D003               	goto	L9
  2459   000ED0                     l1263:
  2460                           
  2461                           ;Laboratorio4.c: 246: LATC = 0b00000100;
  2462   000ED0  0E04               	movlw	4
  2463   000ED2  D001               	goto	L9
  2464   000ED4                     l1265:
  2465                           
  2466                           ;Laboratorio4.c: 249: LATC = 0b00000111;
  2467   000ED4  0E07               	movlw	7
  2468   000ED6                     L9:
  2469   000ED6  6E8B               	movwf	139,c	;volatile
  2470                           
  2471                           ;Laboratorio4.c: 250: break;
  2472   000ED8  D021               	goto	l1271
  2473   000EDA                     l1269:
  2474   000EDA  C00D  F01A         	movff	_color,??_ColorRGB
  2475   000EDE  C00E  F01B         	movff	_color+1,??_ColorRGB+1
  2476                           
  2477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 1, Range of values is 0 to 0
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte            4     3 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484   000EE2  501B               	movf	(??_ColorRGB+1)^0,w,c
  2485   000EE4  0A00               	xorlw	0	; case 0
  2486   000EE6  A4D8               	btfss	status,2,c
  2487   000EE8  D019               	goto	l1271
  2488                           
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 8, Range of values is 0 to 7
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           25    13 (average)
  2494                           ;	Chosen strategy is simple_byte
  2495   000EEA  501A               	movf	??_ColorRGB^0,w,c
  2496   000EEC  0A00               	xorlw	0	; case 0
  2497   000EEE  B4D8               	btfsc	status,2,c
  2498   000EF0  D7E5               	goto	l1251
  2499   000EF2  0A01               	xorlw	1	; case 1
  2500   000EF4  B4D8               	btfsc	status,2,c
  2501   000EF6  D7E4               	goto	l1253
  2502   000EF8  0A03               	xorlw	3	; case 2
  2503   000EFA  B4D8               	btfsc	status,2,c
  2504   000EFC  D7E3               	goto	l1255
  2505   000EFE  0A01               	xorlw	1	; case 3
  2506   000F00  B4D8               	btfsc	status,2,c
  2507   000F02  D7E2               	goto	l1257
  2508   000F04  0A07               	xorlw	7	; case 4
  2509   000F06  B4D8               	btfsc	status,2,c
  2510   000F08  D7E1               	goto	l1259
  2511   000F0A  0A01               	xorlw	1	; case 5
  2512   000F0C  B4D8               	btfsc	status,2,c
  2513   000F0E  D7DA               	goto	l1255
  2514   000F10  0A03               	xorlw	3	; case 6
  2515   000F12  B4D8               	btfsc	status,2,c
  2516   000F14  D7DD               	goto	l1263
  2517   000F16  0A01               	xorlw	1	; case 7
  2518   000F18  B4D8               	btfsc	status,2,c
  2519   000F1A  D7DC               	goto	l1265
  2520   000F1C                     l1271:
  2521                           
  2522                           ;Laboratorio4.c: 254: color += 1;
  2523   000F1C  4A0D               	infsnz	_color^0,f,c
  2524   000F1E  2A0E               	incf	(_color+1)^0,f,c
  2525   000F20  0012               	return		;funcret
  2526   000F22                     __end_of_ColorRGB:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _ISR *****************
  2530 ;; Defined at:
  2531 ;;		line 257 in file "Laboratorio4.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		Interrupt level 2
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	intcode
  2559   000008                     __pintcode:
  2560                           	callstack 0
  2561   000008                     _ISR:
  2562                           	callstack 26
  2563                           
  2564                           ;incstack = 0
  2565   000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2566   00000A  ED91  F007         	call	int_func,f	;refresh shadow registers
  2567                           
  2568                           	psect	intcode_body
  2569   000F22                     __pintcode_body:
  2570                           	callstack 26
  2571   000F22                     int_func:
  2572                           	callstack 26
  2573   000F22  0006               	pop		; remove dummy address from shadow register refresh
  2574                           
  2575                           ;Laboratorio4.c: 258: if(TMR0IF==1){
  2576   000F24  A4F2               	btfss	4082,2,c	;volatile
  2577   000F26  D019               	goto	i2l1587
  2578                           
  2579                           ;Laboratorio4.c: 259: if(!verificador) contador = contador +1;
  2580   000F28  5009               	movf	_verificador^0,w,c
  2581   000F2A  100A               	iorwf	(_verificador+1)^0,w,c
  2582   000F2C  A4D8               	btfss	status,2,c
  2583   000F2E  D007               	goto	i2l1581
  2584   000F30  0E01               	movlw	1
  2585   000F32  240B               	addwf	_contador^0,w,c
  2586   000F34  6E0B               	movwf	_contador^0,c
  2587   000F36  0E00               	movlw	0
  2588   000F38  200C               	addwfc	(_contador+1)^0,w,c
  2589   000F3A  6E0C               	movwf	(_contador+1)^0,c
  2590   000F3C  D004               	goto	i2l1583
  2591   000F3E                     i2l1581:
  2592                           
  2593                           ;Laboratorio4.c: 260: else contador = 0;
  2594   000F3E  0E00               	movlw	0
  2595   000F40  6E0C               	movwf	(_contador+1)^0,c
  2596   000F42  0E00               	movlw	0
  2597   000F44  6E0B               	movwf	_contador^0,c
  2598   000F46                     i2l1583:
  2599                           
  2600                           ;Laboratorio4.c: 261: TMR0IF=0;
  2601   000F46  94F2               	bcf	4082,2,c	;volatile
  2602                           
  2603                           ;Laboratorio4.c: 262: LATE2 = !LATE2;
  2604   000F48  B48D               	btfsc	3981,2,c	;volatile
  2605   000F4A  D002               	goto	i2u87_40
  2606   000F4C  848D               	bsf	3981,2,c	;volatile
  2607   000F4E  D001               	goto	i2u88_45
  2608   000F50                     i2u87_40:
  2609   000F50  948D               	bcf	3981,2,c	;volatile
  2610   000F52                     i2u88_45:
  2611                           
  2612                           ;Laboratorio4.c: 263: TMR0 = 49911;
  2613   000F52  0EC2               	movlw	194
  2614   000F54  6ED7               	movwf	215,c	;volatile
  2615   000F56  0EF7               	movlw	247
  2616   000F58  6ED6               	movwf	214,c	;volatile
  2617   000F5A                     i2l1587:
  2618                           
  2619                           ;Laboratorio4.c: 264: };Laboratorio4.c: 266: if(contador == 10){
  2620   000F5A  0E0A               	movlw	10
  2621   000F5C  180B               	xorwf	_contador^0,w,c
  2622   000F5E  100C               	iorwf	(_contador+1)^0,w,c
  2623   000F60  A4D8               	btfss	status,2,c
  2624   000F62  D00A               	goto	i2l267
  2625                           
  2626                           ;Laboratorio4.c: 267: if(!verificador){
  2627   000F64  5009               	movf	_verificador^0,w,c
  2628   000F66  100A               	iorwf	(_verificador+1)^0,w,c
  2629   000F68  A4D8               	btfss	status,2,c
  2630   000F6A  D006               	goto	i2l267
  2631                           
  2632                           ;Laboratorio4.c: 268: LATC7 = !LATC7;
  2633   000F6C  BE8B               	btfsc	3979,7,c	;volatile
  2634   000F6E  D002               	goto	i2u91_40
  2635   000F70  8E8B               	bsf	3979,7,c	;volatile
  2636   000F72  D001               	goto	i2u92_45
  2637   000F74                     i2u91_40:
  2638   000F74  9E8B               	bcf	3979,7,c	;volatile
  2639   000F76                     i2u92_45:
  2640   000F76  0003               	sleep		;# 
  2641   000F78                     i2l267:
  2642   000F78  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2643   000F7A  0011               	retfie		f
  2644   000F7C                     __end_of_ISR:
  2645                           	callstack 0
  2646                           
  2647                           	psect	rparam
  2648   000000                     
  2649                           	psect	temp
  2650   000031                     btemp:
  2651                           	callstack 0
  2652   000031                     	ds	1
  2653   000000                     int$flags	set	btemp
  2654   000000                     wtemp8	set	btemp+1
  2655   000000                     ttemp5	set	btemp+1
  2656   000000                     ttemp6	set	btemp+4
  2657   000000                     ttemp7	set	btemp+8
  2658                           
  2659                           	psect	idloc
  2660                           
  2661                           ;Config register IDLOC0 @ 0x200000
  2662                           ;	unspecified, using default values
  2663   200000                     	org	2097152
  2664   200000  FF                 	db	255
  2665                           
  2666                           ;Config register IDLOC1 @ 0x200001
  2667                           ;	unspecified, using default values
  2668   200001                     	org	2097153
  2669   200001  FF                 	db	255
  2670                           
  2671                           ;Config register IDLOC2 @ 0x200002
  2672                           ;	unspecified, using default values
  2673   200002                     	org	2097154
  2674   200002  FF                 	db	255
  2675                           
  2676                           ;Config register IDLOC3 @ 0x200003
  2677                           ;	unspecified, using default values
  2678   200003                     	org	2097155
  2679   200003  FF                 	db	255
  2680                           
  2681                           ;Config register IDLOC4 @ 0x200004
  2682                           ;	unspecified, using default values
  2683   200004                     	org	2097156
  2684   200004  FF                 	db	255
  2685                           
  2686                           ;Config register IDLOC5 @ 0x200005
  2687                           ;	unspecified, using default values
  2688   200005                     	org	2097157
  2689   200005  FF                 	db	255
  2690                           
  2691                           ;Config register IDLOC6 @ 0x200006
  2692                           ;	unspecified, using default values
  2693   200006                     	org	2097158
  2694   200006  FF                 	db	255
  2695                           
  2696                           ;Config register IDLOC7 @ 0x200007
  2697                           ;	unspecified, using default values
  2698   200007                     	org	2097159
  2699   200007  FF                 	db	255
  2700                           
  2701                           	psect	config
  2702                           
  2703                           ;Config register CONFIG1L @ 0x300000
  2704                           ;	unspecified, using default values
  2705                           ;	PLL Prescaler Selection bits
  2706                           ;	PLLDIV = 0x0, unprogrammed default
  2707                           ;	System Clock Postscaler Selection bits
  2708                           ;	CPUDIV = 0x0, unprogrammed default
  2709                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2710                           ;	USBDIV = 0x0, unprogrammed default
  2711   300000                     	org	3145728
  2712   300000  00                 	db	0
  2713                           
  2714                           ;Config register CONFIG1H @ 0x300001
  2715                           ;	Oscillator Selection bits
  2716                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2717                           ;	Fail-Safe Clock Monitor Enable bit
  2718                           ;	FCMEN = 0x0, unprogrammed default
  2719                           ;	Internal/External Oscillator Switchover bit
  2720                           ;	IESO = 0x0, unprogrammed default
  2721   300001                     	org	3145729
  2722   300001  09                 	db	9
  2723                           
  2724                           ;Config register CONFIG2L @ 0x300002
  2725                           ;	unspecified, using default values
  2726                           ;	Power-up Timer Enable bit
  2727                           ;	PWRT = 0x1, unprogrammed default
  2728                           ;	Brown-out Reset Enable bits
  2729                           ;	BOR = 0x3, unprogrammed default
  2730                           ;	Brown-out Reset Voltage bits
  2731                           ;	BORV = 0x3, unprogrammed default
  2732                           ;	USB Voltage Regulator Enable bit
  2733                           ;	VREGEN = 0x0, unprogrammed default
  2734   300002                     	org	3145730
  2735   300002  1F                 	db	31
  2736                           
  2737                           ;Config register CONFIG2H @ 0x300003
  2738                           ;	Watchdog Timer Enable bit
  2739                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2740                           ;	Watchdog Timer Postscale Select bits
  2741                           ;	WDTPS = 0xF, unprogrammed default
  2742   300003                     	org	3145731
  2743   300003  1E                 	db	30
  2744                           
  2745                           ; Padding undefined space
  2746   300004                     	org	3145732
  2747   300004  FF                 	db	255
  2748                           
  2749                           ;Config register CONFIG3H @ 0x300005
  2750                           ;	CCP2 MUX bit
  2751                           ;	CCP2MX = 0x1, unprogrammed default
  2752                           ;	PORTB A/D Enable bit
  2753                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2754                           ;	Low-Power Timer 1 Oscillator Enable bit
  2755                           ;	LPT1OSC = 0x0, unprogrammed default
  2756                           ;	MCLR Pin Enable bit
  2757                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2758   300005                     	org	3145733
  2759   300005  81                 	db	129
  2760                           
  2761                           ;Config register CONFIG4L @ 0x300006
  2762                           ;	Stack Full/Underflow Reset Enable bit
  2763                           ;	STVREN = 0x1, unprogrammed default
  2764                           ;	Single-Supply ICSP Enable bit
  2765                           ;	LVP = OFF, Single-Supply ICSP disabled
  2766                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2767                           ;	ICPRT = 0x0, unprogrammed default
  2768                           ;	Extended Instruction Set Enable bit
  2769                           ;	XINST = 0x0, unprogrammed default
  2770                           ;	Background Debugger Enable bit
  2771                           ;	DEBUG = 0x1, unprogrammed default
  2772   300006                     	org	3145734
  2773   300006  81                 	db	129
  2774                           
  2775                           ; Padding undefined space
  2776   300007                     	org	3145735
  2777   300007  FF                 	db	255
  2778                           
  2779                           ;Config register CONFIG5L @ 0x300008
  2780                           ;	unspecified, using default values
  2781                           ;	Code Protection bit
  2782                           ;	CP0 = 0x1, unprogrammed default
  2783                           ;	Code Protection bit
  2784                           ;	CP1 = 0x1, unprogrammed default
  2785                           ;	Code Protection bit
  2786                           ;	CP2 = 0x1, unprogrammed default
  2787                           ;	Code Protection bit
  2788                           ;	CP3 = 0x1, unprogrammed default
  2789   300008                     	org	3145736
  2790   300008  0F                 	db	15
  2791                           
  2792                           ;Config register CONFIG5H @ 0x300009
  2793                           ;	unspecified, using default values
  2794                           ;	Boot Block Code Protection bit
  2795                           ;	CPB = 0x1, unprogrammed default
  2796                           ;	Data EEPROM Code Protection bit
  2797                           ;	CPD = 0x1, unprogrammed default
  2798   300009                     	org	3145737
  2799   300009  C0                 	db	192
  2800                           
  2801                           ;Config register CONFIG6L @ 0x30000A
  2802                           ;	unspecified, using default values
  2803                           ;	Write Protection bit
  2804                           ;	WRT0 = 0x1, unprogrammed default
  2805                           ;	Write Protection bit
  2806                           ;	WRT1 = 0x1, unprogrammed default
  2807                           ;	Write Protection bit
  2808                           ;	WRT2 = 0x1, unprogrammed default
  2809                           ;	Write Protection bit
  2810                           ;	WRT3 = 0x1, unprogrammed default
  2811   30000A                     	org	3145738
  2812   30000A  0F                 	db	15
  2813                           
  2814                           ;Config register CONFIG6H @ 0x30000B
  2815                           ;	unspecified, using default values
  2816                           ;	Configuration Register Write Protection bit
  2817                           ;	WRTC = 0x1, unprogrammed default
  2818                           ;	Boot Block Write Protection bit
  2819                           ;	WRTB = 0x1, unprogrammed default
  2820                           ;	Data EEPROM Write Protection bit
  2821                           ;	WRTD = 0x1, unprogrammed default
  2822   30000B                     	org	3145739
  2823   30000B  E0                 	db	224
  2824                           
  2825                           ;Config register CONFIG7L @ 0x30000C
  2826                           ;	unspecified, using default values
  2827                           ;	Table Read Protection bit
  2828                           ;	EBTR0 = 0x1, unprogrammed default
  2829                           ;	Table Read Protection bit
  2830                           ;	EBTR1 = 0x1, unprogrammed default
  2831                           ;	Table Read Protection bit
  2832                           ;	EBTR2 = 0x1, unprogrammed default
  2833                           ;	Table Read Protection bit
  2834                           ;	EBTR3 = 0x1, unprogrammed default
  2835   30000C                     	org	3145740
  2836   30000C  0F                 	db	15
  2837                           
  2838                           ;Config register CONFIG7H @ 0x30000D
  2839                           ;	unspecified, using default values
  2840                           ;	Boot Block Table Read Protection bit
  2841                           ;	EBTRB = 0x1, unprogrammed default
  2842   30000D                     	org	3145741
  2843   30000D  40                 	db	64
  2844                           tosu	equ	0xFFF
  2845                           tosh	equ	0xFFE
  2846                           tosl	equ	0xFFD
  2847                           stkptr	equ	0xFFC
  2848                           pclatu	equ	0xFFB
  2849                           pclath	equ	0xFFA
  2850                           pcl	equ	0xFF9
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           indf0	equ	0xFEF
  2858                           postinc0	equ	0xFEE
  2859                           postdec0	equ	0xFED
  2860                           preinc0	equ	0xFEC
  2861                           plusw0	equ	0xFEB
  2862                           fsr0h	equ	0xFEA
  2863                           fsr0l	equ	0xFE9
  2864                           wreg	equ	0xFE8
  2865                           indf1	equ	0xFE7
  2866                           postinc1	equ	0xFE6
  2867                           postdec1	equ	0xFE5
  2868                           preinc1	equ	0xFE4
  2869                           plusw1	equ	0xFE3
  2870                           fsr1h	equ	0xFE2
  2871                           fsr1l	equ	0xFE1
  2872                           bsr	equ	0xFE0
  2873                           indf2	equ	0xFDF
  2874                           postinc2	equ	0xFDE
  2875                           postdec2	equ	0xFDD
  2876                           preinc2	equ	0xFDC
  2877                           plusw2	equ	0xFDB
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        4
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3251
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     256
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      30       1       51.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      29        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 17 13:23:52 2023

                      _i 000F                        _m 0016                        _r 0001  
                     _PD 007E82                       u50 0E0C                       _TO 007E83  
                     _n1 0013                       _n2 0011               EnviaDato@a 001C  
                     _op 002F      ___wmul@multiplicand 001C            ??_LeerTeclado 001A  
                    l211 0E20                      l220 0E44            _InicializaLCD 10BC  
                    l230 0E70                      l222 0E4C                      l214 0E28  
                    l240 0E9C                      l232 0E78                      l224 0E54  
                    l216 0E30                      l236 0E8C                      l228 0E68  
                    l148 0880                      l237 0EA4                      l238 0E94  
                    l749 1070                      l759 10B2                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _ISR 0008                      u930 116C  
                    _POR 007E81                      u970 104A                      _n1c 002E  
                    _n2c 002D                      wreg 000FE8                     ?_ISR 001A  
                   l1023 0FD6                     l1025 0FE6                     l1033 100C  
                   l1027 0FF8                     l1029 1002                     l1217 0E80  
                   l1161 0E38                     l1251 0EBC                     l1253 0EC0  
                   l1263 0ED0                     l1255 0EC4                     l1271 0F1C  
                   l1265 0ED4                     l1257 0EC8                     l1259 0ECC  
                   l1603 1140                     l1269 0EDA                     l1189 0E5C  
                   l1621 0FA0                     l1631 103E                     l1617 0F8C  
                   l1633 1046                     l1643 1066                     l1651 1088  
                   l1811 0AC8                     l1653 1090                     l1901 0DDC  
                   l1815 0AD4                     l1807 0A7A                     l1903 0DE6  
                   l1841 0B8E                     l1833 0B6C                     l1809 0A92  
                   l1905 0DEC                     l1753 0990                     l1729 092E  
                   l1659 10A8                     l1851 0C12                     l1827 0B58  
                   l1819 0AF2                     l1691 08A0                     l1845 0BA0  
                   l1773 09E6                     l1863 0C88                     l1855 0C26  
                   l1871 0CB6                     l1847 0BBC                     l1695 08BA  
                   l1883 0D10                     l1893 0D90                     l1797 0A4C  
                   l1897 0DB6                     l1889 0D44                     STR_1 0801  
                   u1000 1094                     u1130 096E                     u1220 09C8  
                   u1310 0A2E                     u1080 0946                     u1500 0D20  
                   u1510 0D32                     u1430 0C24                     _LATB 000F8A  
                   _LATC 000F8B                     u1520 0D44                     _LATD 000F8C  
                   u1470 0CC6                     u1607 0FF0                     u1480 0CD8  
                   u1617 0FFA                     u1490 0CEA                     u1627 1004  
                   u1637 11D8                     u1567 08AA                     u1577 0DF2  
                   u1587 0FDC                     u1597 0FE8                     _RBPU 007F8F  
                   _TMR0 000FD6           ??_EscribeLCD_c 001D                     _main 0814  
                   fsr1l 000FE1                     btemp 0031                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ??_ISR 001A           ?_InicializaLCD 001A                    ?_main 001A  
          EscribeLCD_c@a 001D                    _T0CON 000FD5                    _LATE0 007C68  
                  _LATE1 007C69                    _LATE2 007C6A                    _LATC7 007C5F  
        __end_of___lwdiv 107A          __end_of___lwmod 10BC                    i2l267 0F78  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96      ___lmul@multiplicand 001E                    _Tecla 0015  
    __end_of_LeerTeclado 0EA8                    _color 000D                    main@i 002B  
                  tablat 000FF5              _HabilitaLCD 11D4                    ttemp5 0032  
                  ttemp6 0035                    ttemp7 0039                    status 000FD8  
                  wtemp8 0032         __end_of_BorraLCD 11D4         __end_of_ColorRGB 0F22  
        __initialization 10FE             __end_of_main 0DFE                   ??_main 0027  
          __activetblptr 000002                   _ADCON1 000FC1           DireccionaLCD@a 001D  
                 i2l1581 0F3E                   i2l1583 0F46                   i2l1587 0F5A  
                 _OSCCON 000FD3                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF    __end_of_DireccionaLCD 11C0               _RetardoLCD 0FD2  
                 ___lmul 0F7C                   ___wmul 116E                ??___lwdiv 0024  
              ??___lwmod 001E          ??_InicializaLCD 001D                   clear_0 1124  
                 isa$std 000001     __end_of_EscribeLCD_c 11AA              _LeerTeclado 0DFE  
           __pdataCOMRAM 002D             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 112A            ___rparam_used 000001           __pcstackCOMRAM 001A  
      __end_of_EnviaDato 11EA                ?_BorraLCD 001A                ?_ColorRGB 001A  
            ?_RetardoLCD 001A              RetardoLCD@a 001B                  ?___lmul 001A  
                ?___wmul 001A           ___lmul@product 0022                  i2u91_40 0F74  
                i2u92_45 0F76                  i2u87_40 0F50                  i2u88_45 0F52  
             ??_BorraLCD 001D               ??_ColorRGB 001A        ??_MensajeLCD_Word 001F  
           ?_HabilitaLCD 001A                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 1028                  ___lwmod 107A             __psmallconst 0800  
                __pcinit 10FE                  __ramtop 0800                  __ptext0 0814  
                __ptext1 116E                  __ptext2 107A                  __ptext3 1028  
                __ptext4 0F7C                  __ptext5 1138                  __ptext6 1194  
                __ptext7 0DFE                  __ptext8 10BC                  __ptext9 11C0  
         __pintcode_body 0F22     end_of_initialization 112A            __Lmediumconst 0000  
                int_func 0F22             _EscribeLCD_c 1194                  postdec1 000FE5  
                postinc0 000FEE             ?_LeerTeclado 001A           __end_of___lmul 0FD2  
         __end_of___wmul 1194            __pidataCOMRAM 11EA    __end_of_InicializaLCD 10FE  
              _EnviaDato 11E2      start_initialization 10FE              __end_of_ISR 0F7C  
           ??_RetardoLCD 001A                 ??___lmul 0022                 ??___wmul 001E  
        _MensajeLCD_Word 1138               ?_EnviaDato 001A              __pbssCOMRAM 0001  
     __end_of_RetardoLCD 1028         MensajeLCD_Word@a 001E         MensajeLCD_Word@i 0020  
          _DireccionaLCD 11AA         ___lwdiv@dividend 0020                __pintcode 0008  
               ?___lwdiv 0020                 ?___lwmod 001A              __smallconst 0800  
       ___lwdiv@quotient 0024           ___wmul@product 001E           ?_DireccionaLCD 001A  
__end_of_MensajeLCD_Word 116E        ___wmul@multiplier 001A              ??_EnviaDato 001C  
               _BorraLCD 11C0                 _ColorRGB 0EA8        ___lmul@multiplier 001A  
              copy_data0 1112                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 0022          ___lwdiv@counter 0026                 __ptext10 11AA  
               __ptext11 11E2                 __ptext12 0FD2                 __ptext13 11D4  
               __ptext14 0EA8                 _contador 000B          ??_DireccionaLCD 001D  
               _interfaz 0030                 _partdecl 0005                 isa$xinst 000000  
       ?_MensajeLCD_Word 001E                 int$flags 0031                 intlevel2 0000  
          ??_HabilitaLCD 001A         ___lwmod@dividend 001A          ___lwmod@divisor 001C  
        ___lwmod@counter 001E            ?_EscribeLCD_c 001A              _verificador 0009  
    __end_of_HabilitaLCD 11E2  

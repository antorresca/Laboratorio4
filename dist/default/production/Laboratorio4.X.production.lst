

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 22:10:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001156                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75   001156  20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78   001157  20                 	db	32
    79                           
    80                           ;initializer for _op
    81   001158  20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84   001159  08                 	db	8
    85   000000                     _LATC	set	3979
    86   000000                     _TRISC	set	3988
    87   000000                     _LATE2	set	31850
    88   000000                     _RB7	set	31759
    89   000000                     _RB6	set	31758
    90   000000                     _RB5	set	31757
    91   000000                     _TMR0ON	set	32431
    92   000000                     _GIE	set	32663
    93   000000                     _TMR0IE	set	32661
    94   000000                     _LATE1	set	31849
    95   000000                     _LATB	set	3978
    96   000000                     _LATD	set	3980
    97   000000                     _RB4	set	31756
    98   000000                     _TRISB	set	3987
    99   000000                     _TRISD	set	3989
   100   000000                     _ADCON1	set	4033
   101   000000                     _LATE0	set	31848
   102   000000                     _T0CON	set	4053
   103   000000                     _RBPU	set	32655
   104   000000                     _TRISE	set	3990
   105   000000                     _TMR0IF	set	32658
   106   000000                     _TMR0	set	4054
   107                           
   108                           	psect	smallconst
   109   000800                     __psmallconst:
   110                           	callstack 0
   111   000800  00                 	db	0
   112   000801                     STR_2:
   113   000801  20                 	db	32
   114   000802  20                 	db	32
   115   000803  20                 	db	32
   116   000804  20                 	db	32
   117   000805  20                 	db	32
   118   000806  20                 	db	32
   119   000807  20                 	db	32
   120   000808  20                 	db	32
   121   000809  20                 	db	32
   122   00080A  20                 	db	32
   123   00080B  20                 	db	32
   124   00080C  20                 	db	32
   125   00080D  20                 	db	32
   126   00080E  20                 	db	32
   127   00080F  20                 	db	32
   128   000810  20                 	db	32
   129   000811  00                 	db	0
   130   000812                     STR_1:
   131   000812  48                 	db	72	;'H'
   132   000813  6F                 	db	111	;'o'
   133   000814  6C                 	db	108	;'l'
   134   000815  61                 	db	97	;'a'
   135   000816  20                 	db	32
   136   000817  6D                 	db	109	;'m'
   137   000818  75                 	db	117	;'u'
   138   000819  6E                 	db	110	;'n'
   139   00081A  64                 	db	100	;'d'
   140   00081B  6F                 	db	111	;'o'
   141   00081C  00                 	db	0
   142   00081D  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   00104C                     __pcinit:
   148                           	callstack 0
   149   00104C                     start_initialization:
   150                           	callstack 0
   151   00104C                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (4 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156   00104C  0E56               	movlw	low __pidataCOMRAM
   157   00104E  6EF6               	movwf	tblptrl,c
   158   001050  0E11               	movlw	high __pidataCOMRAM
   159   001052  6EF7               	movwf	tblptrh,c
   160   001054  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161   001056  6EF8               	movwf	tblptru,c
   162   001058  EE00  F029         	lfsr	0,__pdataCOMRAM
   163   00105C  EE10 F004          	lfsr	1,4
   164   001060                     copy_data0:
   165   001060  0009               	tblrd		*+
   166   001062  CFF5 FFEE          	movff	tablat,postinc0
   167   001066  50E5               	movf	postdec1,w,c
   168   001068  50E1               	movf	fsr1l,w,c
   169   00106A  E1FA               	bnz	copy_data0
   170                           
   171                           ; Clear objects allocated to COMRAM (21 bytes)
   172   00106C  EE00  F001         	lfsr	0,__pbssCOMRAM
   173   001070  0E15               	movlw	21
   174   001072                     clear_0:
   175   001072  6AEE               	clrf	postinc0,c
   176   001074  06E8               	decf	wreg,f,c
   177   001076  E1FD               	bnz	clear_0
   178   001078                     end_of_initialization:
   179                           	callstack 0
   180   001078                     __end_of__initialization:
   181                           	callstack 0
   182   001078  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183   00107A  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184   00107C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185   00107E  6EF8               	movwf	tblptru,c
   186   001080  0100               	movlb	0
   187   001082  EF0F  F004         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190   000001                     __pbssCOMRAM:
   191                           	callstack 0
   192   000001                     _r:
   193                           	callstack 0
   194   000001                     	ds	4
   195   000005                     _partdecl:
   196                           	callstack 0
   197   000005                     	ds	4
   198   000009                     _color:
   199                           	callstack 0
   200   000009                     	ds	2
   201   00000B                     _i:
   202                           	callstack 0
   203   00000B                     	ds	2
   204   00000D                     _n2:
   205                           	callstack 0
   206   00000D                     	ds	2
   207   00000F                     _n1:
   208                           	callstack 0
   209   00000F                     	ds	2
   210   000011                     _Tecla:
   211                           	callstack 0
   212   000011                     	ds	1
   213   000012                     _m:
   214                           	callstack 0
   215   000012                     	ds	4
   216                           
   217                           	psect	dataCOMRAM
   218   000029                     __pdataCOMRAM:
   219                           	callstack 0
   220   000029                     _n2c:
   221                           	callstack 0
   222   000029                     	ds	1
   223   00002A                     _n1c:
   224                           	callstack 0
   225   00002A                     	ds	1
   226   00002B                     _op:
   227                           	callstack 0
   228   00002B                     	ds	1
   229   00002C                     _interfaz:
   230                           	callstack 0
   231   00002C                     	ds	1
   232                           
   233                           	psect	cstackCOMRAM
   234   000016                     __pcstackCOMRAM:
   235                           	callstack 0
   236   000016                     ??_RetardoLCD:
   237   000016                     ??_ColorRGB:
   238   000016                     ?___wmul:
   239                           	callstack 0
   240   000016                     ?___lwmod:
   241                           	callstack 0
   242   000016                     ?___lmul:
   243                           	callstack 0
   244   000016                     ___wmul@multiplier:
   245                           	callstack 0
   246   000016                     ___lwmod@dividend:
   247                           	callstack 0
   248   000016                     ___lmul@multiplier:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x0
   252   000016                     	ds	1
   253   000017                     RetardoLCD@a:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x1
   257   000017                     	ds	1
   258   000018                     EnviaDato@a:
   259                           	callstack 0
   260   000018                     ___wmul@multiplicand:
   261                           	callstack 0
   262   000018                     ___lwmod@divisor:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266   000018                     	ds	1
   267   000019                     EscribeLCD_c@a:
   268                           	callstack 0
   269   000019                     DireccionaLCD@a:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x3
   273   000019                     	ds	1
   274   00001A                     MensajeLCD_Word@a:
   275                           	callstack 0
   276   00001A                     ___lwmod@counter:
   277                           	callstack 0
   278   00001A                     ___wmul@product:
   279                           	callstack 0
   280   00001A                     ___lmul@multiplicand:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0x4
   284   00001A                     	ds	1
   285   00001B                     ??_MensajeLCD_Word:
   286                           
   287                           ; 1 bytes @ 0x5
   288   00001B                     	ds	1
   289   00001C                     ?___lwdiv:
   290                           	callstack 0
   291   00001C                     MensajeLCD_Word@i:
   292                           	callstack 0
   293   00001C                     ___lwdiv@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x6
   297   00001C                     	ds	2
   298   00001E                     ___lwdiv@divisor:
   299                           	callstack 0
   300   00001E                     ___lmul@product:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x8
   304   00001E                     	ds	2
   305   000020                     ___lwdiv@quotient:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xA
   309   000020                     	ds	2
   310   000022                     ___lwdiv@counter:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0xC
   314   000022                     	ds	1
   315   000023                     ??_main:
   316                           
   317                           ; 1 bytes @ 0xD
   318   000023                     	ds	4
   319   000027                     main@i:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x11
   323   000027                     	ds	2
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 22 in file "Laboratorio4.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  i               2   17[COMRAM] int 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   344 ;;      Params:         0       0       0       0       0       0       0       0       0
   345 ;;      Locals:         2       0       0       0       0       0       0       0       0
   346 ;;      Temps:          4       0       0       0       0       0       0       0       0
   347 ;;      Totals:         6       0       0       0       0       0       0       0       0
   348 ;;Total ram usage:        6 bytes
   349 ;; Hardware stack levels required when called: 5
   350 ;; This function calls:
   351 ;;		_BorraLCD
   352 ;;		_ColorRGB
   353 ;;		_DireccionaLCD
   354 ;;		_EscribeLCD_c
   355 ;;		_InicializaLCD
   356 ;;		_LeerTeclado
   357 ;;		_MensajeLCD_Word
   358 ;;		___lmul
   359 ;;		___lwdiv
   360 ;;		___lwmod
   361 ;;		___wmul
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text0
   368   00081E                     __ptext0:
   369                           	callstack 0
   370   00081E                     _main:
   371                           	callstack 26
   372                           
   373                           ;Laboratorio4.c: 23: ADCON1=15;
   374                           
   375                           ;incstack = 0
   376   00081E  0E0F               	movlw	15
   377   000820  6EC1               	movwf	193,c	;volatile
   378                           
   379                           ;Laboratorio4.c: 24: TRISD=0;
   380   000822  0E00               	movlw	0
   381   000824  6E95               	movwf	149,c	;volatile
   382                           
   383                           ;Laboratorio4.c: 25: TRISB=0b11110000;
   384   000826  0EF0               	movlw	240
   385   000828  6E93               	movwf	147,c	;volatile
   386                           
   387                           ;Laboratorio4.c: 26: TRISE=0;
   388   00082A  0E00               	movlw	0
   389   00082C  6E96               	movwf	150,c	;volatile
   390                           
   391                           ;Laboratorio4.c: 27: TRISC=0;
   392   00082E  0E00               	movlw	0
   393   000830  6E94               	movwf	148,c	;volatile
   394                           
   395                           ;Laboratorio4.c: 28: RBPU=0;
   396   000832  9EF1               	bcf	4081,7,c	;volatile
   397                           
   398                           ;Laboratorio4.c: 29: InicializaLCD();
   399   000834  EC05  F008         	call	_InicializaLCD	;wreg free
   400                           
   401                           ;Laboratorio4.c: 31: T0CON=0b10000011;
   402   000838  0E83               	movlw	131
   403   00083A  6ED5               	movwf	213,c	;volatile
   404                           
   405                           ;Laboratorio4.c: 32: TMR0IF=0;
   406   00083C  94F2               	bcf	4082,2,c	;volatile
   407                           
   408                           ;Laboratorio4.c: 33: TMR0=3036;
   409   00083E  0E0B               	movlw	11
   410   000840  6ED7               	movwf	215,c	;volatile
   411   000842  0EDC               	movlw	220
   412   000844  6ED6               	movwf	214,c	;volatile
   413                           
   414                           ;Laboratorio4.c: 34: TMR0IE=1;
   415   000846  8AF2               	bsf	4082,5,c	;volatile
   416                           
   417                           ;Laboratorio4.c: 35: GIE=1;
   418   000848  8EF2               	bsf	4082,7,c	;volatile
   419                           
   420                           ;Laboratorio4.c: 36: TMR0ON=1;
   421   00084A  8ED5               	bsf	4053,7,c	;volatile
   422                           
   423                           ;Laboratorio4.c: 38: BorraLCD();
   424   00084C  EC96  F008         	call	_BorraLCD	;wreg free
   425                           
   426                           ;Laboratorio4.c: 39: MensajeLCD_Word("Hola mundo");
   427   000850  0E12               	movlw	low STR_1
   428   000852  6E1A               	movwf	MensajeLCD_Word@a^0,c
   429   000854  EC43  F008         	call	_MensajeLCD_Word	;wreg free
   430                           
   431                           ;Laboratorio4.c: 40: _delay((unsigned long)((2000)*(1000000/4000.0)));
   432   000858  0E03               	movlw	3
   433   00085A  6E24               	movwf	(??_main+1)^0,c
   434   00085C  0E8A               	movlw	138
   435   00085E  6E23               	movwf	??_main^0,c
   436   000860  0E56               	movlw	86
   437   000862                     u1457:
   438   000862  2EE8               	decfsz	wreg,f,c
   439   000864  D7FE               	bra	u1457
   440   000866  2E23               	decfsz	??_main^0,f,c
   441   000868  D7FC               	bra	u1457
   442   00086A  2E24               	decfsz	(??_main+1)^0,f,c
   443   00086C  D7FA               	bra	u1457
   444                           
   445                           ;Laboratorio4.c: 41: BorraLCD();
   446   00086E  EC96  F008         	call	_BorraLCD	;wreg free
   447   000872                     l1648:
   448                           
   449                           ;Laboratorio4.c: 43: LATB=0B00000000;
   450   000872  0E00               	movlw	0
   451   000874  6E8A               	movwf	138,c	;volatile
   452                           
   453                           ;Laboratorio4.c: 44: Tecla = LeerTeclado();
   454   000876  ECD7  F006         	call	_LeerTeclado	;wreg free
   455   00087A  6E11               	movwf	_Tecla^0,c
   456                           
   457                           ;Laboratorio4.c: 45: ColorRGB();
   458   00087C  EC28  F007         	call	_ColorRGB	;wreg free
   459                           
   460                           ;Laboratorio4.c: 46: if(Tecla=='C'){
   461   000880  0E43               	movlw	67
   462   000882  1811               	xorwf	_Tecla^0,w,c
   463   000884  A4D8               	btfss	status,2,c
   464   000886  D02B               	goto	l1680
   465                           
   466                           ;Laboratorio4.c: 47: DireccionaLCD(0xC0);
   467   000888  0EC0               	movlw	192
   468   00088A  EC8B  F008         	call	_DireccionaLCD
   469                           
   470                           ;Laboratorio4.c: 49: op = ' ';
   471   00088E  0E20               	movlw	32
   472   000890  6E2B               	movwf	_op^0,c
   473                           
   474                           ;Laboratorio4.c: 50: n1c = ' ';
   475   000892  0E20               	movlw	32
   476   000894  6E2A               	movwf	_n1c^0,c
   477                           
   478                           ;Laboratorio4.c: 51: n2c = ' ';
   479   000896  0E20               	movlw	32
   480   000898  6E29               	movwf	_n2c^0,c
   481                           
   482                           ;Laboratorio4.c: 52: n1 = 0;
   483   00089A  0E00               	movlw	0
   484   00089C  6E10               	movwf	(_n1+1)^0,c
   485   00089E  0E00               	movlw	0
   486   0008A0  6E0F               	movwf	_n1^0,c
   487                           
   488                           ;Laboratorio4.c: 53: n2 = 0;
   489   0008A2  0E00               	movlw	0
   490   0008A4  6E0E               	movwf	(_n2+1)^0,c
   491   0008A6  0E00               	movlw	0
   492   0008A8  6E0D               	movwf	_n2^0,c
   493                           
   494                           ;Laboratorio4.c: 54: i = 0;
   495   0008AA  0E00               	movlw	0
   496   0008AC  6E0C               	movwf	(_i+1)^0,c
   497   0008AE  0E00               	movlw	0
   498   0008B0  6E0B               	movwf	_i^0,c
   499                           
   500                           ;Laboratorio4.c: 55: partdecl = 0;
   501   0008B2  0E00               	movlw	0
   502   0008B4  6E05               	movwf	_partdecl^0,c
   503   0008B6  0E00               	movlw	0
   504   0008B8  6E06               	movwf	(_partdecl+1)^0,c
   505   0008BA  0E00               	movlw	0
   506   0008BC  6E07               	movwf	(_partdecl+2)^0,c
   507   0008BE  0E00               	movlw	0
   508   0008C0  6E08               	movwf	(_partdecl+3)^0,c
   509                           
   510                           ;Laboratorio4.c: 56: DireccionaLCD(0x80);
   511   0008C2  0E80               	movlw	128
   512   0008C4  EC8B  F008         	call	_DireccionaLCD
   513                           
   514                           ;Laboratorio4.c: 57: MensajeLCD_Word("                ");
   515   0008C8  0E01               	movlw	low STR_2
   516   0008CA  6E1A               	movwf	MensajeLCD_Word@a^0,c
   517   0008CC  EC43  F008         	call	_MensajeLCD_Word	;wreg free
   518                           
   519                           ;Laboratorio4.c: 58: DireccionaLCD(0xC0);
   520   0008D0  0EC0               	movlw	192
   521   0008D2  EC8B  F008         	call	_DireccionaLCD
   522                           
   523                           ;Laboratorio4.c: 59: DireccionaLCD(0x80);
   524   0008D6  0E80               	movlw	128
   525   0008D8  EC8B  F008         	call	_DireccionaLCD
   526                           
   527                           ;Laboratorio4.c: 60: }else{
   528   0008DC  D7CA               	goto	l1648
   529   0008DE                     l1680:
   530                           
   531                           ;Laboratorio4.c: 61: if(n1c==' '|n2c==' '|op==' '){
   532   0008DE  0E20               	movlw	32
   533   0008E0  182A               	xorwf	_n1c^0,w,c
   534   0008E2  B4D8               	btfsc	status,2,c
   535   0008E4  D008               	goto	u970
   536   0008E6  0E20               	movlw	32
   537   0008E8  1829               	xorwf	_n2c^0,w,c
   538   0008EA  B4D8               	btfsc	status,2,c
   539   0008EC  D004               	goto	u970
   540   0008EE  0E20               	movlw	32
   541   0008F0  182B               	xorwf	_op^0,w,c
   542   0008F2  A4D8               	btfss	status,2,c
   543   0008F4  D083               	goto	l1748
   544   0008F6                     u970:
   545                           
   546                           ;Laboratorio4.c: 62: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   547   0008F6  0E20               	movlw	32
   548   0008F8  182B               	xorwf	_op^0,w,c
   549   0008FA  A4D8               	btfss	status,2,c
   550   0008FC  D021               	goto	l1704
   551   0008FE  0E2B               	movlw	43
   552   000900  1811               	xorwf	_Tecla^0,w,c
   553   000902  B4D8               	btfsc	status,2,c
   554   000904  D00C               	goto	u1020
   555   000906  0E2D               	movlw	45
   556   000908  1811               	xorwf	_Tecla^0,w,c
   557   00090A  B4D8               	btfsc	status,2,c
   558   00090C  D008               	goto	u1020
   559   00090E  0E2F               	movlw	47
   560   000910  1811               	xorwf	_Tecla^0,w,c
   561   000912  B4D8               	btfsc	status,2,c
   562   000914  D004               	goto	u1020
   563   000916  0E78               	movlw	120
   564   000918  1811               	xorwf	_Tecla^0,w,c
   565   00091A  A4D8               	btfss	status,2,c
   566   00091C  D011               	goto	l1704
   567   00091E                     u1020:
   568   00091E  0E20               	movlw	32
   569   000920  182A               	xorwf	_n1c^0,w,c
   570   000922  B4D8               	btfsc	status,2,c
   571   000924  D00D               	goto	l1704
   572   000926  0E20               	movlw	32
   573   000928  1829               	xorwf	_n2c^0,w,c
   574   00092A  A4D8               	btfss	status,2,c
   575   00092C  D009               	goto	l1704
   576                           
   577                           ;Laboratorio4.c: 63: DireccionaLCD(0x81);
   578   00092E  0E81               	movlw	129
   579   000930  EC8B  F008         	call	_DireccionaLCD
   580                           
   581                           ;Laboratorio4.c: 64: EscribeLCD_c(Tecla);
   582   000934  5011               	movf	_Tecla^0,w,c
   583   000936  EC80  F008         	call	_EscribeLCD_c
   584                           
   585                           ;Laboratorio4.c: 65: op = Tecla;
   586   00093A  C011  F02B         	movff	_Tecla,_op
   587                           
   588                           ;Laboratorio4.c: 66: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   589   00093E  D22E               	goto	l1856
   590   000940                     l1704:
   591   000940  0E20               	movlw	32
   592   000942  182A               	xorwf	_n1c^0,w,c
   593   000944  A4D8               	btfss	status,2,c
   594   000946  D027               	goto	l1724
   595   000948  0E2B               	movlw	43
   596   00094A  1811               	xorwf	_Tecla^0,w,c
   597   00094C  A4D8               	btfss	status,2,c
   598   00094E  D014               	goto	u1110
   599   000950  0E2D               	movlw	45
   600   000952  1811               	xorwf	_Tecla^0,w,c
   601   000954  A4D8               	btfss	status,2,c
   602   000956  D010               	goto	u1110
   603   000958  0E2F               	movlw	47
   604   00095A  1811               	xorwf	_Tecla^0,w,c
   605   00095C  A4D8               	btfss	status,2,c
   606   00095E  D00C               	goto	u1110
   607   000960  0E78               	movlw	120
   608   000962  1811               	xorwf	_Tecla^0,w,c
   609   000964  A4D8               	btfss	status,2,c
   610   000966  D008               	goto	u1110
   611   000968  0E3D               	movlw	61
   612   00096A  1811               	xorwf	_Tecla^0,w,c
   613   00096C  A4D8               	btfss	status,2,c
   614   00096E  D004               	goto	u1110
   615   000970  0E43               	movlw	67
   616   000972  1811               	xorwf	_Tecla^0,w,c
   617   000974  B4D8               	btfsc	status,2,c
   618   000976  D00F               	goto	l1724
   619   000978                     u1110:
   620                           
   621                           ;Laboratorio4.c: 67: DireccionaLCD(0x80);
   622   000978  0E80               	movlw	128
   623   00097A  EC8B  F008         	call	_DireccionaLCD
   624                           
   625                           ;Laboratorio4.c: 68: EscribeLCD_c(Tecla);
   626   00097E  5011               	movf	_Tecla^0,w,c
   627   000980  EC80  F008         	call	_EscribeLCD_c
   628                           
   629                           ;Laboratorio4.c: 69: n1c=Tecla;
   630   000984  C011  F02A         	movff	_Tecla,_n1c
   631                           
   632                           ;Laboratorio4.c: 70: n1 = Tecla-'0';
   633   000988  0ED0               	movlw	208
   634   00098A  2411               	addwf	_Tecla^0,w,c
   635   00098C  6E0F               	movwf	_n1^0,c
   636   00098E  6A10               	clrf	(_n1+1)^0,c
   637   000990  0EFF               	movlw	255
   638   000992  2210               	addwfc	(_n1+1)^0,f,c
   639                           
   640                           ;Laboratorio4.c: 71: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   641   000994  D203               	goto	l1856
   642   000996                     l1724:
   643   000996  0E20               	movlw	32
   644   000998  1829               	xorwf	_n2c^0,w,c
   645   00099A  A4D8               	btfss	status,2,c
   646   00099C  D1FF               	goto	l1856
   647   00099E  0E20               	movlw	32
   648   0009A0  182B               	xorwf	_op^0,w,c
   649   0009A2  B4D8               	btfsc	status,2,c
   650   0009A4  D1FB               	goto	l1856
   651   0009A6  0E20               	movlw	32
   652   0009A8  182A               	xorwf	_n1c^0,w,c
   653   0009AA  B4D8               	btfsc	status,2,c
   654   0009AC  D1F7               	goto	l1856
   655   0009AE  0E2B               	movlw	43
   656   0009B0  1811               	xorwf	_Tecla^0,w,c
   657   0009B2  A4D8               	btfss	status,2,c
   658   0009B4  D014               	goto	u1200
   659   0009B6  0E2D               	movlw	45
   660   0009B8  1811               	xorwf	_Tecla^0,w,c
   661   0009BA  A4D8               	btfss	status,2,c
   662   0009BC  D010               	goto	u1200
   663   0009BE  0E2F               	movlw	47
   664   0009C0  1811               	xorwf	_Tecla^0,w,c
   665   0009C2  A4D8               	btfss	status,2,c
   666   0009C4  D00C               	goto	u1200
   667   0009C6  0E78               	movlw	120
   668   0009C8  1811               	xorwf	_Tecla^0,w,c
   669   0009CA  A4D8               	btfss	status,2,c
   670   0009CC  D008               	goto	u1200
   671   0009CE  0E3D               	movlw	61
   672   0009D0  1811               	xorwf	_Tecla^0,w,c
   673   0009D2  A4D8               	btfss	status,2,c
   674   0009D4  D004               	goto	u1200
   675   0009D6  0E43               	movlw	67
   676   0009D8  1811               	xorwf	_Tecla^0,w,c
   677   0009DA  B4D8               	btfsc	status,2,c
   678   0009DC  D1DF               	goto	l1856
   679   0009DE                     u1200:
   680                           
   681                           ;Laboratorio4.c: 72: DireccionaLCD(0x82);
   682   0009DE  0E82               	movlw	130
   683   0009E0  EC8B  F008         	call	_DireccionaLCD
   684                           
   685                           ;Laboratorio4.c: 73: EscribeLCD_c(Tecla);
   686   0009E4  5011               	movf	_Tecla^0,w,c
   687   0009E6  EC80  F008         	call	_EscribeLCD_c
   688                           
   689                           ;Laboratorio4.c: 74: n2c=Tecla;
   690   0009EA  C011  F029         	movff	_Tecla,_n2c
   691                           
   692                           ;Laboratorio4.c: 75: n2 = Tecla-'0';
   693   0009EE  0ED0               	movlw	208
   694   0009F0  2411               	addwf	_Tecla^0,w,c
   695   0009F2  6E0D               	movwf	_n2^0,c
   696   0009F4  6A0E               	clrf	(_n2+1)^0,c
   697   0009F6  0EFF               	movlw	255
   698   0009F8  220E               	addwfc	(_n2+1)^0,f,c
   699                           
   700                           ;Laboratorio4.c: 76: };Laboratorio4.c: 77: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   701   0009FA  D1D0               	goto	l1856
   702   0009FC                     l1748:
   703   0009FC  0E3D               	movlw	61
   704   0009FE  1811               	xorwf	_Tecla^0,w,c
   705   000A00  A4D8               	btfss	status,2,c
   706   000A02  D1C9               	goto	l1854
   707   000A04  0E20               	movlw	32
   708   000A06  1829               	xorwf	_n2c^0,w,c
   709   000A08  B4D8               	btfsc	status,2,c
   710   000A0A  D1C5               	goto	l1854
   711   000A0C  0E20               	movlw	32
   712   000A0E  182B               	xorwf	_op^0,w,c
   713   000A10  B4D8               	btfsc	status,2,c
   714   000A12  D1C1               	goto	l1854
   715   000A14  0E20               	movlw	32
   716   000A16  182A               	xorwf	_n1c^0,w,c
   717   000A18  B4D8               	btfsc	status,2,c
   718   000A1A  D1BD               	goto	l1854
   719                           
   720                           ;Laboratorio4.c: 78: DireccionaLCD(0x83);
   721   000A1C  0E83               	movlw	131
   722   000A1E  EC8B  F008         	call	_DireccionaLCD
   723                           
   724                           ;Laboratorio4.c: 79: EscribeLCD_c('=');
   725   000A22  0E3D               	movlw	61
   726   000A24  EC80  F008         	call	_EscribeLCD_c
   727                           
   728                           ;Laboratorio4.c: 80: switch(op){
   729   000A28  D093               	goto	l1796
   730   000A2A                     l1758:
   731                           
   732                           ;Laboratorio4.c: 82: r = n1 + n2;
   733   000A2A  500D               	movf	_n2^0,w,c
   734   000A2C  240F               	addwf	_n1^0,w,c
   735   000A2E  6E23               	movwf	??_main^0,c
   736   000A30  500E               	movf	(_n2+1)^0,w,c
   737   000A32  2010               	addwfc	(_n1+1)^0,w,c
   738   000A34  6E24               	movwf	(??_main+1)^0,c
   739   000A36  C023  F001         	movff	??_main,_r
   740   000A3A  C024  F002         	movff	??_main+1,_r+1
   741   000A3E  6A03               	clrf	(_r+2)^0,c
   742   000A40  6A04               	clrf	(_r+3)^0,c
   743   000A42                     l1760:
   744                           
   745                           ;Laboratorio4.c: 83: partdecl = r*100;
   746   000A42  C001  F016         	movff	_r,___lmul@multiplier
   747   000A46  C002  F017         	movff	_r+1,___lmul@multiplier+1
   748   000A4A  C003  F018         	movff	_r+2,___lmul@multiplier+2
   749   000A4E  C004  F019         	movff	_r+3,___lmul@multiplier+3
   750   000A52  0E64               	movlw	100
   751   000A54  6E1A               	movwf	___lmul@multiplicand^0,c
   752   000A56  0E00               	movlw	0
   753   000A58  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   754   000A5A  0E00               	movlw	0
   755   000A5C  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   756   000A5E  0E00               	movlw	0
   757   000A60  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   758   000A62  EC65  F007         	call	___lmul	;wreg free
   759   000A66  C016  F005         	movff	?___lmul,_partdecl
   760   000A6A  C017  F006         	movff	?___lmul+1,_partdecl+1
   761   000A6E  C018  F007         	movff	?___lmul+2,_partdecl+2
   762   000A72  C019  F008         	movff	?___lmul+3,_partdecl+3
   763                           
   764                           ;Laboratorio4.c: 84: break;
   765   000A76  D07A               	goto	l1798
   766   000A78                     l1762:
   767                           
   768                           ;Laboratorio4.c: 86: r = n1 - n2;
   769   000A78  500D               	movf	_n2^0,w,c
   770   000A7A  5C0F               	subwf	_n1^0,w,c
   771   000A7C  6E23               	movwf	??_main^0,c
   772   000A7E  500E               	movf	(_n2+1)^0,w,c
   773   000A80  5810               	subwfb	(_n1+1)^0,w,c
   774   000A82  D7D8               	goto	L1
   775   000A84                     l1766:
   776                           
   777                           ;Laboratorio4.c: 90: r = n1*n2;
   778   000A84  C00F  F016         	movff	_n1,___wmul@multiplier
   779   000A88  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   780   000A8C  C00D  F018         	movff	_n2,___wmul@multiplicand
   781   000A90  C00E  F019         	movff	_n2+1,___wmul@multiplicand+1
   782   000A94  EC5E  F008         	call	___wmul	;wreg free
   783   000A98  C016  F001         	movff	?___wmul,_r
   784   000A9C  C017  F002         	movff	?___wmul+1,_r+1
   785   000AA0  D7CE               	goto	L2
   786   000AA2                     l1770:
   787                           
   788                           ;Laboratorio4.c: 94: if(n2!=0){
   789   000AA2  500D               	movf	_n2^0,w,c
   790   000AA4  100E               	iorwf	(_n2+1)^0,w,c
   791   000AA6  B4D8               	btfsc	status,2,c
   792   000AA8  D02F               	goto	l1778
   793                           
   794                           ;Laboratorio4.c: 95: if(n1!=0){
   795   000AAA  500F               	movf	_n1^0,w,c
   796   000AAC  1010               	iorwf	(_n1+1)^0,w,c
   797   000AAE  B4D8               	btfsc	status,2,c
   798   000AB0  D05D               	goto	l1798
   799                           
   800                           ;Laboratorio4.c: 96: r = n1/n2;
   801   000AB2  C00F  F01C         	movff	_n1,___lwdiv@dividend
   802   000AB6  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   803   000ABA  C00D  F01E         	movff	_n2,___lwdiv@divisor
   804   000ABE  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   805   000AC2  ECBB  F007         	call	___lwdiv	;wreg free
   806   000AC6  C01C  F001         	movff	?___lwdiv,_r
   807   000ACA  C01D  F002         	movff	?___lwdiv+1,_r+1
   808   000ACE  6A03               	clrf	(_r+2)^0,c
   809   000AD0  6A04               	clrf	(_r+3)^0,c
   810                           
   811                           ;Laboratorio4.c: 97: partdecl = (n1*100)/n2;
   812   000AD2  C00F  F016         	movff	_n1,___wmul@multiplier
   813   000AD6  C010  F017         	movff	_n1+1,___wmul@multiplier+1
   814   000ADA  0E00               	movlw	0
   815   000ADC  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   816   000ADE  0E64               	movlw	100
   817   000AE0  6E18               	movwf	___wmul@multiplicand^0,c
   818   000AE2  EC5E  F008         	call	___wmul	;wreg free
   819   000AE6  C016  F01C         	movff	?___wmul,___lwdiv@dividend
   820   000AEA  C017  F01D         	movff	?___wmul+1,___lwdiv@dividend+1
   821   000AEE  C00D  F01E         	movff	_n2,___lwdiv@divisor
   822   000AF2  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   823   000AF6  ECBB  F007         	call	___lwdiv	;wreg free
   824   000AFA  C01C  F005         	movff	?___lwdiv,_partdecl
   825   000AFE  C01D  F006         	movff	?___lwdiv+1,_partdecl+1
   826   000B02  6A07               	clrf	(_partdecl+2)^0,c
   827   000B04  6A08               	clrf	(_partdecl+3)^0,c
   828   000B06  D032               	goto	l1798
   829   000B08                     l1778:
   830                           
   831                           ;Laboratorio4.c: 100: if(n1 != 0 & n2 == 0) r = 1000;
   832   000B08  500F               	movf	_n1^0,w,c
   833   000B0A  1010               	iorwf	(_n1+1)^0,w,c
   834   000B0C  B4D8               	btfsc	status,2,c
   835   000B0E  D006               	goto	l1784
   836   000B10  500D               	movf	_n2^0,w,c
   837   000B12  100E               	iorwf	(_n2+1)^0,w,c
   838   000B14  A4D8               	btfss	status,2,c
   839   000B16  D002               	goto	l1784
   840   000B18  0EE8               	movlw	232
   841   000B1A  D009               	goto	L3
   842   000B1C                     l1784:
   843                           
   844                           ;Laboratorio4.c: 101: else if(n1 == 0 & n2 == 0) r = 1001;
   845   000B1C  500F               	movf	_n1^0,w,c
   846   000B1E  1010               	iorwf	(_n1+1)^0,w,c
   847   000B20  A4D8               	btfss	status,2,c
   848   000B22  D78F               	goto	l1760
   849   000B24  500D               	movf	_n2^0,w,c
   850   000B26  100E               	iorwf	(_n2+1)^0,w,c
   851   000B28  A4D8               	btfss	status,2,c
   852   000B2A  D78B               	goto	l1760
   853   000B2C  0EE9               	movlw	233
   854   000B2E                     L3:
   855   000B2E  6E01               	movwf	_r^0,c
   856   000B30  0E03               	movlw	3
   857   000B32  6E02               	movwf	(_r+1)^0,c
   858   000B34  0E00               	movlw	0
   859   000B36  6E03               	movwf	(_r+2)^0,c
   860   000B38  0E00               	movlw	0
   861   000B3A  6E04               	movwf	(_r+3)^0,c
   862   000B3C  D782               	goto	l1760
   863   000B3E                     l1792:
   864                           
   865                           ;Laboratorio4.c: 106: r = 0;
   866   000B3E  0E00               	movlw	0
   867   000B40  6E01               	movwf	_r^0,c
   868   000B42  0E00               	movlw	0
   869   000B44  6E02               	movwf	(_r+1)^0,c
   870   000B46  0E00               	movlw	0
   871   000B48  6E03               	movwf	(_r+2)^0,c
   872   000B4A  0E00               	movlw	0
   873   000B4C  6E04               	movwf	(_r+3)^0,c
   874                           
   875                           ;Laboratorio4.c: 107: break;
   876   000B4E  D00E               	goto	l1798
   877   000B50                     l1796:
   878   000B50  502B               	movf	_op^0,w,c
   879                           
   880                           ; Switch size 1, requested type "simple"
   881                           ; Number of cases is 4, Range of values is 43 to 120
   882                           ; switch strategies available:
   883                           ; Name         Instructions Cycles
   884                           ; simple_byte           13     7 (average)
   885                           ;	Chosen strategy is simple_byte
   886   000B52  0A2B               	xorlw	43	; case 43
   887   000B54  B4D8               	btfsc	status,2,c
   888   000B56  D769               	goto	l1758
   889   000B58  0A06               	xorlw	6	; case 45
   890   000B5A  B4D8               	btfsc	status,2,c
   891   000B5C  D78D               	goto	l1762
   892   000B5E  0A02               	xorlw	2	; case 47
   893   000B60  B4D8               	btfsc	status,2,c
   894   000B62  D79F               	goto	l1770
   895   000B64  0A57               	xorlw	87	; case 120
   896   000B66  B4D8               	btfsc	status,2,c
   897   000B68  D78D               	goto	l1766
   898   000B6A  D7E9               	goto	l1792
   899   000B6C                     l1798:
   900                           
   901                           ;Laboratorio4.c: 109: DireccionaLCD(0x84);
   902   000B6C  0E84               	movlw	132
   903   000B6E  EC8B  F008         	call	_DireccionaLCD
   904                           
   905                           ;Laboratorio4.c: 110: if ((partdecl-(r*100))!= 0){
   906   000B72  C001  F016         	movff	_r,___lmul@multiplier
   907   000B76  C002  F017         	movff	_r+1,___lmul@multiplier+1
   908   000B7A  C003  F018         	movff	_r+2,___lmul@multiplier+2
   909   000B7E  C004  F019         	movff	_r+3,___lmul@multiplier+3
   910   000B82  0E9C               	movlw	156
   911   000B84  6E1A               	movwf	___lmul@multiplicand^0,c
   912   000B86  0EFF               	movlw	255
   913   000B88  6E1B               	movwf	(___lmul@multiplicand+1)^0,c
   914   000B8A  0EFF               	movlw	255
   915   000B8C  6E1C               	movwf	(___lmul@multiplicand+2)^0,c
   916   000B8E  0EFF               	movlw	255
   917   000B90  6E1D               	movwf	(___lmul@multiplicand+3)^0,c
   918   000B92  EC65  F007         	call	___lmul	;wreg free
   919   000B96  5005               	movf	_partdecl^0,w,c
   920   000B98  2416               	addwf	?___lmul^0,w,c
   921   000B9A  6E23               	movwf	??_main^0,c
   922   000B9C  5006               	movf	(_partdecl+1)^0,w,c
   923   000B9E  2017               	addwfc	(?___lmul+1)^0,w,c
   924   000BA0  6E24               	movwf	(??_main+1)^0,c
   925   000BA2  5007               	movf	(_partdecl+2)^0,w,c
   926   000BA4  2018               	addwfc	(?___lmul+2)^0,w,c
   927   000BA6  6E25               	movwf	(??_main+2)^0,c
   928   000BA8  5008               	movf	(_partdecl+3)^0,w,c
   929   000BAA  2019               	addwfc	(?___lmul+3)^0,w,c
   930   000BAC  6E26               	movwf	(??_main+3)^0,c
   931   000BAE  5023               	movf	??_main^0,w,c
   932   000BB0  1024               	iorwf	(??_main+1)^0,w,c
   933   000BB2  1025               	iorwf	(??_main+2)^0,w,c
   934   000BB4  1026               	iorwf	(??_main+3)^0,w,c
   935   000BB6  B4D8               	btfsc	status,2,c
   936   000BB8  D056               	goto	l1822
   937                           
   938                           ;Laboratorio4.c: 111: for (int i = 0; i < 3; i++) {
   939   000BBA  0E00               	movlw	0
   940   000BBC  6E28               	movwf	(main@i+1)^0,c
   941   000BBE  0E00               	movlw	0
   942   000BC0  6E27               	movwf	main@i^0,c
   943   000BC2                     l1802:
   944   000BC2  BE28               	btfsc	(main@i+1)^0,7,c
   945   000BC4  D008               	goto	l1806
   946   000BC6  5028               	movf	(main@i+1)^0,w,c
   947   000BC8  E105               	bnz	u1320
   948   000BCA  0E03               	movlw	3
   949   000BCC  5C27               	subwf	main@i^0,w,c
   950   000BCE  B0D8               	btfsc	status,0,c
   951   000BD0  D0E5               	goto	l1856
   952   000BD2  D001               	goto	l1806
   953   000BD4                     u1320:
   954   000BD4  D0E3               	goto	l1856
   955   000BD6                     l1806:
   956                           
   957                           ;Laboratorio4.c: 112: r = n1 / n2;
   958   000BD6  C00F  F01C         	movff	_n1,___lwdiv@dividend
   959   000BDA  C010  F01D         	movff	_n1+1,___lwdiv@dividend+1
   960   000BDE  C00D  F01E         	movff	_n2,___lwdiv@divisor
   961   000BE2  C00E  F01F         	movff	_n2+1,___lwdiv@divisor+1
   962   000BE6  ECBB  F007         	call	___lwdiv	;wreg free
   963   000BEA  C01C  F001         	movff	?___lwdiv,_r
   964   000BEE  C01D  F002         	movff	?___lwdiv+1,_r+1
   965   000BF2  6A03               	clrf	(_r+2)^0,c
   966   000BF4  6A04               	clrf	(_r+3)^0,c
   967                           
   968                           ;Laboratorio4.c: 113: m = n1 % n2;
   969   000BF6  C00F  F016         	movff	_n1,___lwmod@dividend
   970   000BFA  C010  F017         	movff	_n1+1,___lwmod@dividend+1
   971   000BFE  C00D  F018         	movff	_n2,___lwmod@divisor
   972   000C02  C00E  F019         	movff	_n2+1,___lwmod@divisor+1
   973   000C06  ECE4  F007         	call	___lwmod	;wreg free
   974   000C0A  C016  F012         	movff	?___lwmod,_m
   975   000C0E  C017  F013         	movff	?___lwmod+1,_m+1
   976   000C12  6A14               	clrf	(_m+2)^0,c
   977   000C14  6A15               	clrf	(_m+3)^0,c
   978                           
   979                           ;Laboratorio4.c: 114: EscribeLCD_c(r+'0');
   980   000C16  5001               	movf	_r^0,w,c
   981   000C18  0F30               	addlw	48
   982   000C1A  EC80  F008         	call	_EscribeLCD_c
   983                           
   984                           ;Laboratorio4.c: 115: if(i == 0 && m != 0) {
   985   000C1E  5027               	movf	main@i^0,w,c
   986   000C20  1028               	iorwf	(main@i+1)^0,w,c
   987   000C22  A4D8               	btfss	status,2,c
   988   000C24  D009               	goto	l1814
   989   000C26  5012               	movf	_m^0,w,c
   990   000C28  1013               	iorwf	(_m+1)^0,w,c
   991   000C2A  1014               	iorwf	(_m+2)^0,w,c
   992   000C2C  1015               	iorwf	(_m+3)^0,w,c
   993   000C2E  B4D8               	btfsc	status,2,c
   994   000C30  D003               	goto	l1814
   995                           
   996                           ;Laboratorio4.c: 116: EscribeLCD_c(',');
   997   000C32  0E2C               	movlw	44
   998   000C34  EC80  F008         	call	_EscribeLCD_c
   999   000C38                     l1814:
  1000                           
  1001                           ;Laboratorio4.c: 117: };Laboratorio4.c: 119: if (m != 0) {
  1002   000C38  5012               	movf	_m^0,w,c
  1003   000C3A  1013               	iorwf	(_m+1)^0,w,c
  1004   000C3C  1014               	iorwf	(_m+2)^0,w,c
  1005   000C3E  1015               	iorwf	(_m+3)^0,w,c
  1006   000C40  B4D8               	btfsc	status,2,c
  1007   000C42  D0AC               	goto	l1856
  1008                           
  1009                           ;Laboratorio4.c: 120: n1 = m * 10;
  1010   000C44  C012  F016         	movff	_m,___wmul@multiplier
  1011   000C48  C013  F017         	movff	_m+1,___wmul@multiplier+1
  1012   000C4C  0E00               	movlw	0
  1013   000C4E  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  1014   000C50  0E0A               	movlw	10
  1015   000C52  6E18               	movwf	___wmul@multiplicand^0,c
  1016   000C54  EC5E  F008         	call	___wmul	;wreg free
  1017   000C58  C016  F00F         	movff	?___wmul,_n1
  1018   000C5C  C017  F010         	movff	?___wmul+1,_n1+1
  1019                           
  1020                           ;Laboratorio4.c: 121: } else {
  1021   000C60  4A27               	infsnz	main@i^0,f,c
  1022   000C62  2A28               	incf	(main@i+1)^0,f,c
  1023   000C64  D7AE               	goto	l1802
  1024   000C66                     l1822:
  1025   000C66  5004               	movf	(_r+3)^0,w,c
  1026   000C68  1003               	iorwf	(_r+2)^0,w,c
  1027   000C6A  1002               	iorwf	(_r+1)^0,w,c
  1028   000C6C  E104               	bnz	u1360
  1029   000C6E  0E52               	movlw	82
  1030   000C70  5C01               	subwf	_r^0,w,c
  1031   000C72  A0D8               	btfss	status,0,c
  1032   000C74  D025               	goto	l1834
  1033   000C76                     u1360:
  1034   000C76  0EE8               	movlw	232
  1035   000C78  1801               	xorwf	_r^0,w,c
  1036   000C7A  E106               	bnz	u1370
  1037   000C7C  0E03               	movlw	3
  1038   000C7E  1802               	xorwf	(_r+1)^0,w,c
  1039   000C80  1003               	iorwf	(_r+2)^0,w,c
  1040   000C82  1004               	iorwf	(_r+3)^0,w,c
  1041   000C84  B4D8               	btfsc	status,2,c
  1042   000C86  D01C               	goto	l1834
  1043   000C88                     u1370:
  1044   000C88  0EE9               	movlw	233
  1045   000C8A  1801               	xorwf	_r^0,w,c
  1046   000C8C  E106               	bnz	u1380
  1047   000C8E  0E03               	movlw	3
  1048   000C90  1802               	xorwf	(_r+1)^0,w,c
  1049   000C92  1003               	iorwf	(_r+2)^0,w,c
  1050   000C94  1004               	iorwf	(_r+3)^0,w,c
  1051   000C96  B4D8               	btfsc	status,2,c
  1052   000C98  D013               	goto	l1834
  1053   000C9A                     u1380:
  1054                           
  1055                           ;Laboratorio4.c: 127: EscribeLCD_c('-');
  1056   000C9A  0E2D               	movlw	45
  1057   000C9C  EC80  F008         	call	_EscribeLCD_c
  1058                           
  1059                           ;Laboratorio4.c: 128: DireccionaLCD(0x85);
  1060   000CA0  0E85               	movlw	133
  1061   000CA2  EC8B  F008         	call	_DireccionaLCD
  1062                           
  1063                           ;Laboratorio4.c: 129: r = ~r+1;
  1064   000CA6  1E04               	comf	(_r+3)^0,f,c
  1065   000CA8  1E03               	comf	(_r+2)^0,f,c
  1066   000CAA  1E02               	comf	(_r+1)^0,f,c
  1067   000CAC  6C01               	negf	_r^0,c
  1068   000CAE  0E00               	movlw	0
  1069   000CB0  2202               	addwfc	(_r+1)^0,f,c
  1070   000CB2  2203               	addwfc	(_r+2)^0,f,c
  1071   000CB4  2204               	addwfc	(_r+3)^0,f,c
  1072                           
  1073                           ;Laboratorio4.c: 130: EscribeLCD_c(r+'0');
  1074   000CB6  5001               	movf	_r^0,w,c
  1075   000CB8  0F30               	addlw	48
  1076   000CBA  EC80  F008         	call	_EscribeLCD_c
  1077                           
  1078                           ;Laboratorio4.c: 131: }else{
  1079   000CBE  D06E               	goto	l1856
  1080   000CC0                     l1834:
  1081                           
  1082                           ;Laboratorio4.c: 132: if(r>0xA & r!=1000 & r !=1001){
  1083   000CC0  5004               	movf	(_r+3)^0,w,c
  1084   000CC2  1003               	iorwf	(_r+2)^0,w,c
  1085   000CC4  1002               	iorwf	(_r+1)^0,w,c
  1086   000CC6  E104               	bnz	u1390
  1087   000CC8  0E0B               	movlw	11
  1088   000CCA  5C01               	subwf	_r^0,w,c
  1089   000CCC  A0D8               	btfss	status,0,c
  1090   000CCE  D038               	goto	l1844
  1091   000CD0                     u1390:
  1092   000CD0  0EE8               	movlw	232
  1093   000CD2  1801               	xorwf	_r^0,w,c
  1094   000CD4  E106               	bnz	u1400
  1095   000CD6  0E03               	movlw	3
  1096   000CD8  1802               	xorwf	(_r+1)^0,w,c
  1097   000CDA  1003               	iorwf	(_r+2)^0,w,c
  1098   000CDC  1004               	iorwf	(_r+3)^0,w,c
  1099   000CDE  B4D8               	btfsc	status,2,c
  1100   000CE0  D02F               	goto	l1844
  1101   000CE2                     u1400:
  1102   000CE2  0EE9               	movlw	233
  1103   000CE4  1801               	xorwf	_r^0,w,c
  1104   000CE6  E106               	bnz	u1410
  1105   000CE8  0E03               	movlw	3
  1106   000CEA  1802               	xorwf	(_r+1)^0,w,c
  1107   000CEC  1003               	iorwf	(_r+2)^0,w,c
  1108   000CEE  1004               	iorwf	(_r+3)^0,w,c
  1109   000CF0  B4D8               	btfsc	status,2,c
  1110   000CF2  D026               	goto	l1844
  1111   000CF4                     u1410:
  1112   000CF4                     l1840:
  1113                           
  1114                           ;Laboratorio4.c: 134: i = i+1;
  1115   000CF4  0E01               	movlw	1
  1116   000CF6  240B               	addwf	_i^0,w,c
  1117   000CF8  6E0B               	movwf	_i^0,c
  1118   000CFA  0E00               	movlw	0
  1119   000CFC  200C               	addwfc	(_i+1)^0,w,c
  1120   000CFE  6E0C               	movwf	(_i+1)^0,c
  1121                           
  1122                           ;Laboratorio4.c: 135: r = r - 10;
  1123   000D00  0EF6               	movlw	246
  1124   000D02  2401               	addwf	_r^0,w,c
  1125   000D04  6E01               	movwf	_r^0,c
  1126   000D06  0EFF               	movlw	255
  1127   000D08  2002               	addwfc	(_r+1)^0,w,c
  1128   000D0A  6E02               	movwf	(_r+1)^0,c
  1129   000D0C  0EFF               	movlw	255
  1130   000D0E  2003               	addwfc	(_r+2)^0,w,c
  1131   000D10  6E03               	movwf	(_r+2)^0,c
  1132   000D12  0EFF               	movlw	255
  1133   000D14  2004               	addwfc	(_r+3)^0,w,c
  1134   000D16  6E04               	movwf	(_r+3)^0,c
  1135                           
  1136                           ;Laboratorio4.c: 136: }while(r>0xA);
  1137   000D18  5004               	movf	(_r+3)^0,w,c
  1138   000D1A  1003               	iorwf	(_r+2)^0,w,c
  1139   000D1C  1002               	iorwf	(_r+1)^0,w,c
  1140   000D1E  E1EA               	bnz	l1840
  1141   000D20  0E0B               	movlw	11
  1142   000D22  5C01               	subwf	_r^0,w,c
  1143   000D24  B0D8               	btfsc	status,0,c
  1144   000D26  D7E6               	goto	u1410
  1145                           
  1146                           ;Laboratorio4.c: 137: EscribeLCD_c(i+'0');
  1147   000D28  500B               	movf	_i^0,w,c
  1148   000D2A  0F30               	addlw	48
  1149   000D2C  EC80  F008         	call	_EscribeLCD_c
  1150                           
  1151                           ;Laboratorio4.c: 138: DireccionaLCD(0x85);
  1152   000D30  0E85               	movlw	133
  1153   000D32  EC8B  F008         	call	_DireccionaLCD
  1154                           
  1155                           ;Laboratorio4.c: 139: EscribeLCD_c(r+'0');
  1156   000D36  5001               	movf	_r^0,w,c
  1157   000D38  0F30               	addlw	48
  1158   000D3A  EC80  F008         	call	_EscribeLCD_c
  1159                           
  1160                           ;Laboratorio4.c: 140: }else{
  1161   000D3E  D02E               	goto	l1856
  1162   000D40                     l1844:
  1163                           
  1164                           ;Laboratorio4.c: 141: if(r==1000){
  1165   000D40  0EE8               	movlw	232
  1166   000D42  1801               	xorwf	_r^0,w,c
  1167   000D44  E110               	bnz	l1848
  1168   000D46  0E03               	movlw	3
  1169   000D48  1802               	xorwf	(_r+1)^0,w,c
  1170   000D4A  1003               	iorwf	(_r+2)^0,w,c
  1171   000D4C  1004               	iorwf	(_r+3)^0,w,c
  1172   000D4E  A4D8               	btfss	status,2,c
  1173   000D50  D00A               	goto	l1848
  1174                           
  1175                           ;Laboratorio4.c: 142: EscribeLCD_c('I');
  1176   000D52  0E49               	movlw	73
  1177   000D54  EC80  F008         	call	_EscribeLCD_c
  1178                           
  1179                           ;Laboratorio4.c: 143: EscribeLCD_c('N');
  1180   000D58  0E4E               	movlw	78
  1181   000D5A  EC80  F008         	call	_EscribeLCD_c
  1182                           
  1183                           ;Laboratorio4.c: 144: EscribeLCD_c('F');
  1184   000D5E  0E46               	movlw	70
  1185   000D60  EC80  F008         	call	_EscribeLCD_c
  1186                           
  1187                           ;Laboratorio4.c: 145: }else{
  1188   000D64  D01B               	goto	l1856
  1189   000D66                     l1848:
  1190                           
  1191                           ;Laboratorio4.c: 146: if(r==1001){
  1192   000D66  0EE9               	movlw	233
  1193   000D68  1801               	xorwf	_r^0,w,c
  1194   000D6A  E110               	bnz	l1852
  1195   000D6C  0E03               	movlw	3
  1196   000D6E  1802               	xorwf	(_r+1)^0,w,c
  1197   000D70  1003               	iorwf	(_r+2)^0,w,c
  1198   000D72  1004               	iorwf	(_r+3)^0,w,c
  1199   000D74  A4D8               	btfss	status,2,c
  1200   000D76  D00A               	goto	l1852
  1201                           
  1202                           ;Laboratorio4.c: 147: EscribeLCD_c('I');
  1203   000D78  0E49               	movlw	73
  1204   000D7A  EC80  F008         	call	_EscribeLCD_c
  1205                           
  1206                           ;Laboratorio4.c: 148: EscribeLCD_c('N');
  1207   000D7E  0E4E               	movlw	78
  1208   000D80  EC80  F008         	call	_EscribeLCD_c
  1209                           
  1210                           ;Laboratorio4.c: 149: EscribeLCD_c('D');
  1211   000D84  0E44               	movlw	68
  1212   000D86  EC80  F008         	call	_EscribeLCD_c
  1213                           
  1214                           ;Laboratorio4.c: 150: }else{
  1215   000D8A  D008               	goto	l1856
  1216   000D8C                     l1852:
  1217                           
  1218                           ;Laboratorio4.c: 151: EscribeLCD_c(r+'0');
  1219   000D8C  5001               	movf	_r^0,w,c
  1220   000D8E  0F30               	addlw	48
  1221   000D90  EC80  F008         	call	_EscribeLCD_c
  1222   000D94  D003               	goto	l1856
  1223   000D96                     l1854:
  1224                           
  1225                           ;Laboratorio4.c: 157: EscribeLCD_c('W');
  1226   000D96  0E57               	movlw	87
  1227   000D98  EC80  F008         	call	_EscribeLCD_c
  1228   000D9C                     l1856:
  1229                           
  1230                           ;Laboratorio4.c: 158: };Laboratorio4.c: 159: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1231   000D9C  0EE4               	movlw	228
  1232   000D9E  6E23               	movwf	??_main^0,c
  1233   000DA0  0E44               	movlw	68
  1234   000DA2                     u1467:
  1235   000DA2  2EE8               	decfsz	wreg,f,c
  1236   000DA4  D7FE               	bra	u1467
  1237   000DA6  2E23               	decfsz	??_main^0,f,c
  1238   000DA8  D7FC               	bra	u1467
  1239   000DAA  D000               	nop2	
  1240   000DAC  D562               	goto	l1648
  1241   000DAE                     __end_of_main:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function ___wmul *****************
  1245 ;; Defined at:
  1246 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  multiplier      2    0[COMRAM] unsigned int 
  1249 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  product         2    4[COMRAM] unsigned int 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2    0[COMRAM] unsigned int 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, prodl, prodh
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         4       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        6 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text1
  1276   0010BC                     __ptext1:
  1277                           	callstack 0
  1278   0010BC                     ___wmul:
  1279                           	callstack 29
  1280                           
  1281                           ;incstack = 0
  1282   0010BC  5016               	movf	___wmul@multiplier^0,w,c
  1283   0010BE  0218               	mulwf	___wmul@multiplicand^0,c
  1284   0010C0  CFF3 F01A          	movff	prodl,___wmul@product
  1285   0010C4  CFF4 F01B          	movff	prodh,___wmul@product+1
  1286   0010C8  5016               	movf	___wmul@multiplier^0,w,c
  1287   0010CA  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  1288   0010CC  50F3               	movf	243,w,c
  1289   0010CE  261B               	addwf	(___wmul@product+1)^0,f,c
  1290   0010D0  5017               	movf	(___wmul@multiplier+1)^0,w,c
  1291   0010D2  0218               	mulwf	___wmul@multiplicand^0,c
  1292   0010D4  50F3               	movf	243,w,c
  1293   0010D6  261B               	addwf	(___wmul@product+1)^0,f,c
  1294   0010D8  C01A  F016         	movff	___wmul@product,?___wmul
  1295   0010DC  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  1296   0010E0  0012               	return		;funcret
  1297   0010E2                     __end_of___wmul:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function ___lwmod *****************
  1301 ;; Defined at:
  1302 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  dividend        2    0[COMRAM] unsigned int 
  1305 ;;  divisor         2    2[COMRAM] unsigned int 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  counter         1    4[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2    0[COMRAM] unsigned int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1317 ;;      Params:         4       0       0       0       0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1320 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1321 ;;Total ram usage:        5 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text2
  1332   000FC8                     __ptext2:
  1333                           	callstack 0
  1334   000FC8                     ___lwmod:
  1335                           	callstack 29
  1336                           
  1337                           ;incstack = 0
  1338   000FC8  5018               	movf	___lwmod@divisor^0,w,c
  1339   000FCA  1019               	iorwf	(___lwmod@divisor+1)^0,w,c
  1340   000FCC  B4D8               	btfsc	status,2,c
  1341   000FCE  D018               	goto	l738
  1342   000FD0  0E01               	movlw	1
  1343   000FD2  6E1A               	movwf	___lwmod@counter^0,c
  1344   000FD4  D004               	goto	l1612
  1345   000FD6                     l1610:
  1346   000FD6  90D8               	bcf	status,0,c
  1347   000FD8  3618               	rlcf	___lwmod@divisor^0,f,c
  1348   000FDA  3619               	rlcf	(___lwmod@divisor+1)^0,f,c
  1349   000FDC  2A1A               	incf	___lwmod@counter^0,f,c
  1350   000FDE                     l1612:
  1351   000FDE  AE19               	btfss	(___lwmod@divisor+1)^0,7,c
  1352   000FE0  D7FA               	goto	l1610
  1353   000FE2                     u920:
  1354   000FE2  5018               	movf	___lwmod@divisor^0,w,c
  1355   000FE4  5C16               	subwf	___lwmod@dividend^0,w,c
  1356   000FE6  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1357   000FE8  5817               	subwfb	(___lwmod@dividend+1)^0,w,c
  1358   000FEA  A0D8               	btfss	status,0,c
  1359   000FEC  D004               	goto	l1618
  1360   000FEE  5018               	movf	___lwmod@divisor^0,w,c
  1361   000FF0  5E16               	subwf	___lwmod@dividend^0,f,c
  1362   000FF2  5019               	movf	(___lwmod@divisor+1)^0,w,c
  1363   000FF4  5A17               	subwfb	(___lwmod@dividend+1)^0,f,c
  1364   000FF6                     l1618:
  1365   000FF6  90D8               	bcf	status,0,c
  1366   000FF8  3219               	rrcf	(___lwmod@divisor+1)^0,f,c
  1367   000FFA  3218               	rrcf	___lwmod@divisor^0,f,c
  1368   000FFC  2E1A               	decfsz	___lwmod@counter^0,f,c
  1369   000FFE  D7F1               	goto	u920
  1370   001000                     l738:
  1371   001000  C016  F016         	movff	___lwmod@dividend,?___lwmod
  1372   001004  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  1373   001008  0012               	return		;funcret
  1374   00100A                     __end_of___lwmod:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function ___lwdiv *****************
  1378 ;; Defined at:
  1379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  dividend        2    6[COMRAM] unsigned int 
  1382 ;;  divisor         2    8[COMRAM] unsigned int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        2   10[COMRAM] unsigned int 
  1385 ;;  counter         1   12[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2    6[COMRAM] unsigned int 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         4       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        7 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text3
  1410   000F76                     __ptext3:
  1411                           	callstack 0
  1412   000F76                     ___lwdiv:
  1413                           	callstack 29
  1414                           
  1415                           ;incstack = 0
  1416   000F76  0E00               	movlw	0
  1417   000F78  6E21               	movwf	(___lwdiv@quotient+1)^0,c
  1418   000F7A  0E00               	movlw	0
  1419   000F7C  6E20               	movwf	___lwdiv@quotient^0,c
  1420   000F7E  501E               	movf	___lwdiv@divisor^0,w,c
  1421   000F80  101F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1422   000F82  B4D8               	btfsc	status,2,c
  1423   000F84  D01C               	goto	l728
  1424   000F86  0E01               	movlw	1
  1425   000F88  6E22               	movwf	___lwdiv@counter^0,c
  1426   000F8A  D004               	goto	l1592
  1427   000F8C                     l1590:
  1428   000F8C  90D8               	bcf	status,0,c
  1429   000F8E  361E               	rlcf	___lwdiv@divisor^0,f,c
  1430   000F90  361F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1431   000F92  2A22               	incf	___lwdiv@counter^0,f,c
  1432   000F94                     l1592:
  1433   000F94  AE1F               	btfss	(___lwdiv@divisor+1)^0,7,c
  1434   000F96  D7FA               	goto	l1590
  1435   000F98                     u890:
  1436   000F98  90D8               	bcf	status,0,c
  1437   000F9A  3620               	rlcf	___lwdiv@quotient^0,f,c
  1438   000F9C  3621               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1439   000F9E  501E               	movf	___lwdiv@divisor^0,w,c
  1440   000FA0  5C1C               	subwf	___lwdiv@dividend^0,w,c
  1441   000FA2  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1442   000FA4  581D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1443   000FA6  A0D8               	btfss	status,0,c
  1444   000FA8  D005               	goto	l1602
  1445   000FAA  501E               	movf	___lwdiv@divisor^0,w,c
  1446   000FAC  5E1C               	subwf	___lwdiv@dividend^0,f,c
  1447   000FAE  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  1448   000FB0  5A1D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1449   000FB2  8020               	bsf	___lwdiv@quotient^0,0,c
  1450   000FB4                     l1602:
  1451   000FB4  90D8               	bcf	status,0,c
  1452   000FB6  321F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1453   000FB8  321E               	rrcf	___lwdiv@divisor^0,f,c
  1454   000FBA  2E22               	decfsz	___lwdiv@counter^0,f,c
  1455   000FBC  D7ED               	goto	u890
  1456   000FBE                     l728:
  1457   000FBE  C020  F01C         	movff	___lwdiv@quotient,?___lwdiv
  1458   000FC2  C021  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1459   000FC6  0012               	return		;funcret
  1460   000FC8                     __end_of___lwdiv:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function ___lmul *****************
  1464 ;; Defined at:
  1465 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  multiplier      4    0[COMRAM] unsigned long 
  1468 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  product         4    8[COMRAM] unsigned long 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  4    0[COMRAM] unsigned long 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1480 ;;      Params:         8       0       0       0       0       0       0       0       0
  1481 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1483 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1484 ;;Total ram usage:       12 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text4
  1495   000ECA                     __ptext4:
  1496                           	callstack 0
  1497   000ECA                     ___lmul:
  1498                           	callstack 29
  1499                           
  1500                           ;incstack = 0
  1501   000ECA  0E00               	movlw	0
  1502   000ECC  6E1E               	movwf	___lmul@product^0,c
  1503   000ECE  0E00               	movlw	0
  1504   000ED0  6E1F               	movwf	(___lmul@product+1)^0,c
  1505   000ED2  0E00               	movlw	0
  1506   000ED4  6E20               	movwf	(___lmul@product+2)^0,c
  1507   000ED6  0E00               	movlw	0
  1508   000ED8  6E21               	movwf	(___lmul@product+3)^0,c
  1509   000EDA                     l1576:
  1510   000EDA  A016               	btfss	___lmul@multiplier^0,0,c
  1511   000EDC  D008               	goto	l1580
  1512   000EDE  501A               	movf	___lmul@multiplicand^0,w,c
  1513   000EE0  261E               	addwf	___lmul@product^0,f,c
  1514   000EE2  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  1515   000EE4  221F               	addwfc	(___lmul@product+1)^0,f,c
  1516   000EE6  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  1517   000EE8  2220               	addwfc	(___lmul@product+2)^0,f,c
  1518   000EEA  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  1519   000EEC  2221               	addwfc	(___lmul@product+3)^0,f,c
  1520   000EEE                     l1580:
  1521   000EEE  90D8               	bcf	status,0,c
  1522   000EF0  361A               	rlcf	___lmul@multiplicand^0,f,c
  1523   000EF2  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1524   000EF4  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1525   000EF6  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1526   000EF8  90D8               	bcf	status,0,c
  1527   000EFA  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  1528   000EFC  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  1529   000EFE  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  1530   000F00  3216               	rrcf	___lmul@multiplier^0,f,c
  1531   000F02  5016               	movf	___lmul@multiplier^0,w,c
  1532   000F04  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  1533   000F06  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  1534   000F08  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  1535   000F0A  A4D8               	btfss	status,2,c
  1536   000F0C  D7E6               	goto	l1576
  1537   000F0E  C01E  F016         	movff	___lmul@product,?___lmul
  1538   000F12  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  1539   000F16  C020  F018         	movff	___lmul@product+2,?___lmul+2
  1540   000F1A  C021  F019         	movff	___lmul@product+3,?___lmul+3
  1541   000F1E  0012               	return		;funcret
  1542   000F20                     __end_of___lmul:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _MensajeLCD_Word *****************
  1546 ;; Defined at:
  1547 ;;		line 239 in file "LibLCDXC8.h"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  a               1    4[COMRAM] PTR unsigned char 
  1550 ;;		 -> STR_2(17), STR_1(11), 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               2    6[COMRAM] int 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1562 ;;      Params:         1       0       0       0       0       0       0       0       0
  1563 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1564 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1565 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1566 ;;Total ram usage:        4 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 4
  1569 ;; This function calls:
  1570 ;;		_EscribeLCD_c
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text5
  1577   001086                     __ptext5:
  1578                           	callstack 0
  1579   001086                     _MensajeLCD_Word:
  1580                           	callstack 26
  1581                           
  1582                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1583                           
  1584                           ;incstack = 0
  1585   001086  0E00               	movlw	0
  1586   001088  6E1D               	movwf	(MensajeLCD_Word@i+1)^0,c
  1587   00108A  0E00               	movlw	0
  1588   00108C  6E1C               	movwf	MensajeLCD_Word@i^0,c
  1589   00108E                     l1562:
  1590                           
  1591                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1592   00108E  501A               	movf	MensajeLCD_Word@a^0,w,c
  1593   001090  241C               	addwf	MensajeLCD_Word@i^0,w,c
  1594   001092  6E1B               	movwf	??_MensajeLCD_Word^0,c
  1595   001094  C01B  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1596   001098                     	if	1	;There is more than 1 active tblptr byte
  1597   001098  0E08               	movlw	high __smallconst
  1598   00109A  6EF7               	movwf	tblptrh,c
  1599   00109C                     	endif
  1600   00109C                     	if	0	;tblptru may be non-zero
  1601   00109C                     	endif
  1602   00109C                     	if	0	;tblptru may be non-zero
  1603   00109C                     	endif
  1604   00109C  0008               	tblrd		*
  1605   00109E  50F5               	movf	tablat,w,c
  1606   0010A0  EC80  F008         	call	_EscribeLCD_c
  1607   0010A4  4A1C               	infsnz	MensajeLCD_Word@i^0,f,c
  1608   0010A6  2A1D               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1609   0010A8  BE1D               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1610   0010AA  D7F1               	goto	l1562
  1611   0010AC  501D               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1612   0010AE  E105               	bnz	u850
  1613   0010B0  0E10               	movlw	16
  1614   0010B2  5C1C               	subwf	MensajeLCD_Word@i^0,w,c
  1615   0010B4  B0D8               	btfsc	status,0,c
  1616   0010B6  0012               	return	
  1617   0010B8  D7EA               	goto	l1562
  1618   0010BA                     u850:
  1619   0010BA  0012               	return		;funcret
  1620   0010BC                     __end_of_MensajeLCD_Word:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _EscribeLCD_c *****************
  1624 ;; Defined at:
  1625 ;;		line 140 in file "LibLCDXC8.h"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  a               1    wreg     unsigned char 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  a               1    3[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        1 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 3
  1646 ;; This function calls:
  1647 ;;		_EnviaDato
  1648 ;;		_HabilitaLCD
  1649 ;;		_RetardoLCD
  1650 ;; This function is called by:
  1651 ;;		_MensajeLCD_Word
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text6
  1657   001100                     __ptext6:
  1658                           	callstack 0
  1659   001100                     _EscribeLCD_c:
  1660                           	callstack 26
  1661                           
  1662                           ;incstack = 0
  1663                           ;EscribeLCD_c@a stored from wreg
  1664   001100  6E19               	movwf	EscribeLCD_c@a^0,c
  1665                           
  1666                           ;LibLCDXC8.h: 144: LATE0=1;
  1667   001102  808D               	bsf	3981,0,c	;volatile
  1668                           
  1669                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1670   001104  5019               	movf	EscribeLCD_c@a^0,w,c
  1671   001106  ECA7  F008         	call	_EnviaDato
  1672                           
  1673                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1674   00110A  ECA0  F008         	call	_HabilitaLCD	;wreg free
  1675                           
  1676                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1677   00110E  0E04               	movlw	4
  1678   001110  EC90  F007         	call	_RetardoLCD
  1679   001114  0012               	return		;funcret
  1680   001116                     __end_of_EscribeLCD_c:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _LeerTeclado *****************
  1684 ;; Defined at:
  1685 ;;		line 165 in file "Laboratorio4.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      unsigned char 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text7
  1714   000DAE                     __ptext7:
  1715                           	callstack 0
  1716   000DAE                     _LeerTeclado:
  1717                           	callstack 29
  1718                           
  1719                           ;Laboratorio4.c: 166: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1720                           
  1721                           ;incstack = 0
  1722   000DAE  B881               	btfsc	3969,4,c	;volatile
  1723   000DB0  AA81               	btfss	3969,5,c	;volatile
  1724   000DB2  D004               	goto	u50
  1725   000DB4  AC81               	btfss	3969,6,c	;volatile
  1726   000DB6  D002               	goto	u50
  1727   000DB8  BE81               	btfsc	3969,7,c	;volatile
  1728   000DBA  D7F9               	goto	__ptext7
  1729   000DBC                     u50:
  1730                           
  1731                           ;Laboratorio4.c: 167: LATB=0b11111110;
  1732   000DBC  0EFE               	movlw	254
  1733   000DBE  6E8A               	movwf	138,c	;volatile
  1734                           
  1735                           ;Laboratorio4.c: 168: if(RB4==0) return '1';
  1736   000DC0  B881               	btfsc	3969,4,c	;volatile
  1737   000DC2  D002               	goto	l194
  1738   000DC4  0E31               	movlw	49
  1739   000DC6  0012               	return	
  1740   000DC8                     l194:
  1741                           
  1742                           ;Laboratorio4.c: 169: else if(RB5==0) return '2';
  1743   000DC8  BA81               	btfsc	3969,5,c	;volatile
  1744   000DCA  D002               	goto	l197
  1745   000DCC  0E32               	movlw	50
  1746   000DCE  0012               	return	
  1747   000DD0                     l197:
  1748                           
  1749                           ;Laboratorio4.c: 170: else if(RB6==0) return '3';
  1750   000DD0  BC81               	btfsc	3969,6,c	;volatile
  1751   000DD2  D002               	goto	l199
  1752   000DD4  0E33               	movlw	51
  1753   000DD6  0012               	return	
  1754   000DD8                     l199:
  1755                           
  1756                           ;Laboratorio4.c: 171: else if(RB7==0) return '+';
  1757   000DD8  BE81               	btfsc	3969,7,c	;volatile
  1758   000DDA  D002               	goto	l1140
  1759   000DDC  0E2B               	movlw	43
  1760   000DDE  0012               	return	
  1761   000DE0                     l1140:
  1762                           
  1763                           ;Laboratorio4.c: 172: else{;Laboratorio4.c: 173: LATB=0b11111101;
  1764   000DE0  0EFD               	movlw	253
  1765   000DE2  6E8A               	movwf	138,c	;volatile
  1766                           
  1767                           ;Laboratorio4.c: 174: if(RB4==0) return '4';
  1768   000DE4  B881               	btfsc	3969,4,c	;volatile
  1769   000DE6  D002               	goto	l203
  1770   000DE8  0E34               	movlw	52
  1771   000DEA  0012               	return	
  1772   000DEC                     l203:
  1773                           
  1774                           ;Laboratorio4.c: 175: else if(RB5==0) return '5';
  1775   000DEC  BA81               	btfsc	3969,5,c	;volatile
  1776   000DEE  D002               	goto	l205
  1777   000DF0  0E35               	movlw	53
  1778   000DF2  0012               	return	
  1779   000DF4                     l205:
  1780                           
  1781                           ;Laboratorio4.c: 176: else if(RB6==0) return '6';
  1782   000DF4  BC81               	btfsc	3969,6,c	;volatile
  1783   000DF6  D002               	goto	l207
  1784   000DF8  0E36               	movlw	54
  1785   000DFA  0012               	return	
  1786   000DFC                     l207:
  1787                           
  1788                           ;Laboratorio4.c: 177: else if(RB7==0) return '-';
  1789   000DFC  BE81               	btfsc	3969,7,c	;volatile
  1790   000DFE  D002               	goto	l1168
  1791   000E00  0E2D               	movlw	45
  1792   000E02  0012               	return	
  1793   000E04                     l1168:
  1794                           
  1795                           ;Laboratorio4.c: 178: else{;Laboratorio4.c: 179: LATB=0b11111011;
  1796   000E04  0EFB               	movlw	251
  1797   000E06  6E8A               	movwf	138,c	;volatile
  1798                           
  1799                           ;Laboratorio4.c: 180: if(RB4==0) return '7';
  1800   000E08  B881               	btfsc	3969,4,c	;volatile
  1801   000E0A  D002               	goto	l211
  1802   000E0C  0E37               	movlw	55
  1803   000E0E  0012               	return	
  1804   000E10                     l211:
  1805                           
  1806                           ;Laboratorio4.c: 181: else if(RB5==0) return '8';
  1807   000E10  BA81               	btfsc	3969,5,c	;volatile
  1808   000E12  D002               	goto	l213
  1809   000E14  0E38               	movlw	56
  1810   000E16  0012               	return	
  1811   000E18                     l213:
  1812                           
  1813                           ;Laboratorio4.c: 182: else if(RB6==0) return '9';
  1814   000E18  BC81               	btfsc	3969,6,c	;volatile
  1815   000E1A  D002               	goto	l215
  1816   000E1C  0E39               	movlw	57
  1817   000E1E  0012               	return	
  1818   000E20                     l215:
  1819                           
  1820                           ;Laboratorio4.c: 183: else if(RB7==0) return '/';
  1821   000E20  BE81               	btfsc	3969,7,c	;volatile
  1822   000E22  D002               	goto	l1196
  1823   000E24  0E2F               	movlw	47
  1824   000E26  0012               	return	
  1825   000E28                     l1196:
  1826                           
  1827                           ;Laboratorio4.c: 184: else{;Laboratorio4.c: 185: LATB=0b11110111;
  1828   000E28  0EF7               	movlw	247
  1829   000E2A  6E8A               	movwf	138,c	;volatile
  1830                           
  1831                           ;Laboratorio4.c: 186: if(RB4==0) return 'C';
  1832   000E2C  B881               	btfsc	3969,4,c	;volatile
  1833   000E2E  D002               	goto	l219
  1834   000E30  0E43               	movlw	67
  1835   000E32  0012               	return	
  1836   000E34                     l219:
  1837                           
  1838                           ;Laboratorio4.c: 187: else if(RB5==0) return '0';
  1839   000E34  BA81               	btfsc	3969,5,c	;volatile
  1840   000E36  D002               	goto	l221
  1841   000E38  0E30               	movlw	48
  1842   000E3A  0012               	return	
  1843   000E3C                     l221:
  1844                           
  1845                           ;Laboratorio4.c: 188: else if(RB6==0) return '=';
  1846   000E3C  BC81               	btfsc	3969,6,c	;volatile
  1847   000E3E  D002               	goto	l223
  1848   000E40  0E3D               	movlw	61
  1849   000E42  0012               	return	
  1850   000E44                     l223:
  1851                           
  1852                           ;Laboratorio4.c: 189: else if(RB7==0) return 'x';
  1853   000E44  BE81               	btfsc	3969,7,c	;volatile
  1854   000E46  D002               	goto	l220
  1855   000E48  0E78               	movlw	120
  1856   000E4A  0012               	return	
  1857   000E4C                     l220:
  1858                           
  1859                           ;Laboratorio4.c: 190: };Laboratorio4.c: 191: };Laboratorio4.c: 192: };Laboratorio4.c: 19
      +                          3: return '?';
  1860   000E4C  0E3F               	movlw	63
  1861   000E4E  0012               	return		;funcret
  1862   000E50                     __end_of_LeerTeclado:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _InicializaLCD *****************
  1866 ;; Defined at:
  1867 ;;		line 71 in file "LibLCDXC8.h"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1881 ;;      Params:         0       0       0       0       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1885 ;;Total ram usage:        0 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 4
  1888 ;; This function calls:
  1889 ;;		_BorraLCD
  1890 ;;		_EnviaDato
  1891 ;;		_HabilitaLCD
  1892 ;;		_RetardoLCD
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text8
  1899   00100A                     __ptext8:
  1900                           	callstack 0
  1901   00100A                     _InicializaLCD:
  1902                           	callstack 26
  1903                           
  1904                           ;LibLCDXC8.h: 73: LATE0=0;
  1905                           
  1906                           ;incstack = 0
  1907   00100A  908D               	bcf	3981,0,c	;volatile
  1908                           
  1909                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1910                           
  1911                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1912   00100C  0E3F               	movlw	63
  1913   00100E  6E8C               	movwf	140,c	;volatile
  1914                           
  1915                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1916   001010  ECA0  F008         	call	_HabilitaLCD	;wreg free
  1917                           
  1918                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1919   001014  0E01               	movlw	1
  1920   001016  EC90  F007         	call	_RetardoLCD
  1921                           
  1922                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1923                           
  1924                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1925   00101A  0E3F               	movlw	63
  1926   00101C  6E8C               	movwf	140,c	;volatile
  1927                           
  1928                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1929   00101E  ECA0  F008         	call	_HabilitaLCD	;wreg free
  1930                           
  1931                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1932   001022  0E03               	movlw	3
  1933   001024  EC90  F007         	call	_RetardoLCD
  1934                           
  1935                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1936                           
  1937                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1938   001028  0E3F               	movlw	63
  1939   00102A  6E8C               	movwf	140,c	;volatile
  1940                           
  1941                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1942   00102C  ECA0  F008         	call	_HabilitaLCD	;wreg free
  1943                           
  1944                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1945   001030  0E04               	movlw	4
  1946   001032  EC90  F007         	call	_RetardoLCD
  1947                           
  1948                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1949                           
  1950                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1951   001036  EC96  F008         	call	_BorraLCD	;wreg free
  1952                           
  1953                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1954   00103A  0E0F               	movlw	15
  1955   00103C  ECA7  F008         	call	_EnviaDato
  1956                           
  1957                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1958   001040  ECA0  F008         	call	_HabilitaLCD	;wreg free
  1959                           
  1960                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1961   001044  0E04               	movlw	4
  1962   001046  EC90  F007         	call	_RetardoLCD
  1963   00104A  0012               	return		;funcret
  1964   00104C                     __end_of_InicializaLCD:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _BorraLCD *****************
  1968 ;; Defined at:
  1969 ;;		line 112 in file "LibLCDXC8.h"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 3
  1990 ;; This function calls:
  1991 ;;		_EnviaDato
  1992 ;;		_HabilitaLCD
  1993 ;;		_RetardoLCD
  1994 ;; This function is called by:
  1995 ;;		_InicializaLCD
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text9
  2001   00112C                     __ptext9:
  2002                           	callstack 0
  2003   00112C                     _BorraLCD:
  2004                           	callstack 26
  2005                           
  2006                           ;LibLCDXC8.h: 114: LATE0=0;
  2007                           
  2008                           ;incstack = 0
  2009   00112C  908D               	bcf	3981,0,c	;volatile
  2010                           
  2011                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2012   00112E  0E01               	movlw	1
  2013   001130  ECA7  F008         	call	_EnviaDato
  2014                           
  2015                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2016   001134  ECA0  F008         	call	_HabilitaLCD	;wreg free
  2017                           
  2018                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2019   001138  0E02               	movlw	2
  2020   00113A  EC90  F007         	call	_RetardoLCD
  2021   00113E  0012               	return		;funcret
  2022   001140                     __end_of_BorraLCD:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _DireccionaLCD *****************
  2026 ;; Defined at:
  2027 ;;		line 250 in file "LibLCDXC8.h"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  a               1    wreg     unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  a               1    3[COMRAM] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 3
  2048 ;; This function calls:
  2049 ;;		_EnviaDato
  2050 ;;		_HabilitaLCD
  2051 ;;		_RetardoLCD
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text10
  2058   001116                     __ptext10:
  2059                           	callstack 0
  2060   001116                     _DireccionaLCD:
  2061                           	callstack 27
  2062                           
  2063                           ;incstack = 0
  2064                           ;DireccionaLCD@a stored from wreg
  2065   001116  6E19               	movwf	DireccionaLCD@a^0,c
  2066                           
  2067                           ;LibLCDXC8.h: 253: LATE0=0;
  2068   001118  908D               	bcf	3981,0,c	;volatile
  2069                           
  2070                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2071   00111A  5019               	movf	DireccionaLCD@a^0,w,c
  2072   00111C  ECA7  F008         	call	_EnviaDato
  2073                           
  2074                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2075   001120  ECA0  F008         	call	_HabilitaLCD	;wreg free
  2076                           
  2077                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2078   001124  0E04               	movlw	4
  2079   001126  EC90  F007         	call	_RetardoLCD
  2080   00112A  0012               	return		;funcret
  2081   00112C                     __end_of_DireccionaLCD:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _EnviaDato *****************
  2085 ;; Defined at:
  2086 ;;		line 59 in file "LibLCDXC8.h"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  a               1    wreg     unsigned char 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  a               1    2[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        1 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 2
  2107 ;; This function calls:
  2108 ;;		_HabilitaLCD
  2109 ;;		_RetardoLCD
  2110 ;; This function is called by:
  2111 ;;		_InicializaLCD
  2112 ;;		_BorraLCD
  2113 ;;		_EscribeLCD_c
  2114 ;;		_DireccionaLCD
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text11
  2119   00114E                     __ptext11:
  2120                           	callstack 0
  2121   00114E                     _EnviaDato:
  2122                           	callstack 26
  2123                           
  2124                           ;incstack = 0
  2125                           ;EnviaDato@a stored from wreg
  2126   00114E  6E18               	movwf	EnviaDato@a^0,c
  2127                           
  2128                           ;LibLCDXC8.h: 68: LATD=a;
  2129                           
  2130                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2131   001150  C018  FF8C         	movff	EnviaDato@a,3980	;volatile
  2132   001154  0012               	return		;funcret
  2133   001156                     __end_of_EnviaDato:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _RetardoLCD *****************
  2137 ;; Defined at:
  2138 ;;		line 286 in file "LibLCDXC8.h"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  a               1    wreg     unsigned char 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  a               1    1[COMRAM] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0
  2153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2154 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2155 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2156 ;;Total ram usage:        2 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_EnviaDato
  2163 ;;		_InicializaLCD
  2164 ;;		_BorraLCD
  2165 ;;		_EscribeLCD_c
  2166 ;;		_DireccionaLCD
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text12
  2171   000F20                     __ptext12:
  2172                           	callstack 0
  2173   000F20                     _RetardoLCD:
  2174                           	callstack 27
  2175                           
  2176                           ;incstack = 0
  2177                           ;RetardoLCD@a stored from wreg
  2178   000F20  6E17               	movwf	RetardoLCD@a^0,c
  2179                           
  2180                           ;LibLCDXC8.h: 287: switch(a){
  2181   000F22  D01B               	goto	l1012
  2182   000F24                     l1002:
  2183   000F24  0E05               	movlw	5
  2184   000F26  6E16               	movwf	??_RetardoLCD^0,c
  2185   000F28  0EDE               	movlw	222
  2186   000F2A                     u1477:
  2187   000F2A  2EE8               	decfsz	wreg,f,c
  2188   000F2C  D7FE               	bra	u1477
  2189   000F2E  2E16               	decfsz	??_RetardoLCD^0,f,c
  2190   000F30  D7FC               	bra	u1477
  2191                           
  2192                           ;LibLCDXC8.h: 290: break;
  2193   000F32  0012               	return	
  2194   000F34                     l1004:
  2195   000F34  0E53               	movlw	83
  2196   000F36                     u1487:
  2197   000F36  2EE8               	decfsz	wreg,f,c
  2198   000F38  D7FE               	bra	u1487
  2199   000F3A  F000               	nop	
  2200                           
  2201                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2202   000F3C  0E35               	movlw	53
  2203   000F3E                     u1497:
  2204   000F3E  2EE8               	decfsz	wreg,f,c
  2205   000F40  D7FE               	bra	u1497
  2206   000F42  F000               	nop	
  2207                           
  2208                           ;LibLCDXC8.h: 294: break;
  2209   000F44  0012               	return	
  2210   000F46                     l1006:
  2211   000F46  0E08               	movlw	8
  2212   000F48                     u1507:
  2213   000F48  2EE8               	decfsz	wreg,f,c
  2214   000F4A  D7FE               	bra	u1507
  2215   000F4C  F000               	nop	
  2216                           
  2217                           ;LibLCDXC8.h: 297: break;
  2218   000F4E  0012               	return	
  2219   000F50                     l1008:
  2220   000F50  0E03               	movlw	3
  2221   000F52                     u1517:
  2222   000F52  2EE8               	decfsz	wreg,f,c
  2223   000F54  D7FE               	bra	u1517
  2224   000F56  F000               	nop	
  2225                           
  2226                           ;LibLCDXC8.h: 300: break;
  2227   000F58  0012               	return	
  2228   000F5A                     l1012:
  2229   000F5A  5017               	movf	RetardoLCD@a^0,w,c
  2230                           
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 4, Range of values is 1 to 4
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           13     7 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237   000F5C  0A01               	xorlw	1	; case 1
  2238   000F5E  B4D8               	btfsc	status,2,c
  2239   000F60  D7E1               	goto	l1002
  2240   000F62  0A03               	xorlw	3	; case 2
  2241   000F64  B4D8               	btfsc	status,2,c
  2242   000F66  D7E6               	goto	l1004
  2243   000F68  0A01               	xorlw	1	; case 3
  2244   000F6A  B4D8               	btfsc	status,2,c
  2245   000F6C  D7EC               	goto	l1006
  2246   000F6E  0A07               	xorlw	7	; case 4
  2247   000F70  A4D8               	btfss	status,2,c
  2248   000F72  0012               	return	
  2249   000F74  D7ED               	goto	l1008
  2250   000F76                     __end_of_RetardoLCD:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _HabilitaLCD *****************
  2254 ;; Defined at:
  2255 ;;		line 105 in file "LibLCDXC8.h"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_EnviaDato
  2280 ;;		_InicializaLCD
  2281 ;;		_BorraLCD
  2282 ;;		_EscribeLCD_c
  2283 ;;		_DireccionaLCD
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text13
  2288   001140                     __ptext13:
  2289                           	callstack 0
  2290   001140                     _HabilitaLCD:
  2291                           	callstack 27
  2292                           
  2293                           ;LibLCDXC8.h: 107: LATE1=1;
  2294                           
  2295                           ;incstack = 0
  2296   001140  828D               	bsf	3981,1,c	;volatile
  2297                           
  2298                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2299   001142  0E03               	movlw	3
  2300   001144                     u1527:
  2301   001144  2EE8               	decfsz	wreg,f,c
  2302   001146  D7FE               	bra	u1527
  2303   001148  F000               	nop	
  2304                           
  2305                           ;LibLCDXC8.h: 110: LATE1=0;
  2306   00114A  928D               	bcf	3981,1,c	;volatile
  2307   00114C  0012               	return		;funcret
  2308   00114E                     __end_of_HabilitaLCD:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _ColorRGB *****************
  2312 ;; Defined at:
  2313 ;;		line 196 in file "Laboratorio4.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 1
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text14
  2342   000E50                     __ptext14:
  2343                           	callstack 0
  2344   000E50                     _ColorRGB:
  2345                           	callstack 29
  2346                           
  2347                           ;Laboratorio4.c: 197: if(color==8) color = 0;
  2348                           
  2349                           ;incstack = 0
  2350   000E50  0E08               	movlw	8
  2351   000E52  1809               	xorwf	_color^0,w,c
  2352   000E54  100A               	iorwf	(_color+1)^0,w,c
  2353   000E56  A4D8               	btfss	status,2,c
  2354   000E58  D014               	goto	l1248
  2355   000E5A  0E00               	movlw	0
  2356   000E5C  6E0A               	movwf	(_color+1)^0,c
  2357   000E5E  0E00               	movlw	0
  2358   000E60  6E09               	movwf	_color^0,c
  2359   000E62  D00F               	goto	l1248
  2360   000E64                     l1230:
  2361                           
  2362                           ;Laboratorio4.c: 200: LATC = 0b00000000;
  2363   000E64  0E00               	movlw	0
  2364   000E66  D00B               	goto	L9
  2365   000E68                     l1232:
  2366                           
  2367                           ;Laboratorio4.c: 203: LATC = 0b00000101;
  2368   000E68  0E05               	movlw	5
  2369   000E6A  D009               	goto	L9
  2370   000E6C                     l1234:
  2371                           
  2372                           ;Laboratorio4.c: 206: LATC = 0b00000110;
  2373   000E6C  0E06               	movlw	6
  2374   000E6E  D007               	goto	L9
  2375   000E70                     l1236:
  2376                           
  2377                           ;Laboratorio4.c: 209: LATC = 0b00000011;
  2378   000E70  0E03               	movlw	3
  2379   000E72  D005               	goto	L9
  2380   000E74                     l1238:
  2381                           
  2382                           ;Laboratorio4.c: 212: LATC = 0b00000010;
  2383   000E74  0E02               	movlw	2
  2384   000E76  D003               	goto	L9
  2385   000E78                     l1242:
  2386                           
  2387                           ;Laboratorio4.c: 218: LATC = 0b00000100;
  2388   000E78  0E04               	movlw	4
  2389   000E7A  D001               	goto	L9
  2390   000E7C                     l1244:
  2391                           
  2392                           ;Laboratorio4.c: 221: LATC = 0b00000111;
  2393   000E7C  0E07               	movlw	7
  2394   000E7E                     L9:
  2395   000E7E  6E8B               	movwf	139,c	;volatile
  2396                           
  2397                           ;Laboratorio4.c: 222: break;
  2398   000E80  D021               	goto	l1250
  2399   000E82                     l1248:
  2400   000E82  C009  F016         	movff	_color,??_ColorRGB
  2401   000E86  C00A  F017         	movff	_color+1,??_ColorRGB+1
  2402                           
  2403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2404                           ; Switch size 1, requested type "simple"
  2405                           ; Number of cases is 1, Range of values is 0 to 0
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte            4     3 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410   000E8A  5017               	movf	(??_ColorRGB+1)^0,w,c
  2411   000E8C  0A00               	xorlw	0	; case 0
  2412   000E8E  A4D8               	btfss	status,2,c
  2413   000E90  D019               	goto	l1250
  2414                           
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 8, Range of values is 0 to 7
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte           25    13 (average)
  2420                           ;	Chosen strategy is simple_byte
  2421   000E92  5016               	movf	??_ColorRGB^0,w,c
  2422   000E94  0A00               	xorlw	0	; case 0
  2423   000E96  B4D8               	btfsc	status,2,c
  2424   000E98  D7E5               	goto	l1230
  2425   000E9A  0A01               	xorlw	1	; case 1
  2426   000E9C  B4D8               	btfsc	status,2,c
  2427   000E9E  D7E4               	goto	l1232
  2428   000EA0  0A03               	xorlw	3	; case 2
  2429   000EA2  B4D8               	btfsc	status,2,c
  2430   000EA4  D7E3               	goto	l1234
  2431   000EA6  0A01               	xorlw	1	; case 3
  2432   000EA8  B4D8               	btfsc	status,2,c
  2433   000EAA  D7E2               	goto	l1236
  2434   000EAC  0A07               	xorlw	7	; case 4
  2435   000EAE  B4D8               	btfsc	status,2,c
  2436   000EB0  D7E1               	goto	l1238
  2437   000EB2  0A01               	xorlw	1	; case 5
  2438   000EB4  B4D8               	btfsc	status,2,c
  2439   000EB6  D7DA               	goto	l1234
  2440   000EB8  0A03               	xorlw	3	; case 6
  2441   000EBA  B4D8               	btfsc	status,2,c
  2442   000EBC  D7DD               	goto	l1242
  2443   000EBE  0A01               	xorlw	1	; case 7
  2444   000EC0  B4D8               	btfsc	status,2,c
  2445   000EC2  D7DC               	goto	l1244
  2446   000EC4                     l1250:
  2447                           
  2448                           ;Laboratorio4.c: 226: color += 1;
  2449   000EC4  4A09               	infsnz	_color^0,f,c
  2450   000EC6  2A0A               	incf	(_color+1)^0,f,c
  2451   000EC8  0012               	return		;funcret
  2452   000ECA                     __end_of_ColorRGB:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _ISR *****************
  2456 ;; Defined at:
  2457 ;;		line 229 in file "Laboratorio4.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		Interrupt level 2
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	intcode
  2485   000008                     __pintcode:
  2486                           	callstack 0
  2487   000008                     _ISR:
  2488                           	callstack 26
  2489                           
  2490                           ;incstack = 0
  2491   000008  822D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2492   00000A  ED71  F008         	call	int_func,f	;refresh shadow registers
  2493                           
  2494                           	psect	intcode_body
  2495   0010E2                     __pintcode_body:
  2496                           	callstack 26
  2497   0010E2                     int_func:
  2498                           	callstack 26
  2499   0010E2  0006               	pop		; remove dummy address from shadow register refresh
  2500                           
  2501                           ;Laboratorio4.c: 230: if(TMR0IF==1){
  2502   0010E4  A4F2               	btfss	4082,2,c	;volatile
  2503   0010E6  D00A               	goto	i2l246
  2504                           
  2505                           ;Laboratorio4.c: 231: TMR0IF=0;
  2506   0010E8  94F2               	bcf	4082,2,c	;volatile
  2507                           
  2508                           ;Laboratorio4.c: 232: LATE2 = !LATE2;
  2509   0010EA  B48D               	btfsc	3981,2,c	;volatile
  2510   0010EC  D002               	goto	i2u83_40
  2511   0010EE  848D               	bsf	3981,2,c	;volatile
  2512   0010F0  D001               	goto	i2u84_45
  2513   0010F2                     i2u83_40:
  2514   0010F2  948D               	bcf	3981,2,c	;volatile
  2515   0010F4                     i2u84_45:
  2516                           
  2517                           ;Laboratorio4.c: 233: TMR0 = 3036;
  2518   0010F4  0E0B               	movlw	11
  2519   0010F6  6ED7               	movwf	215,c	;volatile
  2520   0010F8  0EDC               	movlw	220
  2521   0010FA  6ED6               	movwf	214,c	;volatile
  2522   0010FC                     i2l246:
  2523   0010FC  922D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2524   0010FE  0011               	retfie		f
  2525   001100                     __end_of_ISR:
  2526                           	callstack 0
  2527                           
  2528                           	psect	rparam
  2529   000000                     
  2530                           	psect	temp
  2531   00002D                     btemp:
  2532                           	callstack 0
  2533   00002D                     	ds	1
  2534   000000                     int$flags	set	btemp
  2535   000000                     wtemp8	set	btemp+1
  2536   000000                     ttemp5	set	btemp+1
  2537   000000                     ttemp6	set	btemp+4
  2538   000000                     ttemp7	set	btemp+8
  2539                           
  2540                           	psect	idloc
  2541                           
  2542                           ;Config register IDLOC0 @ 0x200000
  2543                           ;	unspecified, using default values
  2544   200000                     	org	2097152
  2545   200000  FF                 	db	255
  2546                           
  2547                           ;Config register IDLOC1 @ 0x200001
  2548                           ;	unspecified, using default values
  2549   200001                     	org	2097153
  2550   200001  FF                 	db	255
  2551                           
  2552                           ;Config register IDLOC2 @ 0x200002
  2553                           ;	unspecified, using default values
  2554   200002                     	org	2097154
  2555   200002  FF                 	db	255
  2556                           
  2557                           ;Config register IDLOC3 @ 0x200003
  2558                           ;	unspecified, using default values
  2559   200003                     	org	2097155
  2560   200003  FF                 	db	255
  2561                           
  2562                           ;Config register IDLOC4 @ 0x200004
  2563                           ;	unspecified, using default values
  2564   200004                     	org	2097156
  2565   200004  FF                 	db	255
  2566                           
  2567                           ;Config register IDLOC5 @ 0x200005
  2568                           ;	unspecified, using default values
  2569   200005                     	org	2097157
  2570   200005  FF                 	db	255
  2571                           
  2572                           ;Config register IDLOC6 @ 0x200006
  2573                           ;	unspecified, using default values
  2574   200006                     	org	2097158
  2575   200006  FF                 	db	255
  2576                           
  2577                           ;Config register IDLOC7 @ 0x200007
  2578                           ;	unspecified, using default values
  2579   200007                     	org	2097159
  2580   200007  FF                 	db	255
  2581                           
  2582                           	psect	config
  2583                           
  2584                           ;Config register CONFIG1L @ 0x300000
  2585                           ;	unspecified, using default values
  2586                           ;	PLL Prescaler Selection bits
  2587                           ;	PLLDIV = 0x0, unprogrammed default
  2588                           ;	System Clock Postscaler Selection bits
  2589                           ;	CPUDIV = 0x0, unprogrammed default
  2590                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2591                           ;	USBDIV = 0x0, unprogrammed default
  2592   300000                     	org	3145728
  2593   300000  00                 	db	0
  2594                           
  2595                           ;Config register CONFIG1H @ 0x300001
  2596                           ;	Oscillator Selection bits
  2597                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2598                           ;	Fail-Safe Clock Monitor Enable bit
  2599                           ;	FCMEN = 0x0, unprogrammed default
  2600                           ;	Internal/External Oscillator Switchover bit
  2601                           ;	IESO = 0x0, unprogrammed default
  2602   300001                     	org	3145729
  2603   300001  09                 	db	9
  2604                           
  2605                           ;Config register CONFIG2L @ 0x300002
  2606                           ;	unspecified, using default values
  2607                           ;	Power-up Timer Enable bit
  2608                           ;	PWRT = 0x1, unprogrammed default
  2609                           ;	Brown-out Reset Enable bits
  2610                           ;	BOR = 0x3, unprogrammed default
  2611                           ;	Brown-out Reset Voltage bits
  2612                           ;	BORV = 0x3, unprogrammed default
  2613                           ;	USB Voltage Regulator Enable bit
  2614                           ;	VREGEN = 0x0, unprogrammed default
  2615   300002                     	org	3145730
  2616   300002  1F                 	db	31
  2617                           
  2618                           ;Config register CONFIG2H @ 0x300003
  2619                           ;	Watchdog Timer Enable bit
  2620                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2621                           ;	Watchdog Timer Postscale Select bits
  2622                           ;	WDTPS = 0xF, unprogrammed default
  2623   300003                     	org	3145731
  2624   300003  1E                 	db	30
  2625                           
  2626                           ; Padding undefined space
  2627   300004                     	org	3145732
  2628   300004  FF                 	db	255
  2629                           
  2630                           ;Config register CONFIG3H @ 0x300005
  2631                           ;	unspecified, using default values
  2632                           ;	CCP2 MUX bit
  2633                           ;	CCP2MX = 0x1, unprogrammed default
  2634                           ;	PORTB A/D Enable bit
  2635                           ;	PBADEN = 0x1, unprogrammed default
  2636                           ;	Low-Power Timer 1 Oscillator Enable bit
  2637                           ;	LPT1OSC = 0x0, unprogrammed default
  2638                           ;	MCLR Pin Enable bit
  2639                           ;	MCLRE = 0x1, unprogrammed default
  2640   300005                     	org	3145733
  2641   300005  83                 	db	131
  2642                           
  2643                           ;Config register CONFIG4L @ 0x300006
  2644                           ;	unspecified, using default values
  2645                           ;	Stack Full/Underflow Reset Enable bit
  2646                           ;	STVREN = 0x1, unprogrammed default
  2647                           ;	Single-Supply ICSP Enable bit
  2648                           ;	LVP = 0x1, unprogrammed default
  2649                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2650                           ;	ICPRT = 0x0, unprogrammed default
  2651                           ;	Extended Instruction Set Enable bit
  2652                           ;	XINST = 0x0, unprogrammed default
  2653                           ;	Background Debugger Enable bit
  2654                           ;	DEBUG = 0x1, unprogrammed default
  2655   300006                     	org	3145734
  2656   300006  85                 	db	133
  2657                           
  2658                           ; Padding undefined space
  2659   300007                     	org	3145735
  2660   300007  FF                 	db	255
  2661                           
  2662                           ;Config register CONFIG5L @ 0x300008
  2663                           ;	unspecified, using default values
  2664                           ;	Code Protection bit
  2665                           ;	CP0 = 0x1, unprogrammed default
  2666                           ;	Code Protection bit
  2667                           ;	CP1 = 0x1, unprogrammed default
  2668                           ;	Code Protection bit
  2669                           ;	CP2 = 0x1, unprogrammed default
  2670                           ;	Code Protection bit
  2671                           ;	CP3 = 0x1, unprogrammed default
  2672   300008                     	org	3145736
  2673   300008  0F                 	db	15
  2674                           
  2675                           ;Config register CONFIG5H @ 0x300009
  2676                           ;	unspecified, using default values
  2677                           ;	Boot Block Code Protection bit
  2678                           ;	CPB = 0x1, unprogrammed default
  2679                           ;	Data EEPROM Code Protection bit
  2680                           ;	CPD = 0x1, unprogrammed default
  2681   300009                     	org	3145737
  2682   300009  C0                 	db	192
  2683                           
  2684                           ;Config register CONFIG6L @ 0x30000A
  2685                           ;	unspecified, using default values
  2686                           ;	Write Protection bit
  2687                           ;	WRT0 = 0x1, unprogrammed default
  2688                           ;	Write Protection bit
  2689                           ;	WRT1 = 0x1, unprogrammed default
  2690                           ;	Write Protection bit
  2691                           ;	WRT2 = 0x1, unprogrammed default
  2692                           ;	Write Protection bit
  2693                           ;	WRT3 = 0x1, unprogrammed default
  2694   30000A                     	org	3145738
  2695   30000A  0F                 	db	15
  2696                           
  2697                           ;Config register CONFIG6H @ 0x30000B
  2698                           ;	unspecified, using default values
  2699                           ;	Configuration Register Write Protection bit
  2700                           ;	WRTC = 0x1, unprogrammed default
  2701                           ;	Boot Block Write Protection bit
  2702                           ;	WRTB = 0x1, unprogrammed default
  2703                           ;	Data EEPROM Write Protection bit
  2704                           ;	WRTD = 0x1, unprogrammed default
  2705   30000B                     	org	3145739
  2706   30000B  E0                 	db	224
  2707                           
  2708                           ;Config register CONFIG7L @ 0x30000C
  2709                           ;	unspecified, using default values
  2710                           ;	Table Read Protection bit
  2711                           ;	EBTR0 = 0x1, unprogrammed default
  2712                           ;	Table Read Protection bit
  2713                           ;	EBTR1 = 0x1, unprogrammed default
  2714                           ;	Table Read Protection bit
  2715                           ;	EBTR2 = 0x1, unprogrammed default
  2716                           ;	Table Read Protection bit
  2717                           ;	EBTR3 = 0x1, unprogrammed default
  2718   30000C                     	org	3145740
  2719   30000C  0F                 	db	15
  2720                           
  2721                           ;Config register CONFIG7H @ 0x30000D
  2722                           ;	unspecified, using default values
  2723                           ;	Boot Block Table Read Protection bit
  2724                           ;	EBTRB = 0x1, unprogrammed default
  2725   30000D                     	org	3145741
  2726   30000D  40                 	db	64
  2727                           tosu	equ	0xFFF
  2728                           tosh	equ	0xFFE
  2729                           tosl	equ	0xFFD
  2730                           stkptr	equ	0xFFC
  2731                           pclatu	equ	0xFFB
  2732                           pclath	equ	0xFFA
  2733                           pcl	equ	0xFF9
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           prodh	equ	0xFF4
  2739                           prodl	equ	0xFF3
  2740                           indf0	equ	0xFEF
  2741                           postinc0	equ	0xFEE
  2742                           postdec0	equ	0xFED
  2743                           preinc0	equ	0xFEC
  2744                           plusw0	equ	0xFEB
  2745                           fsr0h	equ	0xFEA
  2746                           fsr0l	equ	0xFE9
  2747                           wreg	equ	0xFE8
  2748                           indf1	equ	0xFE7
  2749                           postinc1	equ	0xFE6
  2750                           postdec1	equ	0xFE5
  2751                           preinc1	equ	0xFE4
  2752                           plusw1	equ	0xFE3
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           bsr	equ	0xFE0
  2756                           indf2	equ	0xFDF
  2757                           postinc2	equ	0xFDE
  2758                           postdec2	equ	0xFDD
  2759                           preinc2	equ	0xFDC
  2760                           plusw2	equ	0xFDB
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      2C       1       46.8%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      26        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhll       13      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      27        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 22:10:05 2023

                      _i 000B                        _m 0012                        _r 0001  
                     u50 0DBC                       _n1 000F                       _n2 000D  
             EnviaDato@a 0018                       _op 002B      ___wmul@multiplicand 0018  
          ??_LeerTeclado 0016                      l211 0E10                      l203 0DEC  
                    l220 0E4C                      l221 0E3C                      l213 0E18  
                    l205 0DF4            _InicializaLCD 100A                      l223 0E44  
                    l215 0E20                      l207 0DFC                      l219 0E34  
                    l194 0DC8                      l197 0DD0                      l199 0DD8  
                    l728 0FBE                      l738 1000                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _ISR 0008                      u920 0FE2  
                    u850 10BA                      u890 0F98                      u970 08F6  
                    _n1c 002A                      _n2c 0029                      wreg 000FE8  
                   ?_ISR 0016                     l1002 0F24                     l1004 0F34  
                   l1012 0F5A                     l1006 0F46                     l1008 0F50  
                   l1140 0DE0                     l1230 0E64                     l1232 0E68  
                   l1242 0E78                     l1234 0E6C                     l1250 0EC4  
                   l1244 0E7C                     l1236 0E70                     l1238 0E74  
                   l1248 0E82                     l1168 0E04                     l1602 0FB4  
                   l1610 0FD6                     l1196 0E28                     l1612 0FDE  
                   l1704 0940                     l1562 108E                     l1618 0FF6  
                   l1802 0BC2                     l1580 0EEE                     l1724 0996  
                   l1590 0F8C                     l1814 0C38                     l1806 0BD6  
                   l1822 0C66                     l1576 0EDA                     l1592 0F94  
                   l1840 0CF4                     l1760 0A42                     l1680 08DE  
                   l1648 0872                     l1834 0CC0                     l1770 0AA2  
                   l1762 0A78                     l1852 0D8C                     l1844 0D40  
                   l1748 09FC                     l1766 0A84                     l1758 0A2A  
                   l1854 0D96                     l1848 0D66                     l1792 0B3E  
                   l1784 0B1C                     l1856 0D9C                     l1778 0B08  
                   l1796 0B50                     l1798 0B6C                     STR_1 0812  
                   STR_2 0801                     u1020 091E                     u1110 0978  
                   u1200 09DE                     u1400 0CE2                     u1320 0BD4  
                   u1410 0CF4                     _LATB 000F8A                     _LATC 000F8B  
                   u1360 0C76                     _LATD 000F8C                     u1370 0C88  
                   u1507 0F48                     u1380 0C9A                     u1517 0F52  
                   u1390 0CD0                     u1527 1144                     u1457 0862  
                   u1467 0DA2                     u1477 0F2A                     u1487 0F36  
                   u1497 0F3E                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 0019                     _main 081E                     fsr1l 000FE1  
                   btemp 002D                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ??_ISR 0016  
         ?_InicializaLCD 0016                    ?_main 0016            EscribeLCD_c@a 0019  
                  _T0CON 000FD5                    _LATE0 007C68                    _LATE1 007C69  
                  _LATE2 007C6A          __end_of___lwdiv 0FC8          __end_of___lwmod 100A  
                  i2l246 10FC                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96      ___lmul@multiplicand 001A  
                  _Tecla 0011      __end_of_LeerTeclado 0E50                    _color 0009  
                  main@i 0027                    tablat 000FF5              _HabilitaLCD 1140  
                  ttemp5 002E                    ttemp6 0031                    ttemp7 0035  
                  status 000FD8                    wtemp8 002E         __end_of_BorraLCD 1140  
       __end_of_ColorRGB 0ECA          __initialization 104C             __end_of_main 0DAE  
                 ??_main 0023            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0019                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF    __end_of_DireccionaLCD 112C               _RetardoLCD 0F20  
                 ___lmul 0ECA                   ___wmul 10BC                ??___lwdiv 0020  
              ??___lwmod 001A          ??_InicializaLCD 0019                   clear_0 1072  
                 isa$std 000001     __end_of_EscribeLCD_c 1116              _LeerTeclado 0DAE  
           __pdataCOMRAM 0029             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 1078            ___rparam_used 000001           __pcstackCOMRAM 0016  
      __end_of_EnviaDato 1156                ?_BorraLCD 0016                ?_ColorRGB 0016  
            ?_RetardoLCD 0016              RetardoLCD@a 0017                  ?___lmul 0016  
                ?___wmul 0016           ___lmul@product 001E                  i2u83_40 10F2  
                i2u84_45 10F4               ??_BorraLCD 0019               ??_ColorRGB 0016  
      ??_MensajeLCD_Word 001B             ?_HabilitaLCD 0016                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0F76                  ___lwmod 0FC8  
           __psmallconst 0800                  __pcinit 104C                  __ramtop 0800  
                __ptext0 081E                  __ptext1 10BC                  __ptext2 0FC8  
                __ptext3 0F76                  __ptext4 0ECA                  __ptext5 1086  
                __ptext6 1100                  __ptext7 0DAE                  __ptext8 100A  
                __ptext9 112C           __pintcode_body 10E2     end_of_initialization 1078  
          __Lmediumconst 0000                  int_func 10E2             _EscribeLCD_c 1100  
                postdec1 000FE5                  postinc0 000FEE             ?_LeerTeclado 0016  
         __end_of___lmul 0F20           __end_of___wmul 10E2            __pidataCOMRAM 1156  
  __end_of_InicializaLCD 104C                _EnviaDato 114E      start_initialization 104C  
            __end_of_ISR 1100             ??_RetardoLCD 0016                 ??___lmul 001E  
               ??___wmul 001A          _MensajeLCD_Word 1086               ?_EnviaDato 0016  
            __pbssCOMRAM 0001       __end_of_RetardoLCD 0F76         MensajeLCD_Word@a 001A  
       MensajeLCD_Word@i 001C            _DireccionaLCD 1116         ___lwdiv@dividend 001C  
              __pintcode 0008                 ?___lwdiv 001C                 ?___lwmod 0016  
            __smallconst 0800         ___lwdiv@quotient 0020           ___wmul@product 001A  
         ?_DireccionaLCD 0016  __end_of_MensajeLCD_Word 10BC        ___wmul@multiplier 0016  
            ??_EnviaDato 0018                 _BorraLCD 112C                 _ColorRGB 0E50  
      ___lmul@multiplier 0016                copy_data0 1060                 __Hrparam 0000  
               __Lrparam 0000          ___lwdiv@divisor 001E          ___lwdiv@counter 0022  
               __ptext10 1116                 __ptext11 114E                 __ptext12 0F20  
               __ptext13 1140                 __ptext14 0E50          ??_DireccionaLCD 0019  
               _interfaz 002C                 _partdecl 0005                 isa$xinst 000000  
       ?_MensajeLCD_Word 001A                 int$flags 002D                 intlevel2 0000  
          ??_HabilitaLCD 0016         ___lwmod@dividend 0016          ___lwmod@divisor 0018  
        ___lwmod@counter 001A            ?_EscribeLCD_c 0016      __end_of_HabilitaLCD 114E  

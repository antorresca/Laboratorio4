

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 08:13:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 04/07/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   00147E                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _n2c
    76   00147E  20                 	db	32
    77                           
    78                           ;initializer for _n1c
    79   00147F  20                 	db	32
    80                           
    81                           ;initializer for _op
    82   001480  20                 	db	32
    83                           
    84                           ;initializer for _interfaz
    85   001481  08                 	db	8
    86   000000                     _RB7	set	31759
    87   000000                     _RB6	set	31758
    88   000000                     _RB5	set	31757
    89   000000                     _LATE1	set	31849
    90   000000                     _LATB	set	3978
    91   000000                     _LATD	set	3980
    92   000000                     _RB4	set	31756
    93   000000                     _TRISB	set	3987
    94   000000                     _TRISD	set	3989
    95   000000                     _ADCON1	set	4033
    96   000000                     _LATE0	set	31848
    97   000000                     _RBPU	set	32655
    98   000000                     _TRISE	set	3990
    99                           
   100                           	psect	smallconst
   101   000800                     __psmallconst:
   102                           	callstack 0
   103   000800  00                 	db	0
   104   000801                     STR_2:
   105   000801  20                 	db	32
   106   000802  20                 	db	32
   107   000803  20                 	db	32
   108   000804  20                 	db	32
   109   000805  20                 	db	32
   110   000806  20                 	db	32
   111   000807  20                 	db	32
   112   000808  20                 	db	32
   113   000809  20                 	db	32
   114   00080A  20                 	db	32
   115   00080B  20                 	db	32
   116   00080C  20                 	db	32
   117   00080D  20                 	db	32
   118   00080E  20                 	db	32
   119   00080F  20                 	db	32
   120   000810  20                 	db	32
   121   000811  00                 	db	0
   122   000812                     STR_1:
   123   000812  48                 	db	72	;'H'
   124   000813  6F                 	db	111	;'o'
   125   000814  6C                 	db	108	;'l'
   126   000815  61                 	db	97	;'a'
   127   000816  20                 	db	32
   128   000817  6D                 	db	109	;'m'
   129   000818  75                 	db	117	;'u'
   130   000819  6E                 	db	110	;'n'
   131   00081A  64                 	db	100	;'d'
   132   00081B  6F                 	db	111	;'o'
   133   00081C  00                 	db	0
   134   00081D  00                 	db	0	; dummy byte at the end
   135   000000                     
   136                           ; #config settings
   137                           
   138                           	psect	cinit
   139   0013A8                     __pcinit:
   140                           	callstack 0
   141   0013A8                     start_initialization:
   142                           	callstack 0
   143   0013A8                     __initialization:
   144                           	callstack 0
   145                           
   146                           ; Initialize objects allocated to COMRAM (4 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148   0013A8  0E7E               	movlw	low __pidataCOMRAM
   149   0013AA  6EF6               	movwf	tblptrl,c
   150   0013AC  0E14               	movlw	high __pidataCOMRAM
   151   0013AE  6EF7               	movwf	tblptrh,c
   152   0013B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153   0013B2  6EF8               	movwf	tblptru,c
   154   0013B4  EE00  F04D         	lfsr	0,__pdataCOMRAM
   155   0013B8  EE10 F004          	lfsr	1,4
   156   0013BC                     copy_data0:
   157   0013BC  0009               	tblrd		*+
   158   0013BE  CFF5 FFEE          	movff	tablat,postinc0
   159   0013C2  50E5               	movf	postdec1,w,c
   160   0013C4  50E1               	movf	fsr1l,w,c
   161   0013C6  E1FA               	bnz	copy_data0
   162                           
   163                           ; Clear objects allocated to COMRAM (18 bytes)
   164   0013C8  EE00  F03B         	lfsr	0,__pbssCOMRAM
   165   0013CC  0E12               	movlw	18
   166   0013CE                     clear_0:
   167   0013CE  6AEE               	clrf	postinc0,c
   168   0013D0  06E8               	decf	wreg,f,c
   169   0013D2  E1FD               	bnz	clear_0
   170   0013D4                     end_of_initialization:
   171                           	callstack 0
   172   0013D4                     __end_of__initialization:
   173                           	callstack 0
   174   0013D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175   0013D6  6EF8               	movwf	tblptru,c
   176   0013D8  0100               	movlb	0
   177   0013DA  EF0F  F004         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180   00003B                     __pbssCOMRAM:
   181                           	callstack 0
   182   00003B                     _r:
   183                           	callstack 0
   184   00003B                     	ds	4
   185   00003F                     _partdecl:
   186                           	callstack 0
   187   00003F                     	ds	4
   188   000043                     _nodec:
   189                           	callstack 0
   190   000043                     	ds	3
   191   000046                     _i:
   192                           	callstack 0
   193   000046                     	ds	2
   194   000048                     _n2:
   195                           	callstack 0
   196   000048                     	ds	2
   197   00004A                     _n1:
   198                           	callstack 0
   199   00004A                     	ds	2
   200   00004C                     _Tecla:
   201                           	callstack 0
   202   00004C                     	ds	1
   203                           
   204                           	psect	dataCOMRAM
   205   00004D                     __pdataCOMRAM:
   206                           	callstack 0
   207   00004D                     _n2c:
   208                           	callstack 0
   209   00004D                     	ds	1
   210   00004E                     _n1c:
   211                           	callstack 0
   212   00004E                     	ds	1
   213   00004F                     _op:
   214                           	callstack 0
   215   00004F                     	ds	1
   216   000050                     _interfaz:
   217                           	callstack 0
   218   000050                     	ds	1
   219                           
   220                           	psect	cstackCOMRAM
   221   000001                     __pcstackCOMRAM:
   222                           	callstack 0
   223   000001                     ??_RetardoLCD:
   224   000001                     ?___wmul:
   225                           	callstack 0
   226   000001                     ?___lwdiv:
   227                           	callstack 0
   228   000001                     ?___ftpack:
   229                           	callstack 0
   230   000001                     ___wmul@multiplier:
   231                           	callstack 0
   232   000001                     ___lwdiv@dividend:
   233                           	callstack 0
   234   000001                     ___ftpack@arg:
   235                           	callstack 0
   236                           
   237                           ; 3 bytes @ 0x0
   238   000001                     	ds	1
   239   000002                     RetardoLCD@a:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x1
   243   000002                     	ds	1
   244   000003                     EnviaDato@a:
   245                           	callstack 0
   246   000003                     ___wmul@multiplicand:
   247                           	callstack 0
   248   000003                     ___lwdiv@divisor:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252   000003                     	ds	1
   253   000004                     EscribeLCD_c@a:
   254                           	callstack 0
   255   000004                     DireccionaLCD@a:
   256                           	callstack 0
   257   000004                     ___ftpack@exp:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x3
   261   000004                     	ds	1
   262   000005                     MensajeLCD_Word@a:
   263                           	callstack 0
   264   000005                     ___ftpack@sign:
   265                           	callstack 0
   266   000005                     ___wmul@product:
   267                           	callstack 0
   268   000005                     ___lwdiv@quotient:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x4
   272   000005                     	ds	1
   273   000006                     ??___ftpack:
   274   000006                     ??_MensajeLCD_Word:
   275                           
   276                           ; 1 bytes @ 0x5
   277   000006                     	ds	1
   278   000007                     ___lwdiv@counter:
   279                           	callstack 0
   280   000007                     MensajeLCD_Word@i:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x6
   284   000007                     	ds	2
   285   000009                     ?___ftadd:
   286                           	callstack 0
   287   000009                     ?___lltoft:
   288                           	callstack 0
   289   000009                     ?___lwtoft:
   290                           	callstack 0
   291   000009                     ___lwtoft@c:
   292                           	callstack 0
   293   000009                     ___ftadd@f1:
   294                           	callstack 0
   295   000009                     ___lltoft@c:
   296                           	callstack 0
   297                           
   298                           ; 4 bytes @ 0x8
   299   000009                     	ds	3
   300   00000C                     ___ftadd@f2:
   301                           	callstack 0
   302                           
   303                           ; 3 bytes @ 0xB
   304   00000C                     	ds	1
   305   00000D                     ??___lltoft:
   306                           
   307                           ; 1 bytes @ 0xC
   308   00000D                     	ds	2
   309   00000F                     ??___ftadd:
   310                           
   311                           ; 1 bytes @ 0xE
   312   00000F                     	ds	2
   313   000011                     ___lltoft@exp:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x10
   317   000011                     	ds	1
   318   000012                     ___ftadd@sign:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x11
   322   000012                     	ds	1
   323   000013                     ___ftadd@exp2:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x12
   327   000013                     	ds	1
   328   000014                     ___ftadd@exp1:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x13
   332   000014                     	ds	1
   333   000015                     ?___ftsub:
   334                           	callstack 0
   335   000015                     ___ftsub@f1:
   336                           	callstack 0
   337                           
   338                           ; 3 bytes @ 0x14
   339   000015                     	ds	3
   340   000018                     ___ftsub@f2:
   341                           	callstack 0
   342                           
   343                           ; 3 bytes @ 0x17
   344   000018                     	ds	3
   345   00001B                     ?___ftmul:
   346                           	callstack 0
   347   00001B                     ___ftmul@f1:
   348                           	callstack 0
   349                           
   350                           ; 3 bytes @ 0x1A
   351   00001B                     	ds	3
   352   00001E                     ___ftmul@f2:
   353                           	callstack 0
   354                           
   355                           ; 3 bytes @ 0x1D
   356   00001E                     	ds	3
   357   000021                     ??___ftmul:
   358                           
   359                           ; 1 bytes @ 0x20
   360   000021                     	ds	3
   361   000024                     ___ftmul@exp:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x23
   365   000024                     	ds	1
   366   000025                     ___ftmul@f3_as_product:
   367                           	callstack 0
   368                           
   369                           ; 3 bytes @ 0x24
   370   000025                     	ds	3
   371   000028                     ___ftmul@cntr:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x27
   375   000028                     	ds	1
   376   000029                     ___ftmul@sign:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x28
   380   000029                     	ds	1
   381   00002A                     ?___fttol:
   382                           	callstack 0
   383   00002A                     ___fttol@f1:
   384                           	callstack 0
   385                           
   386                           ; 3 bytes @ 0x29
   387   00002A                     	ds	4
   388   00002E                     ??___fttol:
   389                           
   390                           ; 1 bytes @ 0x2D
   391   00002E                     	ds	5
   392   000033                     ___fttol@sign1:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x32
   396   000033                     	ds	1
   397   000034                     ___fttol@lval:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x33
   401   000034                     	ds	4
   402   000038                     ___fttol@exp1:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x37
   406   000038                     	ds	1
   407   000039                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x38
   410   000039                     	ds	2
   411                           
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 20 in file "Laboratorio4.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   431 ;;      Params:         0       0       0       0       0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0       0       0
   433 ;;      Temps:          2       0       0       0       0       0       0       0       0
   434 ;;      Totals:         2       0       0       0       0       0       0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels required when called: 4
   437 ;; This function calls:
   438 ;;		_BorraLCD
   439 ;;		_DireccionaLCD
   440 ;;		_EscribeLCD_c
   441 ;;		_InicializaLCD
   442 ;;		_LeerTeclado
   443 ;;		_MensajeLCD_Word
   444 ;;		___ftmul
   445 ;;		___ftsub
   446 ;;		___fttol
   447 ;;		___lltoft
   448 ;;		___lwdiv
   449 ;;		___lwtoft
   450 ;;		___wmul
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   00081E                     __ptext0:
   458                           	callstack 0
   459   00081E                     _main:
   460                           	callstack 27
   461                           
   462                           ;Laboratorio4.c: 21: ADCON1=15;
   463                           
   464                           ;incstack = 0
   465   00081E  0E0F               	movlw	15
   466   000820  6EC1               	movwf	193,c	;volatile
   467                           
   468                           ;Laboratorio4.c: 22: TRISD=0;
   469   000822  0E00               	movlw	0
   470   000824  6E95               	movwf	149,c	;volatile
   471                           
   472                           ;Laboratorio4.c: 23: TRISB=0b11110000;
   473   000826  0EF0               	movlw	240
   474   000828  6E93               	movwf	147,c	;volatile
   475                           
   476                           ;Laboratorio4.c: 24: TRISE=0;
   477   00082A  0E00               	movlw	0
   478   00082C  6E96               	movwf	150,c	;volatile
   479                           
   480                           ;Laboratorio4.c: 25: RBPU=0;
   481   00082E  9EF1               	bcf	4081,7,c	;volatile
   482                           
   483                           ;Laboratorio4.c: 26: InicializaLCD();
   484   000830  EC93  F009         	call	_InicializaLCD	;wreg free
   485                           
   486                           ;Laboratorio4.c: 27: BorraLCD();
   487   000834  EC2A  F00A         	call	_BorraLCD	;wreg free
   488                           
   489                           ;Laboratorio4.c: 28: MensajeLCD_Word("Hola mundo");
   490   000838  0E12               	movlw	low STR_1
   491   00083A  6E05               	movwf	MensajeLCD_Word@a^0,c
   492   00083C  EC6C  F009         	call	_MensajeLCD_Word	;wreg free
   493                           
   494                           ;Laboratorio4.c: 29: _delay((unsigned long)((2000)*(1000000/4000.0)));
   495   000840  0E03               	movlw	3
   496   000842  6E3A               	movwf	(??_main+1)^0,c
   497   000844  0E8A               	movlw	138
   498   000846  6E39               	movwf	??_main^0,c
   499   000848  0E56               	movlw	86
   500   00084A                     u2097:
   501   00084A  2EE8               	decfsz	wreg,f,c
   502   00084C  D7FE               	bra	u2097
   503   00084E  2E39               	decfsz	??_main^0,f,c
   504   000850  D7FC               	bra	u2097
   505   000852  2E3A               	decfsz	(??_main+1)^0,f,c
   506   000854  D7FA               	bra	u2097
   507                           
   508                           ;Laboratorio4.c: 30: BorraLCD();
   509   000856  EC2A  F00A         	call	_BorraLCD	;wreg free
   510   00085A                     l1897:
   511                           
   512                           ;Laboratorio4.c: 32: LATB=0B00000000;
   513   00085A  0E00               	movlw	0
   514   00085C  6E8A               	movwf	138,c	;volatile
   515                           
   516                           ;Laboratorio4.c: 33: Tecla = LeerTeclado();
   517   00085E  EC99  F008         	call	_LeerTeclado	;wreg free
   518   000862  6E4C               	movwf	_Tecla^0,c
   519                           
   520                           ;Laboratorio4.c: 34: if(Tecla=='C'){
   521   000864  0E43               	movlw	67
   522   000866  184C               	xorwf	_Tecla^0,w,c
   523   000868  A4D8               	btfss	status,2,c
   524   00086A  D023               	goto	l1923
   525                           
   526                           ;Laboratorio4.c: 35: DireccionaLCD(0xC0);
   527   00086C  0EC0               	movlw	192
   528   00086E  EC1F  F00A         	call	_DireccionaLCD
   529                           
   530                           ;Laboratorio4.c: 37: op = ' ';
   531   000872  0E20               	movlw	32
   532   000874  6E4F               	movwf	_op^0,c
   533                           
   534                           ;Laboratorio4.c: 38: n1c = ' ';
   535   000876  0E20               	movlw	32
   536   000878  6E4E               	movwf	_n1c^0,c
   537                           
   538                           ;Laboratorio4.c: 39: n2c = ' ';
   539   00087A  0E20               	movlw	32
   540   00087C  6E4D               	movwf	_n2c^0,c
   541                           
   542                           ;Laboratorio4.c: 40: n1 = 0;
   543   00087E  0E00               	movlw	0
   544   000880  6E4B               	movwf	(_n1+1)^0,c
   545   000882  0E00               	movlw	0
   546   000884  6E4A               	movwf	_n1^0,c
   547                           
   548                           ;Laboratorio4.c: 41: n2 = 0;
   549   000886  0E00               	movlw	0
   550   000888  6E49               	movwf	(_n2+1)^0,c
   551   00088A  0E00               	movlw	0
   552   00088C  6E48               	movwf	_n2^0,c
   553                           
   554                           ;Laboratorio4.c: 42: i = 0;
   555   00088E  0E00               	movlw	0
   556   000890  6E47               	movwf	(_i+1)^0,c
   557   000892  0E00               	movlw	0
   558   000894  6E46               	movwf	_i^0,c
   559                           
   560                           ;Laboratorio4.c: 43: DireccionaLCD(0x80);
   561   000896  0E80               	movlw	128
   562   000898  EC1F  F00A         	call	_DireccionaLCD
   563                           
   564                           ;Laboratorio4.c: 44: MensajeLCD_Word("                ");
   565   00089C  0E01               	movlw	low STR_2
   566   00089E  6E05               	movwf	MensajeLCD_Word@a^0,c
   567   0008A0  EC6C  F009         	call	_MensajeLCD_Word	;wreg free
   568                           
   569                           ;Laboratorio4.c: 45: DireccionaLCD(0xC0);
   570   0008A4  0EC0               	movlw	192
   571   0008A6  EC1F  F00A         	call	_DireccionaLCD
   572                           
   573                           ;Laboratorio4.c: 46: DireccionaLCD(0x80);
   574   0008AA  0E80               	movlw	128
   575   0008AC  EC1F  F00A         	call	_DireccionaLCD
   576                           
   577                           ;Laboratorio4.c: 47: }else{
   578   0008B0  D7D4               	goto	l1897
   579   0008B2                     l1923:
   580                           
   581                           ;Laboratorio4.c: 48: if(n1c==' '|n2c==' '|op==' '){
   582   0008B2  0E20               	movlw	32
   583   0008B4  184E               	xorwf	_n1c^0,w,c
   584   0008B6  B4D8               	btfsc	status,2,c
   585   0008B8  D008               	goto	u1680
   586   0008BA  0E20               	movlw	32
   587   0008BC  184D               	xorwf	_n2c^0,w,c
   588   0008BE  B4D8               	btfsc	status,2,c
   589   0008C0  D004               	goto	u1680
   590   0008C2  0E20               	movlw	32
   591   0008C4  184F               	xorwf	_op^0,w,c
   592   0008C6  A4D8               	btfss	status,2,c
   593   0008C8  D083               	goto	l1991
   594   0008CA                     u1680:
   595                           
   596                           ;Laboratorio4.c: 49: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   597   0008CA  0E20               	movlw	32
   598   0008CC  184F               	xorwf	_op^0,w,c
   599   0008CE  A4D8               	btfss	status,2,c
   600   0008D0  D021               	goto	l1947
   601   0008D2  0E2B               	movlw	43
   602   0008D4  184C               	xorwf	_Tecla^0,w,c
   603   0008D6  B4D8               	btfsc	status,2,c
   604   0008D8  D00C               	goto	u1730
   605   0008DA  0E2D               	movlw	45
   606   0008DC  184C               	xorwf	_Tecla^0,w,c
   607   0008DE  B4D8               	btfsc	status,2,c
   608   0008E0  D008               	goto	u1730
   609   0008E2  0E2F               	movlw	47
   610   0008E4  184C               	xorwf	_Tecla^0,w,c
   611   0008E6  B4D8               	btfsc	status,2,c
   612   0008E8  D004               	goto	u1730
   613   0008EA  0E78               	movlw	120
   614   0008EC  184C               	xorwf	_Tecla^0,w,c
   615   0008EE  A4D8               	btfss	status,2,c
   616   0008F0  D011               	goto	l1947
   617   0008F2                     u1730:
   618   0008F2  0E20               	movlw	32
   619   0008F4  184E               	xorwf	_n1c^0,w,c
   620   0008F6  B4D8               	btfsc	status,2,c
   621   0008F8  D00D               	goto	l1947
   622   0008FA  0E20               	movlw	32
   623   0008FC  184D               	xorwf	_n2c^0,w,c
   624   0008FE  A4D8               	btfss	status,2,c
   625   000900  D009               	goto	l1947
   626                           
   627                           ;Laboratorio4.c: 50: DireccionaLCD(0x81);
   628   000902  0E81               	movlw	129
   629   000904  EC1F  F00A         	call	_DireccionaLCD
   630                           
   631                           ;Laboratorio4.c: 51: EscribeLCD_c(Tecla);
   632   000908  504C               	movf	_Tecla^0,w,c
   633   00090A  EC14  F00A         	call	_EscribeLCD_c
   634                           
   635                           ;Laboratorio4.c: 52: op = Tecla;
   636   00090E  C04C  F04F         	movff	_Tecla,_op
   637                           
   638                           ;Laboratorio4.c: 53: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   639   000912  D1F8               	goto	l2069
   640   000914                     l1947:
   641   000914  0E20               	movlw	32
   642   000916  184E               	xorwf	_n1c^0,w,c
   643   000918  A4D8               	btfss	status,2,c
   644   00091A  D027               	goto	l1967
   645   00091C  0E2B               	movlw	43
   646   00091E  184C               	xorwf	_Tecla^0,w,c
   647   000920  A4D8               	btfss	status,2,c
   648   000922  D014               	goto	u1820
   649   000924  0E2D               	movlw	45
   650   000926  184C               	xorwf	_Tecla^0,w,c
   651   000928  A4D8               	btfss	status,2,c
   652   00092A  D010               	goto	u1820
   653   00092C  0E2F               	movlw	47
   654   00092E  184C               	xorwf	_Tecla^0,w,c
   655   000930  A4D8               	btfss	status,2,c
   656   000932  D00C               	goto	u1820
   657   000934  0E78               	movlw	120
   658   000936  184C               	xorwf	_Tecla^0,w,c
   659   000938  A4D8               	btfss	status,2,c
   660   00093A  D008               	goto	u1820
   661   00093C  0E3D               	movlw	61
   662   00093E  184C               	xorwf	_Tecla^0,w,c
   663   000940  A4D8               	btfss	status,2,c
   664   000942  D004               	goto	u1820
   665   000944  0E43               	movlw	67
   666   000946  184C               	xorwf	_Tecla^0,w,c
   667   000948  B4D8               	btfsc	status,2,c
   668   00094A  D00F               	goto	l1967
   669   00094C                     u1820:
   670                           
   671                           ;Laboratorio4.c: 54: DireccionaLCD(0x80);
   672   00094C  0E80               	movlw	128
   673   00094E  EC1F  F00A         	call	_DireccionaLCD
   674                           
   675                           ;Laboratorio4.c: 55: EscribeLCD_c(Tecla);
   676   000952  504C               	movf	_Tecla^0,w,c
   677   000954  EC14  F00A         	call	_EscribeLCD_c
   678                           
   679                           ;Laboratorio4.c: 56: n1c=Tecla;
   680   000958  C04C  F04E         	movff	_Tecla,_n1c
   681                           
   682                           ;Laboratorio4.c: 57: n1 = Tecla-'0';
   683   00095C  0ED0               	movlw	208
   684   00095E  244C               	addwf	_Tecla^0,w,c
   685   000960  6E4A               	movwf	_n1^0,c
   686   000962  6A4B               	clrf	(_n1+1)^0,c
   687   000964  0EFF               	movlw	255
   688   000966  224B               	addwfc	(_n1+1)^0,f,c
   689                           
   690                           ;Laboratorio4.c: 58: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   691   000968  D1CD               	goto	l2069
   692   00096A                     l1967:
   693   00096A  0E20               	movlw	32
   694   00096C  184D               	xorwf	_n2c^0,w,c
   695   00096E  A4D8               	btfss	status,2,c
   696   000970  D1C9               	goto	l2069
   697   000972  0E20               	movlw	32
   698   000974  184F               	xorwf	_op^0,w,c
   699   000976  B4D8               	btfsc	status,2,c
   700   000978  D1C5               	goto	l2069
   701   00097A  0E20               	movlw	32
   702   00097C  184E               	xorwf	_n1c^0,w,c
   703   00097E  B4D8               	btfsc	status,2,c
   704   000980  D1C1               	goto	l2069
   705   000982  0E2B               	movlw	43
   706   000984  184C               	xorwf	_Tecla^0,w,c
   707   000986  A4D8               	btfss	status,2,c
   708   000988  D014               	goto	u1910
   709   00098A  0E2D               	movlw	45
   710   00098C  184C               	xorwf	_Tecla^0,w,c
   711   00098E  A4D8               	btfss	status,2,c
   712   000990  D010               	goto	u1910
   713   000992  0E2F               	movlw	47
   714   000994  184C               	xorwf	_Tecla^0,w,c
   715   000996  A4D8               	btfss	status,2,c
   716   000998  D00C               	goto	u1910
   717   00099A  0E78               	movlw	120
   718   00099C  184C               	xorwf	_Tecla^0,w,c
   719   00099E  A4D8               	btfss	status,2,c
   720   0009A0  D008               	goto	u1910
   721   0009A2  0E3D               	movlw	61
   722   0009A4  184C               	xorwf	_Tecla^0,w,c
   723   0009A6  A4D8               	btfss	status,2,c
   724   0009A8  D004               	goto	u1910
   725   0009AA  0E43               	movlw	67
   726   0009AC  184C               	xorwf	_Tecla^0,w,c
   727   0009AE  B4D8               	btfsc	status,2,c
   728   0009B0  D1A9               	goto	l2069
   729   0009B2                     u1910:
   730                           
   731                           ;Laboratorio4.c: 59: DireccionaLCD(0x82);
   732   0009B2  0E82               	movlw	130
   733   0009B4  EC1F  F00A         	call	_DireccionaLCD
   734                           
   735                           ;Laboratorio4.c: 60: EscribeLCD_c(Tecla);
   736   0009B8  504C               	movf	_Tecla^0,w,c
   737   0009BA  EC14  F00A         	call	_EscribeLCD_c
   738                           
   739                           ;Laboratorio4.c: 61: n2c=Tecla;
   740   0009BE  C04C  F04D         	movff	_Tecla,_n2c
   741                           
   742                           ;Laboratorio4.c: 62: n2 = Tecla-'0';
   743   0009C2  0ED0               	movlw	208
   744   0009C4  244C               	addwf	_Tecla^0,w,c
   745   0009C6  6E48               	movwf	_n2^0,c
   746   0009C8  6A49               	clrf	(_n2+1)^0,c
   747   0009CA  0EFF               	movlw	255
   748   0009CC  2249               	addwfc	(_n2+1)^0,f,c
   749   0009CE  D19A               	goto	l2069
   750   0009D0                     l1991:
   751   0009D0  0E3D               	movlw	61
   752   0009D2  184C               	xorwf	_Tecla^0,w,c
   753   0009D4  A4D8               	btfss	status,2,c
   754   0009D6  D193               	goto	l2067
   755                           
   756                           ;Laboratorio4.c: 65: DireccionaLCD(0x83);
   757   0009D8  0E83               	movlw	131
   758   0009DA  EC1F  F00A         	call	_DireccionaLCD
   759                           
   760                           ;Laboratorio4.c: 66: EscribeLCD_c('=');
   761   0009DE  0E3D               	movlw	61
   762   0009E0  EC14  F00A         	call	_EscribeLCD_c
   763                           
   764                           ;Laboratorio4.c: 67: switch(op){
   765   0009E4  D080               	goto	l2029
   766   0009E6                     l1995:
   767                           
   768                           ;Laboratorio4.c: 69: r = n1 + n2;
   769   0009E6  5048               	movf	_n2^0,w,c
   770   0009E8  244A               	addwf	_n1^0,w,c
   771   0009EA  6E39               	movwf	??_main^0,c
   772   0009EC  5049               	movf	(_n2+1)^0,w,c
   773   0009EE  204B               	addwfc	(_n1+1)^0,w,c
   774   0009F0  6E3A               	movwf	(??_main+1)^0,c
   775   0009F2  C039  F03B         	movff	??_main,_r
   776   0009F6  C03A  F03C         	movff	??_main+1,_r+1
   777   0009FA  6A3D               	clrf	(_r+2)^0,c
   778   0009FC  6A3E               	clrf	(_r+3)^0,c
   779                           
   780                           ;Laboratorio4.c: 70: nodec = r;
   781   0009FE  C03B  F009         	movff	_r,___lltoft@c
   782   000A02  C03C  F00A         	movff	_r+1,___lltoft@c+1
   783   000A06  C03D  F00B         	movff	_r+2,___lltoft@c+2
   784   000A0A  C03E  F00C         	movff	_r+3,___lltoft@c+3
   785   000A0E  ECEA  F008         	call	___lltoft	;wreg free
   786   000A12  C009  F043         	movff	?___lltoft,_nodec
   787   000A16  C00A  F044         	movff	?___lltoft+1,_nodec+1
   788   000A1A  C00B  F045         	movff	?___lltoft+2,_nodec+2
   789                           
   790                           ;Laboratorio4.c: 71: break;
   791   000A1E  D071               	goto	l2031
   792   000A20                     l1999:
   793                           
   794                           ;Laboratorio4.c: 73: r = n1 - n2;
   795   000A20  5048               	movf	_n2^0,w,c
   796   000A22  5C4A               	subwf	_n1^0,w,c
   797   000A24  6E39               	movwf	??_main^0,c
   798   000A26  5049               	movf	(_n2+1)^0,w,c
   799   000A28  584B               	subwfb	(_n1+1)^0,w,c
   800   000A2A  D7E2               	goto	L1
   801   000A2C                     l2003:
   802                           
   803                           ;Laboratorio4.c: 77: r = n1*n2;
   804   000A2C  C04A  F001         	movff	_n1,___wmul@multiplier
   805   000A30  C04B  F002         	movff	_n1+1,___wmul@multiplier+1
   806   000A34  C048  F003         	movff	_n2,___wmul@multiplicand
   807   000A38  C049  F004         	movff	_n2+1,___wmul@multiplicand+1
   808   000A3C  ECEF  F009         	call	___wmul	;wreg free
   809   000A40  C001  F03B         	movff	?___wmul,_r
   810   000A44  C002  F03C         	movff	?___wmul+1,_r+1
   811   000A48  D7D8               	goto	L2
   812   000A4A                     l2007:
   813                           
   814                           ;Laboratorio4.c: 81: if(n2!=0){
   815   000A4A  5048               	movf	_n2^0,w,c
   816   000A4C  1049               	iorwf	(_n2+1)^0,w,c
   817   000A4E  B4D8               	btfsc	status,2,c
   818   000A50  D02B               	goto	l2013
   819                           
   820                           ;Laboratorio4.c: 82: if(n1!=0){
   821   000A52  504A               	movf	_n1^0,w,c
   822   000A54  104B               	iorwf	(_n1+1)^0,w,c
   823   000A56  B4D8               	btfsc	status,2,c
   824   000A58  D054               	goto	l2031
   825                           
   826                           ;Laboratorio4.c: 83: r = n1/n2;
   827   000A5A  C04A  F001         	movff	_n1,___lwdiv@dividend
   828   000A5E  C04B  F002         	movff	_n1+1,___lwdiv@dividend+1
   829   000A62  C048  F003         	movff	_n2,___lwdiv@divisor
   830   000A66  C049  F004         	movff	_n2+1,___lwdiv@divisor+1
   831   000A6A  EC43  F009         	call	___lwdiv	;wreg free
   832   000A6E  C001  F03B         	movff	?___lwdiv,_r
   833   000A72  C002  F03C         	movff	?___lwdiv+1,_r+1
   834   000A76  6A3D               	clrf	(_r+2)^0,c
   835   000A78  6A3E               	clrf	(_r+3)^0,c
   836                           
   837                           ;Laboratorio4.c: 84: nodec = n1/n2;
   838   000A7A  C048  F003         	movff	_n2,___lwdiv@divisor
   839   000A7E  C049  F004         	movff	_n2+1,___lwdiv@divisor+1
   840   000A82  C04A  F001         	movff	_n1,___lwdiv@dividend
   841   000A86  C04B  F002         	movff	_n1+1,___lwdiv@dividend+1
   842   000A8A  EC43  F009         	call	___lwdiv	;wreg free
   843   000A8E  C001  F009         	movff	?___lwdiv,___lwtoft@c
   844   000A92  C002  F00A         	movff	?___lwdiv+1,___lwtoft@c+1
   845   000A96  EC02  F00A         	call	___lwtoft	;wreg free
   846   000A9A  C009  F043         	movff	?___lwtoft,_nodec
   847   000A9E  C00A  F044         	movff	?___lwtoft+1,_nodec+1
   848   000AA2  C00B  F045         	movff	?___lwtoft+2,_nodec+2
   849   000AA6  D02D               	goto	l2031
   850   000AA8                     l2013:
   851                           
   852                           ;Laboratorio4.c: 87: if(n1 != 0 & n2 == 0) r = 1000;
   853   000AA8  504A               	movf	_n1^0,w,c
   854   000AAA  104B               	iorwf	(_n1+1)^0,w,c
   855   000AAC  B4D8               	btfsc	status,2,c
   856   000AAE  D006               	goto	l2019
   857   000AB0  5048               	movf	_n2^0,w,c
   858   000AB2  1049               	iorwf	(_n2+1)^0,w,c
   859   000AB4  A4D8               	btfss	status,2,c
   860   000AB6  D002               	goto	l2019
   861   000AB8  0EE8               	movlw	232
   862   000ABA  D009               	goto	L3
   863   000ABC                     l2019:
   864                           
   865                           ;Laboratorio4.c: 88: else if(n1 == 0 & n2 == 0) r = 1001;
   866   000ABC  504A               	movf	_n1^0,w,c
   867   000ABE  104B               	iorwf	(_n1+1)^0,w,c
   868   000AC0  A4D8               	btfss	status,2,c
   869   000AC2  D01F               	goto	l2031
   870   000AC4  5048               	movf	_n2^0,w,c
   871   000AC6  1049               	iorwf	(_n2+1)^0,w,c
   872   000AC8  A4D8               	btfss	status,2,c
   873   000ACA  D01B               	goto	l2031
   874   000ACC  0EE9               	movlw	233
   875   000ACE                     L3:
   876   000ACE  6E3B               	movwf	_r^0,c
   877   000AD0  0E03               	movlw	3
   878   000AD2  D003               	goto	L4
   879   000AD4                     l2025:
   880                           
   881                           ;Laboratorio4.c: 92: r = 0;
   882   000AD4  0E00               	movlw	0
   883   000AD6  6E3B               	movwf	_r^0,c
   884   000AD8  0E00               	movlw	0
   885   000ADA                     L4:
   886   000ADA  6E3C               	movwf	(_r+1)^0,c
   887   000ADC  0E00               	movlw	0
   888   000ADE  6E3D               	movwf	(_r+2)^0,c
   889   000AE0  0E00               	movlw	0
   890   000AE2  6E3E               	movwf	(_r+3)^0,c
   891                           
   892                           ;Laboratorio4.c: 93: break;
   893   000AE4  D00E               	goto	l2031
   894   000AE6                     l2029:
   895   000AE6  504F               	movf	_op^0,w,c
   896                           
   897                           ; Switch size 1, requested type "simple"
   898                           ; Number of cases is 4, Range of values is 43 to 120
   899                           ; switch strategies available:
   900                           ; Name         Instructions Cycles
   901                           ; simple_byte           13     7 (average)
   902                           ;	Chosen strategy is simple_byte
   903   000AE8  0A2B               	xorlw	43	; case 43
   904   000AEA  B4D8               	btfsc	status,2,c
   905   000AEC  D77C               	goto	l1995
   906   000AEE  0A06               	xorlw	6	; case 45
   907   000AF0  B4D8               	btfsc	status,2,c
   908   000AF2  D796               	goto	l1999
   909   000AF4  0A02               	xorlw	2	; case 47
   910   000AF6  B4D8               	btfsc	status,2,c
   911   000AF8  D7A8               	goto	l2007
   912   000AFA  0A57               	xorlw	87	; case 120
   913   000AFC  B4D8               	btfsc	status,2,c
   914   000AFE  D796               	goto	l2003
   915   000B00  D7E9               	goto	l2025
   916   000B02                     l2031:
   917                           
   918                           ;Laboratorio4.c: 95: EscribeLCD_c(r+'0');
   919   000B02  503B               	movf	_r^0,w,c
   920   000B04  0F30               	addlw	48
   921   000B06  EC14  F00A         	call	_EscribeLCD_c
   922                           
   923                           ;Laboratorio4.c: 96: DireccionaLCD(0x84);
   924   000B0A  0E84               	movlw	132
   925   000B0C  EC1F  F00A         	call	_DireccionaLCD
   926                           
   927                           ;Laboratorio4.c: 97: if (nodec-r){
   928   000B10  C043  F015         	movff	_nodec,___ftsub@f1
   929   000B14  C044  F016         	movff	_nodec+1,___ftsub@f1+1
   930   000B18  C045  F017         	movff	_nodec+2,___ftsub@f1+2
   931   000B1C  C03B  F009         	movff	_r,___lltoft@c
   932   000B20  C03C  F00A         	movff	_r+1,___lltoft@c+1
   933   000B24  C03D  F00B         	movff	_r+2,___lltoft@c+2
   934   000B28  C03E  F00C         	movff	_r+3,___lltoft@c+3
   935   000B2C  ECEA  F008         	call	___lltoft	;wreg free
   936   000B30  C009  F018         	movff	?___lltoft,___ftsub@f2
   937   000B34  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   938   000B38  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   939   000B3C  ECB4  F009         	call	___ftsub	;wreg free
   940   000B40  5015               	movf	?___ftsub^0,w,c
   941   000B42  1016               	iorwf	(?___ftsub+1)^0,w,c
   942   000B44  1017               	iorwf	(?___ftsub+2)^0,w,c
   943   000B46  B4D8               	btfsc	status,2,c
   944   000B48  D042               	goto	l2035
   945                           
   946                           ;Laboratorio4.c: 98: partdecl = (nodec-r)*100;
   947   000B4A  0E00               	movlw	0
   948   000B4C  6E1E               	movwf	___ftmul@f2^0,c
   949   000B4E  0EC8               	movlw	200
   950   000B50  6E1F               	movwf	(___ftmul@f2+1)^0,c
   951   000B52  0E42               	movlw	66
   952   000B54  6E20               	movwf	(___ftmul@f2+2)^0,c
   953   000B56  C03B  F009         	movff	_r,___lltoft@c
   954   000B5A  C03C  F00A         	movff	_r+1,___lltoft@c+1
   955   000B5E  C03D  F00B         	movff	_r+2,___lltoft@c+2
   956   000B62  C03E  F00C         	movff	_r+3,___lltoft@c+3
   957   000B66  ECEA  F008         	call	___lltoft	;wreg free
   958   000B6A  C009  F018         	movff	?___lltoft,___ftsub@f2
   959   000B6E  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   960   000B72  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   961   000B76  C043  F015         	movff	_nodec,___ftsub@f1
   962   000B7A  C044  F016         	movff	_nodec+1,___ftsub@f1+1
   963   000B7E  C045  F017         	movff	_nodec+2,___ftsub@f1+2
   964   000B82  ECB4  F009         	call	___ftsub	;wreg free
   965   000B86  C015  F01B         	movff	?___ftsub,___ftmul@f1
   966   000B8A  C016  F01C         	movff	?___ftsub+1,___ftmul@f1+1
   967   000B8E  C017  F01D         	movff	?___ftsub+2,___ftmul@f1+2
   968   000B92  EC5F  F007         	call	___ftmul	;wreg free
   969   000B96  C01B  F02A         	movff	?___ftmul,___fttol@f1
   970   000B9A  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   971   000B9E  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   972   000BA2  ECD9  F007         	call	___fttol	;wreg free
   973   000BA6  C02A  F03F         	movff	?___fttol,_partdecl
   974   000BAA  C02B  F040         	movff	?___fttol+1,_partdecl+1
   975   000BAE  C02C  F041         	movff	?___fttol+2,_partdecl+2
   976   000BB2  C02D  F042         	movff	?___fttol+3,_partdecl+3
   977                           
   978                           ;Laboratorio4.c: 99: EscribeLCD_c(r+'0');
   979   000BB6  503B               	movf	_r^0,w,c
   980   000BB8  0F30               	addlw	48
   981   000BBA  EC14  F00A         	call	_EscribeLCD_c
   982                           
   983                           ;Laboratorio4.c: 100: EscribeLCD_c('.');
   984   000BBE  0E2E               	movlw	46
   985   000BC0  EC14  F00A         	call	_EscribeLCD_c
   986                           
   987                           ;Laboratorio4.c: 101: EscribeLCD_c(partdecl+'0');
   988   000BC4  503F               	movf	_partdecl^0,w,c
   989   000BC6  0F30               	addlw	48
   990   000BC8  EC14  F00A         	call	_EscribeLCD_c
   991                           
   992                           ;Laboratorio4.c: 102: }else if(r>0x51 & r!=1000 & r !=1001){
   993   000BCC  D09B               	goto	l2069
   994   000BCE                     l2035:
   995   000BCE  503E               	movf	(_r+3)^0,w,c
   996   000BD0  103D               	iorwf	(_r+2)^0,w,c
   997   000BD2  103C               	iorwf	(_r+1)^0,w,c
   998   000BD4  E104               	bnz	u2000
   999   000BD6  0E52               	movlw	82
  1000   000BD8  5C3B               	subwf	_r^0,w,c
  1001   000BDA  A0D8               	btfss	status,0,c
  1002   000BDC  D025               	goto	l2047
  1003   000BDE                     u2000:
  1004   000BDE  0EE8               	movlw	232
  1005   000BE0  183B               	xorwf	_r^0,w,c
  1006   000BE2  E106               	bnz	u2010
  1007   000BE4  0E03               	movlw	3
  1008   000BE6  183C               	xorwf	(_r+1)^0,w,c
  1009   000BE8  103D               	iorwf	(_r+2)^0,w,c
  1010   000BEA  103E               	iorwf	(_r+3)^0,w,c
  1011   000BEC  B4D8               	btfsc	status,2,c
  1012   000BEE  D01C               	goto	l2047
  1013   000BF0                     u2010:
  1014   000BF0  0EE9               	movlw	233
  1015   000BF2  183B               	xorwf	_r^0,w,c
  1016   000BF4  E106               	bnz	u2020
  1017   000BF6  0E03               	movlw	3
  1018   000BF8  183C               	xorwf	(_r+1)^0,w,c
  1019   000BFA  103D               	iorwf	(_r+2)^0,w,c
  1020   000BFC  103E               	iorwf	(_r+3)^0,w,c
  1021   000BFE  B4D8               	btfsc	status,2,c
  1022   000C00  D013               	goto	l2047
  1023   000C02                     u2020:
  1024                           
  1025                           ;Laboratorio4.c: 103: EscribeLCD_c('-');
  1026   000C02  0E2D               	movlw	45
  1027   000C04  EC14  F00A         	call	_EscribeLCD_c
  1028                           
  1029                           ;Laboratorio4.c: 104: DireccionaLCD(0x85);
  1030   000C08  0E85               	movlw	133
  1031   000C0A  EC1F  F00A         	call	_DireccionaLCD
  1032                           
  1033                           ;Laboratorio4.c: 105: r = ~r+1;
  1034   000C0E  1E3E               	comf	(_r+3)^0,f,c
  1035   000C10  1E3D               	comf	(_r+2)^0,f,c
  1036   000C12  1E3C               	comf	(_r+1)^0,f,c
  1037   000C14  6C3B               	negf	_r^0,c
  1038   000C16  0E00               	movlw	0
  1039   000C18  223C               	addwfc	(_r+1)^0,f,c
  1040   000C1A  223D               	addwfc	(_r+2)^0,f,c
  1041   000C1C  223E               	addwfc	(_r+3)^0,f,c
  1042                           
  1043                           ;Laboratorio4.c: 106: EscribeLCD_c(r+'0');
  1044   000C1E  503B               	movf	_r^0,w,c
  1045   000C20  0F30               	addlw	48
  1046   000C22  EC14  F00A         	call	_EscribeLCD_c
  1047                           
  1048                           ;Laboratorio4.c: 107: }else{
  1049   000C26  D06E               	goto	l2069
  1050   000C28                     l2047:
  1051                           
  1052                           ;Laboratorio4.c: 108: if(r>0xA & r!=1000 & r !=1001){
  1053   000C28  503E               	movf	(_r+3)^0,w,c
  1054   000C2A  103D               	iorwf	(_r+2)^0,w,c
  1055   000C2C  103C               	iorwf	(_r+1)^0,w,c
  1056   000C2E  E104               	bnz	u2030
  1057   000C30  0E0B               	movlw	11
  1058   000C32  5C3B               	subwf	_r^0,w,c
  1059   000C34  A0D8               	btfss	status,0,c
  1060   000C36  D038               	goto	l2057
  1061   000C38                     u2030:
  1062   000C38  0EE8               	movlw	232
  1063   000C3A  183B               	xorwf	_r^0,w,c
  1064   000C3C  E106               	bnz	u2040
  1065   000C3E  0E03               	movlw	3
  1066   000C40  183C               	xorwf	(_r+1)^0,w,c
  1067   000C42  103D               	iorwf	(_r+2)^0,w,c
  1068   000C44  103E               	iorwf	(_r+3)^0,w,c
  1069   000C46  B4D8               	btfsc	status,2,c
  1070   000C48  D02F               	goto	l2057
  1071   000C4A                     u2040:
  1072   000C4A  0EE9               	movlw	233
  1073   000C4C  183B               	xorwf	_r^0,w,c
  1074   000C4E  E106               	bnz	u2050
  1075   000C50  0E03               	movlw	3
  1076   000C52  183C               	xorwf	(_r+1)^0,w,c
  1077   000C54  103D               	iorwf	(_r+2)^0,w,c
  1078   000C56  103E               	iorwf	(_r+3)^0,w,c
  1079   000C58  B4D8               	btfsc	status,2,c
  1080   000C5A  D026               	goto	l2057
  1081   000C5C                     u2050:
  1082   000C5C                     l2053:
  1083                           
  1084                           ;Laboratorio4.c: 110: i = i+1;
  1085   000C5C  0E01               	movlw	1
  1086   000C5E  2446               	addwf	_i^0,w,c
  1087   000C60  6E46               	movwf	_i^0,c
  1088   000C62  0E00               	movlw	0
  1089   000C64  2047               	addwfc	(_i+1)^0,w,c
  1090   000C66  6E47               	movwf	(_i+1)^0,c
  1091                           
  1092                           ;Laboratorio4.c: 111: r = r - 10;
  1093   000C68  0EF6               	movlw	246
  1094   000C6A  243B               	addwf	_r^0,w,c
  1095   000C6C  6E3B               	movwf	_r^0,c
  1096   000C6E  0EFF               	movlw	255
  1097   000C70  203C               	addwfc	(_r+1)^0,w,c
  1098   000C72  6E3C               	movwf	(_r+1)^0,c
  1099   000C74  0EFF               	movlw	255
  1100   000C76  203D               	addwfc	(_r+2)^0,w,c
  1101   000C78  6E3D               	movwf	(_r+2)^0,c
  1102   000C7A  0EFF               	movlw	255
  1103   000C7C  203E               	addwfc	(_r+3)^0,w,c
  1104   000C7E  6E3E               	movwf	(_r+3)^0,c
  1105                           
  1106                           ;Laboratorio4.c: 112: }while(r>0xA);
  1107   000C80  503E               	movf	(_r+3)^0,w,c
  1108   000C82  103D               	iorwf	(_r+2)^0,w,c
  1109   000C84  103C               	iorwf	(_r+1)^0,w,c
  1110   000C86  E1EA               	bnz	l2053
  1111   000C88  0E0B               	movlw	11
  1112   000C8A  5C3B               	subwf	_r^0,w,c
  1113   000C8C  B0D8               	btfsc	status,0,c
  1114   000C8E  D7E6               	goto	u2050
  1115                           
  1116                           ;Laboratorio4.c: 113: EscribeLCD_c(i+'0');
  1117   000C90  5046               	movf	_i^0,w,c
  1118   000C92  0F30               	addlw	48
  1119   000C94  EC14  F00A         	call	_EscribeLCD_c
  1120                           
  1121                           ;Laboratorio4.c: 114: DireccionaLCD(0x85);
  1122   000C98  0E85               	movlw	133
  1123   000C9A  EC1F  F00A         	call	_DireccionaLCD
  1124                           
  1125                           ;Laboratorio4.c: 115: EscribeLCD_c(r+'0');
  1126   000C9E  503B               	movf	_r^0,w,c
  1127   000CA0  0F30               	addlw	48
  1128   000CA2  EC14  F00A         	call	_EscribeLCD_c
  1129                           
  1130                           ;Laboratorio4.c: 116: }else{
  1131   000CA6  D02E               	goto	l2069
  1132   000CA8                     l2057:
  1133                           
  1134                           ;Laboratorio4.c: 117: if(r==1000){
  1135   000CA8  0EE8               	movlw	232
  1136   000CAA  183B               	xorwf	_r^0,w,c
  1137   000CAC  E110               	bnz	l2061
  1138   000CAE  0E03               	movlw	3
  1139   000CB0  183C               	xorwf	(_r+1)^0,w,c
  1140   000CB2  103D               	iorwf	(_r+2)^0,w,c
  1141   000CB4  103E               	iorwf	(_r+3)^0,w,c
  1142   000CB6  A4D8               	btfss	status,2,c
  1143   000CB8  D00A               	goto	l2061
  1144                           
  1145                           ;Laboratorio4.c: 118: EscribeLCD_c('I');
  1146   000CBA  0E49               	movlw	73
  1147   000CBC  EC14  F00A         	call	_EscribeLCD_c
  1148                           
  1149                           ;Laboratorio4.c: 119: EscribeLCD_c('N');
  1150   000CC0  0E4E               	movlw	78
  1151   000CC2  EC14  F00A         	call	_EscribeLCD_c
  1152                           
  1153                           ;Laboratorio4.c: 120: EscribeLCD_c('F');
  1154   000CC6  0E46               	movlw	70
  1155   000CC8  EC14  F00A         	call	_EscribeLCD_c
  1156                           
  1157                           ;Laboratorio4.c: 121: }else{
  1158   000CCC  D01B               	goto	l2069
  1159   000CCE                     l2061:
  1160                           
  1161                           ;Laboratorio4.c: 122: if(r==1001){
  1162   000CCE  0EE9               	movlw	233
  1163   000CD0  183B               	xorwf	_r^0,w,c
  1164   000CD2  E110               	bnz	l2065
  1165   000CD4  0E03               	movlw	3
  1166   000CD6  183C               	xorwf	(_r+1)^0,w,c
  1167   000CD8  103D               	iorwf	(_r+2)^0,w,c
  1168   000CDA  103E               	iorwf	(_r+3)^0,w,c
  1169   000CDC  A4D8               	btfss	status,2,c
  1170   000CDE  D00A               	goto	l2065
  1171                           
  1172                           ;Laboratorio4.c: 123: EscribeLCD_c('I');
  1173   000CE0  0E49               	movlw	73
  1174   000CE2  EC14  F00A         	call	_EscribeLCD_c
  1175                           
  1176                           ;Laboratorio4.c: 124: EscribeLCD_c('N');
  1177   000CE6  0E4E               	movlw	78
  1178   000CE8  EC14  F00A         	call	_EscribeLCD_c
  1179                           
  1180                           ;Laboratorio4.c: 125: EscribeLCD_c('D');
  1181   000CEC  0E44               	movlw	68
  1182   000CEE  EC14  F00A         	call	_EscribeLCD_c
  1183                           
  1184                           ;Laboratorio4.c: 126: }else{
  1185   000CF2  D008               	goto	l2069
  1186   000CF4                     l2065:
  1187                           
  1188                           ;Laboratorio4.c: 127: EscribeLCD_c(r+'0');
  1189   000CF4  503B               	movf	_r^0,w,c
  1190   000CF6  0F30               	addlw	48
  1191   000CF8  EC14  F00A         	call	_EscribeLCD_c
  1192   000CFC  D003               	goto	l2069
  1193   000CFE                     l2067:
  1194                           
  1195                           ;Laboratorio4.c: 133: EscribeLCD_c('W');
  1196   000CFE  0E57               	movlw	87
  1197   000D00  EC14  F00A         	call	_EscribeLCD_c
  1198   000D04                     l2069:
  1199                           
  1200                           ;Laboratorio4.c: 134: };Laboratorio4.c: 135: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1201   000D04  0EE4               	movlw	228
  1202   000D06  6E39               	movwf	??_main^0,c
  1203   000D08  0E44               	movlw	68
  1204   000D0A                     u2107:
  1205   000D0A  2EE8               	decfsz	wreg,f,c
  1206   000D0C  D7FE               	bra	u2107
  1207   000D0E  2E39               	decfsz	??_main^0,f,c
  1208   000D10  D7FC               	bra	u2107
  1209   000D12  D000               	nop2	
  1210   000D14  D5A2               	goto	l1897
  1211   000D16                     __end_of_main:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function ___wmul *****************
  1215 ;; Defined at:
  1216 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  multiplier      2    0[COMRAM] unsigned int 
  1219 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  product         2    4[COMRAM] unsigned int 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    0[COMRAM] unsigned int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, prodl, prodh
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1231 ;;      Params:         4       0       0       0       0       0       0       0       0
  1232 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1234 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1235 ;;Total ram usage:        6 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text1
  1245   0013DE                     __ptext1:
  1246                           	callstack 0
  1247   0013DE                     ___wmul:
  1248                           	callstack 30
  1249                           
  1250                           ;incstack = 0
  1251   0013DE  5001               	movf	___wmul@multiplier^0,w,c
  1252   0013E0  0203               	mulwf	___wmul@multiplicand^0,c
  1253   0013E2  CFF3 F005          	movff	prodl,___wmul@product
  1254   0013E6  CFF4 F006          	movff	prodh,___wmul@product+1
  1255   0013EA  5001               	movf	___wmul@multiplier^0,w,c
  1256   0013EC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1257   0013EE  50F3               	movf	243,w,c
  1258   0013F0  2606               	addwf	(___wmul@product+1)^0,f,c
  1259   0013F2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1260   0013F4  0203               	mulwf	___wmul@multiplicand^0,c
  1261   0013F6  50F3               	movf	243,w,c
  1262   0013F8  2606               	addwf	(___wmul@product+1)^0,f,c
  1263   0013FA  C005  F001         	movff	___wmul@product,?___wmul
  1264   0013FE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1265   001402  0012               	return		;funcret
  1266   001404                     __end_of___wmul:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function ___lwtoft *****************
  1270 ;; Defined at:
  1271 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwtoft.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  c               2    8[COMRAM] unsigned int 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  3    8[COMRAM] float 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1285 ;;      Params:         3       0       0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1288 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        3 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		___ftpack
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text2
  1300   001404                     __ptext2:
  1301                           	callstack 0
  1302   001404                     ___lwtoft:
  1303                           	callstack 29
  1304                           
  1305                           ;incstack = 0
  1306   001404  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1307   001408  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1308   00140C  6A03               	clrf	(___ftpack@arg+2)^0,c
  1309   00140E  0E8E               	movlw	142
  1310   001410  6E04               	movwf	___ftpack@exp^0,c
  1311   001412  0E00               	movlw	0
  1312   001414  6E05               	movwf	___ftpack@sign^0,c
  1313   001416  EC42  F008         	call	___ftpack	;wreg free
  1314   00141A  C001  F009         	movff	?___ftpack,?___lwtoft
  1315   00141E  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1316   001422  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1317   001426  0012               	return		;funcret
  1318   001428                     __end_of___lwtoft:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function ___lwdiv *****************
  1322 ;; Defined at:
  1323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  dividend        2    0[COMRAM] unsigned int 
  1326 ;;  divisor         2    2[COMRAM] unsigned int 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  quotient        2    4[COMRAM] unsigned int 
  1329 ;;  counter         1    6[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  2    0[COMRAM] unsigned int 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         4       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        7 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353   001286                     __ptext3:
  1354                           	callstack 0
  1355   001286                     ___lwdiv:
  1356                           	callstack 30
  1357                           
  1358                           ;incstack = 0
  1359   001286  0E00               	movlw	0
  1360   001288  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1361   00128A  0E00               	movlw	0
  1362   00128C  6E05               	movwf	___lwdiv@quotient^0,c
  1363   00128E  5003               	movf	___lwdiv@divisor^0,w,c
  1364   001290  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1365   001292  B4D8               	btfsc	status,2,c
  1366   001294  D01C               	goto	l681
  1367   001296  0E01               	movlw	1
  1368   001298  6E07               	movwf	___lwdiv@counter^0,c
  1369   00129A  D004               	goto	l1865
  1370   00129C                     l1863:
  1371   00129C  90D8               	bcf	status,0,c
  1372   00129E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1373   0012A0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1374   0012A2  2A07               	incf	___lwdiv@counter^0,f,c
  1375   0012A4                     l1865:
  1376   0012A4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1377   0012A6  D7FA               	goto	l1863
  1378   0012A8                     u1630:
  1379   0012A8  90D8               	bcf	status,0,c
  1380   0012AA  3605               	rlcf	___lwdiv@quotient^0,f,c
  1381   0012AC  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1382   0012AE  5003               	movf	___lwdiv@divisor^0,w,c
  1383   0012B0  5C01               	subwf	___lwdiv@dividend^0,w,c
  1384   0012B2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1385   0012B4  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1386   0012B6  A0D8               	btfss	status,0,c
  1387   0012B8  D005               	goto	l1875
  1388   0012BA  5003               	movf	___lwdiv@divisor^0,w,c
  1389   0012BC  5E01               	subwf	___lwdiv@dividend^0,f,c
  1390   0012BE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1391   0012C0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1392   0012C2  8005               	bsf	___lwdiv@quotient^0,0,c
  1393   0012C4                     l1875:
  1394   0012C4  90D8               	bcf	status,0,c
  1395   0012C6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1396   0012C8  3203               	rrcf	___lwdiv@divisor^0,f,c
  1397   0012CA  2E07               	decfsz	___lwdiv@counter^0,f,c
  1398   0012CC  D7ED               	goto	u1630
  1399   0012CE                     l681:
  1400   0012CE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1401   0012D2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1402   0012D6  0012               	return		;funcret
  1403   0012D8                     __end_of___lwdiv:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function ___lltoft *****************
  1407 ;; Defined at:
  1408 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lltoft.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  c               4    8[COMRAM] unsigned long 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  exp             1   16[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  3    8[COMRAM] float 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         4       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        9 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 1
  1429 ;; This function calls:
  1430 ;;		___ftpack
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text4
  1437   0011D4                     __ptext4:
  1438                           	callstack 0
  1439   0011D4                     ___lltoft:
  1440                           	callstack 29
  1441                           
  1442                           ;incstack = 0
  1443   0011D4  0E8E               	movlw	142
  1444   0011D6  6E11               	movwf	___lltoft@exp^0,c
  1445   0011D8  D006               	goto	l1851
  1446   0011DA                     l1849:
  1447   0011DA  90D8               	bcf	status,0,c
  1448   0011DC  320C               	rrcf	(___lltoft@c+3)^0,f,c
  1449   0011DE  320B               	rrcf	(___lltoft@c+2)^0,f,c
  1450   0011E0  320A               	rrcf	(___lltoft@c+1)^0,f,c
  1451   0011E2  3209               	rrcf	___lltoft@c^0,f,c
  1452   0011E4  2A11               	incf	___lltoft@exp^0,f,c
  1453   0011E6                     l1851:
  1454   0011E6  0E00               	movlw	0
  1455   0011E8  1409               	andwf	___lltoft@c^0,w,c
  1456   0011EA  6E0D               	movwf	??___lltoft^0,c
  1457   0011EC  0E00               	movlw	0
  1458   0011EE  140A               	andwf	(___lltoft@c+1)^0,w,c
  1459   0011F0  6E0E               	movwf	(??___lltoft+1)^0,c
  1460   0011F2  0E00               	movlw	0
  1461   0011F4  140B               	andwf	(___lltoft@c+2)^0,w,c
  1462   0011F6  6E0F               	movwf	(??___lltoft+2)^0,c
  1463   0011F8  0EFF               	movlw	255
  1464   0011FA  140C               	andwf	(___lltoft@c+3)^0,w,c
  1465   0011FC  6E10               	movwf	(??___lltoft+3)^0,c
  1466   0011FE  500D               	movf	??___lltoft^0,w,c
  1467   001200  100E               	iorwf	(??___lltoft+1)^0,w,c
  1468   001202  100F               	iorwf	(??___lltoft+2)^0,w,c
  1469   001204  1010               	iorwf	(??___lltoft+3)^0,w,c
  1470   001206  A4D8               	btfss	status,2,c
  1471   001208  D7E8               	goto	l1849
  1472   00120A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1473   00120E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1474   001212  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1475   001216  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1476   00121A  0E00               	movlw	0
  1477   00121C  6E05               	movwf	___ftpack@sign^0,c
  1478   00121E  EC42  F008         	call	___ftpack	;wreg free
  1479   001222  C001  F009         	movff	?___ftpack,?___lltoft
  1480   001226  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1481   00122A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1482   00122E  0012               	return		;funcret
  1483   001230                     __end_of___lltoft:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function ___fttol *****************
  1487 ;; Defined at:
  1488 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  f1              3   41[COMRAM] float 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  lval            4   51[COMRAM] unsigned long 
  1493 ;;  exp1            1   55[COMRAM] unsigned char 
  1494 ;;  sign1           1   50[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  4   41[COMRAM] long 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1504 ;;      Params:         4       0       0       0       0       0       0       0       0
  1505 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1506 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1507 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1508 ;;Total ram usage:       15 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text5
  1518   000FB2                     __ptext5:
  1519                           	callstack 0
  1520   000FB2                     ___fttol:
  1521                           	callstack 30
  1522                           
  1523                           ;incstack = 0
  1524   000FB2  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  1525   000FB6  6A2F               	clrf	(??___fttol+1)^0,c
  1526   000FB8  6A30               	clrf	(??___fttol+2)^0,c
  1527   000FBA  342B               	rlcf	(___fttol@f1+1)^0,w,c
  1528   000FBC  362E               	rlcf	??___fttol^0,f,c
  1529   000FBE  E301               	bnc	u1531
  1530   000FC0  802F               	bsf	(??___fttol+1)^0,0,c
  1531   000FC2                     u1531:
  1532   000FC2  502E               	movf	??___fttol^0,w,c
  1533   000FC4  6E38               	movwf	___fttol@exp1^0,c
  1534   000FC6  5038               	movf	___fttol@exp1^0,w,c
  1535   000FC8  A4D8               	btfss	status,2,c
  1536   000FCA  D009               	goto	l1807
  1537   000FCC                     u1540:
  1538   000FCC  0E00               	movlw	0
  1539   000FCE  6E2A               	movwf	?___fttol^0,c
  1540   000FD0  0E00               	movlw	0
  1541   000FD2  6E2B               	movwf	(?___fttol+1)^0,c
  1542   000FD4  0E00               	movlw	0
  1543   000FD6  6E2C               	movwf	(?___fttol+2)^0,c
  1544   000FD8  0E00               	movlw	0
  1545   000FDA  6E2D               	movwf	(?___fttol+3)^0,c
  1546   000FDC  0012               	return	
  1547   000FDE                     l1807:
  1548   000FDE  0E17               	movlw	23
  1549   000FE0  6E2E               	movwf	??___fttol^0,c
  1550   000FE2  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  1551   000FE6  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  1552   000FEA  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  1553   000FEE  282E               	incf	??___fttol^0,w,c
  1554   000FF0  6E32               	movwf	(??___fttol+4)^0,c
  1555   000FF2  D004               	goto	u1550
  1556   000FF4                     u1555:
  1557   000FF4  90D8               	bcf	status,0,c
  1558   000FF6  3231               	rrcf	(??___fttol+3)^0,f,c
  1559   000FF8  3230               	rrcf	(??___fttol+2)^0,f,c
  1560   000FFA  322F               	rrcf	(??___fttol+1)^0,f,c
  1561   000FFC                     u1550:
  1562   000FFC  2E32               	decfsz	(??___fttol+4)^0,f,c
  1563   000FFE  D7FA               	goto	u1555
  1564   001000  502F               	movf	(??___fttol+1)^0,w,c
  1565   001002  6E33               	movwf	___fttol@sign1^0,c
  1566   001004  8E2B               	bsf	(___fttol@f1+1)^0,7,c
  1567   001006  0EFF               	movlw	255
  1568   001008  162A               	andwf	___fttol@f1^0,f,c
  1569   00100A  0EFF               	movlw	255
  1570   00100C  162B               	andwf	(___fttol@f1+1)^0,f,c
  1571   00100E  0E00               	movlw	0
  1572   001010  162C               	andwf	(___fttol@f1+2)^0,f,c
  1573   001012  502A               	movf	___fttol@f1^0,w,c
  1574   001014  6E34               	movwf	___fttol@lval^0,c
  1575   001016  502B               	movf	(___fttol@f1+1)^0,w,c
  1576   001018  6E35               	movwf	(___fttol@lval+1)^0,c
  1577   00101A  502C               	movf	(___fttol@f1+2)^0,w,c
  1578   00101C  6E36               	movwf	(___fttol@lval+2)^0,c
  1579   00101E  6A37               	clrf	(___fttol@lval+3)^0,c
  1580   001020  0E8E               	movlw	142
  1581   001022  5E38               	subwf	___fttol@exp1^0,f,c
  1582   001024  AE38               	btfss	___fttol@exp1^0,7,c
  1583   001026  D00D               	goto	l1829
  1584   001028  5038               	movf	___fttol@exp1^0,w,c
  1585   00102A  0A80               	xorlw	128
  1586   00102C  0F8F               	addlw	143
  1587   00102E  A0D8               	btfss	status,0,c
  1588   001030  D7CD               	goto	u1540
  1589   001032                     l1825:
  1590   001032  90D8               	bcf	status,0,c
  1591   001034  3237               	rrcf	(___fttol@lval+3)^0,f,c
  1592   001036  3236               	rrcf	(___fttol@lval+2)^0,f,c
  1593   001038  3235               	rrcf	(___fttol@lval+1)^0,f,c
  1594   00103A  3234               	rrcf	___fttol@lval^0,f,c
  1595   00103C  3E38               	incfsz	___fttol@exp1^0,f,c
  1596   00103E  D7F9               	goto	l1825
  1597   001040  D00D               	goto	u1590
  1598   001042                     l1829:
  1599   001042  0E17               	movlw	23
  1600   001044  6438               	cpfsgt	___fttol@exp1^0,c
  1601   001046  D007               	goto	l1837
  1602   001048  D7C1               	goto	u1540
  1603   00104A                     l1835:
  1604   00104A  90D8               	bcf	status,0,c
  1605   00104C  3634               	rlcf	___fttol@lval^0,f,c
  1606   00104E  3635               	rlcf	(___fttol@lval+1)^0,f,c
  1607   001050  3636               	rlcf	(___fttol@lval+2)^0,f,c
  1608   001052  3637               	rlcf	(___fttol@lval+3)^0,f,c
  1609   001054  0638               	decf	___fttol@exp1^0,f,c
  1610   001056                     l1837:
  1611   001056  5038               	movf	___fttol@exp1^0,w,c
  1612   001058  A4D8               	btfss	status,2,c
  1613   00105A  D7F7               	goto	l1835
  1614   00105C                     u1590:
  1615   00105C  5033               	movf	___fttol@sign1^0,w,c
  1616   00105E  B4D8               	btfsc	status,2,c
  1617   001060  D008               	goto	l1843
  1618   001062  1E37               	comf	(___fttol@lval+3)^0,f,c
  1619   001064  1E36               	comf	(___fttol@lval+2)^0,f,c
  1620   001066  1E35               	comf	(___fttol@lval+1)^0,f,c
  1621   001068  6C34               	negf	___fttol@lval^0,c
  1622   00106A  0E00               	movlw	0
  1623   00106C  2235               	addwfc	(___fttol@lval+1)^0,f,c
  1624   00106E  2236               	addwfc	(___fttol@lval+2)^0,f,c
  1625   001070  2237               	addwfc	(___fttol@lval+3)^0,f,c
  1626   001072                     l1843:
  1627   001072  C034  F02A         	movff	___fttol@lval,?___fttol
  1628   001076  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1629   00107A  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1630   00107E  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1631   001082  0012               	return		;funcret
  1632   001084                     __end_of___fttol:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function ___ftsub *****************
  1636 ;; Defined at:
  1637 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftsub.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  f1              3   20[COMRAM] float 
  1640 ;;  f2              3   23[COMRAM] float 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  3   20[COMRAM] float 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         6       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        6 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 2
  1659 ;; This function calls:
  1660 ;;		___ftadd
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text6
  1667   001368                     __ptext6:
  1668                           	callstack 0
  1669   001368                     ___ftsub:
  1670                           	callstack 28
  1671                           
  1672                           ;incstack = 0
  1673   001368  5018               	movf	___ftsub@f2^0,w,c
  1674   00136A  1019               	iorwf	(___ftsub@f2+1)^0,w,c
  1675   00136C  101A               	iorwf	(___ftsub@f2+2)^0,w,c
  1676   00136E  B4D8               	btfsc	status,2,c
  1677   001370  D006               	goto	l1797
  1678   001372  0E00               	movlw	0
  1679   001374  1A18               	xorwf	___ftsub@f2^0,f,c
  1680   001376  0E00               	movlw	0
  1681   001378  1A19               	xorwf	(___ftsub@f2+1)^0,f,c
  1682   00137A  0E80               	movlw	128
  1683   00137C  1A1A               	xorwf	(___ftsub@f2+2)^0,f,c
  1684   00137E                     l1797:
  1685   00137E  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  1686   001382  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  1687   001386  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  1688   00138A  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  1689   00138E  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  1690   001392  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  1691   001396  EC8B  F006         	call	___ftadd	;wreg free
  1692   00139A  C009  F015         	movff	?___ftadd,?___ftsub
  1693   00139E  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  1694   0013A2  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  1695   0013A6  0012               	return		;funcret
  1696   0013A8                     __end_of___ftsub:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function ___ftadd *****************
  1700 ;; Defined at:
  1701 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftadd.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  f1              3    8[COMRAM] float 
  1704 ;;  f2              3   11[COMRAM] float 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  exp1            1   19[COMRAM] unsigned char 
  1707 ;;  exp2            1   18[COMRAM] unsigned char 
  1708 ;;  sign            1   17[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  3    8[COMRAM] float 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         6       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1721 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:       12 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 1
  1725 ;; This function calls:
  1726 ;;		___ftpack
  1727 ;; This function is called by:
  1728 ;;		___ftsub
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733   000D16                     __ptext7:
  1734                           	callstack 0
  1735   000D16                     ___ftadd:
  1736                           	callstack 28
  1737                           
  1738                           ;incstack = 0
  1739   000D16  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  1740   000D1A  6A10               	clrf	(??___ftadd+1)^0,c
  1741   000D1C  6A11               	clrf	(??___ftadd+2)^0,c
  1742   000D1E  340A               	rlcf	(___ftadd@f1+1)^0,w,c
  1743   000D20  360F               	rlcf	??___ftadd^0,f,c
  1744   000D22  E301               	bnc	u1231
  1745   000D24  8010               	bsf	(??___ftadd+1)^0,0,c
  1746   000D26                     u1231:
  1747   000D26  500F               	movf	??___ftadd^0,w,c
  1748   000D28  6E14               	movwf	___ftadd@exp1^0,c
  1749   000D2A  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  1750   000D2E  6A10               	clrf	(??___ftadd+1)^0,c
  1751   000D30  6A11               	clrf	(??___ftadd+2)^0,c
  1752   000D32  340D               	rlcf	(___ftadd@f2+1)^0,w,c
  1753   000D34  360F               	rlcf	??___ftadd^0,f,c
  1754   000D36  E301               	bnc	u1241
  1755   000D38  8010               	bsf	(??___ftadd+1)^0,0,c
  1756   000D3A                     u1241:
  1757   000D3A  500F               	movf	??___ftadd^0,w,c
  1758   000D3C  6E13               	movwf	___ftadd@exp2^0,c
  1759   000D3E  5014               	movf	___ftadd@exp1^0,w,c
  1760   000D40  B4D8               	btfsc	status,2,c
  1761   000D42  D00A               	goto	u1270
  1762   000D44  5013               	movf	___ftadd@exp2^0,w,c
  1763   000D46  5C14               	subwf	___ftadd@exp1^0,w,c
  1764   000D48  B0D8               	btfsc	status,0,c
  1765   000D4A  D00D               	goto	l1663
  1766   000D4C  5014               	movf	___ftadd@exp1^0,w,c
  1767   000D4E  5C13               	subwf	___ftadd@exp2^0,w,c
  1768   000D50  6E0F               	movwf	??___ftadd^0,c
  1769   000D52  0E18               	movlw	24
  1770   000D54  640F               	cpfsgt	??___ftadd^0,c
  1771   000D56  D007               	goto	l1663
  1772   000D58                     u1270:
  1773   000D58  C00C  F009         	movff	___ftadd@f2,?___ftadd
  1774   000D5C  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  1775   000D60  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  1776   000D64  0012               	return	
  1777   000D66                     l1663:
  1778   000D66  5013               	movf	___ftadd@exp2^0,w,c
  1779   000D68  B4D8               	btfsc	status,2,c
  1780   000D6A  D00A               	goto	u1300
  1781   000D6C  5014               	movf	___ftadd@exp1^0,w,c
  1782   000D6E  5C13               	subwf	___ftadd@exp2^0,w,c
  1783   000D70  B0D8               	btfsc	status,0,c
  1784   000D72  D00D               	goto	l1669
  1785   000D74  5013               	movf	___ftadd@exp2^0,w,c
  1786   000D76  5C14               	subwf	___ftadd@exp1^0,w,c
  1787   000D78  6E0F               	movwf	??___ftadd^0,c
  1788   000D7A  0E18               	movlw	24
  1789   000D7C  640F               	cpfsgt	??___ftadd^0,c
  1790   000D7E  D007               	goto	l1669
  1791   000D80                     u1300:
  1792   000D80  C009  F009         	movff	___ftadd@f1,?___ftadd
  1793   000D84  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  1794   000D88  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  1795   000D8C  0012               	return	
  1796   000D8E                     l1669:
  1797   000D8E  0E06               	movlw	6
  1798   000D90  6E12               	movwf	___ftadd@sign^0,c
  1799   000D92  BE0B               	btfsc	(___ftadd@f1+2)^0,7,c
  1800   000D94  8E12               	bsf	___ftadd@sign^0,7,c
  1801   000D96  BE0E               	btfsc	(___ftadd@f2+2)^0,7,c
  1802   000D98  8C12               	bsf	___ftadd@sign^0,6,c
  1803   000D9A  8E0A               	bsf	(___ftadd@f1+1)^0,7,c
  1804   000D9C  0EFF               	movlw	255
  1805   000D9E  1609               	andwf	___ftadd@f1^0,f,c
  1806   000DA0  0EFF               	movlw	255
  1807   000DA2  160A               	andwf	(___ftadd@f1+1)^0,f,c
  1808   000DA4  0E00               	movlw	0
  1809   000DA6  160B               	andwf	(___ftadd@f1+2)^0,f,c
  1810   000DA8  8E0D               	bsf	(___ftadd@f2+1)^0,7,c
  1811   000DAA  0EFF               	movlw	255
  1812   000DAC  160C               	andwf	___ftadd@f2^0,f,c
  1813   000DAE  0EFF               	movlw	255
  1814   000DB0  160D               	andwf	(___ftadd@f2+1)^0,f,c
  1815   000DB2  0E00               	movlw	0
  1816   000DB4  160E               	andwf	(___ftadd@f2+2)^0,f,c
  1817   000DB6  5013               	movf	___ftadd@exp2^0,w,c
  1818   000DB8  5C14               	subwf	___ftadd@exp1^0,w,c
  1819   000DBA  B0D8               	btfsc	status,0,c
  1820   000DBC  D01B               	goto	l1695
  1821   000DBE                     u1330:
  1822   000DBE  90D8               	bcf	status,0,c
  1823   000DC0  360C               	rlcf	___ftadd@f2^0,f,c
  1824   000DC2  360D               	rlcf	(___ftadd@f2+1)^0,f,c
  1825   000DC4  360E               	rlcf	(___ftadd@f2+2)^0,f,c
  1826   000DC6  0613               	decf	___ftadd@exp2^0,f,c
  1827   000DC8  5014               	movf	___ftadd@exp1^0,w,c
  1828   000DCA  1813               	xorwf	___ftadd@exp2^0,w,c
  1829   000DCC  B4D8               	btfsc	status,2,c
  1830   000DCE  D00D               	goto	l1693
  1831   000DD0  0612               	decf	___ftadd@sign^0,f,c
  1832   000DD2  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1833   000DD6  0E07               	movlw	7
  1834   000DD8  160F               	andwf	??___ftadd^0,f,c
  1835   000DDA  B4D8               	btfsc	status,2,c
  1836   000DDC  D006               	goto	l1693
  1837   000DDE  D7EF               	goto	u1330
  1838   000DE0                     l1691:
  1839   000DE0  90D8               	bcf	status,0,c
  1840   000DE2  320B               	rrcf	(___ftadd@f1+2)^0,f,c
  1841   000DE4  320A               	rrcf	(___ftadd@f1+1)^0,f,c
  1842   000DE6  3209               	rrcf	___ftadd@f1^0,f,c
  1843   000DE8  2A14               	incf	___ftadd@exp1^0,f,c
  1844   000DEA                     l1693:
  1845   000DEA  5013               	movf	___ftadd@exp2^0,w,c
  1846   000DEC  1814               	xorwf	___ftadd@exp1^0,w,c
  1847   000DEE  B4D8               	btfsc	status,2,c
  1848   000DF0  D01F               	goto	u1400
  1849   000DF2  D7F6               	goto	l1691
  1850   000DF4                     l1695:
  1851   000DF4  5014               	movf	___ftadd@exp1^0,w,c
  1852   000DF6  5C13               	subwf	___ftadd@exp2^0,w,c
  1853   000DF8  B0D8               	btfsc	status,0,c
  1854   000DFA  D01A               	goto	u1400
  1855   000DFC                     u1370:
  1856   000DFC  90D8               	bcf	status,0,c
  1857   000DFE  3609               	rlcf	___ftadd@f1^0,f,c
  1858   000E00  360A               	rlcf	(___ftadd@f1+1)^0,f,c
  1859   000E02  360B               	rlcf	(___ftadd@f1+2)^0,f,c
  1860   000E04  0614               	decf	___ftadd@exp1^0,f,c
  1861   000E06  5014               	movf	___ftadd@exp1^0,w,c
  1862   000E08  1813               	xorwf	___ftadd@exp2^0,w,c
  1863   000E0A  B4D8               	btfsc	status,2,c
  1864   000E0C  D00D               	goto	l1705
  1865   000E0E  0612               	decf	___ftadd@sign^0,f,c
  1866   000E10  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1867   000E14  0E07               	movlw	7
  1868   000E16  160F               	andwf	??___ftadd^0,f,c
  1869   000E18  B4D8               	btfsc	status,2,c
  1870   000E1A  D006               	goto	l1705
  1871   000E1C  D7EF               	goto	u1370
  1872   000E1E                     l1703:
  1873   000E1E  90D8               	bcf	status,0,c
  1874   000E20  320E               	rrcf	(___ftadd@f2+2)^0,f,c
  1875   000E22  320D               	rrcf	(___ftadd@f2+1)^0,f,c
  1876   000E24  320C               	rrcf	___ftadd@f2^0,f,c
  1877   000E26  2A13               	incf	___ftadd@exp2^0,f,c
  1878   000E28                     l1705:
  1879   000E28  5013               	movf	___ftadd@exp2^0,w,c
  1880   000E2A  1814               	xorwf	___ftadd@exp1^0,w,c
  1881   000E2C  A4D8               	btfss	status,2,c
  1882   000E2E  D7F7               	goto	l1703
  1883   000E30                     u1400:
  1884   000E30  AE12               	btfss	___ftadd@sign^0,7,c
  1885   000E32  D00C               	goto	l532
  1886   000E34  0EFF               	movlw	255
  1887   000E36  1A09               	xorwf	___ftadd@f1^0,f,c
  1888   000E38  0EFF               	movlw	255
  1889   000E3A  1A0A               	xorwf	(___ftadd@f1+1)^0,f,c
  1890   000E3C  0EFF               	movlw	255
  1891   000E3E  1A0B               	xorwf	(___ftadd@f1+2)^0,f,c
  1892   000E40  0E01               	movlw	1
  1893   000E42  2609               	addwf	___ftadd@f1^0,f,c
  1894   000E44  0E00               	movlw	0
  1895   000E46  220A               	addwfc	(___ftadd@f1+1)^0,f,c
  1896   000E48  0E00               	movlw	0
  1897   000E4A  220B               	addwfc	(___ftadd@f1+2)^0,f,c
  1898   000E4C                     l532:
  1899   000E4C  AC12               	btfss	___ftadd@sign^0,6,c
  1900   000E4E  D00C               	goto	l1711
  1901   000E50  0EFF               	movlw	255
  1902   000E52  1A0C               	xorwf	___ftadd@f2^0,f,c
  1903   000E54  0EFF               	movlw	255
  1904   000E56  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1905   000E58  0EFF               	movlw	255
  1906   000E5A  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1907   000E5C  0E01               	movlw	1
  1908   000E5E  260C               	addwf	___ftadd@f2^0,f,c
  1909   000E60  0E00               	movlw	0
  1910   000E62  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1911   000E64  0E00               	movlw	0
  1912   000E66  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1913   000E68                     l1711:
  1914   000E68  0E00               	movlw	0
  1915   000E6A  6E12               	movwf	___ftadd@sign^0,c
  1916   000E6C  5009               	movf	___ftadd@f1^0,w,c
  1917   000E6E  260C               	addwf	___ftadd@f2^0,f,c
  1918   000E70  500A               	movf	(___ftadd@f1+1)^0,w,c
  1919   000E72  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1920   000E74  500B               	movf	(___ftadd@f1+2)^0,w,c
  1921   000E76  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1922   000E78  AE0E               	btfss	(___ftadd@f2+2)^0,7,c
  1923   000E7A  D00E               	goto	l1721
  1924   000E7C  0EFF               	movlw	255
  1925   000E7E  1A0C               	xorwf	___ftadd@f2^0,f,c
  1926   000E80  0EFF               	movlw	255
  1927   000E82  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1928   000E84  0EFF               	movlw	255
  1929   000E86  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1930   000E88  0E01               	movlw	1
  1931   000E8A  260C               	addwf	___ftadd@f2^0,f,c
  1932   000E8C  0E00               	movlw	0
  1933   000E8E  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1934   000E90  0E00               	movlw	0
  1935   000E92  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1936   000E94  0E01               	movlw	1
  1937   000E96  6E12               	movwf	___ftadd@sign^0,c
  1938   000E98                     l1721:
  1939   000E98  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  1940   000E9C  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1941   000EA0  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1942   000EA4  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  1943   000EA8  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  1944   000EAC  EC42  F008         	call	___ftpack	;wreg free
  1945   000EB0  C001  F009         	movff	?___ftpack,?___ftadd
  1946   000EB4  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  1947   000EB8  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  1948   000EBC  0012               	return		;funcret
  1949   000EBE                     __end_of___ftadd:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function ___ftmul *****************
  1953 ;; Defined at:
  1954 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftmul.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  f1              3   26[COMRAM] float 
  1957 ;;  f2              3   29[COMRAM] float 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1960 ;;  sign            1   40[COMRAM] unsigned char 
  1961 ;;  cntr            1   39[COMRAM] unsigned char 
  1962 ;;  exp             1   35[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  3   26[COMRAM] float 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1972 ;;      Params:         6       0       0       0       0       0       0       0       0
  1973 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1974 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1975 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1976 ;;Total ram usage:       15 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 1
  1979 ;; This function calls:
  1980 ;;		___ftpack
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text8
  1987   000EBE                     __ptext8:
  1988                           	callstack 0
  1989   000EBE                     ___ftmul:
  1990                           	callstack 29
  1991                           
  1992                           ;incstack = 0
  1993   000EBE  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1994   000EC2  6A22               	clrf	(??___ftmul+1)^0,c
  1995   000EC4  6A23               	clrf	(??___ftmul+2)^0,c
  1996   000EC6  341C               	rlcf	(___ftmul@f1+1)^0,w,c
  1997   000EC8  3621               	rlcf	??___ftmul^0,f,c
  1998   000ECA  E301               	bnc	u1461
  1999   000ECC  8022               	bsf	(??___ftmul+1)^0,0,c
  2000   000ECE                     u1461:
  2001   000ECE  5021               	movf	??___ftmul^0,w,c
  2002   000ED0  6E24               	movwf	___ftmul@exp^0,c
  2003   000ED2  5024               	movf	___ftmul@exp^0,w,c
  2004   000ED4  A4D8               	btfss	status,2,c
  2005   000ED6  D007               	goto	l1751
  2006   000ED8  0E00               	movlw	0
  2007   000EDA  6E1B               	movwf	?___ftmul^0,c
  2008   000EDC  0E00               	movlw	0
  2009   000EDE  6E1C               	movwf	(?___ftmul+1)^0,c
  2010   000EE0  0E00               	movlw	0
  2011   000EE2  6E1D               	movwf	(?___ftmul+2)^0,c
  2012   000EE4  0012               	return	
  2013   000EE6                     l1751:
  2014   000EE6  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  2015   000EEA  6A22               	clrf	(??___ftmul+1)^0,c
  2016   000EEC  6A23               	clrf	(??___ftmul+2)^0,c
  2017   000EEE  341F               	rlcf	(___ftmul@f2+1)^0,w,c
  2018   000EF0  3621               	rlcf	??___ftmul^0,f,c
  2019   000EF2  E301               	bnc	u1481
  2020   000EF4  8022               	bsf	(??___ftmul+1)^0,0,c
  2021   000EF6                     u1481:
  2022   000EF6  5021               	movf	??___ftmul^0,w,c
  2023   000EF8  6E29               	movwf	___ftmul@sign^0,c
  2024   000EFA  5029               	movf	___ftmul@sign^0,w,c
  2025   000EFC  A4D8               	btfss	status,2,c
  2026   000EFE  D007               	goto	l1757
  2027   000F00  0E00               	movlw	0
  2028   000F02  6E1B               	movwf	?___ftmul^0,c
  2029   000F04  0E00               	movlw	0
  2030   000F06  6E1C               	movwf	(?___ftmul+1)^0,c
  2031   000F08  0E00               	movlw	0
  2032   000F0A  6E1D               	movwf	(?___ftmul+2)^0,c
  2033   000F0C  0012               	return	
  2034   000F0E                     l1757:
  2035   000F0E  5029               	movf	___ftmul@sign^0,w,c
  2036   000F10  0F7B               	addlw	123
  2037   000F12  2624               	addwf	___ftmul@exp^0,f,c
  2038   000F14  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  2039   000F18  5020               	movf	(___ftmul@f2+2)^0,w,c
  2040   000F1A  1A29               	xorwf	___ftmul@sign^0,f,c
  2041   000F1C  0E80               	movlw	128
  2042   000F1E  1629               	andwf	___ftmul@sign^0,f,c
  2043   000F20  8E1C               	bsf	(___ftmul@f1+1)^0,7,c
  2044   000F22  8E1F               	bsf	(___ftmul@f2+1)^0,7,c
  2045   000F24  0EFF               	movlw	255
  2046   000F26  161E               	andwf	___ftmul@f2^0,f,c
  2047   000F28  0EFF               	movlw	255
  2048   000F2A  161F               	andwf	(___ftmul@f2+1)^0,f,c
  2049   000F2C  0E00               	movlw	0
  2050   000F2E  1620               	andwf	(___ftmul@f2+2)^0,f,c
  2051   000F30  0E00               	movlw	0
  2052   000F32  6E25               	movwf	___ftmul@f3_as_product^0,c
  2053   000F34  0E00               	movlw	0
  2054   000F36  6E26               	movwf	(___ftmul@f3_as_product+1)^0,c
  2055   000F38  0E00               	movlw	0
  2056   000F3A  6E27               	movwf	(___ftmul@f3_as_product+2)^0,c
  2057   000F3C  0E07               	movlw	7
  2058   000F3E  6E28               	movwf	___ftmul@cntr^0,c
  2059   000F40                     l1771:
  2060   000F40  A01B               	btfss	___ftmul@f1^0,0,c
  2061   000F42  D006               	goto	l1775
  2062   000F44  501E               	movf	___ftmul@f2^0,w,c
  2063   000F46  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2064   000F48  501F               	movf	(___ftmul@f2+1)^0,w,c
  2065   000F4A  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2066   000F4C  5020               	movf	(___ftmul@f2+2)^0,w,c
  2067   000F4E  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2068   000F50                     l1775:
  2069   000F50  90D8               	bcf	status,0,c
  2070   000F52  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2071   000F54  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2072   000F56  321B               	rrcf	___ftmul@f1^0,f,c
  2073   000F58  90D8               	bcf	status,0,c
  2074   000F5A  361E               	rlcf	___ftmul@f2^0,f,c
  2075   000F5C  361F               	rlcf	(___ftmul@f2+1)^0,f,c
  2076   000F5E  3620               	rlcf	(___ftmul@f2+2)^0,f,c
  2077   000F60  2E28               	decfsz	___ftmul@cntr^0,f,c
  2078   000F62  D7EE               	goto	l1771
  2079   000F64  0E09               	movlw	9
  2080   000F66  6E28               	movwf	___ftmul@cntr^0,c
  2081   000F68                     l1781:
  2082   000F68  A01B               	btfss	___ftmul@f1^0,0,c
  2083   000F6A  D006               	goto	l1785
  2084   000F6C  501E               	movf	___ftmul@f2^0,w,c
  2085   000F6E  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2086   000F70  501F               	movf	(___ftmul@f2+1)^0,w,c
  2087   000F72  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2088   000F74  5020               	movf	(___ftmul@f2+2)^0,w,c
  2089   000F76  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2090   000F78                     l1785:
  2091   000F78  90D8               	bcf	status,0,c
  2092   000F7A  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2093   000F7C  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2094   000F7E  321B               	rrcf	___ftmul@f1^0,f,c
  2095   000F80  90D8               	bcf	status,0,c
  2096   000F82  3227               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  2097   000F84  3226               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  2098   000F86  3225               	rrcf	___ftmul@f3_as_product^0,f,c
  2099   000F88  2E28               	decfsz	___ftmul@cntr^0,f,c
  2100   000F8A  D7EE               	goto	l1781
  2101   000F8C  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2102   000F90  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2103   000F94  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2104   000F98  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  2105   000F9C  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  2106   000FA0  EC42  F008         	call	___ftpack	;wreg free
  2107   000FA4  C001  F01B         	movff	?___ftpack,?___ftmul
  2108   000FA8  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  2109   000FAC  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  2110   000FB0  0012               	return		;funcret
  2111   000FB2                     __end_of___ftmul:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function ___ftpack *****************
  2115 ;; Defined at:
  2116 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  arg             3    0[COMRAM] unsigned um
  2119 ;;  exp             1    3[COMRAM] unsigned char 
  2120 ;;  sign            1    4[COMRAM] unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  3    0[COMRAM] float 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2132 ;;      Params:         5       0       0       0       0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2134 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2135 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2136 ;;Total ram usage:        8 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		___ftadd
  2142 ;;		___ftmul
  2143 ;;		___lltoft
  2144 ;;		___lwtoft
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text9
  2149   001084                     __ptext9:
  2150                           	callstack 0
  2151   001084                     ___ftpack:
  2152                           	callstack 29
  2153                           
  2154                           ;incstack = 0
  2155   001084  5004               	movf	___ftpack@exp^0,w,c
  2156   001086  B4D8               	btfsc	status,2,c
  2157   001088  D005               	goto	u1160
  2158   00108A  5001               	movf	___ftpack@arg^0,w,c
  2159   00108C  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  2160   00108E  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  2161   001090  A4D8               	btfss	status,2,c
  2162   001092  D00C               	goto	l1629
  2163   001094                     u1160:
  2164   001094  0E00               	movlw	0
  2165   001096  6E01               	movwf	?___ftpack^0,c
  2166   001098  0E00               	movlw	0
  2167   00109A  6E02               	movwf	(?___ftpack+1)^0,c
  2168   00109C  0E00               	movlw	0
  2169   00109E  6E03               	movwf	(?___ftpack+2)^0,c
  2170   0010A0  0012               	return	
  2171   0010A2                     l1627:
  2172   0010A2  2A04               	incf	___ftpack@exp^0,f,c
  2173   0010A4  90D8               	bcf	status,0,c
  2174   0010A6  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2175   0010A8  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2176   0010AA  3201               	rrcf	___ftpack@arg^0,f,c
  2177   0010AC                     l1629:
  2178   0010AC  0E00               	movlw	0
  2179   0010AE  1401               	andwf	___ftpack@arg^0,w,c
  2180   0010B0  6E06               	movwf	??___ftpack^0,c
  2181   0010B2  0E00               	movlw	0
  2182   0010B4  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2183   0010B6  6E07               	movwf	(??___ftpack+1)^0,c
  2184   0010B8  0EFE               	movlw	254
  2185   0010BA  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2186   0010BC  6E08               	movwf	(??___ftpack+2)^0,c
  2187   0010BE  5006               	movf	??___ftpack^0,w,c
  2188   0010C0  1007               	iorwf	(??___ftpack+1)^0,w,c
  2189   0010C2  1008               	iorwf	(??___ftpack+2)^0,w,c
  2190   0010C4  B4D8               	btfsc	status,2,c
  2191   0010C6  D00C               	goto	l1635
  2192   0010C8  D7EC               	goto	l1627
  2193   0010CA                     l1631:
  2194   0010CA  2A04               	incf	___ftpack@exp^0,f,c
  2195   0010CC  0E01               	movlw	1
  2196   0010CE  2601               	addwf	___ftpack@arg^0,f,c
  2197   0010D0  0E00               	movlw	0
  2198   0010D2  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2199   0010D4  0E00               	movlw	0
  2200   0010D6  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2201   0010D8  90D8               	bcf	status,0,c
  2202   0010DA  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2203   0010DC  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2204   0010DE  3201               	rrcf	___ftpack@arg^0,f,c
  2205   0010E0                     l1635:
  2206   0010E0  0E00               	movlw	0
  2207   0010E2  1401               	andwf	___ftpack@arg^0,w,c
  2208   0010E4  6E06               	movwf	??___ftpack^0,c
  2209   0010E6  0E00               	movlw	0
  2210   0010E8  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2211   0010EA  6E07               	movwf	(??___ftpack+1)^0,c
  2212   0010EC  0EFF               	movlw	255
  2213   0010EE  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2214   0010F0  6E08               	movwf	(??___ftpack+2)^0,c
  2215   0010F2  5006               	movf	??___ftpack^0,w,c
  2216   0010F4  1007               	iorwf	(??___ftpack+1)^0,w,c
  2217   0010F6  1008               	iorwf	(??___ftpack+2)^0,w,c
  2218   0010F8  B4D8               	btfsc	status,2,c
  2219   0010FA  D006               	goto	l1639
  2220   0010FC  D7E6               	goto	l1631
  2221   0010FE                     l1637:
  2222   0010FE  0604               	decf	___ftpack@exp^0,f,c
  2223   001100  90D8               	bcf	status,0,c
  2224   001102  3601               	rlcf	___ftpack@arg^0,f,c
  2225   001104  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  2226   001106  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  2227   001108                     l1639:
  2228   001108  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  2229   00110A  D003               	goto	u1200
  2230   00110C  0E02               	movlw	2
  2231   00110E  6004               	cpfslt	___ftpack@exp^0,c
  2232   001110  D7F6               	goto	l1637
  2233   001112                     u1200:
  2234   001112  A004               	btfss	___ftpack@exp^0,0,c
  2235   001114  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  2236   001116  90D8               	bcf	status,0,c
  2237   001118  3204               	rrcf	___ftpack@exp^0,f,c
  2238   00111A  5004               	movf	___ftpack@exp^0,w,c
  2239   00111C  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  2240   00111E  5005               	movf	___ftpack@sign^0,w,c
  2241   001120  A4D8               	btfss	status,2,c
  2242   001122  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  2243   001124  C001  F001         	movff	___ftpack@arg,?___ftpack
  2244   001128  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2245   00112C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2246   001130  0012               	return		;funcret
  2247   001132                     __end_of___ftpack:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _MensajeLCD_Word *****************
  2251 ;; Defined at:
  2252 ;;		line 239 in file "LibLCDXC8.h"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  a               1    4[COMRAM] PTR unsigned char 
  2255 ;;		 -> STR_2(17), STR_1(11), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  i               2    6[COMRAM] int 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2267 ;;      Params:         1       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2271 ;;Total ram usage:        4 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 3
  2274 ;; This function calls:
  2275 ;;		_EscribeLCD_c
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text10
  2282   0012D8                     __ptext10:
  2283                           	callstack 0
  2284   0012D8                     _MensajeLCD_Word:
  2285                           	callstack 27
  2286                           
  2287                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  2288                           
  2289                           ;incstack = 0
  2290   0012D8  0E00               	movlw	0
  2291   0012DA  6E08               	movwf	(MensajeLCD_Word@i+1)^0,c
  2292   0012DC  0E00               	movlw	0
  2293   0012DE  6E07               	movwf	MensajeLCD_Word@i^0,c
  2294   0012E0                     l1731:
  2295                           
  2296                           ;LibLCDXC8.h: 244: if(a[i]!=0){
  2297   0012E0  5005               	movf	MensajeLCD_Word@a^0,w,c
  2298   0012E2  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2299   0012E4  6E06               	movwf	??_MensajeLCD_Word^0,c
  2300   0012E6  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2301   0012EA                     	if	1	;There is more than 1 active tblptr byte
  2302   0012EA  0E08               	movlw	high __smallconst
  2303   0012EC  6EF7               	movwf	tblptrh,c
  2304   0012EE                     	endif
  2305   0012EE                     	if	0	;tblptru may be non-zero
  2306   0012EE                     	endif
  2307   0012EE                     	if	0	;tblptru may be non-zero
  2308   0012EE                     	endif
  2309   0012EE  0008               	tblrd		*
  2310   0012F0  50F5               	movf	tablat,w,c
  2311   0012F2  0900               	iorlw	0
  2312   0012F4  B4D8               	btfsc	status,2,c
  2313   0012F6  D00B               	goto	l1735
  2314                           
  2315                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  2316   0012F8  5005               	movf	MensajeLCD_Word@a^0,w,c
  2317   0012FA  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2318   0012FC  6E06               	movwf	??_MensajeLCD_Word^0,c
  2319   0012FE  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2320   001302                     	if	1	;There is more than 1 active tblptr byte
  2321   001302  0E08               	movlw	high __smallconst
  2322   001304  6EF7               	movwf	tblptrh,c
  2323   001306                     	endif
  2324   001306                     	if	0	;tblptru may be non-zero
  2325   001306                     	endif
  2326   001306                     	if	0	;tblptru may be non-zero
  2327   001306                     	endif
  2328   001306  0008               	tblrd		*
  2329   001308  50F5               	movf	tablat,w,c
  2330   00130A  EC14  F00A         	call	_EscribeLCD_c
  2331   00130E                     l1735:
  2332   00130E  4A07               	infsnz	MensajeLCD_Word@i^0,f,c
  2333   001310  2A08               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2334   001312  BE08               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2335   001314  D7E5               	goto	l1731
  2336   001316  5008               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2337   001318  E105               	bnz	u1450
  2338   00131A  0E10               	movlw	16
  2339   00131C  5C07               	subwf	MensajeLCD_Word@i^0,w,c
  2340   00131E  B0D8               	btfsc	status,0,c
  2341   001320  0012               	return	
  2342   001322  D7DE               	goto	l1731
  2343   001324                     u1450:
  2344   001324  0012               	return		;funcret
  2345   001326                     __end_of_MensajeLCD_Word:
  2346                           	callstack 0
  2347                           
  2348 ;; *************** function _EscribeLCD_c *****************
  2349 ;; Defined at:
  2350 ;;		line 140 in file "LibLCDXC8.h"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  a               1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  a               1    3[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0
  2365 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2367 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 2
  2371 ;; This function calls:
  2372 ;;		_EnviaDato
  2373 ;;		_HabilitaLCD
  2374 ;;		_RetardoLCD
  2375 ;; This function is called by:
  2376 ;;		_MensajeLCD_Word
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text11
  2382   001428                     __ptext11:
  2383                           	callstack 0
  2384   001428                     _EscribeLCD_c:
  2385                           	callstack 27
  2386                           
  2387                           ;incstack = 0
  2388                           ;EscribeLCD_c@a stored from wreg
  2389   001428  6E04               	movwf	EscribeLCD_c@a^0,c
  2390                           
  2391                           ;LibLCDXC8.h: 144: LATE0=1;
  2392   00142A  808D               	bsf	3981,0,c	;volatile
  2393                           
  2394                           ;LibLCDXC8.h: 145: EnviaDato(a);
  2395   00142C  5004               	movf	EscribeLCD_c@a^0,w,c
  2396   00142E  EC3B  F00A         	call	_EnviaDato
  2397                           
  2398                           ;LibLCDXC8.h: 146: HabilitaLCD();
  2399   001432  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2400                           
  2401                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  2402   001436  0E04               	movlw	4
  2403   001438  EC18  F009         	call	_RetardoLCD
  2404   00143C  0012               	return		;funcret
  2405   00143E                     __end_of_EscribeLCD_c:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _LeerTeclado *****************
  2409 ;; Defined at:
  2410 ;;		line 141 in file "Laboratorio4.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text12
  2438   001132                     __ptext12:
  2439                           	callstack 0
  2440   001132                     _LeerTeclado:
  2441                           	callstack 30
  2442                           
  2443                           ;Laboratorio4.c: 142: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2444                           
  2445                           ;incstack = 0
  2446   001132  B881               	btfsc	3969,4,c	;volatile
  2447   001134  AA81               	btfss	3969,5,c	;volatile
  2448   001136  D004               	goto	u350
  2449   001138  AC81               	btfss	3969,6,c	;volatile
  2450   00113A  D002               	goto	u350
  2451   00113C  BE81               	btfsc	3969,7,c	;volatile
  2452   00113E  D7F9               	goto	__ptext12
  2453   001140                     u350:
  2454                           
  2455                           ;Laboratorio4.c: 143: LATB=0b11111110;
  2456   001140  0EFE               	movlw	254
  2457   001142  6E8A               	movwf	138,c	;volatile
  2458                           
  2459                           ;Laboratorio4.c: 144: if(RB4==0) return '1';
  2460   001144  B881               	btfsc	3969,4,c	;volatile
  2461   001146  D002               	goto	l168
  2462   001148  0E31               	movlw	49
  2463   00114A  0012               	return	
  2464   00114C                     l168:
  2465                           
  2466                           ;Laboratorio4.c: 145: else if(RB5==0) return '2';
  2467   00114C  BA81               	btfsc	3969,5,c	;volatile
  2468   00114E  D002               	goto	l171
  2469   001150  0E32               	movlw	50
  2470   001152  0012               	return	
  2471   001154                     l171:
  2472                           
  2473                           ;Laboratorio4.c: 146: else if(RB6==0) return '3';
  2474   001154  BC81               	btfsc	3969,6,c	;volatile
  2475   001156  D002               	goto	l173
  2476   001158  0E33               	movlw	51
  2477   00115A  0012               	return	
  2478   00115C                     l173:
  2479                           
  2480                           ;Laboratorio4.c: 147: else if(RB7==0) return '+';
  2481   00115C  BE81               	btfsc	3969,7,c	;volatile
  2482   00115E  D002               	goto	l1201
  2483   001160  0E2B               	movlw	43
  2484   001162  0012               	return	
  2485   001164                     l1201:
  2486                           
  2487                           ;Laboratorio4.c: 148: else{;Laboratorio4.c: 149: LATB=0b11111101;
  2488   001164  0EFD               	movlw	253
  2489   001166  6E8A               	movwf	138,c	;volatile
  2490                           
  2491                           ;Laboratorio4.c: 150: if(RB4==0) return '4';
  2492   001168  B881               	btfsc	3969,4,c	;volatile
  2493   00116A  D002               	goto	l177
  2494   00116C  0E34               	movlw	52
  2495   00116E  0012               	return	
  2496   001170                     l177:
  2497                           
  2498                           ;Laboratorio4.c: 151: else if(RB5==0) return '5';
  2499   001170  BA81               	btfsc	3969,5,c	;volatile
  2500   001172  D002               	goto	l179
  2501   001174  0E35               	movlw	53
  2502   001176  0012               	return	
  2503   001178                     l179:
  2504                           
  2505                           ;Laboratorio4.c: 152: else if(RB6==0) return '6';
  2506   001178  BC81               	btfsc	3969,6,c	;volatile
  2507   00117A  D002               	goto	l181
  2508   00117C  0E36               	movlw	54
  2509   00117E  0012               	return	
  2510   001180                     l181:
  2511                           
  2512                           ;Laboratorio4.c: 153: else if(RB7==0) return '-';
  2513   001180  BE81               	btfsc	3969,7,c	;volatile
  2514   001182  D002               	goto	l1229
  2515   001184  0E2D               	movlw	45
  2516   001186  0012               	return	
  2517   001188                     l1229:
  2518                           
  2519                           ;Laboratorio4.c: 154: else{;Laboratorio4.c: 155: LATB=0b11111011;
  2520   001188  0EFB               	movlw	251
  2521   00118A  6E8A               	movwf	138,c	;volatile
  2522                           
  2523                           ;Laboratorio4.c: 156: if(RB4==0) return '7';
  2524   00118C  B881               	btfsc	3969,4,c	;volatile
  2525   00118E  D002               	goto	l185
  2526   001190  0E37               	movlw	55
  2527   001192  0012               	return	
  2528   001194                     l185:
  2529                           
  2530                           ;Laboratorio4.c: 157: else if(RB5==0) return '8';
  2531   001194  BA81               	btfsc	3969,5,c	;volatile
  2532   001196  D002               	goto	l187
  2533   001198  0E38               	movlw	56
  2534   00119A  0012               	return	
  2535   00119C                     l187:
  2536                           
  2537                           ;Laboratorio4.c: 158: else if(RB6==0) return '9';
  2538   00119C  BC81               	btfsc	3969,6,c	;volatile
  2539   00119E  D002               	goto	l189
  2540   0011A0  0E39               	movlw	57
  2541   0011A2  0012               	return	
  2542   0011A4                     l189:
  2543                           
  2544                           ;Laboratorio4.c: 159: else if(RB7==0) return '/';
  2545   0011A4  BE81               	btfsc	3969,7,c	;volatile
  2546   0011A6  D002               	goto	l1257
  2547   0011A8  0E2F               	movlw	47
  2548   0011AA  0012               	return	
  2549   0011AC                     l1257:
  2550                           
  2551                           ;Laboratorio4.c: 160: else{;Laboratorio4.c: 161: LATB=0b11110111;
  2552   0011AC  0EF7               	movlw	247
  2553   0011AE  6E8A               	movwf	138,c	;volatile
  2554                           
  2555                           ;Laboratorio4.c: 162: if(RB4==0) return 'C';
  2556   0011B0  B881               	btfsc	3969,4,c	;volatile
  2557   0011B2  D002               	goto	l193
  2558   0011B4  0E43               	movlw	67
  2559   0011B6  0012               	return	
  2560   0011B8                     l193:
  2561                           
  2562                           ;Laboratorio4.c: 163: else if(RB5==0) return '0';
  2563   0011B8  BA81               	btfsc	3969,5,c	;volatile
  2564   0011BA  D002               	goto	l195
  2565   0011BC  0E30               	movlw	48
  2566   0011BE  0012               	return	
  2567   0011C0                     l195:
  2568                           
  2569                           ;Laboratorio4.c: 164: else if(RB6==0) return '=';
  2570   0011C0  BC81               	btfsc	3969,6,c	;volatile
  2571   0011C2  D002               	goto	l197
  2572   0011C4  0E3D               	movlw	61
  2573   0011C6  0012               	return	
  2574   0011C8                     l197:
  2575                           
  2576                           ;Laboratorio4.c: 165: else if(RB7==0) return 'x';
  2577   0011C8  BE81               	btfsc	3969,7,c	;volatile
  2578   0011CA  D002               	goto	l194
  2579   0011CC  0E78               	movlw	120
  2580   0011CE  0012               	return	
  2581   0011D0                     l194:
  2582                           
  2583                           ;Laboratorio4.c: 166: };Laboratorio4.c: 167: };Laboratorio4.c: 168: };Laboratorio4.c: 16
      +                          9: return '?';
  2584   0011D0  0E3F               	movlw	63
  2585   0011D2  0012               	return		;funcret
  2586   0011D4                     __end_of_LeerTeclado:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _InicializaLCD *****************
  2590 ;; Defined at:
  2591 ;;		line 71 in file "LibLCDXC8.h"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 3
  2612 ;; This function calls:
  2613 ;;		_BorraLCD
  2614 ;;		_EnviaDato
  2615 ;;		_HabilitaLCD
  2616 ;;		_RetardoLCD
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text13
  2623   001326                     __ptext13:
  2624                           	callstack 0
  2625   001326                     _InicializaLCD:
  2626                           	callstack 27
  2627                           
  2628                           ;LibLCDXC8.h: 73: LATE0=0;
  2629                           
  2630                           ;incstack = 0
  2631   001326  908D               	bcf	3981,0,c	;volatile
  2632                           
  2633                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2634                           
  2635                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2636   001328  0E3F               	movlw	63
  2637   00132A  6E8C               	movwf	140,c	;volatile
  2638                           
  2639                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2640   00132C  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2641                           
  2642                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2643   001330  0E01               	movlw	1
  2644   001332  EC18  F009         	call	_RetardoLCD
  2645                           
  2646                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2647                           
  2648                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2649   001336  0E3F               	movlw	63
  2650   001338  6E8C               	movwf	140,c	;volatile
  2651                           
  2652                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2653   00133A  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2654                           
  2655                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2656   00133E  0E03               	movlw	3
  2657   001340  EC18  F009         	call	_RetardoLCD
  2658                           
  2659                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2660                           
  2661                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2662   001344  0E3F               	movlw	63
  2663   001346  6E8C               	movwf	140,c	;volatile
  2664                           
  2665                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2666   001348  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2667                           
  2668                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2669   00134C  0E04               	movlw	4
  2670   00134E  EC18  F009         	call	_RetardoLCD
  2671                           
  2672                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2673                           
  2674                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2675   001352  EC2A  F00A         	call	_BorraLCD	;wreg free
  2676                           
  2677                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2678   001356  0E0F               	movlw	15
  2679   001358  EC3B  F00A         	call	_EnviaDato
  2680                           
  2681                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2682   00135C  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2683                           
  2684                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2685   001360  0E04               	movlw	4
  2686   001362  EC18  F009         	call	_RetardoLCD
  2687   001366  0012               	return		;funcret
  2688   001368                     __end_of_InicializaLCD:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _BorraLCD *****************
  2692 ;; Defined at:
  2693 ;;		line 112 in file "LibLCDXC8.h"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 2
  2714 ;; This function calls:
  2715 ;;		_EnviaDato
  2716 ;;		_HabilitaLCD
  2717 ;;		_RetardoLCD
  2718 ;; This function is called by:
  2719 ;;		_InicializaLCD
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text14
  2725   001454                     __ptext14:
  2726                           	callstack 0
  2727   001454                     _BorraLCD:
  2728                           	callstack 27
  2729                           
  2730                           ;LibLCDXC8.h: 114: LATE0=0;
  2731                           
  2732                           ;incstack = 0
  2733   001454  908D               	bcf	3981,0,c	;volatile
  2734                           
  2735                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2736   001456  0E01               	movlw	1
  2737   001458  EC3B  F00A         	call	_EnviaDato
  2738                           
  2739                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2740   00145C  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2741                           
  2742                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2743   001460  0E02               	movlw	2
  2744   001462  EC18  F009         	call	_RetardoLCD
  2745   001466  0012               	return		;funcret
  2746   001468                     __end_of_BorraLCD:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _DireccionaLCD *****************
  2750 ;; Defined at:
  2751 ;;		line 250 in file "LibLCDXC8.h"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  a               1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  a               1    3[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 2
  2772 ;; This function calls:
  2773 ;;		_EnviaDato
  2774 ;;		_HabilitaLCD
  2775 ;;		_RetardoLCD
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text15
  2782   00143E                     __ptext15:
  2783                           	callstack 0
  2784   00143E                     _DireccionaLCD:
  2785                           	callstack 28
  2786                           
  2787                           ;incstack = 0
  2788                           ;DireccionaLCD@a stored from wreg
  2789   00143E  6E04               	movwf	DireccionaLCD@a^0,c
  2790                           
  2791                           ;LibLCDXC8.h: 253: LATE0=0;
  2792   001440  908D               	bcf	3981,0,c	;volatile
  2793                           
  2794                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2795   001442  5004               	movf	DireccionaLCD@a^0,w,c
  2796   001444  EC3B  F00A         	call	_EnviaDato
  2797                           
  2798                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2799   001448  EC34  F00A         	call	_HabilitaLCD	;wreg free
  2800                           
  2801                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2802   00144C  0E04               	movlw	4
  2803   00144E  EC18  F009         	call	_RetardoLCD
  2804   001452  0012               	return		;funcret
  2805   001454                     __end_of_DireccionaLCD:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function _EnviaDato *****************
  2809 ;; Defined at:
  2810 ;;		line 59 in file "LibLCDXC8.h"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  a               1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  a               1    2[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2828 ;;Total ram usage:        1 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 1
  2831 ;; This function calls:
  2832 ;;		_HabilitaLCD
  2833 ;;		_RetardoLCD
  2834 ;; This function is called by:
  2835 ;;		_InicializaLCD
  2836 ;;		_BorraLCD
  2837 ;;		_EscribeLCD_c
  2838 ;;		_DireccionaLCD
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text16
  2843   001476                     __ptext16:
  2844                           	callstack 0
  2845   001476                     _EnviaDato:
  2846                           	callstack 27
  2847                           
  2848                           ;incstack = 0
  2849                           ;EnviaDato@a stored from wreg
  2850   001476  6E03               	movwf	EnviaDato@a^0,c
  2851                           
  2852                           ;LibLCDXC8.h: 68: LATD=a;
  2853                           
  2854                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2855   001478  C003  FF8C         	movff	EnviaDato@a,3980	;volatile
  2856   00147C  0012               	return		;funcret
  2857   00147E                     __end_of_EnviaDato:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _RetardoLCD *****************
  2861 ;; Defined at:
  2862 ;;		line 286 in file "LibLCDXC8.h"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  a               1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  a               1    1[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_EnviaDato
  2886 ;;		_InicializaLCD
  2887 ;;		_BorraLCD
  2888 ;;		_EscribeLCD_c
  2889 ;;		_DireccionaLCD
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text17
  2894   001230                     __ptext17:
  2895                           	callstack 0
  2896   001230                     _RetardoLCD:
  2897                           	callstack 28
  2898                           
  2899                           ;incstack = 0
  2900                           ;RetardoLCD@a stored from wreg
  2901   001230  6E02               	movwf	RetardoLCD@a^0,c
  2902                           
  2903                           ;LibLCDXC8.h: 287: switch(a){
  2904   001232  D01B               	goto	l965
  2905   001234                     l955:
  2906   001234  0E05               	movlw	5
  2907   001236  6E01               	movwf	??_RetardoLCD^0,c
  2908   001238  0EDE               	movlw	222
  2909   00123A                     u2117:
  2910   00123A  2EE8               	decfsz	wreg,f,c
  2911   00123C  D7FE               	bra	u2117
  2912   00123E  2E01               	decfsz	??_RetardoLCD^0,f,c
  2913   001240  D7FC               	bra	u2117
  2914                           
  2915                           ;LibLCDXC8.h: 290: break;
  2916   001242  0012               	return	
  2917   001244                     l957:
  2918   001244  0E53               	movlw	83
  2919   001246                     u2127:
  2920   001246  2EE8               	decfsz	wreg,f,c
  2921   001248  D7FE               	bra	u2127
  2922   00124A  F000               	nop	
  2923                           
  2924                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2925   00124C  0E35               	movlw	53
  2926   00124E                     u2137:
  2927   00124E  2EE8               	decfsz	wreg,f,c
  2928   001250  D7FE               	bra	u2137
  2929   001252  F000               	nop	
  2930                           
  2931                           ;LibLCDXC8.h: 294: break;
  2932   001254  0012               	return	
  2933   001256                     l959:
  2934   001256  0E08               	movlw	8
  2935   001258                     u2147:
  2936   001258  2EE8               	decfsz	wreg,f,c
  2937   00125A  D7FE               	bra	u2147
  2938   00125C  F000               	nop	
  2939                           
  2940                           ;LibLCDXC8.h: 297: break;
  2941   00125E  0012               	return	
  2942   001260                     l961:
  2943   001260  0E03               	movlw	3
  2944   001262                     u2157:
  2945   001262  2EE8               	decfsz	wreg,f,c
  2946   001264  D7FE               	bra	u2157
  2947   001266  F000               	nop	
  2948                           
  2949                           ;LibLCDXC8.h: 300: break;
  2950   001268  0012               	return	
  2951   00126A                     l965:
  2952   00126A  5002               	movf	RetardoLCD@a^0,w,c
  2953                           
  2954                           ; Switch size 1, requested type "simple"
  2955                           ; Number of cases is 4, Range of values is 1 to 4
  2956                           ; switch strategies available:
  2957                           ; Name         Instructions Cycles
  2958                           ; simple_byte           13     7 (average)
  2959                           ;	Chosen strategy is simple_byte
  2960   00126C  0A01               	xorlw	1	; case 1
  2961   00126E  B4D8               	btfsc	status,2,c
  2962   001270  D7E1               	goto	l955
  2963   001272  0A03               	xorlw	3	; case 2
  2964   001274  B4D8               	btfsc	status,2,c
  2965   001276  D7E6               	goto	l957
  2966   001278  0A01               	xorlw	1	; case 3
  2967   00127A  B4D8               	btfsc	status,2,c
  2968   00127C  D7EC               	goto	l959
  2969   00127E  0A07               	xorlw	7	; case 4
  2970   001280  A4D8               	btfss	status,2,c
  2971   001282  0012               	return	
  2972   001284  D7ED               	goto	l961
  2973   001286                     __end_of_RetardoLCD:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _HabilitaLCD *****************
  2977 ;; Defined at:
  2978 ;;		line 105 in file "LibLCDXC8.h"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_EnviaDato
  3002 ;;		_InicializaLCD
  3003 ;;		_BorraLCD
  3004 ;;		_EscribeLCD_c
  3005 ;;		_DireccionaLCD
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text18
  3010   001468                     __ptext18:
  3011                           	callstack 0
  3012   001468                     _HabilitaLCD:
  3013                           	callstack 28
  3014                           
  3015                           ;LibLCDXC8.h: 107: LATE1=1;
  3016                           
  3017                           ;incstack = 0
  3018   001468  828D               	bsf	3981,1,c	;volatile
  3019                           
  3020                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3021   00146A  0E03               	movlw	3
  3022   00146C                     u2167:
  3023   00146C  2EE8               	decfsz	wreg,f,c
  3024   00146E  D7FE               	bra	u2167
  3025   001470  F000               	nop	
  3026                           
  3027                           ;LibLCDXC8.h: 110: LATE1=0;
  3028   001472  928D               	bcf	3981,1,c	;volatile
  3029   001474  0012               	return		;funcret
  3030   001476                     __end_of_HabilitaLCD:
  3031                           	callstack 0
  3032                           
  3033                           	psect	rparam
  3034   000000                     
  3035                           	psect	idloc
  3036                           
  3037                           ;Config register IDLOC0 @ 0x200000
  3038                           ;	unspecified, using default values
  3039   200000                     	org	2097152
  3040   200000  FF                 	db	255
  3041                           
  3042                           ;Config register IDLOC1 @ 0x200001
  3043                           ;	unspecified, using default values
  3044   200001                     	org	2097153
  3045   200001  FF                 	db	255
  3046                           
  3047                           ;Config register IDLOC2 @ 0x200002
  3048                           ;	unspecified, using default values
  3049   200002                     	org	2097154
  3050   200002  FF                 	db	255
  3051                           
  3052                           ;Config register IDLOC3 @ 0x200003
  3053                           ;	unspecified, using default values
  3054   200003                     	org	2097155
  3055   200003  FF                 	db	255
  3056                           
  3057                           ;Config register IDLOC4 @ 0x200004
  3058                           ;	unspecified, using default values
  3059   200004                     	org	2097156
  3060   200004  FF                 	db	255
  3061                           
  3062                           ;Config register IDLOC5 @ 0x200005
  3063                           ;	unspecified, using default values
  3064   200005                     	org	2097157
  3065   200005  FF                 	db	255
  3066                           
  3067                           ;Config register IDLOC6 @ 0x200006
  3068                           ;	unspecified, using default values
  3069   200006                     	org	2097158
  3070   200006  FF                 	db	255
  3071                           
  3072                           ;Config register IDLOC7 @ 0x200007
  3073                           ;	unspecified, using default values
  3074   200007                     	org	2097159
  3075   200007  FF                 	db	255
  3076                           
  3077                           	psect	config
  3078                           
  3079                           ;Config register CONFIG1L @ 0x300000
  3080                           ;	unspecified, using default values
  3081                           ;	PLL Prescaler Selection bits
  3082                           ;	PLLDIV = 0x0, unprogrammed default
  3083                           ;	System Clock Postscaler Selection bits
  3084                           ;	CPUDIV = 0x0, unprogrammed default
  3085                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3086                           ;	USBDIV = 0x0, unprogrammed default
  3087   300000                     	org	3145728
  3088   300000  00                 	db	0
  3089                           
  3090                           ;Config register CONFIG1H @ 0x300001
  3091                           ;	Oscillator Selection bits
  3092                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3093                           ;	Fail-Safe Clock Monitor Enable bit
  3094                           ;	FCMEN = 0x0, unprogrammed default
  3095                           ;	Internal/External Oscillator Switchover bit
  3096                           ;	IESO = 0x0, unprogrammed default
  3097   300001                     	org	3145729
  3098   300001  09                 	db	9
  3099                           
  3100                           ;Config register CONFIG2L @ 0x300002
  3101                           ;	unspecified, using default values
  3102                           ;	Power-up Timer Enable bit
  3103                           ;	PWRT = 0x1, unprogrammed default
  3104                           ;	Brown-out Reset Enable bits
  3105                           ;	BOR = 0x3, unprogrammed default
  3106                           ;	Brown-out Reset Voltage bits
  3107                           ;	BORV = 0x3, unprogrammed default
  3108                           ;	USB Voltage Regulator Enable bit
  3109                           ;	VREGEN = 0x0, unprogrammed default
  3110   300002                     	org	3145730
  3111   300002  1F                 	db	31
  3112                           
  3113                           ;Config register CONFIG2H @ 0x300003
  3114                           ;	Watchdog Timer Enable bit
  3115                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3116                           ;	Watchdog Timer Postscale Select bits
  3117                           ;	WDTPS = 0xF, unprogrammed default
  3118   300003                     	org	3145731
  3119   300003  1E                 	db	30
  3120                           
  3121                           ; Padding undefined space
  3122   300004                     	org	3145732
  3123   300004  FF                 	db	255
  3124                           
  3125                           ;Config register CONFIG3H @ 0x300005
  3126                           ;	unspecified, using default values
  3127                           ;	CCP2 MUX bit
  3128                           ;	CCP2MX = 0x1, unprogrammed default
  3129                           ;	PORTB A/D Enable bit
  3130                           ;	PBADEN = 0x1, unprogrammed default
  3131                           ;	Low-Power Timer 1 Oscillator Enable bit
  3132                           ;	LPT1OSC = 0x0, unprogrammed default
  3133                           ;	MCLR Pin Enable bit
  3134                           ;	MCLRE = 0x1, unprogrammed default
  3135   300005                     	org	3145733
  3136   300005  83                 	db	131
  3137                           
  3138                           ;Config register CONFIG4L @ 0x300006
  3139                           ;	unspecified, using default values
  3140                           ;	Stack Full/Underflow Reset Enable bit
  3141                           ;	STVREN = 0x1, unprogrammed default
  3142                           ;	Single-Supply ICSP Enable bit
  3143                           ;	LVP = 0x1, unprogrammed default
  3144                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3145                           ;	ICPRT = 0x0, unprogrammed default
  3146                           ;	Extended Instruction Set Enable bit
  3147                           ;	XINST = 0x0, unprogrammed default
  3148                           ;	Background Debugger Enable bit
  3149                           ;	DEBUG = 0x1, unprogrammed default
  3150   300006                     	org	3145734
  3151   300006  85                 	db	133
  3152                           
  3153                           ; Padding undefined space
  3154   300007                     	org	3145735
  3155   300007  FF                 	db	255
  3156                           
  3157                           ;Config register CONFIG5L @ 0x300008
  3158                           ;	unspecified, using default values
  3159                           ;	Code Protection bit
  3160                           ;	CP0 = 0x1, unprogrammed default
  3161                           ;	Code Protection bit
  3162                           ;	CP1 = 0x1, unprogrammed default
  3163                           ;	Code Protection bit
  3164                           ;	CP2 = 0x1, unprogrammed default
  3165                           ;	Code Protection bit
  3166                           ;	CP3 = 0x1, unprogrammed default
  3167   300008                     	org	3145736
  3168   300008  0F                 	db	15
  3169                           
  3170                           ;Config register CONFIG5H @ 0x300009
  3171                           ;	unspecified, using default values
  3172                           ;	Boot Block Code Protection bit
  3173                           ;	CPB = 0x1, unprogrammed default
  3174                           ;	Data EEPROM Code Protection bit
  3175                           ;	CPD = 0x1, unprogrammed default
  3176   300009                     	org	3145737
  3177   300009  C0                 	db	192
  3178                           
  3179                           ;Config register CONFIG6L @ 0x30000A
  3180                           ;	unspecified, using default values
  3181                           ;	Write Protection bit
  3182                           ;	WRT0 = 0x1, unprogrammed default
  3183                           ;	Write Protection bit
  3184                           ;	WRT1 = 0x1, unprogrammed default
  3185                           ;	Write Protection bit
  3186                           ;	WRT2 = 0x1, unprogrammed default
  3187                           ;	Write Protection bit
  3188                           ;	WRT3 = 0x1, unprogrammed default
  3189   30000A                     	org	3145738
  3190   30000A  0F                 	db	15
  3191                           
  3192                           ;Config register CONFIG6H @ 0x30000B
  3193                           ;	unspecified, using default values
  3194                           ;	Configuration Register Write Protection bit
  3195                           ;	WRTC = 0x1, unprogrammed default
  3196                           ;	Boot Block Write Protection bit
  3197                           ;	WRTB = 0x1, unprogrammed default
  3198                           ;	Data EEPROM Write Protection bit
  3199                           ;	WRTD = 0x1, unprogrammed default
  3200   30000B                     	org	3145739
  3201   30000B  E0                 	db	224
  3202                           
  3203                           ;Config register CONFIG7L @ 0x30000C
  3204                           ;	unspecified, using default values
  3205                           ;	Table Read Protection bit
  3206                           ;	EBTR0 = 0x1, unprogrammed default
  3207                           ;	Table Read Protection bit
  3208                           ;	EBTR1 = 0x1, unprogrammed default
  3209                           ;	Table Read Protection bit
  3210                           ;	EBTR2 = 0x1, unprogrammed default
  3211                           ;	Table Read Protection bit
  3212                           ;	EBTR3 = 0x1, unprogrammed default
  3213   30000C                     	org	3145740
  3214   30000C  0F                 	db	15
  3215                           
  3216                           ;Config register CONFIG7H @ 0x30000D
  3217                           ;	unspecified, using default values
  3218                           ;	Boot Block Table Read Protection bit
  3219                           ;	EBTRB = 0x1, unprogrammed default
  3220   30000D                     	org	3145741
  3221   30000D  40                 	db	64
  3222                           tosu	equ	0xFFF
  3223                           tosh	equ	0xFFE
  3224                           tosl	equ	0xFFD
  3225                           stkptr	equ	0xFFC
  3226                           pclatu	equ	0xFFB
  3227                           pclath	equ	0xFFA
  3228                           pcl	equ	0xFF9
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           indf0	equ	0xFEF
  3236                           postinc0	equ	0xFEE
  3237                           postdec0	equ	0xFED
  3238                           preinc0	equ	0xFEC
  3239                           plusw0	equ	0xFEB
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           indf1	equ	0xFE7
  3244                           postinc1	equ	0xFE6
  3245                           postdec1	equ	0xFE5
  3246                           preinc1	equ	0xFE4
  3247                           plusw1	equ	0xFE3
  3248                           fsr1h	equ	0xFE2
  3249                           fsr1l	equ	0xFE1
  3250                           bsr	equ	0xFE0
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           postdec2	equ	0xFDD
  3254                           preinc2	equ	0xFDC
  3255                           plusw2	equ	0xFDB
  3256                           fsr2h	equ	0xFDA
  3257                           fsr2l	equ	0xFD9
  3258                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftsub
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16030
                                             56 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lltoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2942
                                              8 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3293
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             41 COMRAM    15    11      4
                            ___ftmul (ARG)
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4459
                                             20 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3962
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3450
                                             26 COMRAM    15     9      6
                           ___ftpack
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___ftmul
     ___ftpack
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
   ___ftsub
   ___fttol
     ___ftmul (ARG)
     ___ftsub (ARG)
     ___lltoft (ARG)
   ___lltoft
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      50       1       84.2%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      28        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 08:13:39 2023

                      _i 0046                        _r 003B                       _n1 004A  
                     _n2 0048               EnviaDato@a 0003                       _op 004F  
    ___wmul@multiplicand 0003             ___ftadd@exp1 0014             ___ftadd@exp2 0013  
          ??_LeerTeclado 0001             ___ftadd@sign 0012            _InicializaLCD 1326  
                    l171 1154                      l181 1180                      l173 115C  
                    l168 114C                      l193 11B8                      l185 1194  
                    l177 1170                      l194 11D0                      l195 11C0  
                    l187 119C                      l179 1178                      l532 0E4C  
                    l197 11C8                      l189 11A4                      l681 12CE  
                    l961 1260                      l955 1234                      l957 1244  
                    l965 126A                      l959 1256                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RB7 007C0F  
                    u350 1140                      _n1c 004E                      _n2c 004D  
                    wreg 000FE8                     l1201 1164                     l2003 0A2C  
                   l2013 0AA8                     l2007 0A4A                     l2031 0B02  
                   l2025 0AD4                     l2035 0BCE                     l2019 0ABC  
                   l1229 1188                     l2061 0CCE                     l2053 0C5C  
                   l2029 0AE6                     l2047 0C28                     l1257 11AC  
                   l2065 0CF4                     l2057 0CA8                     l2067 0CFE  
                   l2069 0D04                     l1631 10CA                     l1711 0E68  
                   l1703 0E1E                     l1721 0E98                     l1705 0E28  
                   l1731 12E0                     l1635 10E0                     l1627 10A2  
                   l1637 10FE                     l1629 10AC                     l1735 130E  
                   l1639 1108                     l1751 0EE6                     l1663 0D66  
                   l1807 0FDE                     l1825 1032                     l1771 0F40  
                   l1691 0DE0                     l1843 1072                     l1835 104A  
                   l1851 11E6                     l1923 08B2                     l1781 0F68  
                   l1757 0F0E                     l1693 0DEA                     l1669 0D8E  
                   l1837 1056                     l1829 1042                     l1775 0F50  
                   l1695 0DF4                     l1863 129C                     l1785 0F78  
                   l1849 11DA                     l1865 12A4                     l1875 12C4  
                   l1947 0914                     l1797 137E                     l1967 096A  
                   l1991 09D0                     l1897 085A                     l1995 09E6  
                   l1999 0A20                     STR_1 0812                     STR_2 0801  
                   u1200 1112                     u2000 0BDE                     u2010 0BF0  
                   u1300 0D80                     u2020 0C02                     u2030 0C38  
                   u1231 0D26                     u1160 1094                     u1400 0E30  
                   u2040 0C4A                     u1241 0D3A                     u1330 0DBE  
                   u2050 0C5C                     u2107 0D0A                     u2117 123A  
                   u1270 0D58                     _LATB 000F8A                     u2127 1246  
                   _LATD 000F8C                     u2137 124E                     u1450 1324  
                   u1370 0DFC                     u2147 1258                     u1531 0FC2  
                   u1540 0FCC                     u2157 1262                     u1461 0ECE  
                   u1550 0FFC                     u1630 12A8                     u2167 146C  
                   u1481 0EF6                     u2097 084A                     u1730 08F2  
                   u1555 0FF4                     u1820 094C                     u1590 105C  
                   u1910 09B2                     u1680 08CA                     _RBPU 007F8F  
         ??_EscribeLCD_c 0004                     _main 081E             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___ftmul@cntr 0028  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 0038  
           ___fttol@lval 0034           ?_InicializaLCD 0001                    ?_main 0001  
        __end_of___ftadd 0EBE            EscribeLCD_c@a 0004          __end_of___ftmul 0FB2  
        __end_of___ftsub 13A8          __end_of___fttol 1084                    _LATE0 007C68  
                  _LATE1 007C69          __end_of___lwdiv 12D8                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96             ___lltoft@exp 0011  
                  _Tecla 004C      __end_of_LeerTeclado 11D4                    _nodec 0043  
          ___ftpack@sign 0005                    tablat 000FF5              _HabilitaLCD 1468  
                  status 000FD8         __end_of_BorraLCD 1468          __initialization 13A8  
           __end_of_main 0D16                   ??_main 0039            ___fttol@sign1 0033  
          __activetblptr 000002                   _ADCON1 000FC1           DireccionaLCD@a 0004  
       __end_of___ftpack 1132         __end_of___lltoft 1230         __end_of___lwtoft 1428  
  __end_of_DireccionaLCD 1454               _RetardoLCD 1230                   ___wmul 13DE  
              ??___ftadd 000F                ??___ftmul 0021                ??___ftsub 001B  
              ??___fttol 002E                ??___lwdiv 0005          ??_InicializaLCD 0004  
                 clear_0 13CE                   isa$std 000001     __end_of_EscribeLCD_c 143E  
            _LeerTeclado 1132    ___ftmul@f3_as_product 0025             __pdataCOMRAM 004D  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 13D4  
             ___ftadd@f1 0009               ___ftadd@f2 000C            ___rparam_used 000001  
             ___ftmul@f1 001B               ___ftmul@f2 001E               ___ftsub@f1 0015  
             ___ftsub@f2 0018               ___fttol@f1 002A           __pcstackCOMRAM 0001  
             ___lltoft@c 0009        __end_of_EnviaDato 147E               ___lwtoft@c 0009  
              ?_BorraLCD 0001              ?_RetardoLCD 0001              RetardoLCD@a 0002  
                ?___wmul 0001                ?___ftpack 0001                ?___lltoft 0009  
              ?___lwtoft 0009               ??_BorraLCD 0004        ??_MensajeLCD_Word 0006  
           ?_HabilitaLCD 0001                  __Hparam 0000                  __Lparam 0000  
                ___ftadd 0D16                  ___ftmul 0EBE                  ___ftsub 1368  
                ___fttol 0FB2                  ___lwdiv 1286             __psmallconst 0800  
                __pcinit 13A8               ??___ftpack 0006                  __ramtop 0800  
             ??___lltoft 000D                  __ptext0 081E                  __ptext1 13DE  
                __ptext2 1404                  __ptext3 1286                  __ptext4 11D4  
                __ptext5 0FB2                  __ptext6 1368                  __ptext7 0D16  
                __ptext8 0EBE                  __ptext9 1084               ??___lwtoft 000C  
   end_of_initialization 13D4            __Lmediumconst 0000             _EscribeLCD_c 1428  
                postdec1 000FE5                  postinc0 000FEE             ?_LeerTeclado 0001  
            ___ftmul@exp 0024           __end_of___wmul 1404            __pidataCOMRAM 147E  
  __end_of_InicializaLCD 1368                _EnviaDato 1476      start_initialization 13A8  
           ??_RetardoLCD 0001                 ??___wmul 0005          _MensajeLCD_Word 12D8  
             ?_EnviaDato 0001              __pbssCOMRAM 003B       __end_of_RetardoLCD 1286  
       MensajeLCD_Word@a 0005         MensajeLCD_Word@i 0007            _DireccionaLCD 143E  
       ___lwdiv@dividend 0001                 ?___ftadd 0009                 ?___ftmul 001B  
               ?___ftsub 0015                 ?___fttol 002A                 ?___lwdiv 0001  
            __smallconst 0800         ___lwdiv@quotient 0005           ___wmul@product 0005  
         ?_DireccionaLCD 0001  __end_of_MensajeLCD_Word 1326        ___wmul@multiplier 0001  
            ??_EnviaDato 0003                 _BorraLCD 1454                copy_data0 13BC  
               __Hrparam 0000                 __Lrparam 0000                 ___ftpack 1084  
               ___lltoft 11D4                 ___lwtoft 1404          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 12D8                 __ptext11 1428  
               __ptext12 1132                 __ptext13 1326                 __ptext14 1454  
               __ptext15 143E                 __ptext16 1476                 __ptext17 1230  
               __ptext18 1468          ??_DireccionaLCD 0004                 _interfaz 0050  
               _partdecl 003F                 isa$xinst 000000         ?_MensajeLCD_Word 0005  
          ??_HabilitaLCD 0001            ?_EscribeLCD_c 0001      __end_of_HabilitaLCD 1476  

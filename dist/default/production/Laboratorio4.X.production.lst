

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 18:06:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   00183E                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for main@F3172
    85   00183E  00                 	db	0
    86   00183F  1B                 	db	27
    87   001840  1F                 	db	31
    88   001841  1F                 	db	31
    89   001842  0E                 	db	14
    90   001843  04                 	db	4
    91   001844  00                 	db	0
    92   001845  00                 	db	0
    93                           
    94                           ;initializer for _n2c
    95   001846  20                 	db	32
    96                           
    97                           ;initializer for _n1c
    98   001847  20                 	db	32
    99                           
   100                           ;initializer for _op
   101   001848  20                 	db	32
   102                           
   103                           ;initializer for _interfaz
   104   001849  08                 	db	8
   105   000000                     _LATC	set	3979
   106   000000                     _TRISC	set	3988
   107   000000                     _LATE2	set	31850
   108   000000                     _RB7	set	31759
   109   000000                     _RB6	set	31758
   110   000000                     _RB5	set	31757
   111   000000                     _PD	set	32386
   112   000000                     _RI	set	32388
   113   000000                     _TMR0ON	set	32431
   114   000000                     _GIE	set	32663
   115   000000                     _TMR0IE	set	32661
   116   000000                     _LATE1	set	31849
   117   000000                     _LATB	set	3978
   118   000000                     _LATD	set	3980
   119   000000                     _RB4	set	31756
   120   000000                     _TRISB	set	3987
   121   000000                     _TRISD	set	3989
   122   000000                     _ADCON1	set	4033
   123   000000                     _LATE0	set	31848
   124   000000                     _OSCCON	set	4051
   125   000000                     _T0CON	set	4053
   126   000000                     _TO	set	32387
   127   000000                     _RBPU	set	32655
   128   000000                     _TRISE	set	3990
   129   000000                     _TMR0IF	set	32658
   130   000000                     _TMR0	set	4054
   131   000000                     _RC6	set	31766
   132                           
   133                           	psect	smallconst
   134   000800                     __psmallconst:
   135                           	callstack 0
   136   000800  00                 	db	0
   137   000801                     STR_3:
   138   000801  20                 	db	32
   139   000802  20                 	db	32
   140   000803  20                 	db	32
   141   000804  20                 	db	32
   142   000805  20                 	db	32
   143   000806  20                 	db	32
   144   000807  20                 	db	32
   145   000808  20                 	db	32
   146   000809  20                 	db	32
   147   00080A  20                 	db	32
   148   00080B  20                 	db	32
   149   00080C  20                 	db	32
   150   00080D  20                 	db	32
   151   00080E  20                 	db	32
   152   00080F  20                 	db	32
   153   000810  20                 	db	32
   154   000811  00                 	db	0
   155   000812                     STR_6:
   156   000812  45                 	db	69	;'E'
   157   000813  6E                 	db	110	;'n'
   158   000814  20                 	db	32
   159   000815  52                 	db	82	;'R'
   160   000816  65                 	db	101	;'e'
   161   000817  73                 	db	115	;'s'
   162   000818  70                 	db	112	;'p'
   163   000819  6F                 	db	111	;'o'
   164   00081A  73                 	db	115	;'s'
   165   00081B  6F                 	db	111	;'o'
   166   00081C  00                 	db	0
   167   00081D                     STR_1:
   168   00081D  45                 	db	69	;'E'
   169   00081E  6E                 	db	110	;'n'
   170   00081F  65                 	db	101	;'e'
   171   000820  72                 	db	114	;'r'
   172   000821  67                 	db	103	;'g'
   173   000822  69                 	db	105	;'i'
   174   000823  61                 	db	97	;'a'
   175   000824  00                 	db	0
   176   000825                     STR_5:
   177   000825  49                 	db	73	;'I'
   178   000826  6E                 	db	110	;'n'
   179   000827  64                 	db	100	;'d'
   180   000828  2E                 	db	46
   181   000829  00                 	db	0
   182   00082A                     STR_4:
   183   00082A  49                 	db	73	;'I'
   184   00082B  6E                 	db	110	;'n'
   185   00082C  66                 	db	102	;'f'
   186   00082D  2E                 	db	46
   187   00082E  00                 	db	0
   188   00082F                     STR_2:
   189   00082F  4D                 	db	77	;'M'
   190   000830  43                 	db	67	;'C'
   191   000831  4C                 	db	76	;'L'
   192   000832  52                 	db	82	;'R'
   193   000833  00                 	db	0
   194   000834  00                 	db	0	; dummy byte at the end
   195   000000                     
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   001724                     __pcinit:
   200                           	callstack 0
   201   001724                     start_initialization:
   202                           	callstack 0
   203   001724                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (12 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   001724  0E3E               	movlw	low __pidataCOMRAM
   209   001726  6EF6               	movwf	tblptrl,c
   210   001728  0E18               	movlw	high __pidataCOMRAM
   211   00172A  6EF7               	movwf	tblptrh,c
   212   00172C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   00172E  6EF8               	movwf	tblptru,c
   214   001730  EE00  F039         	lfsr	0,__pdataCOMRAM
   215   001734  EE10 F00C          	lfsr	1,12
   216   001738                     copy_data0:
   217   001738  0009               	tblrd		*+
   218   00173A  CFF5 FFEE          	movff	tablat,postinc0
   219   00173E  50E5               	movf	postdec1,w,c
   220   001740  50E1               	movf	fsr1l,w,c
   221   001742  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to COMRAM (26 bytes)
   224   001744  EE00  F01F         	lfsr	0,__pbssCOMRAM
   225   001748  0E1A               	movlw	26
   226   00174A                     clear_0:
   227   00174A  6AEE               	clrf	postinc0,c
   228   00174C  06E8               	decf	wreg,f,c
   229   00174E  E1FD               	bnz	clear_0
   230   001750                     end_of_initialization:
   231                           	callstack 0
   232   001750                     __end_of__initialization:
   233                           	callstack 0
   234   001750  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235   001752  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236   001754  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237   001756  6EF8               	movwf	tblptru,c
   238   001758  0100               	movlb	0
   239   00175A  EF1B  F004         	goto	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMRAM
   242   00001F                     __pbssCOMRAM:
   243                           	callstack 0
   244   00001F                     _r:
   245                           	callstack 0
   246   00001F                     	ds	4
   247   000023                     _partdecl:
   248                           	callstack 0
   249   000023                     	ds	4
   250   000027                     _verificador:
   251                           	callstack 0
   252   000027                     	ds	2
   253   000029                     _contador:
   254                           	callstack 0
   255   000029                     	ds	2
   256   00002B                     _color:
   257                           	callstack 0
   258   00002B                     	ds	2
   259   00002D                     _i:
   260                           	callstack 0
   261   00002D                     	ds	2
   262   00002F                     _n2:
   263                           	callstack 0
   264   00002F                     	ds	2
   265   000031                     _n1:
   266                           	callstack 0
   267   000031                     	ds	2
   268   000033                     _flag:
   269                           	callstack 0
   270   000033                     	ds	1
   271   000034                     _Tecla:
   272                           	callstack 0
   273   000034                     	ds	1
   274   000035                     _m:
   275                           	callstack 0
   276   000035                     	ds	4
   277                           
   278                           	psect	dataCOMRAM
   279   000039                     __pdataCOMRAM:
   280                           	callstack 0
   281   000039                     main@F3172:
   282                           	callstack 0
   283   000039                     	ds	8
   284   000041                     _n2c:
   285                           	callstack 0
   286   000041                     	ds	1
   287   000042                     _n1c:
   288                           	callstack 0
   289   000042                     	ds	1
   290   000043                     _op:
   291                           	callstack 0
   292   000043                     	ds	1
   293   000044                     _interfaz:
   294                           	callstack 0
   295   000044                     	ds	1
   296                           
   297                           	psect	cstackBANK0
   298   000060                     __pcstackBANK0:
   299                           	callstack 0
   300   000060                     main@heart:
   301                           	callstack 0
   302                           
   303                           ; 8 bytes @ 0x0
   304   000060                     	ds	8
   305   000068                     main@k:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x8
   309   000068                     	ds	2
   310   00006A                     main@i:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xA
   314   00006A                     	ds	2
   315   00006C                     main@j:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319   00006C                     	ds	2
   320                           
   321                           	psect	cstackCOMRAM
   322   000001                     __pcstackCOMRAM:
   323                           	callstack 0
   324   000001                     ??i2_RetardoLCD:
   325                           
   326                           ; 1 bytes @ 0x0
   327   000001                     	ds	1
   328   000002                     i2RetardoLCD@a:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x1
   332   000002                     	ds	1
   333   000003                     ??i2_EnviaDato:
   334                           
   335                           ; 1 bytes @ 0x2
   336   000003                     	ds	1
   337   000004                     i2EnviaDato@a:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x3
   341   000004                     	ds	1
   342   000005                     i2EscribeLCD_c@a:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x4
   346   000005                     	ds	1
   347   000006                     i2MensajeLCD_Word@a:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x5
   351   000006                     	ds	1
   352   000007                     ??i2_MensajeLCD_Word:
   353                           
   354                           ; 1 bytes @ 0x6
   355   000007                     	ds	1
   356   000008                     i2MensajeLCD_Word@i:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x7
   360   000008                     	ds	2
   361   00000A                     ??_ISR:
   362                           
   363                           ; 1 bytes @ 0x9
   364   00000A                     	ds	4
   365   00000E                     ??_RetardoLCD:
   366   00000E                     ??_LeerTeclado:
   367   00000E                     ??_ColorRGB:
   368   00000E                     ?___wmul:
   369                           	callstack 0
   370   00000E                     ?___lwmod:
   371                           	callstack 0
   372   00000E                     ?___lmul:
   373                           	callstack 0
   374   00000E                     ?___lldiv:
   375                           	callstack 0
   376   00000E                     ?___llmod:
   377                           	callstack 0
   378   00000E                     ___wmul@multiplier:
   379                           	callstack 0
   380   00000E                     ___lwmod@dividend:
   381                           	callstack 0
   382   00000E                     ___lmul@multiplier:
   383                           	callstack 0
   384   00000E                     ___lldiv@dividend:
   385                           	callstack 0
   386   00000E                     ___llmod@dividend:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0xD
   390   00000E                     	ds	1
   391   00000F                     RetardoLCD@a:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xE
   395   00000F                     	ds	1
   396   000010                     ??_EnviaDato:
   397   000010                     ___wmul@multiplicand:
   398                           	callstack 0
   399   000010                     ___lwmod@divisor:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xF
   403   000010                     	ds	1
   404   000011                     EnviaDato@a:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x10
   408   000011                     	ds	1
   409   000012                     EscribeLCD_c@a:
   410                           	callstack 0
   411   000012                     DireccionaLCD@a:
   412                           	callstack 0
   413   000012                     ___lwmod@counter:
   414                           	callstack 0
   415   000012                     ___wmul@product:
   416                           	callstack 0
   417   000012                     ___lmul@multiplicand:
   418                           	callstack 0
   419   000012                     ___lldiv@divisor:
   420                           	callstack 0
   421   000012                     ___llmod@divisor:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x11
   425   000012                     	ds	1
   426   000013                     NuevoCarac@mapeo:
   427                           	callstack 0
   428   000013                     MensajeLCD_Word@a:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x12
   432   000013                     	ds	1
   433   000014                     ??_MensajeLCD_Word:
   434   000014                     ?___lwdiv:
   435                           	callstack 0
   436   000014                     NuevoCarac@ubicacion:
   437                           	callstack 0
   438   000014                     ___lwdiv@dividend:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x13
   442   000014                     	ds	1
   443   000015                     NuevoCarac@i:
   444                           	callstack 0
   445   000015                     MensajeLCD_Word@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x14
   449   000015                     	ds	1
   450   000016                     ___llmod@counter:
   451                           	callstack 0
   452   000016                     ___lwdiv@divisor:
   453                           	callstack 0
   454   000016                     ___lmul@product:
   455                           	callstack 0
   456   000016                     ___lldiv@quotient:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x15
   460   000016                     	ds	2
   461   000018                     ___lwdiv@counter:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x17
   465   000018                     	ds	1
   466   000019                     ___lwdiv@quotient:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x18
   470   000019                     	ds	1
   471   00001A                     ___lldiv@counter:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x19
   475   00001A                     	ds	1
   476   00001B                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x1A
   479   00001B                     	ds	4
   480                           
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 29 in file "Laboratorio4.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  k               2    8[BANK0 ] int 
   491 ;;  j               2   12[BANK0 ] int 
   492 ;;  i               2   10[BANK0 ] int 
   493 ;;  heart           8    0[BANK0 ] unsigned char [8]
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         0       0       0       0       0       0       0       0       0
   504 ;;      Locals:         0      14       0       0       0       0       0       0       0
   505 ;;      Temps:          4       0       0       0       0       0       0       0       0
   506 ;;      Totals:         4      14       0       0       0       0       0       0       0
   507 ;;Total ram usage:       18 bytes
   508 ;; Hardware stack levels required when called: 9
   509 ;; This function calls:
   510 ;;		_BorraLCD
   511 ;;		_ColorRGB
   512 ;;		_DireccionaLCD
   513 ;;		_EscribeLCD_c
   514 ;;		_InicializaLCD
   515 ;;		_LeerTeclado
   516 ;;		_MensajeLCD_Word
   517 ;;		_NuevoCarac
   518 ;;		___lldiv
   519 ;;		___llmod
   520 ;;		___lmul
   521 ;;		___lwdiv
   522 ;;		___lwmod
   523 ;;		___wmul
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text0
   530   000836                     __ptext0:
   531                           	callstack 0
   532   000836                     _main:
   533                           	callstack 22
   534                           
   535                           ;Laboratorio4.c: 30: ADCON1=15;
   536                           
   537                           ;incstack = 0
   538   000836  0E0F               	movlw	15
   539   000838  6EC1               	movwf	193,c	;volatile
   540                           
   541                           ;Laboratorio4.c: 31: TRISD=0;
   542   00083A  0E00               	movlw	0
   543   00083C  6E95               	movwf	149,c	;volatile
   544                           
   545                           ;Laboratorio4.c: 32: TRISB=0b11110000;
   546   00083E  0EF0               	movlw	240
   547   000840  6E93               	movwf	147,c	;volatile
   548                           
   549                           ;Laboratorio4.c: 33: TRISE=0;
   550   000842  0E00               	movlw	0
   551   000844  6E96               	movwf	150,c	;volatile
   552                           
   553                           ;Laboratorio4.c: 34: TRISC=0b11110000;
   554   000846  0EF0               	movlw	240
   555   000848  6E94               	movwf	148,c	;volatile
   556                           
   557                           ;Laboratorio4.c: 35: RBPU=0;
   558   00084A  9EF1               	bcf	4081,7,c	;volatile
   559                           
   560                           ;Laboratorio4.c: 36: InicializaLCD();
   561   00084C  ECF5  F008         	call	_InicializaLCD	;wreg free
   562                           
   563                           ;Laboratorio4.c: 38: T0CON=0b10000010;
   564   000850  0E82               	movlw	130
   565   000852  6ED5               	movwf	213,c	;volatile
   566                           
   567                           ;Laboratorio4.c: 39: TMR0IF=0;
   568   000854  94F2               	bcf	4082,2,c	;volatile
   569                           
   570                           ;Laboratorio4.c: 40: TMR0=49911;
   571   000856  0EC2               	movlw	194
   572   000858  6ED7               	movwf	215,c	;volatile
   573   00085A  0EF7               	movlw	247
   574   00085C  6ED6               	movwf	214,c	;volatile
   575                           
   576                           ;Laboratorio4.c: 41: TMR0IE=1;
   577   00085E  8AF2               	bsf	4082,5,c	;volatile
   578                           
   579                           ;Laboratorio4.c: 42: GIE=1;
   580   000860  8EF2               	bsf	4082,7,c	;volatile
   581                           
   582                           ;Laboratorio4.c: 43: TMR0ON=1;
   583   000862  8ED5               	bsf	4053,7,c	;volatile
   584                           
   585                           ;Laboratorio4.c: 46: OSCCON = 0b11000100;
   586   000864  0EC4               	movlw	196
   587   000866  6ED3               	movwf	211,c	;volatile
   588                           
   589                           ;Laboratorio4.c: 49: unsigned char heart[]={;Laboratorio4.c: 50: 0b00000,;Laboratorio4.c
      +                          : 51: 0b11011,;Laboratorio4.c: 52: 0b11111,;Laboratorio4.c: 53: 0b11111,;Laboratorio4.c:
      +                           54: 0b01110,;Laboratorio4.c: 55: 0b00100,;Laboratorio4.c: 56: 0b00000,;Laboratorio4.c: 
      +                          57: 0b00000;Laboratorio4.c: 58: };
   590   000868  EE20  F039         	lfsr	2,main@F3172
   591   00086C  EE10  F060         	lfsr	1,main@heart
   592   000870  0E07               	movlw	7
   593   000872                     u3371:
   594   000872  CFDB FFE3          	movff	plusw2,plusw1
   595   000876  06E8               	decf	wreg,f,c
   596   000878  E2FC               	bc	u3371
   597                           
   598                           ;Laboratorio4.c: 60: BorraLCD();
   599   00087A  ECFD  F00B         	call	_BorraLCD	;wreg free
   600                           
   601                           ;Laboratorio4.c: 61: if(TO == 1 & RI == 1){
   602   00087E  0E01               	movlw	1
   603   000880  A6D0               	btfss	4048,3,c	;volatile
   604   000882  0E00               	movlw	0
   605   000884  A8D0               	btfss	4048,4,c	;volatile
   606   000886  0E00               	movlw	0
   607   000888  A0E8               	btfss	wreg,0,c
   608   00088A  D008               	goto	l3196
   609                           
   610                           ;Laboratorio4.c: 62: BorraLCD();
   611   00088C  ECFD  F00B         	call	_BorraLCD	;wreg free
   612                           
   613                           ;Laboratorio4.c: 63: RI = 0;
   614   000890  98D0               	bcf	4048,4,c	;volatile
   615                           
   616                           ;Laboratorio4.c: 64: MensajeLCD_Word("Energia");
   617   000892  0E1D               	movlw	low STR_1
   618   000894  6E13               	movwf	MensajeLCD_Word@a^0,c
   619   000896  ECDD  F00A         	call	_MensajeLCD_Word	;wreg free
   620                           
   621                           ;Laboratorio4.c: 65: }else{
   622   00089A  D014               	goto	l3202
   623   00089C                     l3196:
   624                           
   625                           ;Laboratorio4.c: 66: if(TO == 1 | PD == 0 ){
   626   00089C  A6D0               	btfss	4048,3,c	;volatile
   627   00089E  D002               	goto	u3390
   628   0008A0  0E01               	movlw	1
   629   0008A2  D001               	goto	u3392
   630   0008A4                     u3390:
   631   0008A4  0E00               	movlw	0
   632   0008A6                     u3392:
   633   0008A6  6E1B               	movwf	??_main^0,c
   634   0008A8  B4D0               	btfsc	4048,2,c	;volatile
   635   0008AA  D002               	goto	u3400
   636   0008AC  0E01               	movlw	1
   637   0008AE  D001               	goto	u3402
   638   0008B0                     u3400:
   639   0008B0  0E00               	movlw	0
   640   0008B2                     u3402:
   641   0008B2  101B               	iorwf	??_main^0,w,c
   642   0008B4  A0E8               	btfss	wreg,0,c
   643   0008B6  D006               	goto	l3202
   644                           
   645                           ;Laboratorio4.c: 67: BorraLCD();
   646   0008B8  ECFD  F00B         	call	_BorraLCD	;wreg free
   647                           
   648                           ;Laboratorio4.c: 68: MensajeLCD_Word("MCLR");
   649   0008BC  0E2F               	movlw	low STR_2
   650   0008BE  6E13               	movwf	MensajeLCD_Word@a^0,c
   651   0008C0  ECDD  F00A         	call	_MensajeLCD_Word	;wreg free
   652   0008C4                     l3202:
   653                           
   654                           ;Laboratorio4.c: 69: };Laboratorio4.c: 70: };Laboratorio4.c: 71: _delay((unsigned long)(
      +                          (2000)*(1000000/4000.0)));
   655   0008C4  0E03               	movlw	3
   656   0008C6  6E1C               	movwf	(??_main+1)^0,c
   657   0008C8  0E8A               	movlw	138
   658   0008CA  6E1B               	movwf	??_main^0,c
   659   0008CC  0E56               	movlw	86
   660   0008CE                     u4147:
   661   0008CE  2EE8               	decfsz	wreg,f,c
   662   0008D0  D7FE               	bra	u4147
   663   0008D2  2E1B               	decfsz	??_main^0,f,c
   664   0008D4  D7FC               	bra	u4147
   665   0008D6  2E1C               	decfsz	(??_main+1)^0,f,c
   666   0008D8  D7FA               	bra	u4147
   667                           
   668                           ;Laboratorio4.c: 72: BorraLCD();
   669   0008DA  ECFD  F00B         	call	_BorraLCD	;wreg free
   670   0008DE                     l3206:
   671                           
   672                           ;Laboratorio4.c: 74: LATB=0B00000000;
   673   0008DE  0E00               	movlw	0
   674   0008E0  6E8A               	movwf	138,c	;volatile
   675                           
   676                           ;Laboratorio4.c: 75: verificador = 0;
   677   0008E2  0E00               	movlw	0
   678   0008E4  6E28               	movwf	(_verificador+1)^0,c
   679   0008E6  0E00               	movlw	0
   680   0008E8  6E27               	movwf	_verificador^0,c
   681                           
   682                           ;Laboratorio4.c: 76: NuevoCarac(0,heart);
   683   0008EA  0E60               	movlw	low main@heart
   684   0008EC  6E13               	movwf	NuevoCarac@mapeo^0,c
   685   0008EE  0E00               	movlw	0
   686   0008F0  ECAF  F00B         	call	_NuevoCarac
   687                           
   688                           ;Laboratorio4.c: 77: EscribeLCD_c(0);
   689   0008F4  0E00               	movlw	0
   690   0008F6  ECE7  F00B         	call	_EscribeLCD_c
   691                           
   692                           ;Laboratorio4.c: 78: Tecla = LeerTeclado();
   693   0008FA  EC68  F008         	call	_LeerTeclado	;wreg free
   694   0008FE  6E34               	movwf	_Tecla^0,c
   695                           
   696                           ;Laboratorio4.c: 79: ColorRGB();
   697   000900  ECC3  F009         	call	_ColorRGB	;wreg free
   698                           
   699                           ;Laboratorio4.c: 80: if(Tecla=='C'){
   700   000904  0E43               	movlw	67
   701   000906  1834               	xorwf	_Tecla^0,w,c
   702   000908  A4D8               	btfss	status,2,c
   703   00090A  D02D               	goto	l3244
   704                           
   705                           ;Laboratorio4.c: 81: DireccionaLCD(0xC0);
   706   00090C  0EC0               	movlw	192
   707   00090E  ECDC  F00B         	call	_DireccionaLCD
   708                           
   709                           ;Laboratorio4.c: 83: op = ' ';
   710   000912  0E20               	movlw	32
   711   000914  6E43               	movwf	_op^0,c
   712                           
   713                           ;Laboratorio4.c: 84: n1c = ' ';
   714   000916  0E20               	movlw	32
   715   000918  6E42               	movwf	_n1c^0,c
   716                           
   717                           ;Laboratorio4.c: 85: n2c = ' ';
   718   00091A  0E20               	movlw	32
   719   00091C  6E41               	movwf	_n2c^0,c
   720                           
   721                           ;Laboratorio4.c: 86: n1 = 0;
   722   00091E  0E00               	movlw	0
   723   000920  6E32               	movwf	(_n1+1)^0,c
   724   000922  0E00               	movlw	0
   725   000924  6E31               	movwf	_n1^0,c
   726                           
   727                           ;Laboratorio4.c: 87: n2 = 0;
   728   000926  0E00               	movlw	0
   729   000928  6E30               	movwf	(_n2+1)^0,c
   730   00092A  0E00               	movlw	0
   731   00092C  6E2F               	movwf	_n2^0,c
   732                           
   733                           ;Laboratorio4.c: 88: i = 0;
   734   00092E  0E00               	movlw	0
   735   000930  6E2E               	movwf	(_i+1)^0,c
   736   000932  0E00               	movlw	0
   737   000934  6E2D               	movwf	_i^0,c
   738                           
   739                           ;Laboratorio4.c: 89: partdecl = 0;
   740   000936  0E00               	movlw	0
   741   000938  6E23               	movwf	_partdecl^0,c
   742   00093A  0E00               	movlw	0
   743   00093C  6E24               	movwf	(_partdecl+1)^0,c
   744   00093E  0E00               	movlw	0
   745   000940  6E25               	movwf	(_partdecl+2)^0,c
   746   000942  0E00               	movlw	0
   747   000944  6E26               	movwf	(_partdecl+3)^0,c
   748                           
   749                           ;Laboratorio4.c: 90: flag = 0;
   750   000946  0E00               	movlw	0
   751   000948  6E33               	movwf	_flag^0,c
   752                           
   753                           ;Laboratorio4.c: 91: DireccionaLCD(0x80);
   754   00094A  0E80               	movlw	128
   755   00094C  ECDC  F00B         	call	_DireccionaLCD
   756                           
   757                           ;Laboratorio4.c: 92: MensajeLCD_Word("                ");
   758   000950  0E01               	movlw	low STR_3
   759   000952  6E13               	movwf	MensajeLCD_Word@a^0,c
   760   000954  ECDD  F00A         	call	_MensajeLCD_Word	;wreg free
   761                           
   762                           ;Laboratorio4.c: 93: DireccionaLCD(0xC0);
   763   000958  0EC0               	movlw	192
   764   00095A  ECDC  F00B         	call	_DireccionaLCD
   765                           
   766                           ;Laboratorio4.c: 94: DireccionaLCD(0x80);
   767   00095E  0E80               	movlw	128
   768   000960  ECDC  F00B         	call	_DireccionaLCD
   769                           
   770                           ;Laboratorio4.c: 95: }else{
   771   000964  D7BC               	goto	l3206
   772   000966                     l3244:
   773                           
   774                           ;Laboratorio4.c: 96: if(n1c==' '|n2c==' '|op==' '){
   775   000966  0E20               	movlw	32
   776   000968  1842               	xorwf	_n1c^0,w,c
   777   00096A  B4D8               	btfsc	status,2,c
   778   00096C  D008               	goto	u3450
   779   00096E  0E20               	movlw	32
   780   000970  1841               	xorwf	_n2c^0,w,c
   781   000972  B4D8               	btfsc	status,2,c
   782   000974  D004               	goto	u3450
   783   000976  0E20               	movlw	32
   784   000978  1843               	xorwf	_op^0,w,c
   785   00097A  A4D8               	btfss	status,2,c
   786   00097C  D0AD               	goto	l3334
   787   00097E                     u3450:
   788                           
   789                           ;Laboratorio4.c: 97: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla!='=
      +                          ') & n1c != ' ' & n2c ==' '){
   790   00097E  0E20               	movlw	32
   791   000980  1843               	xorwf	_op^0,w,c
   792   000982  A4D8               	btfss	status,2,c
   793   000984  D02B               	goto	l3274
   794   000986  0E2B               	movlw	43
   795   000988  1834               	xorwf	_Tecla^0,w,c
   796   00098A  B4D8               	btfsc	status,2,c
   797   00098C  D010               	goto	u3510
   798   00098E  0E2D               	movlw	45
   799   000990  1834               	xorwf	_Tecla^0,w,c
   800   000992  B4D8               	btfsc	status,2,c
   801   000994  D00C               	goto	u3510
   802   000996  0E2F               	movlw	47
   803   000998  1834               	xorwf	_Tecla^0,w,c
   804   00099A  B4D8               	btfsc	status,2,c
   805   00099C  D008               	goto	u3510
   806   00099E  0E78               	movlw	120
   807   0009A0  1834               	xorwf	_Tecla^0,w,c
   808   0009A2  B4D8               	btfsc	status,2,c
   809   0009A4  D004               	goto	u3510
   810   0009A6  0E3D               	movlw	61
   811   0009A8  1834               	xorwf	_Tecla^0,w,c
   812   0009AA  B4D8               	btfsc	status,2,c
   813   0009AC  D017               	goto	l3274
   814   0009AE                     u3510:
   815   0009AE  0E20               	movlw	32
   816   0009B0  1842               	xorwf	_n1c^0,w,c
   817   0009B2  B4D8               	btfsc	status,2,c
   818   0009B4  D013               	goto	l3274
   819   0009B6  0E20               	movlw	32
   820   0009B8  1841               	xorwf	_n2c^0,w,c
   821   0009BA  A4D8               	btfss	status,2,c
   822   0009BC  D00F               	goto	l3274
   823                           
   824                           ;Laboratorio4.c: 98: DireccionaLCD(0x81);
   825   0009BE  0E81               	movlw	129
   826   0009C0  ECDC  F00B         	call	_DireccionaLCD
   827                           
   828                           ;Laboratorio4.c: 99: EscribeLCD_c(Tecla);
   829   0009C4  5034               	movf	_Tecla^0,w,c
   830   0009C6  ECE7  F00B         	call	_EscribeLCD_c
   831                           
   832                           ;Laboratorio4.c: 100: op = Tecla;
   833   0009CA  C034  F043         	movff	_Tecla,_op
   834                           
   835                           ;Laboratorio4.c: 101: if(Tecla=='!') n2c = 'A';
   836   0009CE  0E21               	movlw	33
   837   0009D0  1834               	xorwf	_Tecla^0,w,c
   838   0009D2  A4D8               	btfss	status,2,c
   839   0009D4  D374               	goto	l3514
   840   0009D6  0E41               	movlw	65
   841   0009D8  6E41               	movwf	_n2c^0,c
   842   0009DA  D371               	goto	l3514
   843   0009DC                     l3274:
   844   0009DC  0E20               	movlw	32
   845   0009DE  1842               	xorwf	_n1c^0,w,c
   846   0009E0  A4D8               	btfss	status,2,c
   847   0009E2  D037               	goto	l3302
   848   0009E4  0E2B               	movlw	43
   849   0009E6  1834               	xorwf	_Tecla^0,w,c
   850   0009E8  A4D8               	btfss	status,2,c
   851   0009EA  D020               	goto	u3640
   852   0009EC  0E2D               	movlw	45
   853   0009EE  1834               	xorwf	_Tecla^0,w,c
   854   0009F0  A4D8               	btfss	status,2,c
   855   0009F2  D01C               	goto	u3640
   856   0009F4  0E2F               	movlw	47
   857   0009F6  1834               	xorwf	_Tecla^0,w,c
   858   0009F8  A4D8               	btfss	status,2,c
   859   0009FA  D018               	goto	u3640
   860   0009FC  0E78               	movlw	120
   861   0009FE  1834               	xorwf	_Tecla^0,w,c
   862   000A00  A4D8               	btfss	status,2,c
   863   000A02  D014               	goto	u3640
   864   000A04  0E3D               	movlw	61
   865   000A06  1834               	xorwf	_Tecla^0,w,c
   866   000A08  A4D8               	btfss	status,2,c
   867   000A0A  D010               	goto	u3640
   868   000A0C  0E43               	movlw	67
   869   000A0E  1834               	xorwf	_Tecla^0,w,c
   870   000A10  A4D8               	btfss	status,2,c
   871   000A12  D00C               	goto	u3640
   872   000A14  0E21               	movlw	33
   873   000A16  1834               	xorwf	_Tecla^0,w,c
   874   000A18  A4D8               	btfss	status,2,c
   875   000A1A  D008               	goto	u3640
   876   000A1C  0E5E               	movlw	94
   877   000A1E  1834               	xorwf	_Tecla^0,w,c
   878   000A20  A4D8               	btfss	status,2,c
   879   000A22  D004               	goto	u3640
   880   000A24  0E3D               	movlw	61
   881   000A26  1834               	xorwf	_Tecla^0,w,c
   882   000A28  B4D8               	btfsc	status,2,c
   883   000A2A  D013               	goto	l3302
   884   000A2C                     u3640:
   885   000A2C  0E20               	movlw	32
   886   000A2E  1843               	xorwf	_op^0,w,c
   887   000A30  A4D8               	btfss	status,2,c
   888   000A32  D00F               	goto	l3302
   889                           
   890                           ;Laboratorio4.c: 103: DireccionaLCD(0x80);
   891   000A34  0E80               	movlw	128
   892   000A36  ECDC  F00B         	call	_DireccionaLCD
   893                           
   894                           ;Laboratorio4.c: 104: EscribeLCD_c(Tecla);
   895   000A3A  5034               	movf	_Tecla^0,w,c
   896   000A3C  ECE7  F00B         	call	_EscribeLCD_c
   897                           
   898                           ;Laboratorio4.c: 105: n1c=Tecla;
   899   000A40  C034  F042         	movff	_Tecla,_n1c
   900                           
   901                           ;Laboratorio4.c: 106: n1 = Tecla-'0';
   902   000A44  0ED0               	movlw	208
   903   000A46  2434               	addwf	_Tecla^0,w,c
   904   000A48  6E31               	movwf	_n1^0,c
   905   000A4A  6A32               	clrf	(_n1+1)^0,c
   906   000A4C  0EFF               	movlw	255
   907   000A4E  2232               	addwfc	(_n1+1)^0,f,c
   908                           
   909                           ;Laboratorio4.c: 107: }else if(n2c==' ' & op!=' ' & op!='!' & n1c != ' ' & (Tecla!='+'|T
      +                          ecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='!'|Tecla!='^'|Tecla!='='))
      +                          {
   910   000A50  D336               	goto	l3514
   911   000A52                     l3302:
   912   000A52  0E20               	movlw	32
   913   000A54  1841               	xorwf	_n2c^0,w,c
   914   000A56  A4D8               	btfss	status,2,c
   915   000A58  D332               	goto	l3514
   916   000A5A  0E20               	movlw	32
   917   000A5C  1843               	xorwf	_op^0,w,c
   918   000A5E  B4D8               	btfsc	status,2,c
   919   000A60  D32E               	goto	l3514
   920   000A62  0E21               	movlw	33
   921   000A64  1843               	xorwf	_op^0,w,c
   922   000A66  B4D8               	btfsc	status,2,c
   923   000A68  D32A               	goto	l3514
   924   000A6A  0E20               	movlw	32
   925   000A6C  1842               	xorwf	_n1c^0,w,c
   926   000A6E  B4D8               	btfsc	status,2,c
   927   000A70  D326               	goto	l3514
   928   000A72  0E2B               	movlw	43
   929   000A74  1834               	xorwf	_Tecla^0,w,c
   930   000A76  A4D8               	btfss	status,2,c
   931   000A78  D020               	goto	u3780
   932   000A7A  0E2D               	movlw	45
   933   000A7C  1834               	xorwf	_Tecla^0,w,c
   934   000A7E  A4D8               	btfss	status,2,c
   935   000A80  D01C               	goto	u3780
   936   000A82  0E2F               	movlw	47
   937   000A84  1834               	xorwf	_Tecla^0,w,c
   938   000A86  A4D8               	btfss	status,2,c
   939   000A88  D018               	goto	u3780
   940   000A8A  0E78               	movlw	120
   941   000A8C  1834               	xorwf	_Tecla^0,w,c
   942   000A8E  A4D8               	btfss	status,2,c
   943   000A90  D014               	goto	u3780
   944   000A92  0E3D               	movlw	61
   945   000A94  1834               	xorwf	_Tecla^0,w,c
   946   000A96  A4D8               	btfss	status,2,c
   947   000A98  D010               	goto	u3780
   948   000A9A  0E43               	movlw	67
   949   000A9C  1834               	xorwf	_Tecla^0,w,c
   950   000A9E  A4D8               	btfss	status,2,c
   951   000AA0  D00C               	goto	u3780
   952   000AA2  0E21               	movlw	33
   953   000AA4  1834               	xorwf	_Tecla^0,w,c
   954   000AA6  A4D8               	btfss	status,2,c
   955   000AA8  D008               	goto	u3780
   956   000AAA  0E5E               	movlw	94
   957   000AAC  1834               	xorwf	_Tecla^0,w,c
   958   000AAE  A4D8               	btfss	status,2,c
   959   000AB0  D004               	goto	u3780
   960   000AB2  0E3D               	movlw	61
   961   000AB4  1834               	xorwf	_Tecla^0,w,c
   962   000AB6  B4D8               	btfsc	status,2,c
   963   000AB8  D302               	goto	l3514
   964   000ABA                     u3780:
   965                           
   966                           ;Laboratorio4.c: 108: DireccionaLCD(0x82);
   967   000ABA  0E82               	movlw	130
   968   000ABC  ECDC  F00B         	call	_DireccionaLCD
   969                           
   970                           ;Laboratorio4.c: 109: EscribeLCD_c(Tecla);
   971   000AC0  5034               	movf	_Tecla^0,w,c
   972   000AC2  ECE7  F00B         	call	_EscribeLCD_c
   973                           
   974                           ;Laboratorio4.c: 110: n2c=Tecla;
   975   000AC6  C034  F041         	movff	_Tecla,_n2c
   976                           
   977                           ;Laboratorio4.c: 111: n2 = Tecla-'0';
   978   000ACA  0ED0               	movlw	208
   979   000ACC  2434               	addwf	_Tecla^0,w,c
   980   000ACE  6E2F               	movwf	_n2^0,c
   981   000AD0  6A30               	clrf	(_n2+1)^0,c
   982   000AD2  0EFF               	movlw	255
   983   000AD4  2230               	addwfc	(_n2+1)^0,f,c
   984                           
   985                           ;Laboratorio4.c: 112: };Laboratorio4.c: 113: }else if(Tecla=='=' & n1c != ' ' & op!=' ' 
      +                          & n2c!=' '){
   986   000AD6  D2F3               	goto	l3514
   987   000AD8                     l3334:
   988   000AD8  0E3D               	movlw	61
   989   000ADA  1834               	xorwf	_Tecla^0,w,c
   990   000ADC  A4D8               	btfss	status,2,c
   991   000ADE  D2EC               	goto	l3512
   992   000AE0  0E20               	movlw	32
   993   000AE2  1842               	xorwf	_n1c^0,w,c
   994   000AE4  B4D8               	btfsc	status,2,c
   995   000AE6  D2E8               	goto	l3512
   996   000AE8  0E20               	movlw	32
   997   000AEA  1843               	xorwf	_op^0,w,c
   998   000AEC  B4D8               	btfsc	status,2,c
   999   000AEE  D2E4               	goto	l3512
  1000   000AF0  0E20               	movlw	32
  1001   000AF2  1841               	xorwf	_n2c^0,w,c
  1002   000AF4  B4D8               	btfsc	status,2,c
  1003   000AF6  D2E0               	goto	l3512
  1004                           
  1005                           ;Laboratorio4.c: 114: if(op=='!') DireccionaLCD(0x82);
  1006   000AF8  0E21               	movlw	33
  1007   000AFA  1843               	xorwf	_op^0,w,c
  1008   000AFC  A4D8               	btfss	status,2,c
  1009   000AFE  D004               	goto	l3346
  1010   000B00  0E82               	movlw	130
  1011   000B02  ECDC  F00B         	call	_DireccionaLCD
  1012   000B06  D003               	goto	l186
  1013   000B08                     l3346:
  1014                           
  1015                           ;Laboratorio4.c: 115: else DireccionaLCD(0x83);
  1016   000B08  0E83               	movlw	131
  1017   000B0A  ECDC  F00B         	call	_DireccionaLCD
  1018   000B0E                     l186:
  1019                           
  1020                           ;Laboratorio4.c: 116: EscribeLCD_c('=');
  1021   000B0E  0E3D               	movlw	61
  1022   000B10  ECE7  F00B         	call	_EscribeLCD_c
  1023                           
  1024                           ;Laboratorio4.c: 117: switch(op){
  1025   000B14  D0EF               	goto	l3408
  1026   000B16                     l3348:
  1027                           
  1028                           ;Laboratorio4.c: 119: r = n1 + n2;
  1029   000B16  502F               	movf	_n2^0,w,c
  1030   000B18  2431               	addwf	_n1^0,w,c
  1031   000B1A  6E1B               	movwf	??_main^0,c
  1032   000B1C  5030               	movf	(_n2+1)^0,w,c
  1033   000B1E  2032               	addwfc	(_n1+1)^0,w,c
  1034   000B20  6E1C               	movwf	(??_main+1)^0,c
  1035   000B22  C01B  F01F         	movff	??_main,_r
  1036   000B26  C01C  F020         	movff	??_main+1,_r+1
  1037   000B2A  6A21               	clrf	(_r+2)^0,c
  1038   000B2C  6A22               	clrf	(_r+3)^0,c
  1039   000B2E                     l3350:
  1040                           
  1041                           ;Laboratorio4.c: 120: partdecl = r*100;
  1042   000B2E  C01F  F00E         	movff	_r,___lmul@multiplier
  1043   000B32  C020  F00F         	movff	_r+1,___lmul@multiplier+1
  1044   000B36  C021  F010         	movff	_r+2,___lmul@multiplier+2
  1045   000B3A  C022  F011         	movff	_r+3,___lmul@multiplier+3
  1046   000B3E  0E64               	movlw	100
  1047   000B40  6E12               	movwf	___lmul@multiplicand^0,c
  1048   000B42  0E00               	movlw	0
  1049   000B44  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1050   000B46  0E00               	movlw	0
  1051   000B48  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1052   000B4A  0E00               	movlw	0
  1053   000B4C  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1054   000B4E  EC33  F00A         	call	___lmul	;wreg free
  1055   000B52  C00E  F023         	movff	?___lmul,_partdecl
  1056   000B56  C00F  F024         	movff	?___lmul+1,_partdecl+1
  1057   000B5A  C010  F025         	movff	?___lmul+2,_partdecl+2
  1058   000B5E  C011  F026         	movff	?___lmul+3,_partdecl+3
  1059                           
  1060                           ;Laboratorio4.c: 121: break;
  1061   000B62  D0DC               	goto	l3410
  1062   000B64                     l3352:
  1063                           
  1064                           ;Laboratorio4.c: 123: r = n1 - n2;
  1065   000B64  502F               	movf	_n2^0,w,c
  1066   000B66  5C31               	subwf	_n1^0,w,c
  1067   000B68  6E1B               	movwf	??_main^0,c
  1068   000B6A  5030               	movf	(_n2+1)^0,w,c
  1069   000B6C  5832               	subwfb	(_n1+1)^0,w,c
  1070   000B6E  D7D8               	goto	L1
  1071   000B70                     l3356:
  1072                           
  1073                           ;Laboratorio4.c: 127: r = n1*n2;
  1074   000B70  C031  F00E         	movff	_n1,___wmul@multiplier
  1075   000B74  C032  F00F         	movff	_n1+1,___wmul@multiplier+1
  1076   000B78  C02F  F010         	movff	_n2,___wmul@multiplicand
  1077   000B7C  C030  F011         	movff	_n2+1,___wmul@multiplicand+1
  1078   000B80  ECC9  F00B         	call	___wmul	;wreg free
  1079   000B84  C00E  F01F         	movff	?___wmul,_r
  1080   000B88  C00F  F020         	movff	?___wmul+1,_r+1
  1081   000B8C  D7CE               	goto	L2
  1082   000B8E                     l3360:
  1083                           
  1084                           ;Laboratorio4.c: 131: if(n2!=0){
  1085   000B8E  502F               	movf	_n2^0,w,c
  1086   000B90  1030               	iorwf	(_n2+1)^0,w,c
  1087   000B92  B4D8               	btfsc	status,2,c
  1088   000B94  D02F               	goto	l3368
  1089                           
  1090                           ;Laboratorio4.c: 132: if(n1!=0){
  1091   000B96  5031               	movf	_n1^0,w,c
  1092   000B98  1032               	iorwf	(_n1+1)^0,w,c
  1093   000B9A  B4D8               	btfsc	status,2,c
  1094   000B9C  D0BF               	goto	l3410
  1095                           
  1096                           ;Laboratorio4.c: 133: r = n1/n2;
  1097   000B9E  C031  F014         	movff	_n1,___lwdiv@dividend
  1098   000BA2  C032  F015         	movff	_n1+1,___lwdiv@dividend+1
  1099   000BA6  C02F  F016         	movff	_n2,___lwdiv@divisor
  1100   000BAA  C030  F017         	movff	_n2+1,___lwdiv@divisor+1
  1101   000BAE  ECB4  F00A         	call	___lwdiv	;wreg free
  1102   000BB2  C014  F01F         	movff	?___lwdiv,_r
  1103   000BB6  C015  F020         	movff	?___lwdiv+1,_r+1
  1104   000BBA  6A21               	clrf	(_r+2)^0,c
  1105   000BBC  6A22               	clrf	(_r+3)^0,c
  1106                           
  1107                           ;Laboratorio4.c: 134: partdecl = (n1*100)/n2;
  1108   000BBE  C031  F00E         	movff	_n1,___wmul@multiplier
  1109   000BC2  C032  F00F         	movff	_n1+1,___wmul@multiplier+1
  1110   000BC6  0E00               	movlw	0
  1111   000BC8  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1112   000BCA  0E64               	movlw	100
  1113   000BCC  6E10               	movwf	___wmul@multiplicand^0,c
  1114   000BCE  ECC9  F00B         	call	___wmul	;wreg free
  1115   000BD2  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1116   000BD6  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1117   000BDA  C02F  F016         	movff	_n2,___lwdiv@divisor
  1118   000BDE  C030  F017         	movff	_n2+1,___lwdiv@divisor+1
  1119   000BE2  ECB4  F00A         	call	___lwdiv	;wreg free
  1120   000BE6  C014  F023         	movff	?___lwdiv,_partdecl
  1121   000BEA  C015  F024         	movff	?___lwdiv+1,_partdecl+1
  1122   000BEE  6A25               	clrf	(_partdecl+2)^0,c
  1123   000BF0  6A26               	clrf	(_partdecl+3)^0,c
  1124   000BF2  D094               	goto	l3410
  1125   000BF4                     l3368:
  1126                           
  1127                           ;Laboratorio4.c: 137: if(n1 != 0 & n2 == 0) r = 1000;
  1128   000BF4  5031               	movf	_n1^0,w,c
  1129   000BF6  1032               	iorwf	(_n1+1)^0,w,c
  1130   000BF8  B4D8               	btfsc	status,2,c
  1131   000BFA  D006               	goto	l3374
  1132   000BFC  502F               	movf	_n2^0,w,c
  1133   000BFE  1030               	iorwf	(_n2+1)^0,w,c
  1134   000C00  A4D8               	btfss	status,2,c
  1135   000C02  D002               	goto	l3374
  1136   000C04  0EE8               	movlw	232
  1137   000C06  D009               	goto	L3
  1138   000C08                     l3374:
  1139                           
  1140                           ;Laboratorio4.c: 138: else if(n1 == 0 & n2 == 0) r = 1001;
  1141   000C08  5031               	movf	_n1^0,w,c
  1142   000C0A  1032               	iorwf	(_n1+1)^0,w,c
  1143   000C0C  A4D8               	btfss	status,2,c
  1144   000C0E  D78F               	goto	l3350
  1145   000C10  502F               	movf	_n2^0,w,c
  1146   000C12  1030               	iorwf	(_n2+1)^0,w,c
  1147   000C14  A4D8               	btfss	status,2,c
  1148   000C16  D78B               	goto	l3350
  1149   000C18  0EE9               	movlw	233
  1150   000C1A                     L3:
  1151   000C1A  6E1F               	movwf	_r^0,c
  1152   000C1C  0E03               	movlw	3
  1153   000C1E  6E20               	movwf	(_r+1)^0,c
  1154   000C20  0E00               	movlw	0
  1155   000C22  6E21               	movwf	(_r+2)^0,c
  1156   000C24  0E00               	movlw	0
  1157   000C26  6E22               	movwf	(_r+3)^0,c
  1158   000C28  D782               	goto	l3350
  1159   000C2A                     l3382:
  1160                           
  1161                           ;Laboratorio4.c: 143: r = n1;
  1162   000C2A  C031  F01F         	movff	_n1,_r
  1163   000C2E  C032  F020         	movff	_n1+1,_r+1
  1164   000C32  6A21               	clrf	(_r+2)^0,c
  1165   000C34  6A22               	clrf	(_r+3)^0,c
  1166   000C36  D021               	goto	l3388
  1167   000C38                     l3384:
  1168                           
  1169                           ;Laboratorio4.c: 145: r = r * (n1-1);
  1170   000C38  0EFF               	movlw	255
  1171   000C3A  2431               	addwf	_n1^0,w,c
  1172   000C3C  6E1B               	movwf	??_main^0,c
  1173   000C3E  0EFF               	movlw	255
  1174   000C40  2032               	addwfc	(_n1+1)^0,w,c
  1175   000C42  6E1C               	movwf	(??_main+1)^0,c
  1176   000C44  C01B  F00E         	movff	??_main,___lmul@multiplier
  1177   000C48  C01C  F00F         	movff	??_main+1,___lmul@multiplier+1
  1178   000C4C  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1179   000C4E  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1180   000C50  C01F  F012         	movff	_r,___lmul@multiplicand
  1181   000C54  C020  F013         	movff	_r+1,___lmul@multiplicand+1
  1182   000C58  C021  F014         	movff	_r+2,___lmul@multiplicand+2
  1183   000C5C  C022  F015         	movff	_r+3,___lmul@multiplicand+3
  1184   000C60  EC33  F00A         	call	___lmul	;wreg free
  1185   000C64  C00E  F01F         	movff	?___lmul,_r
  1186   000C68  C00F  F020         	movff	?___lmul+1,_r+1
  1187   000C6C  C010  F021         	movff	?___lmul+2,_r+2
  1188   000C70  C011  F022         	movff	?___lmul+3,_r+3
  1189   000C74  0631               	decf	_n1^0,f,c
  1190   000C76  A0D8               	btfss	status,0,c
  1191   000C78  0632               	decf	(_n1+1)^0,f,c
  1192   000C7A                     l3388:
  1193   000C7A  5032               	movf	(_n1+1)^0,w,c
  1194   000C7C  E1DD               	bnz	l3384
  1195   000C7E  0E02               	movlw	2
  1196   000C80  5C31               	subwf	_n1^0,w,c
  1197   000C82  A0D8               	btfss	status,0,c
  1198   000C84  D754               	goto	l3350
  1199   000C86  D7D8               	goto	l3384
  1200   000C88                     l3392:
  1201                           
  1202                           ;Laboratorio4.c: 150: r = n1;
  1203   000C88  C031  F01F         	movff	_n1,_r
  1204   000C8C  C032  F020         	movff	_n1+1,_r+1
  1205   000C90  6A21               	clrf	(_r+2)^0,c
  1206   000C92  6A22               	clrf	(_r+3)^0,c
  1207                           
  1208                           ;Laboratorio4.c: 151: n2 = n2-1;
  1209   000C94  0EFF               	movlw	255
  1210   000C96  242F               	addwf	_n2^0,w,c
  1211   000C98  6E2F               	movwf	_n2^0,c
  1212   000C9A  0EFF               	movlw	255
  1213   000C9C  2030               	addwfc	(_n2+1)^0,w,c
  1214   000C9E  6E30               	movwf	(_n2+1)^0,c
  1215   000CA0  D01B               	goto	l3400
  1216   000CA2                     l3396:
  1217                           
  1218                           ;Laboratorio4.c: 153: r = r * n1;
  1219   000CA2  C031  F00E         	movff	_n1,___lmul@multiplier
  1220   000CA6  C032  F00F         	movff	_n1+1,___lmul@multiplier+1
  1221   000CAA  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1222   000CAC  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1223   000CAE  C01F  F012         	movff	_r,___lmul@multiplicand
  1224   000CB2  C020  F013         	movff	_r+1,___lmul@multiplicand+1
  1225   000CB6  C021  F014         	movff	_r+2,___lmul@multiplicand+2
  1226   000CBA  C022  F015         	movff	_r+3,___lmul@multiplicand+3
  1227   000CBE  EC33  F00A         	call	___lmul	;wreg free
  1228   000CC2  C00E  F01F         	movff	?___lmul,_r
  1229   000CC6  C00F  F020         	movff	?___lmul+1,_r+1
  1230   000CCA  C010  F021         	movff	?___lmul+2,_r+2
  1231   000CCE  C011  F022         	movff	?___lmul+3,_r+3
  1232   000CD2  062F               	decf	_n2^0,f,c
  1233   000CD4  A0D8               	btfss	status,0,c
  1234   000CD6  0630               	decf	(_n2+1)^0,f,c
  1235   000CD8                     l3400:
  1236   000CD8  502F               	movf	_n2^0,w,c
  1237   000CDA  1030               	iorwf	(_n2+1)^0,w,c
  1238   000CDC  B4D8               	btfsc	status,2,c
  1239   000CDE  D727               	goto	l3350
  1240   000CE0  D7E0               	goto	l3396
  1241   000CE2                     l3404:
  1242                           
  1243                           ;Laboratorio4.c: 158: r = 0;
  1244   000CE2  0E00               	movlw	0
  1245   000CE4  6E1F               	movwf	_r^0,c
  1246   000CE6  0E00               	movlw	0
  1247   000CE8  6E20               	movwf	(_r+1)^0,c
  1248   000CEA  0E00               	movlw	0
  1249   000CEC  6E21               	movwf	(_r+2)^0,c
  1250   000CEE  0E00               	movlw	0
  1251   000CF0  6E22               	movwf	(_r+3)^0,c
  1252                           
  1253                           ;Laboratorio4.c: 159: break;
  1254   000CF2  D014               	goto	l3410
  1255   000CF4                     l3408:
  1256   000CF4  5043               	movf	_op^0,w,c
  1257                           
  1258                           ; Switch size 1, requested type "simple"
  1259                           ; Number of cases is 6, Range of values is 33 to 120
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; simple_byte           19    10 (average)
  1263                           ;	Chosen strategy is simple_byte
  1264   000CF6  0A21               	xorlw	33	; case 33
  1265   000CF8  B4D8               	btfsc	status,2,c
  1266   000CFA  D797               	goto	l3382
  1267   000CFC  0A0A               	xorlw	10	; case 43
  1268   000CFE  B4D8               	btfsc	status,2,c
  1269   000D00  D70A               	goto	l3348
  1270   000D02  0A06               	xorlw	6	; case 45
  1271   000D04  B4D8               	btfsc	status,2,c
  1272   000D06  D72E               	goto	l3352
  1273   000D08  0A02               	xorlw	2	; case 47
  1274   000D0A  B4D8               	btfsc	status,2,c
  1275   000D0C  D740               	goto	l3360
  1276   000D0E  0A71               	xorlw	113	; case 94
  1277   000D10  B4D8               	btfsc	status,2,c
  1278   000D12  D7BA               	goto	l3392
  1279   000D14  0A26               	xorlw	38	; case 120
  1280   000D16  B4D8               	btfsc	status,2,c
  1281   000D18  D72B               	goto	l3356
  1282   000D1A  D7E3               	goto	l3404
  1283   000D1C                     l3410:
  1284                           
  1285                           ;Laboratorio4.c: 161: if(op=='!') DireccionaLCD(0x83);
  1286   000D1C  0E21               	movlw	33
  1287   000D1E  1843               	xorwf	_op^0,w,c
  1288   000D20  A4D8               	btfss	status,2,c
  1289   000D22  D004               	goto	l3414
  1290   000D24  0E83               	movlw	131
  1291   000D26  ECDC  F00B         	call	_DireccionaLCD
  1292   000D2A  D003               	goto	l209
  1293   000D2C                     l3414:
  1294                           
  1295                           ;Laboratorio4.c: 162: else DireccionaLCD(0x84);
  1296   000D2C  0E84               	movlw	132
  1297   000D2E  ECDC  F00B         	call	_DireccionaLCD
  1298   000D32                     l209:
  1299                           
  1300                           ;Laboratorio4.c: 163: if ((partdecl-(r*100))!= 0 & (partdecl-(r*100))>0){
  1301   000D32  C01F  F00E         	movff	_r,___lmul@multiplier
  1302   000D36  C020  F00F         	movff	_r+1,___lmul@multiplier+1
  1303   000D3A  C021  F010         	movff	_r+2,___lmul@multiplier+2
  1304   000D3E  C022  F011         	movff	_r+3,___lmul@multiplier+3
  1305   000D42  0E9C               	movlw	156
  1306   000D44  6E12               	movwf	___lmul@multiplicand^0,c
  1307   000D46  0EFF               	movlw	255
  1308   000D48  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1309   000D4A  0EFF               	movlw	255
  1310   000D4C  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1311   000D4E  0EFF               	movlw	255
  1312   000D50  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1313   000D52  EC33  F00A         	call	___lmul	;wreg free
  1314   000D56  5023               	movf	_partdecl^0,w,c
  1315   000D58  240E               	addwf	?___lmul^0,w,c
  1316   000D5A  6E1B               	movwf	??_main^0,c
  1317   000D5C  5024               	movf	(_partdecl+1)^0,w,c
  1318   000D5E  200F               	addwfc	(?___lmul+1)^0,w,c
  1319   000D60  6E1C               	movwf	(??_main+1)^0,c
  1320   000D62  5025               	movf	(_partdecl+2)^0,w,c
  1321   000D64  2010               	addwfc	(?___lmul+2)^0,w,c
  1322   000D66  6E1D               	movwf	(??_main+2)^0,c
  1323   000D68  5026               	movf	(_partdecl+3)^0,w,c
  1324   000D6A  2011               	addwfc	(?___lmul+3)^0,w,c
  1325   000D6C  6E1E               	movwf	(??_main+3)^0,c
  1326   000D6E  501B               	movf	??_main^0,w,c
  1327   000D70  101C               	iorwf	(??_main+1)^0,w,c
  1328   000D72  101D               	iorwf	(??_main+2)^0,w,c
  1329   000D74  101E               	iorwf	(??_main+3)^0,w,c
  1330   000D76  B4D8               	btfsc	status,2,c
  1331   000D78  D07D               	goto	l3440
  1332   000D7A  C01F  F00E         	movff	_r,___lmul@multiplier
  1333   000D7E  C020  F00F         	movff	_r+1,___lmul@multiplier+1
  1334   000D82  C021  F010         	movff	_r+2,___lmul@multiplier+2
  1335   000D86  C022  F011         	movff	_r+3,___lmul@multiplier+3
  1336   000D8A  0E9C               	movlw	156
  1337   000D8C  6E12               	movwf	___lmul@multiplicand^0,c
  1338   000D8E  0EFF               	movlw	255
  1339   000D90  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1340   000D92  0EFF               	movlw	255
  1341   000D94  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1342   000D96  0EFF               	movlw	255
  1343   000D98  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1344   000D9A  EC33  F00A         	call	___lmul	;wreg free
  1345   000D9E  5023               	movf	_partdecl^0,w,c
  1346   000DA0  240E               	addwf	?___lmul^0,w,c
  1347   000DA2  6E1B               	movwf	??_main^0,c
  1348   000DA4  5024               	movf	(_partdecl+1)^0,w,c
  1349   000DA6  200F               	addwfc	(?___lmul+1)^0,w,c
  1350   000DA8  6E1C               	movwf	(??_main+1)^0,c
  1351   000DAA  5025               	movf	(_partdecl+2)^0,w,c
  1352   000DAC  2010               	addwfc	(?___lmul+2)^0,w,c
  1353   000DAE  6E1D               	movwf	(??_main+2)^0,c
  1354   000DB0  5026               	movf	(_partdecl+3)^0,w,c
  1355   000DB2  2011               	addwfc	(?___lmul+3)^0,w,c
  1356   000DB4  6E1E               	movwf	(??_main+3)^0,c
  1357   000DB6  501B               	movf	??_main^0,w,c
  1358   000DB8  101C               	iorwf	(??_main+1)^0,w,c
  1359   000DBA  101D               	iorwf	(??_main+2)^0,w,c
  1360   000DBC  101E               	iorwf	(??_main+3)^0,w,c
  1361   000DBE  B4D8               	btfsc	status,2,c
  1362   000DC0  D059               	goto	l3440
  1363                           
  1364                           ;Laboratorio4.c: 164: for (int i = 0; i < 3; i++) {
  1365   000DC2  0E00               	movlw	0
  1366   000DC4  0100               	movlb	0	; () banked
  1367   000DC6  6F6B               	movwf	(main@i+1)& (0+255),b
  1368   000DC8  0E00               	movlw	0
  1369   000DCA  6F6A               	movwf	main@i& (0+255),b
  1370   000DCC                     l3420:
  1371                           
  1372                           ; BSR set to: 0
  1373   000DCC  BF6B               	btfsc	(main@i+1)& (0+255),7,b
  1374   000DCE  D008               	goto	l3424
  1375   000DD0  516B               	movf	(main@i+1)& (0+255),w,b
  1376   000DD2  E105               	bnz	u3950
  1377   000DD4  0E03               	movlw	3
  1378   000DD6  5D6A               	subwf	main@i& (0+255),w,b
  1379   000DD8  B0D8               	btfsc	status,0,c
  1380   000DDA  D171               	goto	l3514
  1381   000DDC  D001               	goto	l3424
  1382   000DDE                     u3950:
  1383   000DDE  D16F               	goto	l3514
  1384   000DE0                     l3424:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;Laboratorio4.c: 165: r = n1 / n2;
  1388   000DE0  C031  F014         	movff	_n1,___lwdiv@dividend
  1389   000DE4  C032  F015         	movff	_n1+1,___lwdiv@dividend+1
  1390   000DE8  C02F  F016         	movff	_n2,___lwdiv@divisor
  1391   000DEC  C030  F017         	movff	_n2+1,___lwdiv@divisor+1
  1392   000DF0  ECB4  F00A         	call	___lwdiv	;wreg free
  1393   000DF4  C014  F01F         	movff	?___lwdiv,_r
  1394   000DF8  C015  F020         	movff	?___lwdiv+1,_r+1
  1395   000DFC  6A21               	clrf	(_r+2)^0,c
  1396   000DFE  6A22               	clrf	(_r+3)^0,c
  1397                           
  1398                           ;Laboratorio4.c: 166: m = n1 % n2;
  1399   000E00  C031  F00E         	movff	_n1,___lwmod@dividend
  1400   000E04  C032  F00F         	movff	_n1+1,___lwmod@dividend+1
  1401   000E08  C02F  F010         	movff	_n2,___lwmod@divisor
  1402   000E0C  C030  F011         	movff	_n2+1,___lwmod@divisor+1
  1403   000E10  EC71  F00B         	call	___lwmod	;wreg free
  1404   000E14  C00E  F035         	movff	?___lwmod,_m
  1405   000E18  C00F  F036         	movff	?___lwmod+1,_m+1
  1406   000E1C  6A37               	clrf	(_m+2)^0,c
  1407   000E1E  6A38               	clrf	(_m+3)^0,c
  1408                           
  1409                           ;Laboratorio4.c: 167: EscribeLCD_c(r+'0');
  1410   000E20  501F               	movf	_r^0,w,c
  1411   000E22  0F30               	addlw	48
  1412   000E24  ECE7  F00B         	call	_EscribeLCD_c
  1413                           
  1414                           ;Laboratorio4.c: 168: if(i == 0 && m != 0) {
  1415   000E28  0100               	movlb	0	; () banked
  1416   000E2A  516A               	movf	main@i& (0+255),w,b
  1417   000E2C  116B               	iorwf	(main@i+1)& (0+255),w,b
  1418   000E2E  A4D8               	btfss	status,2,c
  1419   000E30  D009               	goto	l3432
  1420                           
  1421                           ; BSR set to: 0
  1422   000E32  5035               	movf	_m^0,w,c
  1423   000E34  1036               	iorwf	(_m+1)^0,w,c
  1424   000E36  1037               	iorwf	(_m+2)^0,w,c
  1425   000E38  1038               	iorwf	(_m+3)^0,w,c
  1426   000E3A  B4D8               	btfsc	status,2,c
  1427   000E3C  D003               	goto	l3432
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;Laboratorio4.c: 169: EscribeLCD_c(',');
  1431   000E3E  0E2C               	movlw	44
  1432   000E40  ECE7  F00B         	call	_EscribeLCD_c
  1433   000E44                     l3432:
  1434                           
  1435                           ;Laboratorio4.c: 170: };Laboratorio4.c: 171: if (m != 0) {
  1436   000E44  5035               	movf	_m^0,w,c
  1437   000E46  1036               	iorwf	(_m+1)^0,w,c
  1438   000E48  1037               	iorwf	(_m+2)^0,w,c
  1439   000E4A  1038               	iorwf	(_m+3)^0,w,c
  1440   000E4C  B4D8               	btfsc	status,2,c
  1441   000E4E  D137               	goto	l3514
  1442                           
  1443                           ;Laboratorio4.c: 172: n1 = m * 10;
  1444   000E50  C035  F00E         	movff	_m,___wmul@multiplier
  1445   000E54  C036  F00F         	movff	_m+1,___wmul@multiplier+1
  1446   000E58  0E00               	movlw	0
  1447   000E5A  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1448   000E5C  0E0A               	movlw	10
  1449   000E5E  6E10               	movwf	___wmul@multiplicand^0,c
  1450   000E60  ECC9  F00B         	call	___wmul	;wreg free
  1451   000E64  C00E  F031         	movff	?___wmul,_n1
  1452   000E68  C00F  F032         	movff	?___wmul+1,_n1+1
  1453                           
  1454                           ;Laboratorio4.c: 173: } else {
  1455   000E6C  0100               	movlb	0	; () banked
  1456   000E6E  4B6A               	infsnz	main@i& (0+255),f,b
  1457   000E70  2B6B               	incf	(main@i+1)& (0+255),f,b
  1458   000E72  D7AC               	goto	l3420
  1459   000E74                     l3440:
  1460   000E74  5022               	movf	(_r+3)^0,w,c
  1461   000E76  1021               	iorwf	(_r+2)^0,w,c
  1462   000E78  1020               	iorwf	(_r+1)^0,w,c
  1463   000E7A  E104               	bnz	u3990
  1464   000E7C  0E52               	movlw	82
  1465   000E7E  5C1F               	subwf	_r^0,w,c
  1466   000E80  A0D8               	btfss	status,0,c
  1467   000E82  D029               	goto	l3454
  1468   000E84                     u3990:
  1469   000E84  0EE8               	movlw	232
  1470   000E86  181F               	xorwf	_r^0,w,c
  1471   000E88  E106               	bnz	u4000
  1472   000E8A  0E03               	movlw	3
  1473   000E8C  1820               	xorwf	(_r+1)^0,w,c
  1474   000E8E  1021               	iorwf	(_r+2)^0,w,c
  1475   000E90  1022               	iorwf	(_r+3)^0,w,c
  1476   000E92  B4D8               	btfsc	status,2,c
  1477   000E94  D020               	goto	l3454
  1478   000E96                     u4000:
  1479   000E96  0EE9               	movlw	233
  1480   000E98  181F               	xorwf	_r^0,w,c
  1481   000E9A  E106               	bnz	u4010
  1482   000E9C  0E03               	movlw	3
  1483   000E9E  1820               	xorwf	(_r+1)^0,w,c
  1484   000EA0  1021               	iorwf	(_r+2)^0,w,c
  1485   000EA2  1022               	iorwf	(_r+3)^0,w,c
  1486   000EA4  B4D8               	btfsc	status,2,c
  1487   000EA6  D017               	goto	l3454
  1488   000EA8                     u4010:
  1489   000EA8  0E2D               	movlw	45
  1490   000EAA  1843               	xorwf	_op^0,w,c
  1491   000EAC  A4D8               	btfss	status,2,c
  1492   000EAE  D013               	goto	l3454
  1493                           
  1494                           ;Laboratorio4.c: 179: EscribeLCD_c('-');
  1495   000EB0  0E2D               	movlw	45
  1496   000EB2  ECE7  F00B         	call	_EscribeLCD_c
  1497                           
  1498                           ;Laboratorio4.c: 180: DireccionaLCD(0x85);
  1499   000EB6  0E85               	movlw	133
  1500   000EB8  ECDC  F00B         	call	_DireccionaLCD
  1501                           
  1502                           ;Laboratorio4.c: 181: r = ~r+1;
  1503   000EBC  1E22               	comf	(_r+3)^0,f,c
  1504   000EBE  1E21               	comf	(_r+2)^0,f,c
  1505   000EC0  1E20               	comf	(_r+1)^0,f,c
  1506   000EC2  6C1F               	negf	_r^0,c
  1507   000EC4  0E00               	movlw	0
  1508   000EC6  2220               	addwfc	(_r+1)^0,f,c
  1509   000EC8  2221               	addwfc	(_r+2)^0,f,c
  1510   000ECA  2222               	addwfc	(_r+3)^0,f,c
  1511                           
  1512                           ;Laboratorio4.c: 182: EscribeLCD_c(r+'0');
  1513   000ECC  501F               	movf	_r^0,w,c
  1514   000ECE  0F30               	addlw	48
  1515   000ED0  ECE7  F00B         	call	_EscribeLCD_c
  1516                           
  1517                           ;Laboratorio4.c: 183: }else{
  1518   000ED4  D0F4               	goto	l3514
  1519   000ED6                     l3454:
  1520                           
  1521                           ;Laboratorio4.c: 184: if(r==1000){
  1522   000ED6  0EE8               	movlw	232
  1523   000ED8  181F               	xorwf	_r^0,w,c
  1524   000EDA  E10B               	bnz	l3458
  1525   000EDC  0E03               	movlw	3
  1526   000EDE  1820               	xorwf	(_r+1)^0,w,c
  1527   000EE0  1021               	iorwf	(_r+2)^0,w,c
  1528   000EE2  1022               	iorwf	(_r+3)^0,w,c
  1529   000EE4  A4D8               	btfss	status,2,c
  1530   000EE6  D005               	goto	l3458
  1531                           
  1532                           ;Laboratorio4.c: 185: MensajeLCD_Word("Inf.");
  1533   000EE8  0E2A               	movlw	low STR_4
  1534   000EEA  6E13               	movwf	MensajeLCD_Word@a^0,c
  1535   000EEC  ECDD  F00A         	call	_MensajeLCD_Word	;wreg free
  1536                           
  1537                           ;Laboratorio4.c: 186: }else{
  1538   000EF0  D0E6               	goto	l3514
  1539   000EF2                     l3458:
  1540                           
  1541                           ;Laboratorio4.c: 187: if(r==1001){
  1542   000EF2  0EE9               	movlw	233
  1543   000EF4  181F               	xorwf	_r^0,w,c
  1544   000EF6  E10B               	bnz	l3462
  1545   000EF8  0E03               	movlw	3
  1546   000EFA  1820               	xorwf	(_r+1)^0,w,c
  1547   000EFC  1021               	iorwf	(_r+2)^0,w,c
  1548   000EFE  1022               	iorwf	(_r+3)^0,w,c
  1549   000F00  A4D8               	btfss	status,2,c
  1550   000F02  D005               	goto	l3462
  1551                           
  1552                           ;Laboratorio4.c: 188: MensajeLCD_Word("Ind.");
  1553   000F04  0E25               	movlw	low STR_5
  1554   000F06  6E13               	movwf	MensajeLCD_Word@a^0,c
  1555   000F08  ECDD  F00A         	call	_MensajeLCD_Word	;wreg free
  1556                           
  1557                           ;Laboratorio4.c: 189: }else{
  1558   000F0C  D0D8               	goto	l3514
  1559   000F0E                     l3462:
  1560                           
  1561                           ;Laboratorio4.c: 190: if(r>=0xA & r!=1000 & r !=1001){
  1562   000F0E  5022               	movf	(_r+3)^0,w,c
  1563   000F10  1021               	iorwf	(_r+2)^0,w,c
  1564   000F12  1020               	iorwf	(_r+1)^0,w,c
  1565   000F14  E104               	bnz	u4050
  1566   000F16  0E0A               	movlw	10
  1567   000F18  5C1F               	subwf	_r^0,w,c
  1568   000F1A  A0D8               	btfss	status,0,c
  1569   000F1C  D0C8               	goto	l3510
  1570   000F1E                     u4050:
  1571   000F1E  0EE8               	movlw	232
  1572   000F20  181F               	xorwf	_r^0,w,c
  1573   000F22  E106               	bnz	u4060
  1574   000F24  0E03               	movlw	3
  1575   000F26  1820               	xorwf	(_r+1)^0,w,c
  1576   000F28  1021               	iorwf	(_r+2)^0,w,c
  1577   000F2A  1022               	iorwf	(_r+3)^0,w,c
  1578   000F2C  B4D8               	btfsc	status,2,c
  1579   000F2E  D0BF               	goto	l3510
  1580   000F30                     u4060:
  1581   000F30  0EE9               	movlw	233
  1582   000F32  181F               	xorwf	_r^0,w,c
  1583   000F34  E106               	bnz	u4070
  1584   000F36  0E03               	movlw	3
  1585   000F38  1820               	xorwf	(_r+1)^0,w,c
  1586   000F3A  1021               	iorwf	(_r+2)^0,w,c
  1587   000F3C  1022               	iorwf	(_r+3)^0,w,c
  1588   000F3E  B4D8               	btfsc	status,2,c
  1589   000F40  D0B6               	goto	l3510
  1590   000F42                     u4070:
  1591                           
  1592                           ;Laboratorio4.c: 191: for(int j=9;j>=0;j--){
  1593   000F42  0E00               	movlw	0
  1594   000F44  0100               	movlb	0	; () banked
  1595   000F46  6F6D               	movwf	(main@j+1)& (0+255),b
  1596   000F48  0E09               	movlw	9
  1597   000F4A  6F6C               	movwf	main@j& (0+255),b
  1598   000F4C                     l3470:
  1599                           
  1600                           ; BSR set to: 0
  1601   000F4C  BF6D               	btfsc	(main@j+1)& (0+255),7,b
  1602   000F4E  D0B7               	goto	l3514
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;Laboratorio4.c: 192: partdecl = 10;
  1606   000F50  0E0A               	movlw	10
  1607   000F52  6E23               	movwf	_partdecl^0,c
  1608   000F54  0E00               	movlw	0
  1609   000F56  6E24               	movwf	(_partdecl+1)^0,c
  1610   000F58  0E00               	movlw	0
  1611   000F5A  6E25               	movwf	(_partdecl+2)^0,c
  1612   000F5C  0E00               	movlw	0
  1613   000F5E  6E26               	movwf	(_partdecl+3)^0,c
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;Laboratorio4.c: 193: for(int k=j-1;k>0;k--){
  1617   000F60  0EFF               	movlw	255
  1618   000F62  256C               	addwf	main@j& (0+255),w,b
  1619   000F64  6F68               	movwf	main@k& (0+255),b
  1620   000F66  0EFF               	movlw	255
  1621   000F68  216D               	addwfc	(main@j+1)& (0+255),w,b
  1622   000F6A  6F69               	movwf	(main@k+1)& (0+255),b
  1623   000F6C                     l3478:
  1624                           
  1625                           ; BSR set to: 0
  1626   000F6C  BF69               	btfsc	(main@k+1)& (0+255),7,b
  1627   000F6E  D024               	goto	l3488
  1628   000F70  5169               	movf	(main@k+1)& (0+255),w,b
  1629   000F72  E103               	bnz	l3482
  1630   000F74  0568               	decf	main@k& (0+255),w,b
  1631   000F76  A0D8               	btfss	status,0,c
  1632   000F78  D01F               	goto	l3488
  1633   000F7A                     l3482:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;Laboratorio4.c: 194: partdecl = partdecl*10;
  1637   000F7A  C023  F00E         	movff	_partdecl,___lmul@multiplier
  1638   000F7E  C024  F00F         	movff	_partdecl+1,___lmul@multiplier+1
  1639   000F82  C025  F010         	movff	_partdecl+2,___lmul@multiplier+2
  1640   000F86  C026  F011         	movff	_partdecl+3,___lmul@multiplier+3
  1641   000F8A  0E0A               	movlw	10
  1642   000F8C  6E12               	movwf	___lmul@multiplicand^0,c
  1643   000F8E  0E00               	movlw	0
  1644   000F90  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1645   000F92  0E00               	movlw	0
  1646   000F94  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1647   000F96  0E00               	movlw	0
  1648   000F98  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1649   000F9A  EC33  F00A         	call	___lmul	;wreg free
  1650   000F9E  C00E  F023         	movff	?___lmul,_partdecl
  1651   000FA2  C00F  F024         	movff	?___lmul+1,_partdecl+1
  1652   000FA6  C010  F025         	movff	?___lmul+2,_partdecl+2
  1653   000FAA  C011  F026         	movff	?___lmul+3,_partdecl+3
  1654   000FAE  0100               	movlb	0	; () banked
  1655   000FB0  0768               	decf	main@k& (0+255),f,b
  1656   000FB2  A0D8               	btfss	status,0,c
  1657   000FB4  0769               	decf	(main@k+1)& (0+255),f,b
  1658   000FB6  D7DA               	goto	l3478
  1659   000FB8                     l3488:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;Laboratorio4.c: 195: };Laboratorio4.c: 196: if(r/partdecl>0){
  1663   000FB8  C01F  F00E         	movff	_r,___lldiv@dividend
  1664   000FBC  C020  F00F         	movff	_r+1,___lldiv@dividend+1
  1665   000FC0  C021  F010         	movff	_r+2,___lldiv@dividend+2
  1666   000FC4  C022  F011         	movff	_r+3,___lldiv@dividend+3
  1667   000FC8  C023  F012         	movff	_partdecl,___lldiv@divisor
  1668   000FCC  C024  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1669   000FD0  C025  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1670   000FD4  C026  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1671   000FD8  EC43  F009         	call	___lldiv	;wreg free
  1672   000FDC  500E               	movf	?___lldiv^0,w,c
  1673   000FDE  100F               	iorwf	(?___lldiv+1)^0,w,c
  1674   000FE0  1010               	iorwf	(?___lldiv+2)^0,w,c
  1675   000FE2  1011               	iorwf	(?___lldiv+3)^0,w,c
  1676   000FE4  B4D8               	btfsc	status,2,c
  1677   000FE6  D033               	goto	l3496
  1678                           
  1679                           ;Laboratorio4.c: 197: flag = 1;
  1680   000FE8  0E01               	movlw	1
  1681   000FEA  6E33               	movwf	_flag^0,c
  1682                           
  1683                           ;Laboratorio4.c: 198: EscribeLCD_c(r/partdecl+48);
  1684   000FEC  C01F  F00E         	movff	_r,___lldiv@dividend
  1685   000FF0  C020  F00F         	movff	_r+1,___lldiv@dividend+1
  1686   000FF4  C021  F010         	movff	_r+2,___lldiv@dividend+2
  1687   000FF8  C022  F011         	movff	_r+3,___lldiv@dividend+3
  1688   000FFC  C023  F012         	movff	_partdecl,___lldiv@divisor
  1689   001000  C024  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1690   001004  C025  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1691   001008  C026  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1692   00100C  EC43  F009         	call	___lldiv	;wreg free
  1693   001010  500E               	movf	?___lldiv^0,w,c
  1694   001012  0F30               	addlw	48
  1695   001014  ECE7  F00B         	call	_EscribeLCD_c
  1696                           
  1697                           ;Laboratorio4.c: 199: r=r%partdecl;
  1698   001018  C01F  F00E         	movff	_r,___llmod@dividend
  1699   00101C  C020  F00F         	movff	_r+1,___llmod@dividend+1
  1700   001020  C021  F010         	movff	_r+2,___llmod@dividend+2
  1701   001024  C022  F011         	movff	_r+3,___llmod@dividend+3
  1702   001028  C023  F012         	movff	_partdecl,___llmod@divisor
  1703   00102C  C024  F013         	movff	_partdecl+1,___llmod@divisor+1
  1704   001030  C025  F014         	movff	_partdecl+2,___llmod@divisor+2
  1705   001034  C026  F015         	movff	_partdecl+3,___llmod@divisor+3
  1706   001038  EC00  F00A         	call	___llmod	;wreg free
  1707   00103C  C00E  F01F         	movff	?___llmod,_r
  1708   001040  C00F  F020         	movff	?___llmod+1,_r+1
  1709   001044  C010  F021         	movff	?___llmod+2,_r+2
  1710   001048  C011  F022         	movff	?___llmod+3,_r+3
  1711                           
  1712                           ;Laboratorio4.c: 200: }else if( (r/partdecl)==0 && flag){
  1713   00104C  D02B               	goto	l3506
  1714   00104E                     l3496:
  1715   00104E  C01F  F00E         	movff	_r,___lldiv@dividend
  1716   001052  C020  F00F         	movff	_r+1,___lldiv@dividend+1
  1717   001056  C021  F010         	movff	_r+2,___lldiv@dividend+2
  1718   00105A  C022  F011         	movff	_r+3,___lldiv@dividend+3
  1719   00105E  C023  F012         	movff	_partdecl,___lldiv@divisor
  1720   001062  C024  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1721   001066  C025  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1722   00106A  C026  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1723   00106E  EC43  F009         	call	___lldiv	;wreg free
  1724   001072  500E               	movf	?___lldiv^0,w,c
  1725   001074  100F               	iorwf	(?___lldiv+1)^0,w,c
  1726   001076  1010               	iorwf	(?___lldiv+2)^0,w,c
  1727   001078  1011               	iorwf	(?___lldiv+3)^0,w,c
  1728   00107A  A4D8               	btfss	status,2,c
  1729   00107C  D013               	goto	l3506
  1730   00107E  5033               	movf	_flag^0,w,c
  1731   001080  B4D8               	btfsc	status,2,c
  1732   001082  D010               	goto	l3506
  1733                           
  1734                           ;Laboratorio4.c: 201: if(r<10) EscribeLCD_c(r+48);
  1735   001084  5022               	movf	(_r+3)^0,w,c
  1736   001086  1021               	iorwf	(_r+2)^0,w,c
  1737   001088  1020               	iorwf	(_r+1)^0,w,c
  1738   00108A  E109               	bnz	l3504
  1739   00108C  0E0A               	movlw	10
  1740   00108E  5C1F               	subwf	_r^0,w,c
  1741   001090  B0D8               	btfsc	status,0,c
  1742   001092  D005               	goto	l3504
  1743   001094  501F               	movf	_r^0,w,c
  1744   001096  0F30               	addlw	48
  1745   001098  ECE7  F00B         	call	_EscribeLCD_c
  1746   00109C  D003               	goto	l3506
  1747   00109E                     l3504:
  1748                           
  1749                           ;Laboratorio4.c: 202: else EscribeLCD_c(48);
  1750   00109E  0E30               	movlw	48
  1751   0010A0  ECE7  F00B         	call	_EscribeLCD_c
  1752   0010A4                     l3506:
  1753   0010A4  0100               	movlb	0	; () banked
  1754   0010A6  076C               	decf	main@j& (0+255),f,b
  1755   0010A8  A0D8               	btfss	status,0,c
  1756   0010AA  076D               	decf	(main@j+1)& (0+255),f,b
  1757   0010AC  D74F               	goto	l3470
  1758   0010AE                     l3510:
  1759                           
  1760                           ;Laboratorio4.c: 206: EscribeLCD_c(r+'0');
  1761   0010AE  501F               	movf	_r^0,w,c
  1762   0010B0  0F30               	addlw	48
  1763   0010B2  ECE7  F00B         	call	_EscribeLCD_c
  1764   0010B6  D003               	goto	l3514
  1765   0010B8                     l3512:
  1766                           
  1767                           ;Laboratorio4.c: 212: EscribeLCD_c(' ');
  1768   0010B8  0E20               	movlw	32
  1769   0010BA  ECE7  F00B         	call	_EscribeLCD_c
  1770   0010BE                     l3514:
  1771                           
  1772                           ;Laboratorio4.c: 213: };Laboratorio4.c: 214: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1773   0010BE  0EE4               	movlw	228
  1774   0010C0  6E1B               	movwf	??_main^0,c
  1775   0010C2  0E44               	movlw	68
  1776   0010C4                     u4157:
  1777   0010C4  2EE8               	decfsz	wreg,f,c
  1778   0010C6  D7FE               	bra	u4157
  1779   0010C8  2E1B               	decfsz	??_main^0,f,c
  1780   0010CA  D7FC               	bra	u4157
  1781   0010CC  D000               	nop2	
  1782   0010CE  D407               	goto	l3206
  1783   0010D0                     __end_of_main:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function ___wmul *****************
  1787 ;; Defined at:
  1788 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  multiplier      2   13[COMRAM] unsigned int 
  1791 ;;  multiplicand    2   15[COMRAM] unsigned int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  product         2   17[COMRAM] unsigned int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2   13[COMRAM] unsigned int 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, prodl, prodh
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         4       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        6 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 5
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text1
  1818   001792                     __ptext1:
  1819                           	callstack 0
  1820   001792                     ___wmul:
  1821                           	callstack 25
  1822                           
  1823                           ;incstack = 0
  1824   001792  500E               	movf	___wmul@multiplier^0,w,c
  1825   001794  0210               	mulwf	___wmul@multiplicand^0,c
  1826   001796  CFF3 F012          	movff	prodl,___wmul@product
  1827   00179A  CFF4 F013          	movff	prodh,___wmul@product+1
  1828   00179E  500E               	movf	___wmul@multiplier^0,w,c
  1829   0017A0  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  1830   0017A2  50F3               	movf	243,w,c
  1831   0017A4  2613               	addwf	(___wmul@product+1)^0,f,c
  1832   0017A6  500F               	movf	(___wmul@multiplier+1)^0,w,c
  1833   0017A8  0210               	mulwf	___wmul@multiplicand^0,c
  1834   0017AA  50F3               	movf	243,w,c
  1835   0017AC  2613               	addwf	(___wmul@product+1)^0,f,c
  1836   0017AE  C012  F00E         	movff	___wmul@product,?___wmul
  1837   0017B2  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  1838   0017B6  0012               	return		;funcret
  1839   0017B8                     __end_of___wmul:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function ___lwmod *****************
  1843 ;; Defined at:
  1844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  dividend        2   13[COMRAM] unsigned int 
  1847 ;;  divisor         2   15[COMRAM] unsigned int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  counter         1   17[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  2   13[COMRAM] unsigned int 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         4       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1862 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        5 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 5
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text2
  1874   0016E2                     __ptext2:
  1875                           	callstack 0
  1876   0016E2                     ___lwmod:
  1877                           	callstack 25
  1878                           
  1879                           ;incstack = 0
  1880   0016E2  5010               	movf	___lwmod@divisor^0,w,c
  1881   0016E4  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1882   0016E6  B4D8               	btfsc	status,2,c
  1883   0016E8  D018               	goto	l800
  1884   0016EA  0E01               	movlw	1
  1885   0016EC  6E12               	movwf	___lwmod@counter^0,c
  1886   0016EE  D004               	goto	l3154
  1887   0016F0                     l3152:
  1888   0016F0  90D8               	bcf	status,0,c
  1889   0016F2  3610               	rlcf	___lwmod@divisor^0,f,c
  1890   0016F4  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1891   0016F6  2A12               	incf	___lwmod@counter^0,f,c
  1892   0016F8                     l3154:
  1893   0016F8  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1894   0016FA  D7FA               	goto	l3152
  1895   0016FC                     u3350:
  1896   0016FC  5010               	movf	___lwmod@divisor^0,w,c
  1897   0016FE  5C0E               	subwf	___lwmod@dividend^0,w,c
  1898   001700  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1899   001702  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1900   001704  A0D8               	btfss	status,0,c
  1901   001706  D004               	goto	l3160
  1902   001708  5010               	movf	___lwmod@divisor^0,w,c
  1903   00170A  5E0E               	subwf	___lwmod@dividend^0,f,c
  1904   00170C  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1905   00170E  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1906   001710                     l3160:
  1907   001710  90D8               	bcf	status,0,c
  1908   001712  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1909   001714  3210               	rrcf	___lwmod@divisor^0,f,c
  1910   001716  2E12               	decfsz	___lwmod@counter^0,f,c
  1911   001718  D7F1               	goto	u3350
  1912   00171A                     l800:
  1913   00171A  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1914   00171E  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1915   001722  0012               	return		;funcret
  1916   001724                     __end_of___lwmod:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function ___lwdiv *****************
  1920 ;; Defined at:
  1921 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  dividend        2   19[COMRAM] unsigned int 
  1924 ;;  divisor         2   21[COMRAM] unsigned int 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  quotient        2   24[COMRAM] unsigned int 
  1927 ;;  counter         1   23[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  2   19[COMRAM] unsigned int 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         4       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        7 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 5
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text3
  1952   001568                     __ptext3:
  1953                           	callstack 0
  1954   001568                     ___lwdiv:
  1955                           	callstack 25
  1956                           
  1957                           ;incstack = 0
  1958   001568  0E00               	movlw	0
  1959   00156A  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  1960   00156C  0E00               	movlw	0
  1961   00156E  6E19               	movwf	___lwdiv@quotient^0,c
  1962   001570  5016               	movf	___lwdiv@divisor^0,w,c
  1963   001572  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1964   001574  B4D8               	btfsc	status,2,c
  1965   001576  D01C               	goto	l790
  1966   001578  0E01               	movlw	1
  1967   00157A  6E18               	movwf	___lwdiv@counter^0,c
  1968   00157C  D004               	goto	l3134
  1969   00157E                     l3132:
  1970   00157E  90D8               	bcf	status,0,c
  1971   001580  3616               	rlcf	___lwdiv@divisor^0,f,c
  1972   001582  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1973   001584  2A18               	incf	___lwdiv@counter^0,f,c
  1974   001586                     l3134:
  1975   001586  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1976   001588  D7FA               	goto	l3132
  1977   00158A                     u3320:
  1978   00158A  90D8               	bcf	status,0,c
  1979   00158C  3619               	rlcf	___lwdiv@quotient^0,f,c
  1980   00158E  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1981   001590  5016               	movf	___lwdiv@divisor^0,w,c
  1982   001592  5C14               	subwf	___lwdiv@dividend^0,w,c
  1983   001594  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1984   001596  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1985   001598  A0D8               	btfss	status,0,c
  1986   00159A  D005               	goto	l3144
  1987   00159C  5016               	movf	___lwdiv@divisor^0,w,c
  1988   00159E  5E14               	subwf	___lwdiv@dividend^0,f,c
  1989   0015A0  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1990   0015A2  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1991   0015A4  8019               	bsf	___lwdiv@quotient^0,0,c
  1992   0015A6                     l3144:
  1993   0015A6  90D8               	bcf	status,0,c
  1994   0015A8  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1995   0015AA  3216               	rrcf	___lwdiv@divisor^0,f,c
  1996   0015AC  2E18               	decfsz	___lwdiv@counter^0,f,c
  1997   0015AE  D7ED               	goto	u3320
  1998   0015B0                     l790:
  1999   0015B0  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2000   0015B4  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2001   0015B8  0012               	return		;funcret
  2002   0015BA                     __end_of___lwdiv:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function ___lmul *****************
  2006 ;; Defined at:
  2007 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  multiplier      4   13[COMRAM] unsigned long 
  2010 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  product         4   21[COMRAM] unsigned long 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  4   13[COMRAM] unsigned long 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2022 ;;      Params:         8       0       0       0       0       0       0       0       0
  2023 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2025 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2026 ;;Total ram usage:       12 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 5
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text4
  2037   001466                     __ptext4:
  2038                           	callstack 0
  2039   001466                     ___lmul:
  2040                           	callstack 25
  2041                           
  2042                           ;incstack = 0
  2043   001466  0E00               	movlw	0
  2044   001468  6E16               	movwf	___lmul@product^0,c
  2045   00146A  0E00               	movlw	0
  2046   00146C  6E17               	movwf	(___lmul@product+1)^0,c
  2047   00146E  0E00               	movlw	0
  2048   001470  6E18               	movwf	(___lmul@product+2)^0,c
  2049   001472  0E00               	movlw	0
  2050   001474  6E19               	movwf	(___lmul@product+3)^0,c
  2051   001476                     l3080:
  2052   001476  A00E               	btfss	___lmul@multiplier^0,0,c
  2053   001478  D008               	goto	l3084
  2054   00147A  5012               	movf	___lmul@multiplicand^0,w,c
  2055   00147C  2616               	addwf	___lmul@product^0,f,c
  2056   00147E  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2057   001480  2217               	addwfc	(___lmul@product+1)^0,f,c
  2058   001482  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2059   001484  2218               	addwfc	(___lmul@product+2)^0,f,c
  2060   001486  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2061   001488  2219               	addwfc	(___lmul@product+3)^0,f,c
  2062   00148A                     l3084:
  2063   00148A  90D8               	bcf	status,0,c
  2064   00148C  3612               	rlcf	___lmul@multiplicand^0,f,c
  2065   00148E  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2066   001490  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2067   001492  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2068   001494  90D8               	bcf	status,0,c
  2069   001496  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2070   001498  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2071   00149A  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2072   00149C  320E               	rrcf	___lmul@multiplier^0,f,c
  2073   00149E  500E               	movf	___lmul@multiplier^0,w,c
  2074   0014A0  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2075   0014A2  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2076   0014A4  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2077   0014A6  A4D8               	btfss	status,2,c
  2078   0014A8  D7E6               	goto	l3080
  2079   0014AA  C016  F00E         	movff	___lmul@product,?___lmul
  2080   0014AE  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2081   0014B2  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2082   0014B6  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2083   0014BA  0012               	return		;funcret
  2084   0014BC                     __end_of___lmul:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function ___llmod *****************
  2088 ;; Defined at:
  2089 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  dividend        4   13[COMRAM] unsigned long 
  2092 ;;  divisor         4   17[COMRAM] unsigned long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  counter         1   21[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  4   13[COMRAM] unsigned long 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         8       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        9 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 5
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text5
  2119   001400                     __ptext5:
  2120                           	callstack 0
  2121   001400                     ___llmod:
  2122                           	callstack 25
  2123                           
  2124                           ;incstack = 0
  2125   001400  5012               	movf	___llmod@divisor^0,w,c
  2126   001402  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2127   001404  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2128   001406  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2129   001408  B4D8               	btfsc	status,2,c
  2130   00140A  D024               	goto	l719
  2131   00140C  0E01               	movlw	1
  2132   00140E  6E16               	movwf	___llmod@counter^0,c
  2133   001410  D006               	goto	l3116
  2134   001412                     l3114:
  2135   001412  90D8               	bcf	status,0,c
  2136   001414  3612               	rlcf	___llmod@divisor^0,f,c
  2137   001416  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2138   001418  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2139   00141A  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2140   00141C  2A16               	incf	___llmod@counter^0,f,c
  2141   00141E                     l3116:
  2142   00141E  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2143   001420  D7F8               	goto	l3114
  2144   001422                     u3290:
  2145   001422  5012               	movf	___llmod@divisor^0,w,c
  2146   001424  5C0E               	subwf	___llmod@dividend^0,w,c
  2147   001426  5013               	movf	(___llmod@divisor+1)^0,w,c
  2148   001428  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2149   00142A  5014               	movf	(___llmod@divisor+2)^0,w,c
  2150   00142C  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2151   00142E  5015               	movf	(___llmod@divisor+3)^0,w,c
  2152   001430  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2153   001432  A0D8               	btfss	status,0,c
  2154   001434  D008               	goto	l3122
  2155   001436  5012               	movf	___llmod@divisor^0,w,c
  2156   001438  5E0E               	subwf	___llmod@dividend^0,f,c
  2157   00143A  5013               	movf	(___llmod@divisor+1)^0,w,c
  2158   00143C  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2159   00143E  5014               	movf	(___llmod@divisor+2)^0,w,c
  2160   001440  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2161   001442  5015               	movf	(___llmod@divisor+3)^0,w,c
  2162   001444  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2163   001446                     l3122:
  2164   001446  90D8               	bcf	status,0,c
  2165   001448  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2166   00144A  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2167   00144C  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2168   00144E  3212               	rrcf	___llmod@divisor^0,f,c
  2169   001450  2E16               	decfsz	___llmod@counter^0,f,c
  2170   001452  D7E7               	goto	u3290
  2171   001454                     l719:
  2172   001454  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2173   001458  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2174   00145C  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2175   001460  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2176   001464  0012               	return		;funcret
  2177   001466                     __end_of___llmod:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function ___lldiv *****************
  2181 ;; Defined at:
  2182 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  dividend        4   13[COMRAM] unsigned long 
  2185 ;;  divisor         4   17[COMRAM] unsigned long 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  quotient        4   21[COMRAM] unsigned long 
  2188 ;;  counter         1   25[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  4   13[COMRAM] unsigned long 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         8       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:       13 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 5
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text6
  2213   001286                     __ptext6:
  2214                           	callstack 0
  2215   001286                     ___lldiv:
  2216                           	callstack 25
  2217                           
  2218                           ;incstack = 0
  2219   001286  0E00               	movlw	0
  2220   001288  6E16               	movwf	___lldiv@quotient^0,c
  2221   00128A  0E00               	movlw	0
  2222   00128C  6E17               	movwf	(___lldiv@quotient+1)^0,c
  2223   00128E  0E00               	movlw	0
  2224   001290  6E18               	movwf	(___lldiv@quotient+2)^0,c
  2225   001292  0E00               	movlw	0
  2226   001294  6E19               	movwf	(___lldiv@quotient+3)^0,c
  2227   001296  5012               	movf	___lldiv@divisor^0,w,c
  2228   001298  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  2229   00129A  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  2230   00129C  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  2231   00129E  B4D8               	btfsc	status,2,c
  2232   0012A0  D02A               	goto	l338
  2233   0012A2  0E01               	movlw	1
  2234   0012A4  6E1A               	movwf	___lldiv@counter^0,c
  2235   0012A6  D006               	goto	l3096
  2236   0012A8                     l3094:
  2237   0012A8  90D8               	bcf	status,0,c
  2238   0012AA  3612               	rlcf	___lldiv@divisor^0,f,c
  2239   0012AC  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  2240   0012AE  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  2241   0012B0  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  2242   0012B2  2A1A               	incf	___lldiv@counter^0,f,c
  2243   0012B4                     l3096:
  2244   0012B4  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  2245   0012B6  D7F8               	goto	l3094
  2246   0012B8                     u3260:
  2247   0012B8  90D8               	bcf	status,0,c
  2248   0012BA  3616               	rlcf	___lldiv@quotient^0,f,c
  2249   0012BC  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  2250   0012BE  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  2251   0012C0  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  2252   0012C2  5012               	movf	___lldiv@divisor^0,w,c
  2253   0012C4  5C0E               	subwf	___lldiv@dividend^0,w,c
  2254   0012C6  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2255   0012C8  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  2256   0012CA  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2257   0012CC  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  2258   0012CE  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2259   0012D0  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  2260   0012D2  A0D8               	btfss	status,0,c
  2261   0012D4  D009               	goto	l3106
  2262   0012D6  5012               	movf	___lldiv@divisor^0,w,c
  2263   0012D8  5E0E               	subwf	___lldiv@dividend^0,f,c
  2264   0012DA  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2265   0012DC  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  2266   0012DE  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2267   0012E0  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  2268   0012E2  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2269   0012E4  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  2270   0012E6  8016               	bsf	___lldiv@quotient^0,0,c
  2271   0012E8                     l3106:
  2272   0012E8  90D8               	bcf	status,0,c
  2273   0012EA  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  2274   0012EC  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  2275   0012EE  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  2276   0012F0  3212               	rrcf	___lldiv@divisor^0,f,c
  2277   0012F2  2E1A               	decfsz	___lldiv@counter^0,f,c
  2278   0012F4  D7E1               	goto	u3260
  2279   0012F6                     l338:
  2280   0012F6  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  2281   0012FA  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  2282   0012FE  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  2283   001302  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  2284   001306  0012               	return		;funcret
  2285   001308                     __end_of___lldiv:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _NuevoCarac *****************
  2289 ;; Defined at:
  2290 ;;		line 140 in file "LibLCDXC8.h"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  ubicacion       1    wreg     unsigned char 
  2293 ;;  mapeo           1   18[COMRAM] PTR unsigned char 
  2294 ;;		 -> main@heart(8), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  ubicacion       1   19[COMRAM] unsigned char 
  2297 ;;  i               1   20[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2307 ;;      Params:         1       0       0       0       0       0       0       0       0
  2308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2310 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2311 ;;Total ram usage:        3 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 8
  2314 ;; This function calls:
  2315 ;;		_DireccionaLCD
  2316 ;;		_EscribeLCD_c
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text7
  2323   00175E                     __ptext7:
  2324                           	callstack 0
  2325   00175E                     _NuevoCarac:
  2326                           	callstack 22
  2327                           
  2328                           ;incstack = 0
  2329                           ;NuevoCarac@ubicacion stored from wreg
  2330   00175E  6E14               	movwf	NuevoCarac@ubicacion^0,c
  2331                           
  2332                           ;LibLCDXC8.h: 141: DireccionaLCD(0x40+ubicacion);
  2333   001760  5014               	movf	NuevoCarac@ubicacion^0,w,c
  2334   001762  0F40               	addlw	64
  2335   001764  ECDC  F00B         	call	_DireccionaLCD
  2336                           
  2337                           ;LibLCDXC8.h: 142: for(unsigned char i = 0;i<8;i++){
  2338   001768  0E00               	movlw	0
  2339   00176A  6E15               	movwf	NuevoCarac@i^0,c
  2340   00176C                     l2876:
  2341                           
  2342                           ;LibLCDXC8.h: 143: EscribeLCD_c(mapeo[i] & 0x01);
  2343   00176C  5013               	movf	NuevoCarac@mapeo^0,w,c
  2344   00176E  2415               	addwf	NuevoCarac@i^0,w,c
  2345   001770  6ED9               	movwf	fsr2l,c
  2346   001772  6ADA               	clrf	fsr2h,c
  2347   001774  50DF               	movf	indf2,w,c
  2348   001776  0B01               	andlw	1
  2349   001778  ECE7  F00B         	call	_EscribeLCD_c
  2350                           
  2351                           ;LibLCDXC8.h: 144: mapeo[i]>>=1;
  2352   00177C  5013               	movf	NuevoCarac@mapeo^0,w,c
  2353   00177E  2415               	addwf	NuevoCarac@i^0,w,c
  2354   001780  6ED9               	movwf	fsr2l,c
  2355   001782  6ADA               	clrf	fsr2h,c
  2356   001784  90D8               	bcf	status,0,c
  2357   001786  32DF               	rrcf	indf2,f,c
  2358   001788  2A15               	incf	NuevoCarac@i^0,f,c
  2359   00178A  0E07               	movlw	7
  2360   00178C  6415               	cpfsgt	NuevoCarac@i^0,c
  2361   00178E  D7EE               	goto	l2876
  2362   001790  0012               	return	
  2363   001792                     __end_of_NuevoCarac:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _DireccionaLCD *****************
  2367 ;; Defined at:
  2368 ;;		line 259 in file "LibLCDXC8.h"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  a               1    wreg     unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  a               1   17[COMRAM] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 7
  2389 ;; This function calls:
  2390 ;;		_EnviaDato
  2391 ;;		_HabilitaLCD
  2392 ;;		_RetardoLCD
  2393 ;; This function is called by:
  2394 ;;		_NuevoCarac
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text8
  2400   0017B8                     __ptext8:
  2401                           	callstack 0
  2402   0017B8                     _DireccionaLCD:
  2403                           	callstack 22
  2404                           
  2405                           ;incstack = 0
  2406                           ;DireccionaLCD@a stored from wreg
  2407   0017B8  6E12               	movwf	DireccionaLCD@a^0,c
  2408                           
  2409                           ;LibLCDXC8.h: 262: LATE0=0;
  2410   0017BA  908D               	bcf	3981,0,c	;volatile
  2411                           
  2412                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2413   0017BC  5012               	movf	DireccionaLCD@a^0,w,c
  2414   0017BE  EC2B  F00B         	call	_EnviaDato
  2415                           
  2416                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2417   0017C2  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2418                           
  2419                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2420   0017C6  0E04               	movlw	4
  2421   0017C8  EC5E  F00A         	call	_RetardoLCD
  2422   0017CC  0012               	return		;funcret
  2423   0017CE                     __end_of_DireccionaLCD:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _MensajeLCD_Word *****************
  2427 ;; Defined at:
  2428 ;;		line 247 in file "LibLCDXC8.h"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  a               1   18[COMRAM] PTR unsigned char 
  2431 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  2432 ;;		 -> STR_2(5), STR_1(8), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  i               2   20[COMRAM] int 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         1       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        4 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 8
  2451 ;; This function calls:
  2452 ;;		_EscribeLCD_c
  2453 ;; This function is called by:
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text9
  2459   0015BA                     __ptext9:
  2460                           	callstack 0
  2461   0015BA                     _MensajeLCD_Word:
  2462                           	callstack 22
  2463                           
  2464                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2465                           
  2466                           ;incstack = 0
  2467   0015BA  0E00               	movlw	0
  2468   0015BC  6E16               	movwf	(MensajeLCD_Word@i+1)^0,c
  2469   0015BE  0E00               	movlw	0
  2470   0015C0  6E15               	movwf	MensajeLCD_Word@i^0,c
  2471   0015C2                     l2890:
  2472                           
  2473                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2474   0015C2  5013               	movf	MensajeLCD_Word@a^0,w,c
  2475   0015C4  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2476   0015C6  6E14               	movwf	??_MensajeLCD_Word^0,c
  2477   0015C8  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2478   0015CC                     	if	1	;There is more than 1 active tblptr byte
  2479   0015CC  0E08               	movlw	high __smallconst
  2480   0015CE  6EF7               	movwf	tblptrh,c
  2481   0015D0                     	endif
  2482   0015D0                     	if	0	;tblptru may be non-zero
  2483   0015D0                     	endif
  2484   0015D0                     	if	0	;tblptru may be non-zero
  2485   0015D0                     	endif
  2486   0015D0  0008               	tblrd		*
  2487   0015D2  50F5               	movf	tablat,w,c
  2488   0015D4  0900               	iorlw	0
  2489   0015D6  B4D8               	btfsc	status,2,c
  2490   0015D8  0012               	return	
  2491                           
  2492                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2493   0015DA  5013               	movf	MensajeLCD_Word@a^0,w,c
  2494   0015DC  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2495   0015DE  6E14               	movwf	??_MensajeLCD_Word^0,c
  2496   0015E0  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2497   0015E4                     	if	1	;There is more than 1 active tblptr byte
  2498   0015E4  0E08               	movlw	high __smallconst
  2499   0015E6  6EF7               	movwf	tblptrh,c
  2500   0015E8                     	endif
  2501   0015E8                     	if	0	;tblptru may be non-zero
  2502   0015E8                     	endif
  2503   0015E8                     	if	0	;tblptru may be non-zero
  2504   0015E8                     	endif
  2505   0015E8  0008               	tblrd		*
  2506   0015EA  50F5               	movf	tablat,w,c
  2507   0015EC  ECE7  F00B         	call	_EscribeLCD_c
  2508   0015F0  4A15               	infsnz	MensajeLCD_Word@i^0,f,c
  2509   0015F2  2A16               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2510   0015F4  BE16               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2511   0015F6  D7E5               	goto	l2890
  2512   0015F8  5016               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2513   0015FA  E105               	bnz	u2910
  2514   0015FC  0E10               	movlw	16
  2515   0015FE  5C15               	subwf	MensajeLCD_Word@i^0,w,c
  2516   001600  B0D8               	btfsc	status,0,c
  2517   001602  0012               	return	
  2518   001604  D7DE               	goto	l2890
  2519   001606                     u2910:
  2520   001606  0012               	return		;funcret
  2521   001608                     __end_of_MensajeLCD_Word:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _EscribeLCD_c *****************
  2525 ;; Defined at:
  2526 ;;		line 148 in file "LibLCDXC8.h"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  a               1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  a               1   17[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 7
  2547 ;; This function calls:
  2548 ;;		_EnviaDato
  2549 ;;		_HabilitaLCD
  2550 ;;		_RetardoLCD
  2551 ;; This function is called by:
  2552 ;;		_NuevoCarac
  2553 ;;		_MensajeLCD_Word
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text10
  2559   0017CE                     __ptext10:
  2560                           	callstack 0
  2561   0017CE                     _EscribeLCD_c:
  2562                           	callstack 22
  2563                           
  2564                           ;incstack = 0
  2565                           ;EscribeLCD_c@a stored from wreg
  2566   0017CE  6E12               	movwf	EscribeLCD_c@a^0,c
  2567                           
  2568                           ;LibLCDXC8.h: 152: LATE0=1;
  2569   0017D0  808D               	bsf	3981,0,c	;volatile
  2570                           
  2571                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2572   0017D2  5012               	movf	EscribeLCD_c@a^0,w,c
  2573   0017D4  EC2B  F00B         	call	_EnviaDato
  2574                           
  2575                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2576   0017D8  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2577                           
  2578                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2579   0017DC  0E04               	movlw	4
  2580   0017DE  EC5E  F00A         	call	_RetardoLCD
  2581   0017E2  0012               	return		;funcret
  2582   0017E4                     __end_of_EscribeLCD_c:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _LeerTeclado *****************
  2586 ;; Defined at:
  2587 ;;		line 220 in file "Laboratorio4.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      unsigned char 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 5
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text11
  2616   0010D0                     __ptext11:
  2617                           	callstack 0
  2618   0010D0                     _LeerTeclado:
  2619                           	callstack 25
  2620                           
  2621                           ;Laboratorio4.c: 221: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2622                           
  2623                           ;incstack = 0
  2624   0010D0  B881               	btfsc	3969,4,c	;volatile
  2625   0010D2  AA81               	btfss	3969,5,c	;volatile
  2626   0010D4  D004               	goto	u2950
  2627   0010D6  AC81               	btfss	3969,6,c	;volatile
  2628   0010D8  D002               	goto	u2950
  2629   0010DA  BE81               	btfsc	3969,7,c	;volatile
  2630   0010DC  D7F9               	goto	__ptext11
  2631   0010DE                     u2950:
  2632                           
  2633                           ;Laboratorio4.c: 222: verificador = 1;
  2634   0010DE  0E00               	movlw	0
  2635   0010E0  6E28               	movwf	(_verificador+1)^0,c
  2636   0010E2  0E01               	movlw	1
  2637   0010E4  6E27               	movwf	_verificador^0,c
  2638                           
  2639                           ;Laboratorio4.c: 223: LATB=0b11111110;
  2640   0010E6  0EFE               	movlw	254
  2641   0010E8  6E8A               	movwf	138,c	;volatile
  2642                           
  2643                           ;Laboratorio4.c: 224: if(RB4==0) return '1';
  2644   0010EA  B881               	btfsc	3969,4,c	;volatile
  2645   0010EC  D002               	goto	l245
  2646   0010EE  0E31               	movlw	49
  2647   0010F0  0012               	return	
  2648   0010F2                     l245:
  2649                           
  2650                           ;Laboratorio4.c: 225: else if(RB5==0) return '2';
  2651   0010F2  BA81               	btfsc	3969,5,c	;volatile
  2652   0010F4  D002               	goto	l248
  2653   0010F6  0E32               	movlw	50
  2654   0010F8  0012               	return	
  2655   0010FA                     l248:
  2656                           
  2657                           ;Laboratorio4.c: 226: else if(RB6==0) return '3';
  2658   0010FA  BC81               	btfsc	3969,6,c	;volatile
  2659   0010FC  D002               	goto	l2930
  2660   0010FE  0E33               	movlw	51
  2661   001100  0012               	return	
  2662   001102                     l2930:
  2663                           
  2664                           ;Laboratorio4.c: 227: else if(RB7==0 & RC6==0) return '+';
  2665   001102  BC82               	btfsc	3970,6,c	;volatile
  2666   001104  D002               	goto	u2990
  2667   001106  0E01               	movlw	1
  2668   001108  D001               	goto	u2992
  2669   00110A                     u2990:
  2670   00110A  0E00               	movlw	0
  2671   00110C                     u2992:
  2672   00110C  6E0E               	movwf	??_LeerTeclado^0,c
  2673   00110E  BE81               	btfsc	3969,7,c	;volatile
  2674   001110  D002               	goto	u3000
  2675   001112  0E01               	movlw	1
  2676   001114  D001               	goto	u3002
  2677   001116                     u3000:
  2678   001116  0E00               	movlw	0
  2679   001118                     u3002:
  2680   001118  140E               	andwf	??_LeerTeclado^0,w,c
  2681   00111A  A0E8               	btfss	wreg,0,c
  2682   00111C  D002               	goto	l2938
  2683   00111E  0E2B               	movlw	43
  2684   001120  0012               	return	
  2685   001122                     l2938:
  2686                           
  2687                           ;Laboratorio4.c: 228: else if(RB7==0 & RC6==1) return '!';
  2688   001122  AC82               	btfss	3970,6,c	;volatile
  2689   001124  D002               	goto	u3020
  2690   001126  0E01               	movlw	1
  2691   001128  D001               	goto	u3022
  2692   00112A                     u3020:
  2693   00112A  0E00               	movlw	0
  2694   00112C                     u3022:
  2695   00112C  6E0E               	movwf	??_LeerTeclado^0,c
  2696   00112E  BE81               	btfsc	3969,7,c	;volatile
  2697   001130  D002               	goto	u3030
  2698   001132  0E01               	movlw	1
  2699   001134  D001               	goto	u3032
  2700   001136                     u3030:
  2701   001136  0E00               	movlw	0
  2702   001138                     u3032:
  2703   001138  140E               	andwf	??_LeerTeclado^0,w,c
  2704   00113A  A0E8               	btfss	wreg,0,c
  2705   00113C  D002               	goto	l2946
  2706   00113E  0E21               	movlw	33
  2707   001140  0012               	return	
  2708   001142                     l2946:
  2709                           
  2710                           ;Laboratorio4.c: 229: else{;Laboratorio4.c: 230: LATB=0b11111101;
  2711   001142  0EFD               	movlw	253
  2712   001144  6E8A               	movwf	138,c	;volatile
  2713                           
  2714                           ;Laboratorio4.c: 231: if(RB4==0) return '4';
  2715   001146  B881               	btfsc	3969,4,c	;volatile
  2716   001148  D002               	goto	l256
  2717   00114A  0E34               	movlw	52
  2718   00114C  0012               	return	
  2719   00114E                     l256:
  2720                           
  2721                           ;Laboratorio4.c: 232: else if(RB5==0) return '5';
  2722   00114E  BA81               	btfsc	3969,5,c	;volatile
  2723   001150  D002               	goto	l258
  2724   001152  0E35               	movlw	53
  2725   001154  0012               	return	
  2726   001156                     l258:
  2727                           
  2728                           ;Laboratorio4.c: 233: else if(RB6==0) return '6';
  2729   001156  BC81               	btfsc	3969,6,c	;volatile
  2730   001158  D002               	goto	l2968
  2731   00115A  0E36               	movlw	54
  2732   00115C  0012               	return	
  2733   00115E                     l2968:
  2734                           
  2735                           ;Laboratorio4.c: 234: else if(RB7==0 & RC6==0) return '-';
  2736   00115E  BC82               	btfsc	3970,6,c	;volatile
  2737   001160  D002               	goto	u3080
  2738   001162  0E01               	movlw	1
  2739   001164  D001               	goto	u3082
  2740   001166                     u3080:
  2741   001166  0E00               	movlw	0
  2742   001168                     u3082:
  2743   001168  6E0E               	movwf	??_LeerTeclado^0,c
  2744   00116A  BE81               	btfsc	3969,7,c	;volatile
  2745   00116C  D002               	goto	u3090
  2746   00116E  0E01               	movlw	1
  2747   001170  D001               	goto	u3092
  2748   001172                     u3090:
  2749   001172  0E00               	movlw	0
  2750   001174                     u3092:
  2751   001174  140E               	andwf	??_LeerTeclado^0,w,c
  2752   001176  A0E8               	btfss	wreg,0,c
  2753   001178  D002               	goto	l2976
  2754   00117A  0E2D               	movlw	45
  2755   00117C  0012               	return	
  2756   00117E                     l2976:
  2757                           
  2758                           ;Laboratorio4.c: 235: else if(RB7==0 & RC6==1) return '^';
  2759   00117E  AC82               	btfss	3970,6,c	;volatile
  2760   001180  D002               	goto	u3110
  2761   001182  0E01               	movlw	1
  2762   001184  D001               	goto	u3112
  2763   001186                     u3110:
  2764   001186  0E00               	movlw	0
  2765   001188                     u3112:
  2766   001188  6E0E               	movwf	??_LeerTeclado^0,c
  2767   00118A  BE81               	btfsc	3969,7,c	;volatile
  2768   00118C  D002               	goto	u3120
  2769   00118E  0E01               	movlw	1
  2770   001190  D001               	goto	u3122
  2771   001192                     u3120:
  2772   001192  0E00               	movlw	0
  2773   001194                     u3122:
  2774   001194  140E               	andwf	??_LeerTeclado^0,w,c
  2775   001196  A0E8               	btfss	wreg,0,c
  2776   001198  D002               	goto	l2984
  2777   00119A  0E5E               	movlw	94
  2778   00119C  0012               	return	
  2779   00119E                     l2984:
  2780                           
  2781                           ;Laboratorio4.c: 236: else{;Laboratorio4.c: 237: LATB=0b11111011;
  2782   00119E  0EFB               	movlw	251
  2783   0011A0  6E8A               	movwf	138,c	;volatile
  2784                           
  2785                           ;Laboratorio4.c: 238: if(RB4==0) return '7';
  2786   0011A2  B881               	btfsc	3969,4,c	;volatile
  2787   0011A4  D002               	goto	l266
  2788   0011A6  0E37               	movlw	55
  2789   0011A8  0012               	return	
  2790   0011AA                     l266:
  2791                           
  2792                           ;Laboratorio4.c: 239: else if(RB5==0) return '8';
  2793   0011AA  BA81               	btfsc	3969,5,c	;volatile
  2794   0011AC  D002               	goto	l268
  2795   0011AE  0E38               	movlw	56
  2796   0011B0  0012               	return	
  2797   0011B2                     l268:
  2798                           
  2799                           ;Laboratorio4.c: 240: else if(RB6==0) return '9';
  2800   0011B2  BC81               	btfsc	3969,6,c	;volatile
  2801   0011B4  D002               	goto	l270
  2802   0011B6  0E39               	movlw	57
  2803   0011B8  0012               	return	
  2804   0011BA                     l270:
  2805                           
  2806                           ;Laboratorio4.c: 241: else if(RB7==0) return '/';
  2807   0011BA  BE81               	btfsc	3969,7,c	;volatile
  2808   0011BC  D002               	goto	l3012
  2809   0011BE  0E2F               	movlw	47
  2810   0011C0  0012               	return	
  2811   0011C2                     l3012:
  2812                           
  2813                           ;Laboratorio4.c: 242: else{;Laboratorio4.c: 243: LATB=0b11110111;
  2814   0011C2  0EF7               	movlw	247
  2815   0011C4  6E8A               	movwf	138,c	;volatile
  2816                           
  2817                           ;Laboratorio4.c: 244: if(RB4==0) return 'C';
  2818   0011C6  B881               	btfsc	3969,4,c	;volatile
  2819   0011C8  D002               	goto	l274
  2820   0011CA  0E43               	movlw	67
  2821   0011CC  0012               	return	
  2822   0011CE                     l274:
  2823                           
  2824                           ;Laboratorio4.c: 245: else if(RB5==0) return '0';
  2825   0011CE  BA81               	btfsc	3969,5,c	;volatile
  2826   0011D0  D002               	goto	l276
  2827   0011D2  0E30               	movlw	48
  2828   0011D4  0012               	return	
  2829   0011D6                     l276:
  2830                           
  2831                           ;Laboratorio4.c: 246: else if(RB6==0) return '=';
  2832   0011D6  BC81               	btfsc	3969,6,c	;volatile
  2833   0011D8  D002               	goto	l278
  2834   0011DA  0E3D               	movlw	61
  2835   0011DC  0012               	return	
  2836   0011DE                     l278:
  2837                           
  2838                           ;Laboratorio4.c: 247: else if(RB7==0) return 'x';
  2839   0011DE  BE81               	btfsc	3969,7,c	;volatile
  2840   0011E0  D002               	goto	l275
  2841   0011E2  0E78               	movlw	120
  2842   0011E4  0012               	return	
  2843   0011E6                     l275:
  2844                           
  2845                           ;Laboratorio4.c: 248: };Laboratorio4.c: 249: };Laboratorio4.c: 250: };Laboratorio4.c: 25
      +                          1: return '?';
  2846   0011E6  0E3F               	movlw	63
  2847   0011E8  0012               	return		;funcret
  2848   0011EA                     __end_of_LeerTeclado:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _InicializaLCD *****************
  2852 ;; Defined at:
  2853 ;;		line 70 in file "LibLCDXC8.h"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 8
  2874 ;; This function calls:
  2875 ;;		_BorraLCD
  2876 ;;		_EnviaDato
  2877 ;;		_HabilitaLCD
  2878 ;;		_RetardoLCD
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text12
  2885   0011EA                     __ptext12:
  2886                           	callstack 0
  2887   0011EA                     _InicializaLCD:
  2888                           	callstack 22
  2889                           
  2890                           ;LibLCDXC8.h: 72: LATE0=0;
  2891                           
  2892                           ;incstack = 0
  2893   0011EA  908D               	bcf	3981,0,c	;volatile
  2894                           
  2895                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2896   0011EC  0E04               	movlw	4
  2897   0011EE  1844               	xorwf	_interfaz^0,w,c
  2898   0011F0  A4D8               	btfss	status,2,c
  2899   0011F2  D004               	goto	l2820
  2900                           
  2901                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2902   0011F4  508C               	movf	140,w,c	;volatile
  2903   0011F6  0B0F               	andlw	15
  2904   0011F8  0930               	iorlw	48
  2905   0011FA  D001               	goto	L4
  2906   0011FC                     l2820:
  2907                           
  2908                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2909   0011FC  0E3F               	movlw	63
  2910   0011FE                     L4:
  2911   0011FE  6E8C               	movwf	140,c	;volatile
  2912                           
  2913                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2914   001200  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2915                           
  2916                           ;LibLCDXC8.h: 78: RetardoLCD(1);
  2917   001204  0E01               	movlw	1
  2918   001206  EC5E  F00A         	call	_RetardoLCD
  2919                           
  2920                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2921   00120A  0E04               	movlw	4
  2922   00120C  1844               	xorwf	_interfaz^0,w,c
  2923   00120E  A4D8               	btfss	status,2,c
  2924   001210  D004               	goto	l2830
  2925                           
  2926                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2927   001212  508C               	movf	140,w,c	;volatile
  2928   001214  0B0F               	andlw	15
  2929   001216  0930               	iorlw	48
  2930   001218  D001               	goto	L5
  2931   00121A                     l2830:
  2932                           
  2933                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2934   00121A  0E3F               	movlw	63
  2935   00121C                     L5:
  2936   00121C  6E8C               	movwf	140,c	;volatile
  2937                           
  2938                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2939   00121E  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2940                           
  2941                           ;LibLCDXC8.h: 84: RetardoLCD(3);
  2942   001222  0E03               	movlw	3
  2943   001224  EC5E  F00A         	call	_RetardoLCD
  2944                           
  2945                           ;LibLCDXC8.h: 85: if(interfaz==4)
  2946   001228  0E04               	movlw	4
  2947   00122A  1844               	xorwf	_interfaz^0,w,c
  2948   00122C  A4D8               	btfss	status,2,c
  2949   00122E  D004               	goto	l2840
  2950                           
  2951                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x30;
  2952   001230  508C               	movf	140,w,c	;volatile
  2953   001232  0B0F               	andlw	15
  2954   001234  0930               	iorlw	48
  2955   001236  D001               	goto	L6
  2956   001238                     l2840:
  2957                           
  2958                           ;LibLCDXC8.h: 87: else;LibLCDXC8.h: 88: LATD=0x3F;
  2959   001238  0E3F               	movlw	63
  2960   00123A                     L6:
  2961   00123A  6E8C               	movwf	140,c	;volatile
  2962                           
  2963                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2964   00123C  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2965                           
  2966                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2967   001240  0E04               	movlw	4
  2968   001242  EC5E  F00A         	call	_RetardoLCD
  2969                           
  2970                           ;LibLCDXC8.h: 91: if(interfaz==4){
  2971   001246  0E04               	movlw	4
  2972   001248  1844               	xorwf	_interfaz^0,w,c
  2973   00124A  A4D8               	btfss	status,2,c
  2974   00124C  D011               	goto	l2860
  2975                           
  2976                           ;LibLCDXC8.h: 92: LATD=(LATD & 0b00001111) | 0x20;
  2977   00124E  508C               	movf	140,w,c	;volatile
  2978   001250  0B0F               	andlw	15
  2979   001252  0920               	iorlw	32
  2980   001254  6E8C               	movwf	140,c	;volatile
  2981                           
  2982                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2983   001256  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2984                           
  2985                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2986   00125A  0E04               	movlw	4
  2987   00125C  EC5E  F00A         	call	_RetardoLCD
  2988                           
  2989                           ;LibLCDXC8.h: 95: EnviaDato(0x2F);
  2990   001260  0E2F               	movlw	47
  2991   001262  EC2B  F00B         	call	_EnviaDato
  2992                           
  2993                           ;LibLCDXC8.h: 96: HabilitaLCD();
  2994   001266  EC11  F00C         	call	_HabilitaLCD	;wreg free
  2995                           
  2996                           ;LibLCDXC8.h: 97: RetardoLCD(4);
  2997   00126A  0E04               	movlw	4
  2998   00126C  EC5E  F00A         	call	_RetardoLCD
  2999   001270                     l2860:
  3000                           
  3001                           ;LibLCDXC8.h: 98: };LibLCDXC8.h: 99: BorraLCD();
  3002   001270  ECFD  F00B         	call	_BorraLCD	;wreg free
  3003                           
  3004                           ;LibLCDXC8.h: 100: EnviaDato(0xF);
  3005   001274  0E0F               	movlw	15
  3006   001276  EC2B  F00B         	call	_EnviaDato
  3007                           
  3008                           ;LibLCDXC8.h: 101: HabilitaLCD();
  3009   00127A  EC11  F00C         	call	_HabilitaLCD	;wreg free
  3010                           
  3011                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  3012   00127E  0E04               	movlw	4
  3013   001280  EC5E  F00A         	call	_RetardoLCD
  3014   001284  0012               	return		;funcret
  3015   001286                     __end_of_InicializaLCD:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function _BorraLCD *****************
  3019 ;; Defined at:
  3020 ;;		line 111 in file "LibLCDXC8.h"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 7
  3041 ;; This function calls:
  3042 ;;		_EnviaDato
  3043 ;;		_HabilitaLCD
  3044 ;;		_RetardoLCD
  3045 ;; This function is called by:
  3046 ;;		_InicializaLCD
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text13
  3052   0017FA                     __ptext13:
  3053                           	callstack 0
  3054   0017FA                     _BorraLCD:
  3055                           	callstack 22
  3056                           
  3057                           ;LibLCDXC8.h: 113: LATE0=0;
  3058                           
  3059                           ;incstack = 0
  3060   0017FA  908D               	bcf	3981,0,c	;volatile
  3061                           
  3062                           ;LibLCDXC8.h: 114: EnviaDato(0x01);
  3063   0017FC  0E01               	movlw	1
  3064   0017FE  EC2B  F00B         	call	_EnviaDato
  3065                           
  3066                           ;LibLCDXC8.h: 115: HabilitaLCD();
  3067   001802  EC11  F00C         	call	_HabilitaLCD	;wreg free
  3068                           
  3069                           ;LibLCDXC8.h: 116: RetardoLCD(2);
  3070   001806  0E02               	movlw	2
  3071   001808  EC5E  F00A         	call	_RetardoLCD
  3072   00180C  0012               	return		;funcret
  3073   00180E                     __end_of_BorraLCD:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _EnviaDato *****************
  3077 ;; Defined at:
  3078 ;;		line 58 in file "LibLCDXC8.h"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  a               1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  a               1   16[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3094 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3095 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 6
  3099 ;; This function calls:
  3100 ;;		_HabilitaLCD
  3101 ;;		_RetardoLCD
  3102 ;; This function is called by:
  3103 ;;		_InicializaLCD
  3104 ;;		_BorraLCD
  3105 ;;		_EscribeLCD_c
  3106 ;;		_DireccionaLCD
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text14
  3111   001656                     __ptext14:
  3112                           	callstack 0
  3113   001656                     _EnviaDato:
  3114                           	callstack 22
  3115                           
  3116                           ;incstack = 0
  3117                           ;EnviaDato@a stored from wreg
  3118   001656  6E11               	movwf	EnviaDato@a^0,c
  3119                           
  3120                           ;LibLCDXC8.h: 59: if(interfaz==4){
  3121   001658  0E04               	movlw	4
  3122   00165A  1844               	xorwf	_interfaz^0,w,c
  3123   00165C  A4D8               	btfss	status,2,c
  3124   00165E  D017               	goto	l2786
  3125                           
  3126                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3127   001660  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3128   001664  0EF0               	movlw	240
  3129   001666  1610               	andwf	??_EnviaDato^0,f,c
  3130   001668  508C               	movf	140,w,c	;volatile
  3131   00166A  0B0F               	andlw	15
  3132   00166C  1010               	iorwf	??_EnviaDato^0,w,c
  3133   00166E  6E8C               	movwf	140,c	;volatile
  3134                           
  3135                           ;LibLCDXC8.h: 61: HabilitaLCD();
  3136   001670  EC11  F00C         	call	_HabilitaLCD	;wreg free
  3137                           
  3138                           ;LibLCDXC8.h: 62: RetardoLCD(1);
  3139   001674  0E01               	movlw	1
  3140   001676  EC5E  F00A         	call	_RetardoLCD
  3141                           
  3142                           ;LibLCDXC8.h: 63: LATD=(LATD & 0b00001111) | (a<<4);
  3143   00167A  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3144   00167E  3A10               	swapf	??_EnviaDato^0,f,c
  3145   001680  0EF0               	movlw	240
  3146   001682  1610               	andwf	??_EnviaDato^0,f,c
  3147   001684  508C               	movf	140,w,c	;volatile
  3148   001686  0B0F               	andlw	15
  3149   001688  1010               	iorwf	??_EnviaDato^0,w,c
  3150   00168A  6E8C               	movwf	140,c	;volatile
  3151                           
  3152                           ;LibLCDXC8.h: 66: }else if(interfaz==8){
  3153   00168C  0012               	return	
  3154   00168E                     l2786:
  3155   00168E  0E08               	movlw	8
  3156   001690  1844               	xorwf	_interfaz^0,w,c
  3157   001692  A4D8               	btfss	status,2,c
  3158   001694  0012               	return	
  3159                           
  3160                           ;LibLCDXC8.h: 67: LATD=a;
  3161   001696  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3162   00169A  0012               	return		;funcret
  3163   00169C                     __end_of_EnviaDato:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _RetardoLCD *****************
  3167 ;; Defined at:
  3168 ;;		line 295 in file "LibLCDXC8.h"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  a               1   14[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 5
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_EnviaDato
  3193 ;;		_InicializaLCD
  3194 ;;		_BorraLCD
  3195 ;;		_EscribeLCD_c
  3196 ;;		_DireccionaLCD
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text15
  3201   0014BC                     __ptext15:
  3202                           	callstack 0
  3203   0014BC                     _RetardoLCD:
  3204                           	callstack 23
  3205                           
  3206                           ;incstack = 0
  3207                           ;RetardoLCD@a stored from wreg
  3208   0014BC  6E0F               	movwf	RetardoLCD@a^0,c
  3209                           
  3210                           ;LibLCDXC8.h: 296: switch(a){
  3211   0014BE  D01B               	goto	l2774
  3212   0014C0                     l2764:
  3213   0014C0  0E05               	movlw	5
  3214   0014C2  6E0E               	movwf	??_RetardoLCD^0,c
  3215   0014C4  0EDE               	movlw	222
  3216   0014C6                     u4167:
  3217   0014C6  2EE8               	decfsz	wreg,f,c
  3218   0014C8  D7FE               	bra	u4167
  3219   0014CA  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3220   0014CC  D7FC               	bra	u4167
  3221                           
  3222                           ;LibLCDXC8.h: 299: break;
  3223   0014CE  0012               	return	
  3224   0014D0                     l2766:
  3225   0014D0  0E53               	movlw	83
  3226   0014D2                     u4177:
  3227   0014D2  2EE8               	decfsz	wreg,f,c
  3228   0014D4  D7FE               	bra	u4177
  3229   0014D6  F000               	nop	
  3230                           
  3231                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3232   0014D8  0E35               	movlw	53
  3233   0014DA                     u4187:
  3234   0014DA  2EE8               	decfsz	wreg,f,c
  3235   0014DC  D7FE               	bra	u4187
  3236   0014DE  F000               	nop	
  3237                           
  3238                           ;LibLCDXC8.h: 303: break;
  3239   0014E0  0012               	return	
  3240   0014E2                     l2768:
  3241   0014E2  0E08               	movlw	8
  3242   0014E4                     u4197:
  3243   0014E4  2EE8               	decfsz	wreg,f,c
  3244   0014E6  D7FE               	bra	u4197
  3245   0014E8  F000               	nop	
  3246                           
  3247                           ;LibLCDXC8.h: 306: break;
  3248   0014EA  0012               	return	
  3249   0014EC                     l2770:
  3250   0014EC  0E03               	movlw	3
  3251   0014EE                     u4207:
  3252   0014EE  2EE8               	decfsz	wreg,f,c
  3253   0014F0  D7FE               	bra	u4207
  3254   0014F2  F000               	nop	
  3255                           
  3256                           ;LibLCDXC8.h: 309: break;
  3257   0014F4  0012               	return	
  3258   0014F6                     l2774:
  3259   0014F6  500F               	movf	RetardoLCD@a^0,w,c
  3260                           
  3261                           ; Switch size 1, requested type "simple"
  3262                           ; Number of cases is 4, Range of values is 1 to 4
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           13     7 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267   0014F8  0A01               	xorlw	1	; case 1
  3268   0014FA  B4D8               	btfsc	status,2,c
  3269   0014FC  D7E1               	goto	l2764
  3270   0014FE  0A03               	xorlw	3	; case 2
  3271   001500  B4D8               	btfsc	status,2,c
  3272   001502  D7E6               	goto	l2766
  3273   001504  0A01               	xorlw	1	; case 3
  3274   001506  B4D8               	btfsc	status,2,c
  3275   001508  D7EC               	goto	l2768
  3276   00150A  0A07               	xorlw	7	; case 4
  3277   00150C  A4D8               	btfss	status,2,c
  3278   00150E  0012               	return	
  3279   001510  D7ED               	goto	l2770
  3280   001512                     __end_of_RetardoLCD:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _HabilitaLCD *****************
  3284 ;; Defined at:
  3285 ;;		line 104 in file "LibLCDXC8.h"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 5
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_EnviaDato
  3310 ;;		_InicializaLCD
  3311 ;;		_BorraLCD
  3312 ;;		_EscribeLCD_c
  3313 ;;		_DireccionaLCD
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text16
  3318   001822                     __ptext16:
  3319                           	callstack 0
  3320   001822                     _HabilitaLCD:
  3321                           	callstack 23
  3322                           
  3323                           ;LibLCDXC8.h: 106: LATE1=1;
  3324                           
  3325                           ;incstack = 0
  3326   001822  828D               	bsf	3981,1,c	;volatile
  3327                           
  3328                           ;LibLCDXC8.h: 107: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3329   001824  0E03               	movlw	3
  3330   001826                     u4217:
  3331   001826  2EE8               	decfsz	wreg,f,c
  3332   001828  D7FE               	bra	u4217
  3333   00182A  F000               	nop	
  3334                           
  3335                           ;LibLCDXC8.h: 109: LATE1=0;
  3336   00182C  928D               	bcf	3981,1,c	;volatile
  3337   00182E  0012               	return		;funcret
  3338   001830                     __end_of_HabilitaLCD:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _ColorRGB *****************
  3342 ;; Defined at:
  3343 ;;		line 254 in file "Laboratorio4.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3359 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 5
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text17
  3372   001386                     __ptext17:
  3373                           	callstack 0
  3374   001386                     _ColorRGB:
  3375                           	callstack 25
  3376                           
  3377                           ;Laboratorio4.c: 255: if(color==8) color = 0;
  3378                           
  3379                           ;incstack = 0
  3380   001386  0E08               	movlw	8
  3381   001388  182B               	xorwf	_color^0,w,c
  3382   00138A  102C               	iorwf	(_color+1)^0,w,c
  3383   00138C  A4D8               	btfss	status,2,c
  3384   00138E  D014               	goto	l3064
  3385   001390  0E00               	movlw	0
  3386   001392  6E2C               	movwf	(_color+1)^0,c
  3387   001394  0E00               	movlw	0
  3388   001396  6E2B               	movwf	_color^0,c
  3389   001398  D00F               	goto	l3064
  3390   00139A                     l3046:
  3391                           
  3392                           ;Laboratorio4.c: 258: LATC = 0b00000000;
  3393   00139A  0E00               	movlw	0
  3394   00139C  D00B               	goto	L12
  3395   00139E                     l3048:
  3396                           
  3397                           ;Laboratorio4.c: 261: LATC = 0b00000101;
  3398   00139E  0E05               	movlw	5
  3399   0013A0  D009               	goto	L12
  3400   0013A2                     l3050:
  3401                           
  3402                           ;Laboratorio4.c: 264: LATC = 0b00000110;
  3403   0013A2  0E06               	movlw	6
  3404   0013A4  D007               	goto	L12
  3405   0013A6                     l3052:
  3406                           
  3407                           ;Laboratorio4.c: 267: LATC = 0b00000011;
  3408   0013A6  0E03               	movlw	3
  3409   0013A8  D005               	goto	L12
  3410   0013AA                     l3054:
  3411                           
  3412                           ;Laboratorio4.c: 270: LATC = 0b00000010;
  3413   0013AA  0E02               	movlw	2
  3414   0013AC  D003               	goto	L12
  3415   0013AE                     l3058:
  3416                           
  3417                           ;Laboratorio4.c: 276: LATC = 0b00000100;
  3418   0013AE  0E04               	movlw	4
  3419   0013B0  D001               	goto	L12
  3420   0013B2                     l3060:
  3421                           
  3422                           ;Laboratorio4.c: 279: LATC = 0b00000111;
  3423   0013B2  0E07               	movlw	7
  3424   0013B4                     L12:
  3425   0013B4  6E8B               	movwf	139,c	;volatile
  3426                           
  3427                           ;Laboratorio4.c: 280: break;
  3428   0013B6  D021               	goto	l3066
  3429   0013B8                     l3064:
  3430   0013B8  C02B  F00E         	movff	_color,??_ColorRGB
  3431   0013BC  C02C  F00F         	movff	_color+1,??_ColorRGB+1
  3432                           
  3433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3434                           ; Switch size 1, requested type "simple"
  3435                           ; Number of cases is 1, Range of values is 0 to 0
  3436                           ; switch strategies available:
  3437                           ; Name         Instructions Cycles
  3438                           ; simple_byte            4     3 (average)
  3439                           ;	Chosen strategy is simple_byte
  3440   0013C0  500F               	movf	(??_ColorRGB+1)^0,w,c
  3441   0013C2  0A00               	xorlw	0	; case 0
  3442   0013C4  A4D8               	btfss	status,2,c
  3443   0013C6  D019               	goto	l3066
  3444                           
  3445                           ; Switch size 1, requested type "simple"
  3446                           ; Number of cases is 8, Range of values is 0 to 7
  3447                           ; switch strategies available:
  3448                           ; Name         Instructions Cycles
  3449                           ; simple_byte           25    13 (average)
  3450                           ;	Chosen strategy is simple_byte
  3451   0013C8  500E               	movf	??_ColorRGB^0,w,c
  3452   0013CA  0A00               	xorlw	0	; case 0
  3453   0013CC  B4D8               	btfsc	status,2,c
  3454   0013CE  D7E5               	goto	l3046
  3455   0013D0  0A01               	xorlw	1	; case 1
  3456   0013D2  B4D8               	btfsc	status,2,c
  3457   0013D4  D7E4               	goto	l3048
  3458   0013D6  0A03               	xorlw	3	; case 2
  3459   0013D8  B4D8               	btfsc	status,2,c
  3460   0013DA  D7E3               	goto	l3050
  3461   0013DC  0A01               	xorlw	1	; case 3
  3462   0013DE  B4D8               	btfsc	status,2,c
  3463   0013E0  D7E2               	goto	l3052
  3464   0013E2  0A07               	xorlw	7	; case 4
  3465   0013E4  B4D8               	btfsc	status,2,c
  3466   0013E6  D7E1               	goto	l3054
  3467   0013E8  0A01               	xorlw	1	; case 5
  3468   0013EA  B4D8               	btfsc	status,2,c
  3469   0013EC  D7DA               	goto	l3050
  3470   0013EE  0A03               	xorlw	3	; case 6
  3471   0013F0  B4D8               	btfsc	status,2,c
  3472   0013F2  D7DD               	goto	l3058
  3473   0013F4  0A01               	xorlw	1	; case 7
  3474   0013F6  B4D8               	btfsc	status,2,c
  3475   0013F8  D7DC               	goto	l3060
  3476   0013FA                     l3066:
  3477                           
  3478                           ;Laboratorio4.c: 284: color += 1;
  3479   0013FA  4A2B               	infsnz	_color^0,f,c
  3480   0013FC  2A2C               	incf	(_color+1)^0,f,c
  3481   0013FE  0012               	return		;funcret
  3482   001400                     __end_of_ColorRGB:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function _ISR *****************
  3486 ;; Defined at:
  3487 ;;		line 287 in file "Laboratorio4.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        4 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 4
  3508 ;; This function calls:
  3509 ;;		i2_BorraLCD
  3510 ;;		i2_MensajeLCD_Word
  3511 ;; This function is called by:
  3512 ;;		Interrupt level 2
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	intcode
  3517   000008                     __pintcode:
  3518                           	callstack 0
  3519   000008                     _ISR:
  3520                           	callstack 22
  3521                           
  3522                           ;incstack = 0
  3523   000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3524   00000A  ED84  F009         	call	int_func,f	;refresh shadow registers
  3525                           
  3526                           	psect	intcode_body
  3527   001308                     __pintcode_body:
  3528                           	callstack 22
  3529   001308                     int_func:
  3530                           	callstack 22
  3531   001308  0006               	pop		; remove dummy address from shadow register refresh
  3532   00130A  CFF6 F00A          	movff	tblptrl,??_ISR
  3533   00130E  CFF7 F00B          	movff	tblptrh,??_ISR+1
  3534   001312  CFF8 F00C          	movff	tblptru,??_ISR+2
  3535   001316  CFF5 F00D          	movff	tablat,??_ISR+3
  3536                           
  3537                           ;Laboratorio4.c: 288: if(TMR0IF==1){
  3538   00131A  A4F2               	btfss	4082,2,c	;volatile
  3539   00131C  D019               	goto	i2l2744
  3540                           
  3541                           ;Laboratorio4.c: 289: if(!verificador) contador = contador +1;
  3542   00131E  5027               	movf	_verificador^0,w,c
  3543   001320  1028               	iorwf	(_verificador+1)^0,w,c
  3544   001322  A4D8               	btfss	status,2,c
  3545   001324  D007               	goto	i2l2738
  3546   001326  0E01               	movlw	1
  3547   001328  2429               	addwf	_contador^0,w,c
  3548   00132A  6E29               	movwf	_contador^0,c
  3549   00132C  0E00               	movlw	0
  3550   00132E  202A               	addwfc	(_contador+1)^0,w,c
  3551   001330  6E2A               	movwf	(_contador+1)^0,c
  3552   001332  D004               	goto	i2l2740
  3553   001334                     i2l2738:
  3554                           
  3555                           ;Laboratorio4.c: 290: else contador = 0;
  3556   001334  0E00               	movlw	0
  3557   001336  6E2A               	movwf	(_contador+1)^0,c
  3558   001338  0E00               	movlw	0
  3559   00133A  6E29               	movwf	_contador^0,c
  3560   00133C                     i2l2740:
  3561                           
  3562                           ;Laboratorio4.c: 291: TMR0IF=0;
  3563   00133C  94F2               	bcf	4082,2,c	;volatile
  3564                           
  3565                           ;Laboratorio4.c: 292: LATE2 = !LATE2;
  3566   00133E  B48D               	btfsc	3981,2,c	;volatile
  3567   001340  D002               	goto	i2u279_40
  3568   001342  848D               	bsf	3981,2,c	;volatile
  3569   001344  D001               	goto	i2u280_45
  3570   001346                     i2u279_40:
  3571   001346  948D               	bcf	3981,2,c	;volatile
  3572   001348                     i2u280_45:
  3573                           
  3574                           ;Laboratorio4.c: 293: TMR0 = 49911;
  3575   001348  0EC2               	movlw	194
  3576   00134A  6ED7               	movwf	215,c	;volatile
  3577   00134C  0EF7               	movlw	247
  3578   00134E  6ED6               	movwf	214,c	;volatile
  3579   001350                     i2l2744:
  3580                           
  3581                           ;Laboratorio4.c: 294: };Laboratorio4.c: 296: if(contador == 20){
  3582   001350  0E14               	movlw	20
  3583   001352  1829               	xorwf	_contador^0,w,c
  3584   001354  102A               	iorwf	(_contador+1)^0,w,c
  3585   001356  A4D8               	btfss	status,2,c
  3586   001358  D00C               	goto	i2l308
  3587                           
  3588                           ;Laboratorio4.c: 297: if(!verificador){
  3589   00135A  5027               	movf	_verificador^0,w,c
  3590   00135C  1028               	iorwf	(_verificador+1)^0,w,c
  3591   00135E  A4D8               	btfss	status,2,c
  3592   001360  D008               	goto	i2l308
  3593                           
  3594                           ;Laboratorio4.c: 298: BorraLCD();
  3595   001362  EC07  F00C         	call	i2_BorraLCD	;wreg free
  3596                           
  3597                           ;Laboratorio4.c: 299: MensajeLCD_Word("En Resposo");
  3598   001366  0E12               	movlw	low STR_6
  3599   001368  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3600   00136A  EC04  F00B         	call	i2_MensajeLCD_Word	;wreg free
  3601   00136E  0003               	sleep		;# 
  3602   001370                     i2l305:
  3603   001370  D7FF               	goto	i2l305
  3604   001372                     i2l308:
  3605   001372  C00D  FFF5         	movff	??_ISR+3,tablat
  3606   001376  C00C  FFF8         	movff	??_ISR+2,tblptru
  3607   00137A  C00B  FFF7         	movff	??_ISR+1,tblptrh
  3608   00137E  C00A  FFF6         	movff	??_ISR,tblptrl
  3609   001382  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3610   001384  0011               	retfie		f
  3611   001386                     __end_of_ISR:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function i2_MensajeLCD_Word *****************
  3615 ;; Defined at:
  3616 ;;		line 247 in file "LibLCDXC8.h"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  a               1    5[COMRAM] PTR unsigned char 
  3619 ;;		 -> STR_6(11), STR_5(5), STR_4(5), STR_3(17), 
  3620 ;;		 -> STR_2(5), STR_1(8), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  i               2    7[COMRAM] int 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3632 ;;      Params:         1       0       0       0       0       0       0       0       0
  3633 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3634 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3635 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3636 ;;Total ram usage:        4 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 3
  3639 ;; This function calls:
  3640 ;;		i2_EscribeLCD_c
  3641 ;; This function is called by:
  3642 ;;		_ISR
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text19
  3647   001608                     __ptext19:
  3648                           	callstack 0
  3649   001608                     i2_MensajeLCD_Word:
  3650                           	callstack 22
  3651                           
  3652                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  3653                           
  3654                           ;incstack = 0
  3655   001608  0E00               	movlw	0
  3656   00160A  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  3657   00160C  0E00               	movlw	0
  3658   00160E  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  3659   001610                     i2l2370:
  3660                           
  3661                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  3662   001610  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3663   001612  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3664   001614  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3665   001616  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3666   00161A                     	if	1	;There is more than 1 active tblptr byte
  3667   00161A  0E08               	movlw	high __smallconst
  3668   00161C  6EF7               	movwf	tblptrh,c
  3669   00161E                     	endif
  3670   00161E                     	if	0	;tblptru may be non-zero
  3671   00161E                     	endif
  3672   00161E                     	if	0	;tblptru may be non-zero
  3673   00161E                     	endif
  3674   00161E  0008               	tblrd		*
  3675   001620  50F5               	movf	tablat,w,c
  3676   001622  0900               	iorlw	0
  3677   001624  B4D8               	btfsc	status,2,c
  3678   001626  0012               	return	
  3679                           
  3680                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  3681   001628  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3682   00162A  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3683   00162C  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3684   00162E  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3685   001632                     	if	1	;There is more than 1 active tblptr byte
  3686   001632  0E08               	movlw	high __smallconst
  3687   001634  6EF7               	movwf	tblptrh,c
  3688   001636                     	endif
  3689   001636                     	if	0	;tblptru may be non-zero
  3690   001636                     	endif
  3691   001636                     	if	0	;tblptru may be non-zero
  3692   001636                     	endif
  3693   001636  0008               	tblrd		*
  3694   001638  50F5               	movf	tablat,w,c
  3695   00163A  ECF2  F00B         	call	i2_EscribeLCD_c
  3696   00163E  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  3697   001640  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  3698   001642  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  3699   001644  D7E5               	goto	i2l2370
  3700   001646  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  3701   001648  E105               	bnz	i2u199_40
  3702   00164A  0E10               	movlw	16
  3703   00164C  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  3704   00164E  B0D8               	btfsc	status,0,c
  3705   001650  0012               	return	
  3706   001652  D7DE               	goto	i2l2370
  3707   001654                     i2u199_40:
  3708   001654  0012               	return		;funcret
  3709   001656                     __end_ofi2_MensajeLCD_Word:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function i2_EscribeLCD_c *****************
  3713 ;; Defined at:
  3714 ;;		line 148 in file "LibLCDXC8.h"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  a               1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  a               1    4[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 2
  3735 ;; This function calls:
  3736 ;;		i2_EnviaDato
  3737 ;;		i2_HabilitaLCD
  3738 ;;		i2_RetardoLCD
  3739 ;; This function is called by:
  3740 ;;		i2_MensajeLCD_Word
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text20
  3745   0017E4                     __ptext20:
  3746                           	callstack 0
  3747   0017E4                     i2_EscribeLCD_c:
  3748                           	callstack 22
  3749                           
  3750                           ;incstack = 0
  3751                           ;i2EscribeLCD_c@a stored from wreg
  3752   0017E4  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3753                           
  3754                           ;LibLCDXC8.h: 152: LATE0=1;
  3755   0017E6  808D               	bsf	3981,0,c	;volatile
  3756                           
  3757                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3758   0017E8  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3759   0017EA  EC4E  F00B         	call	i2_EnviaDato
  3760                           
  3761                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3762   0017EE  EC18  F00C         	call	i2_HabilitaLCD	;wreg free
  3763                           
  3764                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3765   0017F2  0E04               	movlw	4
  3766   0017F4  EC89  F00A         	call	i2_RetardoLCD
  3767   0017F8  0012               	return		;funcret
  3768   0017FA                     __end_ofi2_EscribeLCD_c:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function i2_BorraLCD *****************
  3772 ;; Defined at:
  3773 ;;		line 111 in file "LibLCDXC8.h"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 2
  3794 ;; This function calls:
  3795 ;;		i2_EnviaDato
  3796 ;;		i2_HabilitaLCD
  3797 ;;		i2_RetardoLCD
  3798 ;; This function is called by:
  3799 ;;		_ISR
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text21
  3804   00180E                     __ptext21:
  3805                           	callstack 0
  3806   00180E                     i2_BorraLCD:
  3807                           	callstack 23
  3808                           
  3809                           ;LibLCDXC8.h: 113: LATE0=0;
  3810                           
  3811                           ;incstack = 0
  3812   00180E  908D               	bcf	3981,0,c	;volatile
  3813                           
  3814                           ;LibLCDXC8.h: 114: EnviaDato(0x01);
  3815   001810  0E01               	movlw	1
  3816   001812  EC4E  F00B         	call	i2_EnviaDato
  3817                           
  3818                           ;LibLCDXC8.h: 115: HabilitaLCD();
  3819   001816  EC18  F00C         	call	i2_HabilitaLCD	;wreg free
  3820                           
  3821                           ;LibLCDXC8.h: 116: RetardoLCD(2);
  3822   00181A  0E02               	movlw	2
  3823   00181C  EC89  F00A         	call	i2_RetardoLCD
  3824   001820  0012               	return		;funcret
  3825   001822                     __end_ofi2_BorraLCD:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function i2_EnviaDato *****************
  3829 ;; Defined at:
  3830 ;;		line 58 in file "LibLCDXC8.h"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  a               1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  a               1    3[COMRAM] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 1
  3851 ;; This function calls:
  3852 ;;		i2_HabilitaLCD
  3853 ;;		i2_RetardoLCD
  3854 ;; This function is called by:
  3855 ;;		i2_BorraLCD
  3856 ;;		i2_EscribeLCD_c
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text22
  3861   00169C                     __ptext22:
  3862                           	callstack 0
  3863   00169C                     i2_EnviaDato:
  3864                           	callstack 22
  3865                           
  3866                           ;incstack = 0
  3867                           ;i2EnviaDato@a stored from wreg
  3868   00169C  6E04               	movwf	i2EnviaDato@a^0,c
  3869                           
  3870                           ;LibLCDXC8.h: 59: if(interfaz==4){
  3871   00169E  0E04               	movlw	4
  3872   0016A0  1844               	xorwf	_interfaz^0,w,c
  3873   0016A2  A4D8               	btfss	status,2,c
  3874   0016A4  D017               	goto	i2l1970
  3875                           
  3876                           ;LibLCDXC8.h: 60: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3877   0016A6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3878   0016AA  0EF0               	movlw	240
  3879   0016AC  1603               	andwf	??i2_EnviaDato^0,f,c
  3880   0016AE  508C               	movf	140,w,c	;volatile
  3881   0016B0  0B0F               	andlw	15
  3882   0016B2  1003               	iorwf	??i2_EnviaDato^0,w,c
  3883   0016B4  6E8C               	movwf	140,c	;volatile
  3884                           
  3885                           ;LibLCDXC8.h: 61: HabilitaLCD();
  3886   0016B6  EC18  F00C         	call	i2_HabilitaLCD	;wreg free
  3887                           
  3888                           ;LibLCDXC8.h: 62: RetardoLCD(1);
  3889   0016BA  0E01               	movlw	1
  3890   0016BC  EC89  F00A         	call	i2_RetardoLCD
  3891                           
  3892                           ;LibLCDXC8.h: 63: LATD=(LATD & 0b00001111) | (a<<4);
  3893   0016C0  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3894   0016C4  3A03               	swapf	??i2_EnviaDato^0,f,c
  3895   0016C6  0EF0               	movlw	240
  3896   0016C8  1603               	andwf	??i2_EnviaDato^0,f,c
  3897   0016CA  508C               	movf	140,w,c	;volatile
  3898   0016CC  0B0F               	andlw	15
  3899   0016CE  1003               	iorwf	??i2_EnviaDato^0,w,c
  3900   0016D0  6E8C               	movwf	140,c	;volatile
  3901                           
  3902                           ;LibLCDXC8.h: 66: }else if(interfaz==8){
  3903   0016D2  0012               	return	
  3904   0016D4                     i2l1970:
  3905   0016D4  0E08               	movlw	8
  3906   0016D6  1844               	xorwf	_interfaz^0,w,c
  3907   0016D8  A4D8               	btfss	status,2,c
  3908   0016DA  0012               	return	
  3909                           
  3910                           ;LibLCDXC8.h: 67: LATD=a;
  3911   0016DC  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3912   0016E0  0012               	return		;funcret
  3913   0016E2                     __end_ofi2_EnviaDato:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function i2_RetardoLCD *****************
  3917 ;; Defined at:
  3918 ;;		line 295 in file "LibLCDXC8.h"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  a               1    wreg     unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  a               1    1[COMRAM] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3934 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3935 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		i2_EnviaDato
  3942 ;;		i2_BorraLCD
  3943 ;;		i2_EscribeLCD_c
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text23
  3948   001512                     __ptext23:
  3949                           	callstack 0
  3950   001512                     i2_RetardoLCD:
  3951                           	callstack 23
  3952                           
  3953                           ;incstack = 0
  3954                           ;i2RetardoLCD@a stored from wreg
  3955   001512  6E02               	movwf	i2RetardoLCD@a^0,c
  3956                           
  3957                           ;LibLCDXC8.h: 296: switch(a){
  3958   001514  D01B               	goto	i2l1944
  3959   001516                     i2l1934:
  3960   001516  0E05               	movlw	5
  3961   001518  6E01               	movwf	??i2_RetardoLCD^0,c
  3962   00151A  0EDE               	movlw	222
  3963   00151C                     i2u422_47:
  3964   00151C  2EE8               	decfsz	wreg,f,c
  3965   00151E  D7FE               	bra	i2u422_47
  3966   001520  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3967   001522  D7FC               	bra	i2u422_47
  3968                           
  3969                           ;LibLCDXC8.h: 299: break;
  3970   001524  0012               	return	
  3971   001526                     i2l1936:
  3972   001526  0E53               	movlw	83
  3973   001528                     i2u423_47:
  3974   001528  2EE8               	decfsz	wreg,f,c
  3975   00152A  D7FE               	bra	i2u423_47
  3976   00152C  F000               	nop	
  3977                           
  3978                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3979   00152E  0E35               	movlw	53
  3980   001530                     i2u424_47:
  3981   001530  2EE8               	decfsz	wreg,f,c
  3982   001532  D7FE               	bra	i2u424_47
  3983   001534  F000               	nop	
  3984                           
  3985                           ;LibLCDXC8.h: 303: break;
  3986   001536  0012               	return	
  3987   001538                     i2l1938:
  3988   001538  0E08               	movlw	8
  3989   00153A                     i2u425_47:
  3990   00153A  2EE8               	decfsz	wreg,f,c
  3991   00153C  D7FE               	bra	i2u425_47
  3992   00153E  F000               	nop	
  3993                           
  3994                           ;LibLCDXC8.h: 306: break;
  3995   001540  0012               	return	
  3996   001542                     i2l1940:
  3997   001542  0E03               	movlw	3
  3998   001544                     i2u426_47:
  3999   001544  2EE8               	decfsz	wreg,f,c
  4000   001546  D7FE               	bra	i2u426_47
  4001   001548  F000               	nop	
  4002                           
  4003                           ;LibLCDXC8.h: 309: break;
  4004   00154A  0012               	return	
  4005   00154C                     i2l1944:
  4006   00154C  5002               	movf	i2RetardoLCD@a^0,w,c
  4007                           
  4008                           ; Switch size 1, requested type "simple"
  4009                           ; Number of cases is 4, Range of values is 1 to 4
  4010                           ; switch strategies available:
  4011                           ; Name         Instructions Cycles
  4012                           ; simple_byte           13     7 (average)
  4013                           ;	Chosen strategy is simple_byte
  4014   00154E  0A01               	xorlw	1	; case 1
  4015   001550  B4D8               	btfsc	status,2,c
  4016   001552  D7E1               	goto	i2l1934
  4017   001554  0A03               	xorlw	3	; case 2
  4018   001556  B4D8               	btfsc	status,2,c
  4019   001558  D7E6               	goto	i2l1936
  4020   00155A  0A01               	xorlw	1	; case 3
  4021   00155C  B4D8               	btfsc	status,2,c
  4022   00155E  D7EC               	goto	i2l1938
  4023   001560  0A07               	xorlw	7	; case 4
  4024   001562  A4D8               	btfss	status,2,c
  4025   001564  0012               	return	
  4026   001566  D7ED               	goto	i2l1940
  4027   001568                     __end_ofi2_RetardoLCD:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function i2_HabilitaLCD *****************
  4031 ;; Defined at:
  4032 ;;		line 104 in file "LibLCDXC8.h"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		i2_EnviaDato
  4056 ;;		i2_BorraLCD
  4057 ;;		i2_EscribeLCD_c
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text24
  4062   001830                     __ptext24:
  4063                           	callstack 0
  4064   001830                     i2_HabilitaLCD:
  4065                           	callstack 23
  4066                           
  4067                           ;LibLCDXC8.h: 106: LATE1=1;
  4068                           
  4069                           ;incstack = 0
  4070   001830  828D               	bsf	3981,1,c	;volatile
  4071                           
  4072                           ;LibLCDXC8.h: 107: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4073   001832  0E03               	movlw	3
  4074   001834                     i2u427_47:
  4075   001834  2EE8               	decfsz	wreg,f,c
  4076   001836  D7FE               	bra	i2u427_47
  4077   001838  F000               	nop	
  4078                           
  4079                           ;LibLCDXC8.h: 109: LATE1=0;
  4080   00183A  928D               	bcf	3981,1,c	;volatile
  4081   00183C  0012               	return		;funcret
  4082   00183E                     __end_ofi2_HabilitaLCD:
  4083                           	callstack 0
  4084                           
  4085                           	psect	rparam
  4086   000000                     
  4087                           	psect	temp
  4088   000045                     btemp:
  4089                           	callstack 0
  4090   000045                     	ds	1
  4091   000000                     int$flags	set	btemp
  4092   000000                     wtemp8	set	btemp+1
  4093   000000                     ttemp5	set	btemp+1
  4094   000000                     ttemp6	set	btemp+4
  4095   000000                     ttemp7	set	btemp+8
  4096                           
  4097                           	psect	idloc
  4098                           
  4099                           ;Config register IDLOC0 @ 0x200000
  4100                           ;	unspecified, using default values
  4101   200000                     	org	2097152
  4102   200000  FF                 	db	255
  4103                           
  4104                           ;Config register IDLOC1 @ 0x200001
  4105                           ;	unspecified, using default values
  4106   200001                     	org	2097153
  4107   200001  FF                 	db	255
  4108                           
  4109                           ;Config register IDLOC2 @ 0x200002
  4110                           ;	unspecified, using default values
  4111   200002                     	org	2097154
  4112   200002  FF                 	db	255
  4113                           
  4114                           ;Config register IDLOC3 @ 0x200003
  4115                           ;	unspecified, using default values
  4116   200003                     	org	2097155
  4117   200003  FF                 	db	255
  4118                           
  4119                           ;Config register IDLOC4 @ 0x200004
  4120                           ;	unspecified, using default values
  4121   200004                     	org	2097156
  4122   200004  FF                 	db	255
  4123                           
  4124                           ;Config register IDLOC5 @ 0x200005
  4125                           ;	unspecified, using default values
  4126   200005                     	org	2097157
  4127   200005  FF                 	db	255
  4128                           
  4129                           ;Config register IDLOC6 @ 0x200006
  4130                           ;	unspecified, using default values
  4131   200006                     	org	2097158
  4132   200006  FF                 	db	255
  4133                           
  4134                           ;Config register IDLOC7 @ 0x200007
  4135                           ;	unspecified, using default values
  4136   200007                     	org	2097159
  4137   200007  FF                 	db	255
  4138                           
  4139                           	psect	config
  4140                           
  4141                           ;Config register CONFIG1L @ 0x300000
  4142                           ;	unspecified, using default values
  4143                           ;	PLL Prescaler Selection bits
  4144                           ;	PLLDIV = 0x0, unprogrammed default
  4145                           ;	System Clock Postscaler Selection bits
  4146                           ;	CPUDIV = 0x0, unprogrammed default
  4147                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4148                           ;	USBDIV = 0x0, unprogrammed default
  4149   300000                     	org	3145728
  4150   300000  00                 	db	0
  4151                           
  4152                           ;Config register CONFIG1H @ 0x300001
  4153                           ;	Oscillator Selection bits
  4154                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4155                           ;	Fail-Safe Clock Monitor Enable bit
  4156                           ;	FCMEN = 0x0, unprogrammed default
  4157                           ;	Internal/External Oscillator Switchover bit
  4158                           ;	IESO = 0x0, unprogrammed default
  4159   300001                     	org	3145729
  4160   300001  09                 	db	9
  4161                           
  4162                           ;Config register CONFIG2L @ 0x300002
  4163                           ;	unspecified, using default values
  4164                           ;	Power-up Timer Enable bit
  4165                           ;	PWRT = 0x1, unprogrammed default
  4166                           ;	Brown-out Reset Enable bits
  4167                           ;	BOR = 0x3, unprogrammed default
  4168                           ;	Brown-out Reset Voltage bits
  4169                           ;	BORV = 0x3, unprogrammed default
  4170                           ;	USB Voltage Regulator Enable bit
  4171                           ;	VREGEN = 0x0, unprogrammed default
  4172   300002                     	org	3145730
  4173   300002  1F                 	db	31
  4174                           
  4175                           ;Config register CONFIG2H @ 0x300003
  4176                           ;	Watchdog Timer Enable bit
  4177                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4178                           ;	Watchdog Timer Postscale Select bits
  4179                           ;	WDTPS = 0xF, unprogrammed default
  4180   300003                     	org	3145731
  4181   300003  1E                 	db	30
  4182                           
  4183                           ; Padding undefined space
  4184   300004                     	org	3145732
  4185   300004  FF                 	db	255
  4186                           
  4187                           ;Config register CONFIG3H @ 0x300005
  4188                           ;	CCP2 MUX bit
  4189                           ;	CCP2MX = 0x1, unprogrammed default
  4190                           ;	PORTB A/D Enable bit
  4191                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4192                           ;	Low-Power Timer 1 Oscillator Enable bit
  4193                           ;	LPT1OSC = 0x0, unprogrammed default
  4194                           ;	MCLR Pin Enable bit
  4195                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4196   300005                     	org	3145733
  4197   300005  81                 	db	129
  4198                           
  4199                           ;Config register CONFIG4L @ 0x300006
  4200                           ;	Stack Full/Underflow Reset Enable bit
  4201                           ;	STVREN = 0x1, unprogrammed default
  4202                           ;	Single-Supply ICSP Enable bit
  4203                           ;	LVP = OFF, Single-Supply ICSP disabled
  4204                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4205                           ;	ICPRT = 0x0, unprogrammed default
  4206                           ;	Extended Instruction Set Enable bit
  4207                           ;	XINST = 0x0, unprogrammed default
  4208                           ;	Background Debugger Enable bit
  4209                           ;	DEBUG = 0x1, unprogrammed default
  4210   300006                     	org	3145734
  4211   300006  81                 	db	129
  4212                           
  4213                           ; Padding undefined space
  4214   300007                     	org	3145735
  4215   300007  FF                 	db	255
  4216                           
  4217                           ;Config register CONFIG5L @ 0x300008
  4218                           ;	unspecified, using default values
  4219                           ;	Code Protection bit
  4220                           ;	CP0 = 0x1, unprogrammed default
  4221                           ;	Code Protection bit
  4222                           ;	CP1 = 0x1, unprogrammed default
  4223                           ;	Code Protection bit
  4224                           ;	CP2 = 0x1, unprogrammed default
  4225                           ;	Code Protection bit
  4226                           ;	CP3 = 0x1, unprogrammed default
  4227   300008                     	org	3145736
  4228   300008  0F                 	db	15
  4229                           
  4230                           ;Config register CONFIG5H @ 0x300009
  4231                           ;	unspecified, using default values
  4232                           ;	Boot Block Code Protection bit
  4233                           ;	CPB = 0x1, unprogrammed default
  4234                           ;	Data EEPROM Code Protection bit
  4235                           ;	CPD = 0x1, unprogrammed default
  4236   300009                     	org	3145737
  4237   300009  C0                 	db	192
  4238                           
  4239                           ;Config register CONFIG6L @ 0x30000A
  4240                           ;	unspecified, using default values
  4241                           ;	Write Protection bit
  4242                           ;	WRT0 = 0x1, unprogrammed default
  4243                           ;	Write Protection bit
  4244                           ;	WRT1 = 0x1, unprogrammed default
  4245                           ;	Write Protection bit
  4246                           ;	WRT2 = 0x1, unprogrammed default
  4247                           ;	Write Protection bit
  4248                           ;	WRT3 = 0x1, unprogrammed default
  4249   30000A                     	org	3145738
  4250   30000A  0F                 	db	15
  4251                           
  4252                           ;Config register CONFIG6H @ 0x30000B
  4253                           ;	unspecified, using default values
  4254                           ;	Configuration Register Write Protection bit
  4255                           ;	WRTC = 0x1, unprogrammed default
  4256                           ;	Boot Block Write Protection bit
  4257                           ;	WRTB = 0x1, unprogrammed default
  4258                           ;	Data EEPROM Write Protection bit
  4259                           ;	WRTD = 0x1, unprogrammed default
  4260   30000B                     	org	3145739
  4261   30000B  E0                 	db	224
  4262                           
  4263                           ;Config register CONFIG7L @ 0x30000C
  4264                           ;	unspecified, using default values
  4265                           ;	Table Read Protection bit
  4266                           ;	EBTR0 = 0x1, unprogrammed default
  4267                           ;	Table Read Protection bit
  4268                           ;	EBTR1 = 0x1, unprogrammed default
  4269                           ;	Table Read Protection bit
  4270                           ;	EBTR2 = 0x1, unprogrammed default
  4271                           ;	Table Read Protection bit
  4272                           ;	EBTR3 = 0x1, unprogrammed default
  4273   30000C                     	org	3145740
  4274   30000C  0F                 	db	15
  4275                           
  4276                           ;Config register CONFIG7H @ 0x30000D
  4277                           ;	unspecified, using default values
  4278                           ;	Boot Block Table Read Protection bit
  4279                           ;	EBTRB = 0x1, unprogrammed default
  4280   30000D                     	org	3145741
  4281   30000D  40                 	db	64
  4282                           tosu	equ	0xFFF
  4283                           tosh	equ	0xFFE
  4284                           tosl	equ	0xFFD
  4285                           stkptr	equ	0xFFC
  4286                           pclatu	equ	0xFFB
  4287                           pclath	equ	0xFFA
  4288                           pcl	equ	0xFF9
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           indf0	equ	0xFEF
  4296                           postinc0	equ	0xFEE
  4297                           postdec0	equ	0xFED
  4298                           preinc0	equ	0xFEC
  4299                           plusw0	equ	0xFEB
  4300                           fsr0h	equ	0xFEA
  4301                           fsr0l	equ	0xFE9
  4302                           wreg	equ	0xFE8
  4303                           indf1	equ	0xFE7
  4304                           postinc1	equ	0xFE6
  4305                           postdec1	equ	0xFE5
  4306                           preinc1	equ	0xFE4
  4307                           plusw1	equ	0xFE3
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           bsr	equ	0xFE0
  4311                           indf2	equ	0xFDF
  4312                           postinc2	equ	0xFDE
  4313                           postdec2	equ	0xFDD
  4314                           preinc2	equ	0xFDC
  4315                           plusw2	equ	0xFDB
  4316                           fsr2h	equ	0xFDA
  4317                           fsr2l	equ	0xFD9
  4318                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        12
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      68
    BANK0           160     14      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[11]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[17]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 

    NuevoCarac@mapeo	PTR unsigned char  size(1) Largest target is 8
		 -> main@heart(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _main->___lwdiv
    ___lwdiv->___wmul
    _NuevoCarac->_DireccionaLCD
    _NuevoCarac->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    8128
                                             26 COMRAM     4     4      0
                                              0 BANK0     14    14      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                         _NuevoCarac
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    2256
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                             13 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     781
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _NuevoCarac                                           3     2      1     685
                                             18 COMRAM     3     2      1
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     883
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     402
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCarac
     _DireccionaLCD
     _EscribeLCD_c
   ___lldiv
   ___llmod
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E       E       5        8.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      44       1       72.3%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         7      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      29        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 18:06:31 2023

                        _i 002D                          _m 0035                          _r 001F  
                       _PD 007E82                         _RI 007E84                         _TO 007E83  
                       _n1 0031                         _n2 002F                 EnviaDato@a 0011  
                       _op 0043        ___wmul@multiplicand 0010              ??_LeerTeclado 000E  
            _InicializaLCD 11EA                        l209 0D32                        l245 10F2  
                      l270 11BA                        l256 114E                        l248 10FA  
                      l274 11CE                        l266 11AA                        l258 1156  
                      l338 12F6                        l186 0B0E                        l275 11E6  
                      l276 11D6                        l268 11B2                        l278 11DE  
                      l800 171A                        l719 1454                        l790 15B0  
                      _GIE 007F97                        _RB4 007C0C                        _RB5 007C0D  
                      _RB6 007C0E                        _RB7 007C0F                        _RC6 007C16  
                      _ISR 0008                        _n1c 0042                        _n2c 0041  
                      wreg 000FE8                       ?_ISR 0001           ??i2_EscribeLCD_c 0005  
                     l3012 11C2                       l3050 13A2                       l3106 12E8  
                     l3122 1446                       l3114 1412                       l3202 08C4  
                     l3060 13B2                       l3052 13A6                       l3116 141E  
                     l3132 157E                       l3054 13AA                       l3046 139A  
                     l3134 1586                       l3302 0A52                       l3206 08DE  
                     l3048 139E                       l3064 13B8                       l3080 1476  
                     l3144 15A6                       l3160 1710                       l3152 16F0  
                     l3400 0CD8                       l3058 13AE                       l3066 13FA  
                     l3154 16F8                       l3410 0D1C                       l3084 148A  
                     l3420 0DCC                       l3404 0CE2                       l3244 0966  
                     l3094 12A8                       l3510 10AE                       l3414 0D2C  
                     l3350 0B2E                       l3334 0AD8                       l3096 12B4  
                     l3504 109E                       l3432 0E44                       l3424 0DE0  
                     l3440 0E74                       l3360 0B8E                       l3352 0B64  
                     l3408 0CF4                       l3512 10B8                       l3506 10A4  
                     l3346 0B08                       l3514 10BE                       l3274 09DC  
                     l2820 11FC                       l3356 0B70                       l3348 0B16  
                     l3196 089C                       l2830 121A                       l3470 0F4C  
                     l3462 0F0E                       l3454 0ED6                       l3382 0C2A  
                     l3374 0C08                       l2840 1238                       l3392 0C88  
                     l3384 0C38                       l3368 0BF4                       l2770 14EC  
                     l2930 1102                       l3482 0F7A                       l3458 0EF2  
                     l2764 14C0                       l2860 1270                       l3396 0CA2  
                     l3388 0C7A                       l2766 14D0                       l2774 14F6  
                     l3478 0F6C                       l2768 14E2                       l3496 104E  
                     l3488 0FB8                       l2786 168E                       l2946 1142  
                     l2938 1122                       l2890 15C2                       l2876 176C  
                     l2984 119E                       l2976 117E                       l2968 115E  
                     STR_1 081D                       STR_2 082F                       STR_3 0801  
                     STR_4 082A                       STR_5 0825                       STR_6 0812  
                     u3000 1116                       u3002 1118                       u3020 112A  
                     u3110 1186                       u3030 1136                       u3022 112C  
                     _LATB 000F8A                       _LATC 000F8B                       u3120 1192  
                     u3112 1188                       u3032 1138                       u4000 0E96  
                     _LATD 000F8C                       u3122 1194                       u4010 0EA8  
                     u3080 1166                       u3320 158A                       u3400 08B0  
                     u3090 1172                       u3082 1168                       u4050 0F1E  
                     u3402 08B2                       u3092 1174                       u3260 12B8  
                     u4060 0F30                       u3350 16FC                       u4070 0F42  
                     u3510 09AE                       u4207 14EE                       u4217 1826  
                     u3290 1422                       u3450 097E                       u4147 08CE  
                     u3371 0872                       u4157 10C4                       u2910 1606  
                     u3390 08A4                       u4167 14C6                       u3640 0A2C  
                     u3392 08A6                       u4177 14D2                       u4187 14DA  
                     u4197 14E4                       u2950 10DE                       u3780 0ABA  
                     u2990 110A                       u3950 0DDE                       u2992 110C  
                     u3990 0E84                       _RBPU 007F8F                       _TMR0 000FD6  
           ??_EscribeLCD_c 0012                       _flag 0033                       _main 0836  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0045                       prodh 000FF4  
                     prodl 000FF3                       start 000E               ___param_bank 000000  
                    ??_ISR 000A             ?_InicializaLCD 0001                      ?_main 0001  
            EscribeLCD_c@a 0012            __end_of___lldiv 1308                      _T0CON 000FD5  
          __end_of___llmod 1466                      _LATE0 007C68                      _LATE1 007C69  
                    _LATE2 007C6A            __end_of___lwdiv 15BA            __end_of___lwmod 1724  
                    i2l305 1370                      i2l308 1372                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95                      _TRISE 000F96  
      ___lmul@multiplicand 0012                      _Tecla 0034        __end_of_LeerTeclado 11EA  
                    _color 002B                ?i2_BorraLCD 0001                      main@i 006A  
                    main@j 006C                      main@k 0068                      tablat 000FF5  
              _HabilitaLCD 1822                      plusw1 000FE3                      plusw2 000FDB  
                    ttemp5 0046                      ttemp6 0049                      ttemp7 004D  
                    status 000FD8                      wtemp8 0046           __end_of_BorraLCD 180E  
         __end_of_ColorRGB 1400            __initialization 1724               __end_of_main 10D0  
                   ??_main 001B              __activetblptr 000002                     _ADCON1 000FC1  
         ___llmod@dividend 000E             DireccionaLCD@a 0012                     i2l2370 1610  
                   i2l1940 1542                     i2l2740 133C                     i2l1934 1516  
                   i2l1936 1526                     i2l1944 154C                     i2l2744 1350  
                   i2l1938 1538                     i2l1970 16D4                     i2l2738 1334  
                   _OSCCON 000FD3                     _TMR0IE 007F95                     _TMR0IF 007F92  
                   _TMR0ON 007EAF      __end_of_DireccionaLCD 17CE                 _RetardoLCD 14BC  
          NuevoCarac@mapeo 0013                     ___lmul 1466                 _NuevoCarac 175E  
                   ___wmul 1792                  ??___lldiv 0016                  ??___llmod 0016  
                ??___lwdiv 0018                  ??___lwmod 0012            ??_InicializaLCD 0012  
                   clear_0 174A                     isa$std 000001       __end_of_EscribeLCD_c 17E4  
              _LeerTeclado 10D0               ?i2_EnviaDato 0001               __pdataCOMRAM 0039  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8      __end_ofi2_HabilitaLCD 183E                 __accesstop 0060  
  __end_of__initialization 1750              ___rparam_used 000001        NuevoCarac@ubicacion 0014  
           __pcstackCOMRAM 0001          __end_of_EnviaDato 169C          i2_MensajeLCD_Word 1608  
       ?i2_MensajeLCD_Word 0006                  ?_BorraLCD 0001                  ?_ColorRGB 0001  
      ??i2_MensajeLCD_Word 0007                ?_RetardoLCD 0001                RetardoLCD@a 000F  
                  ?___lmul 000E                ?_NuevoCarac 0013                    ?___wmul 000E  
           ___lmul@product 0016  __end_ofi2_MensajeLCD_Word 1656               ??i2_BorraLCD 0005  
               ??_BorraLCD 0012                 ??_ColorRGB 000E          ??_MensajeLCD_Word 0014  
             ?_HabilitaLCD 0001                NuevoCarac@i 0015                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 1286                    ___llmod 1400  
                  ___lwdiv 1568                    ___lwmod 16E2               __psmallconst 0800  
       __end_ofi2_BorraLCD 1822                    __pcinit 1724                    __ramtop 0800  
                  __ptext0 0836                    __ptext1 1792                    __ptext2 16E2  
                  __ptext3 1568                    __ptext4 1466                    __ptext5 1400  
                  __ptext6 1286                    __ptext7 175E                    __ptext8 17B8  
                  __ptext9 15BA             __pintcode_body 1308       end_of_initialization 1750  
            __Lmediumconst 0000                    int_func 1308               _EscribeLCD_c 17CE  
          ___lldiv@divisor 0012            ___lldiv@counter 001A                    postdec1 000FE5  
                  postinc0 000FEE               ?_LeerTeclado 0001            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001             __end_of___lmul 14BC             __end_of___wmul 17B8  
            __pidataCOMRAM 183E      __end_of_InicializaLCD 1286                  _EnviaDato 1656  
      start_initialization 1724                __end_of_ISR 1386             ??i2_RetardoLCD 0001  
             ??_RetardoLCD 000E            ___llmod@divisor 0012            ___llmod@counter 0016  
             ??_NuevoCarac 0014                   ??___lmul 0016                   ??___wmul 0012  
          _MensajeLCD_Word 15BA                 ?_EnviaDato 0001                __pbssCOMRAM 001F  
       __end_of_RetardoLCD 1512              __pcstackBANK0 0060           MensajeLCD_Word@a 0013  
         MensajeLCD_Word@i 0015         __end_of_NuevoCarac 1792              _DireccionaLCD 17B8  
           i2_EscribeLCD_c 17E4           ___lwdiv@dividend 0014                  __pintcode 0008  
                 ?___lldiv 000E                   ?___llmod 000E                   ?___lwdiv 0014  
                 ?___lwmod 000E                __smallconst 0800           ___lwdiv@quotient 0019  
           ___wmul@product 0012              i2_HabilitaLCD 1830             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 17FA                   i2u422_47 151C                   i2u423_47 1528  
                 i2u280_45 1348                   i2u424_47 1530                   i2u425_47 153A  
                 i2u426_47 1544                   i2u427_47 1834                   i2u199_40 1654  
                 i2u279_40 1346    __end_of_MensajeLCD_Word 1608                  main@F3172 0039  
        ___wmul@multiplier 000E              ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 1568  
              ??_EnviaDato 0010                  main@heart 0060                   _BorraLCD 17FA  
                 _ColorRGB 1386          ___lmul@multiplier 000E                  copy_data0 1738  
           ?i2_HabilitaLCD 0001            ?i2_EscribeLCD_c 0001                   __Hrparam 0000  
                 __Lrparam 0000               i2EnviaDato@a 0004            ___lwdiv@divisor 0016  
          ___lwdiv@counter 0018                   __ptext10 17CE                   __ptext11 10D0  
                 __ptext20 17E4                   __ptext12 11EA                   __ptext21 180E  
                 __ptext13 17FA                   __ptext22 169C                   __ptext14 1656  
                 __ptext23 1512                   __ptext15 14BC                   __ptext24 1830  
                 __ptext16 1822                   __ptext17 1386                   __ptext19 1608  
      __end_ofi2_EnviaDato 16E2                   _contador 0029            ??_DireccionaLCD 0012  
                 _interfaz 0044                   _partdecl 0023                   isa$xinst 000000  
         ?_MensajeLCD_Word 0013                   int$flags 0045            ??i2_HabilitaLCD 0001  
                 intlevel2 0000              ??_HabilitaLCD 000E           ___lwmod@dividend 000E  
         ___lldiv@dividend 000E              i2RetardoLCD@a 0002                i2_EnviaDato 169C  
         ___lldiv@quotient 0016            ___lwmod@divisor 0010            ___lwmod@counter 0012  
               i2_BorraLCD 180E         i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008  
            ?_EscribeLCD_c 0001                _verificador 0027               i2_RetardoLCD 1512  
      __end_of_HabilitaLCD 1830  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 19 12:13:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   00189E                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _n2c
    85   00189E  20                 	db	32
    86                           
    87                           ;initializer for _n1c
    88   00189F  20                 	db	32
    89                           
    90                           ;initializer for _op
    91   0018A0  20                 	db	32
    92                           
    93                           ;initializer for _interfaz
    94   0018A1  08                 	db	8
    95                           
    96                           ;initializer for _heart
    97   0018A2  00                 	db	0
    98   0018A3  1B                 	db	27
    99   0018A4  1F                 	db	31
   100   0018A5  1F                 	db	31
   101   0018A6  0E                 	db	14
   102   0018A7  04                 	db	4
   103   0018A8  00                 	db	0
   104   0018A9  00                 	db	0
   105   000000                     _LATC	set	3979
   106   000000                     _TRISC	set	3988
   107   000000                     _LATE2	set	31850
   108   000000                     _RB7	set	31759
   109   000000                     _RB6	set	31758
   110   000000                     _RB5	set	31757
   111   000000                     _PD	set	32386
   112   000000                     _RI	set	32388
   113   000000                     _TMR0ON	set	32431
   114   000000                     _GIE	set	32663
   115   000000                     _TMR0IE	set	32661
   116   000000                     _LATE1	set	31849
   117   000000                     _LATB	set	3978
   118   000000                     _LATD	set	3980
   119   000000                     _RB4	set	31756
   120   000000                     _TRISB	set	3987
   121   000000                     _TRISD	set	3989
   122   000000                     _ADCON1	set	4033
   123   000000                     _LATE0	set	31848
   124   000000                     _OSCCON	set	4051
   125   000000                     _T0CON	set	4053
   126   000000                     _TO	set	32387
   127   000000                     _RBPU	set	32655
   128   000000                     _TRISE	set	3990
   129   000000                     _TMR0IF	set	32658
   130   000000                     _TMR0	set	4054
   131   000000                     _RC6	set	31766
   132                           
   133                           	psect	smallconst
   134   000800                     __psmallconst:
   135                           	callstack 0
   136   000800  00                 	db	0
   137   000801                     STR_4:
   138   000801  20                 	db	32
   139   000802  20                 	db	32
   140   000803  20                 	db	32
   141   000804  20                 	db	32
   142   000805  20                 	db	32
   143   000806  20                 	db	32
   144   000807  20                 	db	32
   145   000808  20                 	db	32
   146   000809  20                 	db	32
   147   00080A  20                 	db	32
   148   00080B  20                 	db	32
   149   00080C  20                 	db	32
   150   00080D  20                 	db	32
   151   00080E  20                 	db	32
   152   00080F  20                 	db	32
   153   000810  20                 	db	32
   154   000811  00                 	db	0
   155   000812                     STR_3:
   156   000812  42                 	db	66	;'B'
   157   000813  69                 	db	105	;'i'
   158   000814  65                 	db	101	;'e'
   159   000815  6E                 	db	110	;'n'
   160   000816  76                 	db	118	;'v'
   161   000817  65                 	db	101	;'e'
   162   000818  6E                 	db	110	;'n'
   163   000819  69                 	db	105	;'i'
   164   00081A  64                 	db	100	;'d'
   165   00081B  6F                 	db	111	;'o'
   166   00081C  00                 	db	0
   167   00081D                     STR_8:
   168   00081D  45                 	db	69	;'E'
   169   00081E  6E                 	db	110	;'n'
   170   00081F  20                 	db	32
   171   000820  52                 	db	82	;'R'
   172   000821  65                 	db	101	;'e'
   173   000822  73                 	db	115	;'s'
   174   000823  70                 	db	112	;'p'
   175   000824  6F                 	db	111	;'o'
   176   000825  73                 	db	115	;'s'
   177   000826  6F                 	db	111	;'o'
   178   000827  00                 	db	0
   179   000828                     STR_1:
   180   000828  45                 	db	69	;'E'
   181   000829  6E                 	db	110	;'n'
   182   00082A  65                 	db	101	;'e'
   183   00082B  72                 	db	114	;'r'
   184   00082C  67                 	db	103	;'g'
   185   00082D  69                 	db	105	;'i'
   186   00082E  61                 	db	97	;'a'
   187   00082F  00                 	db	0
   188   000830                     STR_7:
   189   000830  49                 	db	73	;'I'
   190   000831  6E                 	db	110	;'n'
   191   000832  64                 	db	100	;'d'
   192   000833  2E                 	db	46
   193   000834  00                 	db	0
   194   000835                     STR_6:
   195   000835  49                 	db	73	;'I'
   196   000836  6E                 	db	110	;'n'
   197   000837  66                 	db	102	;'f'
   198   000838  2E                 	db	46
   199   000839  00                 	db	0
   200   00083A                     STR_2:
   201   00083A  4D                 	db	77	;'M'
   202   00083B  43                 	db	67	;'C'
   203   00083C  4C                 	db	76	;'L'
   204   00083D  52                 	db	82	;'R'
   205   00083E  00                 	db	0
   206   00083F  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   001786                     __pcinit:
   212                           	callstack 0
   213   001786                     start_initialization:
   214                           	callstack 0
   215   001786                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to COMRAM (12 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220   001786  0E9E               	movlw	low __pidataCOMRAM
   221   001788  6EF6               	movwf	tblptrl,c
   222   00178A  0E18               	movlw	high __pidataCOMRAM
   223   00178C  6EF7               	movwf	tblptrh,c
   224   00178E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225   001790  6EF8               	movwf	tblptru,c
   226   001792  EE00  F03F         	lfsr	0,__pdataCOMRAM
   227   001796  EE10 F00C          	lfsr	1,12
   228   00179A                     copy_data0:
   229   00179A  0009               	tblrd		*+
   230   00179C  CFF5 FFEE          	movff	tablat,postinc0
   231   0017A0  50E5               	movf	postdec1,w,c
   232   0017A2  50E1               	movf	fsr1l,w,c
   233   0017A4  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to COMRAM (26 bytes)
   236   0017A6  EE00  F025         	lfsr	0,__pbssCOMRAM
   237   0017AA  0E1A               	movlw	26
   238   0017AC                     clear_0:
   239   0017AC  6AEE               	clrf	postinc0,c
   240   0017AE  06E8               	decf	wreg,f,c
   241   0017B0  E1FD               	bnz	clear_0
   242   0017B2                     end_of_initialization:
   243                           	callstack 0
   244   0017B2                     __end_of__initialization:
   245                           	callstack 0
   246   0017B2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247   0017B4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248   0017B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249   0017B8  6EF8               	movwf	tblptru,c
   250   0017BA  0100               	movlb	0
   251   0017BC  EF20  F004         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254   000025                     __pbssCOMRAM:
   255                           	callstack 0
   256   000025                     _r:
   257                           	callstack 0
   258   000025                     	ds	4
   259   000029                     _partdecl:
   260                           	callstack 0
   261   000029                     	ds	4
   262   00002D                     _verificador:
   263                           	callstack 0
   264   00002D                     	ds	2
   265   00002F                     _contador:
   266                           	callstack 0
   267   00002F                     	ds	2
   268   000031                     _color:
   269                           	callstack 0
   270   000031                     	ds	2
   271   000033                     _i:
   272                           	callstack 0
   273   000033                     	ds	2
   274   000035                     _n2:
   275                           	callstack 0
   276   000035                     	ds	2
   277   000037                     _n1:
   278                           	callstack 0
   279   000037                     	ds	2
   280   000039                     _flag:
   281                           	callstack 0
   282   000039                     	ds	1
   283   00003A                     _Tecla:
   284                           	callstack 0
   285   00003A                     	ds	1
   286   00003B                     _m:
   287                           	callstack 0
   288   00003B                     	ds	4
   289                           
   290                           	psect	dataCOMRAM
   291   00003F                     __pdataCOMRAM:
   292                           	callstack 0
   293   00003F                     _n2c:
   294                           	callstack 0
   295   00003F                     	ds	1
   296   000040                     _n1c:
   297                           	callstack 0
   298   000040                     	ds	1
   299   000041                     _op:
   300                           	callstack 0
   301   000041                     	ds	1
   302   000042                     _interfaz:
   303                           	callstack 0
   304   000042                     	ds	1
   305   000043                     _heart:
   306                           	callstack 0
   307   000043                     	ds	8
   308                           
   309                           	psect	cstackCOMRAM
   310   000001                     __pcstackCOMRAM:
   311                           	callstack 0
   312   000001                     ??i2_RetardoLCD:
   313                           
   314                           ; 1 bytes @ 0x0
   315   000001                     	ds	1
   316   000002                     i2RetardoLCD@a:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1
   320   000002                     	ds	1
   321   000003                     ??i2_EnviaDato:
   322                           
   323                           ; 1 bytes @ 0x2
   324   000003                     	ds	1
   325   000004                     i2EnviaDato@a:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x3
   329   000004                     	ds	1
   330   000005                     i2EscribeLCD_c@a:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x4
   334   000005                     	ds	1
   335   000006                     i2MensajeLCD_Word@a:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x5
   339   000006                     	ds	1
   340   000007                     ??i2_MensajeLCD_Word:
   341                           
   342                           ; 1 bytes @ 0x6
   343   000007                     	ds	1
   344   000008                     i2MensajeLCD_Word@i:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x7
   348   000008                     	ds	2
   349   00000A                     ??_ISR:
   350                           
   351                           ; 1 bytes @ 0x9
   352   00000A                     	ds	4
   353   00000E                     ??_RetardoLCD:
   354   00000E                     ??_LeerTeclado:
   355   00000E                     ??_ColorRGB:
   356   00000E                     ??_ComandoLCD:
   357   00000E                     ?___wmul:
   358                           	callstack 0
   359   00000E                     ?___lwmod:
   360                           	callstack 0
   361   00000E                     ?___lmul:
   362                           	callstack 0
   363   00000E                     ?___lldiv:
   364                           	callstack 0
   365   00000E                     ?___llmod:
   366                           	callstack 0
   367   00000E                     ___wmul@multiplier:
   368                           	callstack 0
   369   00000E                     ___lwmod@dividend:
   370                           	callstack 0
   371   00000E                     ___lmul@multiplier:
   372                           	callstack 0
   373   00000E                     ___lldiv@dividend:
   374                           	callstack 0
   375   00000E                     ___llmod@dividend:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0xD
   379   00000E                     	ds	1
   380   00000F                     ComandoLCD@data:
   381                           	callstack 0
   382   00000F                     RetardoLCD@a:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xE
   386   00000F                     	ds	1
   387   000010                     ??_EnviaDato:
   388   000010                     ___wmul@multiplicand:
   389                           	callstack 0
   390   000010                     ___lwmod@divisor:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xF
   394   000010                     	ds	1
   395   000011                     EnviaDato@a:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x10
   399   000011                     	ds	1
   400   000012                     EscribeLCD_c@a:
   401                           	callstack 0
   402   000012                     DireccionaLCD@a:
   403                           	callstack 0
   404   000012                     ___lwmod@counter:
   405                           	callstack 0
   406   000012                     ___wmul@product:
   407                           	callstack 0
   408   000012                     ___lmul@multiplicand:
   409                           	callstack 0
   410   000012                     ___lldiv@divisor:
   411                           	callstack 0
   412   000012                     ___llmod@divisor:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x11
   416   000012                     	ds	1
   417   000013                     NuevoCaracter@c:
   418                           	callstack 0
   419   000013                     MensajeLCD_Word@a:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x12
   423   000013                     	ds	1
   424   000014                     ??_MensajeLCD_Word:
   425   000014                     ?___lwdiv:
   426                           	callstack 0
   427   000014                     NuevoCaracter@addr:
   428                           	callstack 0
   429   000014                     ___lwdiv@dividend:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x13
   433   000014                     	ds	1
   434   000015                     NuevoCaracter@i:
   435                           	callstack 0
   436   000015                     MensajeLCD_Word@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x14
   440   000015                     	ds	1
   441   000016                     ___llmod@counter:
   442                           	callstack 0
   443   000016                     ___lwdiv@divisor:
   444                           	callstack 0
   445   000016                     ___lmul@product:
   446                           	callstack 0
   447   000016                     ___lldiv@quotient:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x15
   451   000016                     	ds	2
   452   000018                     ___lwdiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x17
   456   000018                     	ds	2
   457   00001A                     ___lldiv@counter:
   458                           	callstack 0
   459   00001A                     ___lwdiv@counter:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x19
   463   00001A                     	ds	1
   464   00001B                     ??_main:
   465                           
   466                           ; 1 bytes @ 0x1A
   467   00001B                     	ds	4
   468   00001F                     main@k:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x1E
   472   00001F                     	ds	2
   473   000021                     main@i:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x20
   477   000021                     	ds	2
   478   000023                     main@j:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x22
   482   000023                     	ds	2
   483                           
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 44 in file "Laboratorio4.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  k               2   30[COMRAM] int 
   494 ;;  j               2   34[COMRAM] int 
   495 ;;  i               2   32[COMRAM] int 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   505 ;;      Params:         0       0       0       0       0       0       0       0       0
   506 ;;      Locals:         6       0       0       0       0       0       0       0       0
   507 ;;      Temps:          4       0       0       0       0       0       0       0       0
   508 ;;      Totals:        10       0       0       0       0       0       0       0       0
   509 ;;Total ram usage:       10 bytes
   510 ;; Hardware stack levels required when called: 9
   511 ;; This function calls:
   512 ;;		_BorraLCD
   513 ;;		_ColorRGB
   514 ;;		_DireccionaLCD
   515 ;;		_EscribeLCD_c
   516 ;;		_InicializaLCD
   517 ;;		_LeerTeclado
   518 ;;		_MensajeLCD_Word
   519 ;;		_NuevoCaracter
   520 ;;		___lldiv
   521 ;;		___llmod
   522 ;;		___lmul
   523 ;;		___lwdiv
   524 ;;		___lwmod
   525 ;;		___wmul
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text0
   532   000840                     __ptext0:
   533                           	callstack 0
   534   000840                     _main:
   535                           	callstack 22
   536                           
   537                           ;Laboratorio4.c: 45: ADCON1=15;
   538                           
   539                           ;incstack = 0
   540   000840  0E0F               	movlw	15
   541   000842  6EC1               	movwf	193,c	;volatile
   542                           
   543                           ;Laboratorio4.c: 46: TRISD=0;
   544   000844  0E00               	movlw	0
   545   000846  6E95               	movwf	149,c	;volatile
   546                           
   547                           ;Laboratorio4.c: 47: TRISB=0b11110000;
   548   000848  0EF0               	movlw	240
   549   00084A  6E93               	movwf	147,c	;volatile
   550                           
   551                           ;Laboratorio4.c: 48: TRISE=0;
   552   00084C  0E00               	movlw	0
   553   00084E  6E96               	movwf	150,c	;volatile
   554                           
   555                           ;Laboratorio4.c: 49: TRISC=0b11110000;
   556   000850  0EF0               	movlw	240
   557   000852  6E94               	movwf	148,c	;volatile
   558                           
   559                           ;Laboratorio4.c: 50: RBPU=0;
   560   000854  9EF1               	bcf	4081,7,c	;volatile
   561                           
   562                           ;Laboratorio4.c: 51: InicializaLCD();
   563   000856  EC08  F009         	call	_InicializaLCD	;wreg free
   564                           
   565                           ;Laboratorio4.c: 53: T0CON=0b10000010;
   566   00085A  0E82               	movlw	130
   567   00085C  6ED5               	movwf	213,c	;volatile
   568                           
   569                           ;Laboratorio4.c: 54: TMR0IF=0;
   570   00085E  94F2               	bcf	4082,2,c	;volatile
   571                           
   572                           ;Laboratorio4.c: 55: TMR0=49911;
   573   000860  0EC2               	movlw	194
   574   000862  6ED7               	movwf	215,c	;volatile
   575   000864  0EF7               	movlw	247
   576   000866  6ED6               	movwf	214,c	;volatile
   577                           
   578                           ;Laboratorio4.c: 57: TMR0IE=1;
   579   000868  8AF2               	bsf	4082,5,c	;volatile
   580                           
   581                           ;Laboratorio4.c: 58: GIE=1;
   582   00086A  8EF2               	bsf	4082,7,c	;volatile
   583                           
   584                           ;Laboratorio4.c: 59: TMR0ON=1;
   585   00086C  8ED5               	bsf	4053,7,c	;volatile
   586                           
   587                           ;Laboratorio4.c: 62: OSCCON = 0b11000100;
   588   00086E  0EC4               	movlw	196
   589   000870  6ED3               	movwf	211,c	;volatile
   590                           
   591                           ;Laboratorio4.c: 64: BorraLCD();
   592   000872  EC2D  F00C         	call	_BorraLCD	;wreg free
   593                           
   594                           ;Laboratorio4.c: 65: if(TO == 1 & RI == 1){
   595   000876  0E01               	movlw	1
   596   000878  A6D0               	btfss	4048,3,c	;volatile
   597   00087A  0E00               	movlw	0
   598   00087C  A8D0               	btfss	4048,4,c	;volatile
   599   00087E  0E00               	movlw	0
   600   000880  A0E8               	btfss	wreg,0,c
   601   000882  D008               	goto	l2855
   602                           
   603                           ;Laboratorio4.c: 66: BorraLCD();
   604   000884  EC2D  F00C         	call	_BorraLCD	;wreg free
   605                           
   606                           ;Laboratorio4.c: 67: RI = 0;
   607   000888  98D0               	bcf	4048,4,c	;volatile
   608                           
   609                           ;Laboratorio4.c: 68: MensajeLCD_Word("Energia");
   610   00088A  0E28               	movlw	low STR_1
   611   00088C  6E13               	movwf	MensajeLCD_Word@a^0,c
   612   00088E  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
   613                           
   614                           ;Laboratorio4.c: 69: }else{
   615   000892  D014               	goto	l2861
   616   000894                     l2855:
   617                           
   618                           ;Laboratorio4.c: 70: if(TO == 1 | PD == 0 ){
   619   000894  A6D0               	btfss	4048,3,c	;volatile
   620   000896  D002               	goto	u2830
   621   000898  0E01               	movlw	1
   622   00089A  D001               	goto	u2832
   623   00089C                     u2830:
   624   00089C  0E00               	movlw	0
   625   00089E                     u2832:
   626   00089E  6E1B               	movwf	??_main^0,c
   627   0008A0  B4D0               	btfsc	4048,2,c	;volatile
   628   0008A2  D002               	goto	u2840
   629   0008A4  0E01               	movlw	1
   630   0008A6  D001               	goto	u2842
   631   0008A8                     u2840:
   632   0008A8  0E00               	movlw	0
   633   0008AA                     u2842:
   634   0008AA  101B               	iorwf	??_main^0,w,c
   635   0008AC  A0E8               	btfss	wreg,0,c
   636   0008AE  D006               	goto	l2861
   637                           
   638                           ;Laboratorio4.c: 71: BorraLCD();
   639   0008B0  EC2D  F00C         	call	_BorraLCD	;wreg free
   640                           
   641                           ;Laboratorio4.c: 72: MensajeLCD_Word("MCLR");
   642   0008B4  0E3A               	movlw	low STR_2
   643   0008B6  6E13               	movwf	MensajeLCD_Word@a^0,c
   644   0008B8  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
   645   0008BC                     l2861:
   646                           
   647                           ;Laboratorio4.c: 73: };Laboratorio4.c: 74: };Laboratorio4.c: 75: _delay((unsigned long)(
      +                          (1000)*(1000000/4000.0)));
   648   0008BC  0E02               	movlw	2
   649   0008BE  6E1C               	movwf	(??_main+1)^0,c
   650   0008C0  0E45               	movlw	69
   651   0008C2  6E1B               	movwf	??_main^0,c
   652   0008C4  0EAA               	movlw	170
   653   0008C6                     u3587:
   654   0008C6  2EE8               	decfsz	wreg,f,c
   655   0008C8  D7FE               	bra	u3587
   656   0008CA  2E1B               	decfsz	??_main^0,f,c
   657   0008CC  D7FC               	bra	u3587
   658   0008CE  2E1C               	decfsz	(??_main+1)^0,f,c
   659   0008D0  D7FA               	bra	u3587
   660                           
   661                           ;Laboratorio4.c: 76: BorraLCD();
   662   0008D2  EC2D  F00C         	call	_BorraLCD	;wreg free
   663                           
   664                           ;Laboratorio4.c: 77: NuevoCaracter(0,heart);
   665   0008D6  0E43               	movlw	low _heart
   666   0008D8  6E13               	movwf	NuevoCaracter@c^0,c
   667   0008DA  0E00               	movlw	0
   668   0008DC  ECA5  F00B         	call	_NuevoCaracter
   669                           
   670                           ;Laboratorio4.c: 78: DireccionaLCD(0x82);
   671   0008E0  0E82               	movlw	130
   672   0008E2  EC17  F00C         	call	_DireccionaLCD
   673                           
   674                           ;Laboratorio4.c: 79: EscribeLCD_c(0);
   675   0008E6  0E00               	movlw	0
   676   0008E8  EC0C  F00C         	call	_EscribeLCD_c
   677                           
   678                           ;Laboratorio4.c: 80: MensajeLCD_Word("Bienvenido");
   679   0008EC  0E12               	movlw	low STR_3
   680   0008EE  6E13               	movwf	MensajeLCD_Word@a^0,c
   681   0008F0  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
   682                           
   683                           ;Laboratorio4.c: 81: EscribeLCD_c(0);
   684   0008F4  0E00               	movlw	0
   685   0008F6  EC0C  F00C         	call	_EscribeLCD_c
   686                           
   687                           ;Laboratorio4.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
   688   0008FA  0E02               	movlw	2
   689   0008FC  6E1C               	movwf	(??_main+1)^0,c
   690   0008FE  0EE7               	movlw	231
   691   000900  6E1B               	movwf	??_main^0,c
   692   000902  0E00               	movlw	0
   693   000904                     u3597:
   694   000904  2EE8               	decfsz	wreg,f,c
   695   000906  D7FE               	bra	u3597
   696   000908  2E1B               	decfsz	??_main^0,f,c
   697   00090A  D7FC               	bra	u3597
   698   00090C  2E1C               	decfsz	(??_main+1)^0,f,c
   699   00090E  D7FA               	bra	u3597
   700   000910  D000               	nop2	
   701                           
   702                           ;Laboratorio4.c: 83: DireccionaLCD(0x80);
   703   000912  0E80               	movlw	128
   704   000914  EC17  F00C         	call	_DireccionaLCD
   705                           
   706                           ;Laboratorio4.c: 84: MensajeLCD_Word("                ");
   707   000918  0E01               	movlw	low STR_4
   708   00091A  6E13               	movwf	MensajeLCD_Word@a^0,c
   709   00091C  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
   710   000920                     l2881:
   711                           
   712                           ;Laboratorio4.c: 86: LATB=0B00000000;
   713   000920  0E00               	movlw	0
   714   000922  6E8A               	movwf	138,c	;volatile
   715                           
   716                           ;Laboratorio4.c: 87: verificador = 0;
   717   000924  0E00               	movlw	0
   718   000926  6E2E               	movwf	(_verificador+1)^0,c
   719   000928  0E00               	movlw	0
   720   00092A  6E2D               	movwf	_verificador^0,c
   721                           
   722                           ;Laboratorio4.c: 88: Tecla = LeerTeclado();
   723   00092C  EC7B  F008         	call	_LeerTeclado	;wreg free
   724   000930  6E3A               	movwf	_Tecla^0,c
   725                           
   726                           ;Laboratorio4.c: 89: ColorRGB();
   727   000932  ECD6  F009         	call	_ColorRGB	;wreg free
   728                           
   729                           ;Laboratorio4.c: 90: if(Tecla=='C'){
   730   000936  0E43               	movlw	67
   731   000938  183A               	xorwf	_Tecla^0,w,c
   732   00093A  A4D8               	btfss	status,2,c
   733   00093C  D02D               	goto	l2915
   734                           
   735                           ;Laboratorio4.c: 91: DireccionaLCD(0xC0);
   736   00093E  0EC0               	movlw	192
   737   000940  EC17  F00C         	call	_DireccionaLCD
   738                           
   739                           ;Laboratorio4.c: 93: op = ' ';
   740   000944  0E20               	movlw	32
   741   000946  6E41               	movwf	_op^0,c
   742                           
   743                           ;Laboratorio4.c: 94: n1c = ' ';
   744   000948  0E20               	movlw	32
   745   00094A  6E40               	movwf	_n1c^0,c
   746                           
   747                           ;Laboratorio4.c: 95: n2c = ' ';
   748   00094C  0E20               	movlw	32
   749   00094E  6E3F               	movwf	_n2c^0,c
   750                           
   751                           ;Laboratorio4.c: 96: n1 = 0;
   752   000950  0E00               	movlw	0
   753   000952  6E38               	movwf	(_n1+1)^0,c
   754   000954  0E00               	movlw	0
   755   000956  6E37               	movwf	_n1^0,c
   756                           
   757                           ;Laboratorio4.c: 97: n2 = 0;
   758   000958  0E00               	movlw	0
   759   00095A  6E36               	movwf	(_n2+1)^0,c
   760   00095C  0E00               	movlw	0
   761   00095E  6E35               	movwf	_n2^0,c
   762                           
   763                           ;Laboratorio4.c: 98: i = 0;
   764   000960  0E00               	movlw	0
   765   000962  6E34               	movwf	(_i+1)^0,c
   766   000964  0E00               	movlw	0
   767   000966  6E33               	movwf	_i^0,c
   768                           
   769                           ;Laboratorio4.c: 99: partdecl = 0;
   770   000968  0E00               	movlw	0
   771   00096A  6E29               	movwf	_partdecl^0,c
   772   00096C  0E00               	movlw	0
   773   00096E  6E2A               	movwf	(_partdecl+1)^0,c
   774   000970  0E00               	movlw	0
   775   000972  6E2B               	movwf	(_partdecl+2)^0,c
   776   000974  0E00               	movlw	0
   777   000976  6E2C               	movwf	(_partdecl+3)^0,c
   778                           
   779                           ;Laboratorio4.c: 100: flag = 0;
   780   000978  0E00               	movlw	0
   781   00097A  6E39               	movwf	_flag^0,c
   782                           
   783                           ;Laboratorio4.c: 101: DireccionaLCD(0x80);
   784   00097C  0E80               	movlw	128
   785   00097E  EC17  F00C         	call	_DireccionaLCD
   786                           
   787                           ;Laboratorio4.c: 102: MensajeLCD_Word("                ");
   788   000982  0E01               	movlw	low STR_4
   789   000984  6E13               	movwf	MensajeLCD_Word@a^0,c
   790   000986  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
   791                           
   792                           ;Laboratorio4.c: 103: DireccionaLCD(0xC0);
   793   00098A  0EC0               	movlw	192
   794   00098C  EC17  F00C         	call	_DireccionaLCD
   795                           
   796                           ;Laboratorio4.c: 104: DireccionaLCD(0x80);
   797   000990  0E80               	movlw	128
   798   000992  EC17  F00C         	call	_DireccionaLCD
   799                           
   800                           ;Laboratorio4.c: 105: }else{
   801   000996  D7C4               	goto	l2881
   802   000998                     l2915:
   803                           
   804                           ;Laboratorio4.c: 106: if(n1c==' '|n2c==' '|op==' '){
   805   000998  0E20               	movlw	32
   806   00099A  1840               	xorwf	_n1c^0,w,c
   807   00099C  B4D8               	btfsc	status,2,c
   808   00099E  D008               	goto	u2890
   809   0009A0  0E20               	movlw	32
   810   0009A2  183F               	xorwf	_n2c^0,w,c
   811   0009A4  B4D8               	btfsc	status,2,c
   812   0009A6  D004               	goto	u2890
   813   0009A8  0E20               	movlw	32
   814   0009AA  1841               	xorwf	_op^0,w,c
   815   0009AC  A4D8               	btfss	status,2,c
   816   0009AE  D0AD               	goto	l3005
   817   0009B0                     u2890:
   818                           
   819                           ;Laboratorio4.c: 107: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla!='
      +                          =') & n1c != ' ' & n2c ==' '){
   820   0009B0  0E20               	movlw	32
   821   0009B2  1841               	xorwf	_op^0,w,c
   822   0009B4  A4D8               	btfss	status,2,c
   823   0009B6  D02B               	goto	l2945
   824   0009B8  0E2B               	movlw	43
   825   0009BA  183A               	xorwf	_Tecla^0,w,c
   826   0009BC  B4D8               	btfsc	status,2,c
   827   0009BE  D010               	goto	u2950
   828   0009C0  0E2D               	movlw	45
   829   0009C2  183A               	xorwf	_Tecla^0,w,c
   830   0009C4  B4D8               	btfsc	status,2,c
   831   0009C6  D00C               	goto	u2950
   832   0009C8  0E2F               	movlw	47
   833   0009CA  183A               	xorwf	_Tecla^0,w,c
   834   0009CC  B4D8               	btfsc	status,2,c
   835   0009CE  D008               	goto	u2950
   836   0009D0  0E78               	movlw	120
   837   0009D2  183A               	xorwf	_Tecla^0,w,c
   838   0009D4  B4D8               	btfsc	status,2,c
   839   0009D6  D004               	goto	u2950
   840   0009D8  0E3D               	movlw	61
   841   0009DA  183A               	xorwf	_Tecla^0,w,c
   842   0009DC  B4D8               	btfsc	status,2,c
   843   0009DE  D017               	goto	l2945
   844   0009E0                     u2950:
   845   0009E0  0E20               	movlw	32
   846   0009E2  1840               	xorwf	_n1c^0,w,c
   847   0009E4  B4D8               	btfsc	status,2,c
   848   0009E6  D013               	goto	l2945
   849   0009E8  0E20               	movlw	32
   850   0009EA  183F               	xorwf	_n2c^0,w,c
   851   0009EC  A4D8               	btfss	status,2,c
   852   0009EE  D00F               	goto	l2945
   853                           
   854                           ;Laboratorio4.c: 108: DireccionaLCD(0x81);
   855   0009F0  0E81               	movlw	129
   856   0009F2  EC17  F00C         	call	_DireccionaLCD
   857                           
   858                           ;Laboratorio4.c: 109: EscribeLCD_c(Tecla);
   859   0009F6  503A               	movf	_Tecla^0,w,c
   860   0009F8  EC0C  F00C         	call	_EscribeLCD_c
   861                           
   862                           ;Laboratorio4.c: 110: op = Tecla;
   863   0009FC  C03A  F041         	movff	_Tecla,_op
   864                           
   865                           ;Laboratorio4.c: 111: if(Tecla=='!') n2c = 'A';
   866   000A00  0E21               	movlw	33
   867   000A02  183A               	xorwf	_Tecla^0,w,c
   868   000A04  A4D8               	btfss	status,2,c
   869   000A06  D36E               	goto	l3185
   870   000A08  0E41               	movlw	65
   871   000A0A  6E3F               	movwf	_n2c^0,c
   872   000A0C  D36B               	goto	l3185
   873   000A0E                     l2945:
   874   000A0E  0E20               	movlw	32
   875   000A10  1840               	xorwf	_n1c^0,w,c
   876   000A12  A4D8               	btfss	status,2,c
   877   000A14  D037               	goto	l2973
   878   000A16  0E2B               	movlw	43
   879   000A18  183A               	xorwf	_Tecla^0,w,c
   880   000A1A  A4D8               	btfss	status,2,c
   881   000A1C  D020               	goto	u3080
   882   000A1E  0E2D               	movlw	45
   883   000A20  183A               	xorwf	_Tecla^0,w,c
   884   000A22  A4D8               	btfss	status,2,c
   885   000A24  D01C               	goto	u3080
   886   000A26  0E2F               	movlw	47
   887   000A28  183A               	xorwf	_Tecla^0,w,c
   888   000A2A  A4D8               	btfss	status,2,c
   889   000A2C  D018               	goto	u3080
   890   000A2E  0E78               	movlw	120
   891   000A30  183A               	xorwf	_Tecla^0,w,c
   892   000A32  A4D8               	btfss	status,2,c
   893   000A34  D014               	goto	u3080
   894   000A36  0E3D               	movlw	61
   895   000A38  183A               	xorwf	_Tecla^0,w,c
   896   000A3A  A4D8               	btfss	status,2,c
   897   000A3C  D010               	goto	u3080
   898   000A3E  0E43               	movlw	67
   899   000A40  183A               	xorwf	_Tecla^0,w,c
   900   000A42  A4D8               	btfss	status,2,c
   901   000A44  D00C               	goto	u3080
   902   000A46  0E21               	movlw	33
   903   000A48  183A               	xorwf	_Tecla^0,w,c
   904   000A4A  A4D8               	btfss	status,2,c
   905   000A4C  D008               	goto	u3080
   906   000A4E  0E5E               	movlw	94
   907   000A50  183A               	xorwf	_Tecla^0,w,c
   908   000A52  A4D8               	btfss	status,2,c
   909   000A54  D004               	goto	u3080
   910   000A56  0E3D               	movlw	61
   911   000A58  183A               	xorwf	_Tecla^0,w,c
   912   000A5A  B4D8               	btfsc	status,2,c
   913   000A5C  D013               	goto	l2973
   914   000A5E                     u3080:
   915   000A5E  0E20               	movlw	32
   916   000A60  1841               	xorwf	_op^0,w,c
   917   000A62  A4D8               	btfss	status,2,c
   918   000A64  D00F               	goto	l2973
   919                           
   920                           ;Laboratorio4.c: 113: DireccionaLCD(0x80);
   921   000A66  0E80               	movlw	128
   922   000A68  EC17  F00C         	call	_DireccionaLCD
   923                           
   924                           ;Laboratorio4.c: 114: EscribeLCD_c(Tecla);
   925   000A6C  503A               	movf	_Tecla^0,w,c
   926   000A6E  EC0C  F00C         	call	_EscribeLCD_c
   927                           
   928                           ;Laboratorio4.c: 115: n1c=Tecla;
   929   000A72  C03A  F040         	movff	_Tecla,_n1c
   930                           
   931                           ;Laboratorio4.c: 116: n1 = Tecla-'0';
   932   000A76  0ED0               	movlw	208
   933   000A78  243A               	addwf	_Tecla^0,w,c
   934   000A7A  6E37               	movwf	_n1^0,c
   935   000A7C  6A38               	clrf	(_n1+1)^0,c
   936   000A7E  0EFF               	movlw	255
   937   000A80  2238               	addwfc	(_n1+1)^0,f,c
   938                           
   939                           ;Laboratorio4.c: 117: }else if(n2c==' ' & op!=' ' & op!='!' & n1c != ' ' & (Tecla!='+'|T
      +                          ecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='!'|Tecla!='^'|Tecla!='='))
      +                          {
   940   000A82  D330               	goto	l3185
   941   000A84                     l2973:
   942   000A84  0E20               	movlw	32
   943   000A86  183F               	xorwf	_n2c^0,w,c
   944   000A88  A4D8               	btfss	status,2,c
   945   000A8A  D32C               	goto	l3185
   946   000A8C  0E20               	movlw	32
   947   000A8E  1841               	xorwf	_op^0,w,c
   948   000A90  B4D8               	btfsc	status,2,c
   949   000A92  D328               	goto	l3185
   950   000A94  0E21               	movlw	33
   951   000A96  1841               	xorwf	_op^0,w,c
   952   000A98  B4D8               	btfsc	status,2,c
   953   000A9A  D324               	goto	l3185
   954   000A9C  0E20               	movlw	32
   955   000A9E  1840               	xorwf	_n1c^0,w,c
   956   000AA0  B4D8               	btfsc	status,2,c
   957   000AA2  D320               	goto	l3185
   958   000AA4  0E2B               	movlw	43
   959   000AA6  183A               	xorwf	_Tecla^0,w,c
   960   000AA8  A4D8               	btfss	status,2,c
   961   000AAA  D020               	goto	u3220
   962   000AAC  0E2D               	movlw	45
   963   000AAE  183A               	xorwf	_Tecla^0,w,c
   964   000AB0  A4D8               	btfss	status,2,c
   965   000AB2  D01C               	goto	u3220
   966   000AB4  0E2F               	movlw	47
   967   000AB6  183A               	xorwf	_Tecla^0,w,c
   968   000AB8  A4D8               	btfss	status,2,c
   969   000ABA  D018               	goto	u3220
   970   000ABC  0E78               	movlw	120
   971   000ABE  183A               	xorwf	_Tecla^0,w,c
   972   000AC0  A4D8               	btfss	status,2,c
   973   000AC2  D014               	goto	u3220
   974   000AC4  0E3D               	movlw	61
   975   000AC6  183A               	xorwf	_Tecla^0,w,c
   976   000AC8  A4D8               	btfss	status,2,c
   977   000ACA  D010               	goto	u3220
   978   000ACC  0E43               	movlw	67
   979   000ACE  183A               	xorwf	_Tecla^0,w,c
   980   000AD0  A4D8               	btfss	status,2,c
   981   000AD2  D00C               	goto	u3220
   982   000AD4  0E21               	movlw	33
   983   000AD6  183A               	xorwf	_Tecla^0,w,c
   984   000AD8  A4D8               	btfss	status,2,c
   985   000ADA  D008               	goto	u3220
   986   000ADC  0E5E               	movlw	94
   987   000ADE  183A               	xorwf	_Tecla^0,w,c
   988   000AE0  A4D8               	btfss	status,2,c
   989   000AE2  D004               	goto	u3220
   990   000AE4  0E3D               	movlw	61
   991   000AE6  183A               	xorwf	_Tecla^0,w,c
   992   000AE8  B4D8               	btfsc	status,2,c
   993   000AEA  D2FC               	goto	l3185
   994   000AEC                     u3220:
   995                           
   996                           ;Laboratorio4.c: 118: DireccionaLCD(0x82);
   997   000AEC  0E82               	movlw	130
   998   000AEE  EC17  F00C         	call	_DireccionaLCD
   999                           
  1000                           ;Laboratorio4.c: 119: EscribeLCD_c(Tecla);
  1001   000AF2  503A               	movf	_Tecla^0,w,c
  1002   000AF4  EC0C  F00C         	call	_EscribeLCD_c
  1003                           
  1004                           ;Laboratorio4.c: 120: n2c=Tecla;
  1005   000AF8  C03A  F03F         	movff	_Tecla,_n2c
  1006                           
  1007                           ;Laboratorio4.c: 121: n2 = Tecla-'0';
  1008   000AFC  0ED0               	movlw	208
  1009   000AFE  243A               	addwf	_Tecla^0,w,c
  1010   000B00  6E35               	movwf	_n2^0,c
  1011   000B02  6A36               	clrf	(_n2+1)^0,c
  1012   000B04  0EFF               	movlw	255
  1013   000B06  2236               	addwfc	(_n2+1)^0,f,c
  1014                           
  1015                           ;Laboratorio4.c: 122: };Laboratorio4.c: 123: }else if(Tecla=='=' & n1c != ' ' & op!=' ' 
      +                          & n2c!=' '){
  1016   000B08  D2ED               	goto	l3185
  1017   000B0A                     l3005:
  1018   000B0A  0E3D               	movlw	61
  1019   000B0C  183A               	xorwf	_Tecla^0,w,c
  1020   000B0E  A4D8               	btfss	status,2,c
  1021   000B10  D2E6               	goto	l3183
  1022   000B12  0E20               	movlw	32
  1023   000B14  1840               	xorwf	_n1c^0,w,c
  1024   000B16  B4D8               	btfsc	status,2,c
  1025   000B18  D2E2               	goto	l3183
  1026   000B1A  0E20               	movlw	32
  1027   000B1C  1841               	xorwf	_op^0,w,c
  1028   000B1E  B4D8               	btfsc	status,2,c
  1029   000B20  D2DE               	goto	l3183
  1030   000B22  0E20               	movlw	32
  1031   000B24  183F               	xorwf	_n2c^0,w,c
  1032   000B26  B4D8               	btfsc	status,2,c
  1033   000B28  D2DA               	goto	l3183
  1034                           
  1035                           ;Laboratorio4.c: 124: if(op=='!') DireccionaLCD(0x82);
  1036   000B2A  0E21               	movlw	33
  1037   000B2C  1841               	xorwf	_op^0,w,c
  1038   000B2E  A4D8               	btfss	status,2,c
  1039   000B30  D004               	goto	l3017
  1040   000B32  0E82               	movlw	130
  1041   000B34  EC17  F00C         	call	_DireccionaLCD
  1042   000B38  D003               	goto	l187
  1043   000B3A                     l3017:
  1044                           
  1045                           ;Laboratorio4.c: 125: else DireccionaLCD(0x83);
  1046   000B3A  0E83               	movlw	131
  1047   000B3C  EC17  F00C         	call	_DireccionaLCD
  1048   000B40                     l187:
  1049                           
  1050                           ;Laboratorio4.c: 126: EscribeLCD_c('=');
  1051   000B40  0E3D               	movlw	61
  1052   000B42  EC0C  F00C         	call	_EscribeLCD_c
  1053                           
  1054                           ;Laboratorio4.c: 127: switch(op){
  1055   000B46  D0EF               	goto	l3079
  1056   000B48                     l3019:
  1057                           
  1058                           ;Laboratorio4.c: 129: r = n1 + n2;
  1059   000B48  5035               	movf	_n2^0,w,c
  1060   000B4A  2437               	addwf	_n1^0,w,c
  1061   000B4C  6E1B               	movwf	??_main^0,c
  1062   000B4E  5036               	movf	(_n2+1)^0,w,c
  1063   000B50  2038               	addwfc	(_n1+1)^0,w,c
  1064   000B52  6E1C               	movwf	(??_main+1)^0,c
  1065   000B54  C01B  F025         	movff	??_main,_r
  1066   000B58  C01C  F026         	movff	??_main+1,_r+1
  1067   000B5C  6A27               	clrf	(_r+2)^0,c
  1068   000B5E  6A28               	clrf	(_r+3)^0,c
  1069   000B60                     l3021:
  1070                           
  1071                           ;Laboratorio4.c: 130: partdecl = r*100;
  1072   000B60  C025  F00E         	movff	_r,___lmul@multiplier
  1073   000B64  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1074   000B68  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1075   000B6C  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1076   000B70  0E64               	movlw	100
  1077   000B72  6E12               	movwf	___lmul@multiplicand^0,c
  1078   000B74  0E00               	movlw	0
  1079   000B76  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1080   000B78  0E00               	movlw	0
  1081   000B7A  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1082   000B7C  0E00               	movlw	0
  1083   000B7E  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1084   000B80  EC46  F00A         	call	___lmul	;wreg free
  1085   000B84  C00E  F029         	movff	?___lmul,_partdecl
  1086   000B88  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1087   000B8C  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1088   000B90  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1089                           
  1090                           ;Laboratorio4.c: 131: break;
  1091   000B94  D0DC               	goto	l3081
  1092   000B96                     l3023:
  1093                           
  1094                           ;Laboratorio4.c: 133: r = n1 - n2;
  1095   000B96  5035               	movf	_n2^0,w,c
  1096   000B98  5C37               	subwf	_n1^0,w,c
  1097   000B9A  6E1B               	movwf	??_main^0,c
  1098   000B9C  5036               	movf	(_n2+1)^0,w,c
  1099   000B9E  5838               	subwfb	(_n1+1)^0,w,c
  1100   000BA0  D7D8               	goto	L1
  1101   000BA2                     l3027:
  1102                           
  1103                           ;Laboratorio4.c: 137: r = n1*n2;
  1104   000BA2  C037  F00E         	movff	_n1,___wmul@multiplier
  1105   000BA6  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1106   000BAA  C035  F010         	movff	_n2,___wmul@multiplicand
  1107   000BAE  C036  F011         	movff	_n2+1,___wmul@multiplicand+1
  1108   000BB2  ECF9  F00B         	call	___wmul	;wreg free
  1109   000BB6  C00E  F025         	movff	?___wmul,_r
  1110   000BBA  C00F  F026         	movff	?___wmul+1,_r+1
  1111   000BBE  D7CE               	goto	L2
  1112   000BC0                     l3031:
  1113                           
  1114                           ;Laboratorio4.c: 141: if(n2!=0){
  1115   000BC0  5035               	movf	_n2^0,w,c
  1116   000BC2  1036               	iorwf	(_n2+1)^0,w,c
  1117   000BC4  B4D8               	btfsc	status,2,c
  1118   000BC6  D02F               	goto	l3039
  1119                           
  1120                           ;Laboratorio4.c: 142: if(n1!=0){
  1121   000BC8  5037               	movf	_n1^0,w,c
  1122   000BCA  1038               	iorwf	(_n1+1)^0,w,c
  1123   000BCC  B4D8               	btfsc	status,2,c
  1124   000BCE  D0BF               	goto	l3081
  1125                           
  1126                           ;Laboratorio4.c: 143: r = n1/n2;
  1127   000BD0  C037  F014         	movff	_n1,___lwdiv@dividend
  1128   000BD4  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1129   000BD8  C035  F016         	movff	_n2,___lwdiv@divisor
  1130   000BDC  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1131   000BE0  ECC7  F00A         	call	___lwdiv	;wreg free
  1132   000BE4  C014  F025         	movff	?___lwdiv,_r
  1133   000BE8  C015  F026         	movff	?___lwdiv+1,_r+1
  1134   000BEC  6A27               	clrf	(_r+2)^0,c
  1135   000BEE  6A28               	clrf	(_r+3)^0,c
  1136                           
  1137                           ;Laboratorio4.c: 144: partdecl = (n1*100)/n2;
  1138   000BF0  C037  F00E         	movff	_n1,___wmul@multiplier
  1139   000BF4  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1140   000BF8  0E00               	movlw	0
  1141   000BFA  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1142   000BFC  0E64               	movlw	100
  1143   000BFE  6E10               	movwf	___wmul@multiplicand^0,c
  1144   000C00  ECF9  F00B         	call	___wmul	;wreg free
  1145   000C04  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1146   000C08  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1147   000C0C  C035  F016         	movff	_n2,___lwdiv@divisor
  1148   000C10  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1149   000C14  ECC7  F00A         	call	___lwdiv	;wreg free
  1150   000C18  C014  F029         	movff	?___lwdiv,_partdecl
  1151   000C1C  C015  F02A         	movff	?___lwdiv+1,_partdecl+1
  1152   000C20  6A2B               	clrf	(_partdecl+2)^0,c
  1153   000C22  6A2C               	clrf	(_partdecl+3)^0,c
  1154   000C24  D094               	goto	l3081
  1155   000C26                     l3039:
  1156                           
  1157                           ;Laboratorio4.c: 147: if(n1 != 0 & n2 == 0) r = 1000;
  1158   000C26  5037               	movf	_n1^0,w,c
  1159   000C28  1038               	iorwf	(_n1+1)^0,w,c
  1160   000C2A  B4D8               	btfsc	status,2,c
  1161   000C2C  D006               	goto	l3045
  1162   000C2E  5035               	movf	_n2^0,w,c
  1163   000C30  1036               	iorwf	(_n2+1)^0,w,c
  1164   000C32  A4D8               	btfss	status,2,c
  1165   000C34  D002               	goto	l3045
  1166   000C36  0EE8               	movlw	232
  1167   000C38  D009               	goto	L3
  1168   000C3A                     l3045:
  1169                           
  1170                           ;Laboratorio4.c: 148: else if(n1 == 0 & n2 == 0) r = 1001;
  1171   000C3A  5037               	movf	_n1^0,w,c
  1172   000C3C  1038               	iorwf	(_n1+1)^0,w,c
  1173   000C3E  A4D8               	btfss	status,2,c
  1174   000C40  D78F               	goto	l3021
  1175   000C42  5035               	movf	_n2^0,w,c
  1176   000C44  1036               	iorwf	(_n2+1)^0,w,c
  1177   000C46  A4D8               	btfss	status,2,c
  1178   000C48  D78B               	goto	l3021
  1179   000C4A  0EE9               	movlw	233
  1180   000C4C                     L3:
  1181   000C4C  6E25               	movwf	_r^0,c
  1182   000C4E  0E03               	movlw	3
  1183   000C50  6E26               	movwf	(_r+1)^0,c
  1184   000C52  0E00               	movlw	0
  1185   000C54  6E27               	movwf	(_r+2)^0,c
  1186   000C56  0E00               	movlw	0
  1187   000C58  6E28               	movwf	(_r+3)^0,c
  1188   000C5A  D782               	goto	l3021
  1189   000C5C                     l3053:
  1190                           
  1191                           ;Laboratorio4.c: 153: r = n1;
  1192   000C5C  C037  F025         	movff	_n1,_r
  1193   000C60  C038  F026         	movff	_n1+1,_r+1
  1194   000C64  6A27               	clrf	(_r+2)^0,c
  1195   000C66  6A28               	clrf	(_r+3)^0,c
  1196   000C68  D021               	goto	l3059
  1197   000C6A                     l3055:
  1198                           
  1199                           ;Laboratorio4.c: 155: r = r * (n1-1);
  1200   000C6A  0EFF               	movlw	255
  1201   000C6C  2437               	addwf	_n1^0,w,c
  1202   000C6E  6E1B               	movwf	??_main^0,c
  1203   000C70  0EFF               	movlw	255
  1204   000C72  2038               	addwfc	(_n1+1)^0,w,c
  1205   000C74  6E1C               	movwf	(??_main+1)^0,c
  1206   000C76  C01B  F00E         	movff	??_main,___lmul@multiplier
  1207   000C7A  C01C  F00F         	movff	??_main+1,___lmul@multiplier+1
  1208   000C7E  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1209   000C80  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1210   000C82  C025  F012         	movff	_r,___lmul@multiplicand
  1211   000C86  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1212   000C8A  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1213   000C8E  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1214   000C92  EC46  F00A         	call	___lmul	;wreg free
  1215   000C96  C00E  F025         	movff	?___lmul,_r
  1216   000C9A  C00F  F026         	movff	?___lmul+1,_r+1
  1217   000C9E  C010  F027         	movff	?___lmul+2,_r+2
  1218   000CA2  C011  F028         	movff	?___lmul+3,_r+3
  1219   000CA6  0637               	decf	_n1^0,f,c
  1220   000CA8  A0D8               	btfss	status,0,c
  1221   000CAA  0638               	decf	(_n1+1)^0,f,c
  1222   000CAC                     l3059:
  1223   000CAC  5038               	movf	(_n1+1)^0,w,c
  1224   000CAE  E1DD               	bnz	l3055
  1225   000CB0  0E02               	movlw	2
  1226   000CB2  5C37               	subwf	_n1^0,w,c
  1227   000CB4  A0D8               	btfss	status,0,c
  1228   000CB6  D754               	goto	l3021
  1229   000CB8  D7D8               	goto	l3055
  1230   000CBA                     l3063:
  1231                           
  1232                           ;Laboratorio4.c: 160: r = n1;
  1233   000CBA  C037  F025         	movff	_n1,_r
  1234   000CBE  C038  F026         	movff	_n1+1,_r+1
  1235   000CC2  6A27               	clrf	(_r+2)^0,c
  1236   000CC4  6A28               	clrf	(_r+3)^0,c
  1237                           
  1238                           ;Laboratorio4.c: 161: n2 = n2-1;
  1239   000CC6  0EFF               	movlw	255
  1240   000CC8  2435               	addwf	_n2^0,w,c
  1241   000CCA  6E35               	movwf	_n2^0,c
  1242   000CCC  0EFF               	movlw	255
  1243   000CCE  2036               	addwfc	(_n2+1)^0,w,c
  1244   000CD0  6E36               	movwf	(_n2+1)^0,c
  1245   000CD2  D01B               	goto	l3071
  1246   000CD4                     l3067:
  1247                           
  1248                           ;Laboratorio4.c: 163: r = r * n1;
  1249   000CD4  C037  F00E         	movff	_n1,___lmul@multiplier
  1250   000CD8  C038  F00F         	movff	_n1+1,___lmul@multiplier+1
  1251   000CDC  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1252   000CDE  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1253   000CE0  C025  F012         	movff	_r,___lmul@multiplicand
  1254   000CE4  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1255   000CE8  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1256   000CEC  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1257   000CF0  EC46  F00A         	call	___lmul	;wreg free
  1258   000CF4  C00E  F025         	movff	?___lmul,_r
  1259   000CF8  C00F  F026         	movff	?___lmul+1,_r+1
  1260   000CFC  C010  F027         	movff	?___lmul+2,_r+2
  1261   000D00  C011  F028         	movff	?___lmul+3,_r+3
  1262   000D04  0635               	decf	_n2^0,f,c
  1263   000D06  A0D8               	btfss	status,0,c
  1264   000D08  0636               	decf	(_n2+1)^0,f,c
  1265   000D0A                     l3071:
  1266   000D0A  5035               	movf	_n2^0,w,c
  1267   000D0C  1036               	iorwf	(_n2+1)^0,w,c
  1268   000D0E  B4D8               	btfsc	status,2,c
  1269   000D10  D727               	goto	l3021
  1270   000D12  D7E0               	goto	l3067
  1271   000D14                     l3075:
  1272                           
  1273                           ;Laboratorio4.c: 168: r = 0;
  1274   000D14  0E00               	movlw	0
  1275   000D16  6E25               	movwf	_r^0,c
  1276   000D18  0E00               	movlw	0
  1277   000D1A  6E26               	movwf	(_r+1)^0,c
  1278   000D1C  0E00               	movlw	0
  1279   000D1E  6E27               	movwf	(_r+2)^0,c
  1280   000D20  0E00               	movlw	0
  1281   000D22  6E28               	movwf	(_r+3)^0,c
  1282                           
  1283                           ;Laboratorio4.c: 169: break;
  1284   000D24  D014               	goto	l3081
  1285   000D26                     l3079:
  1286   000D26  5041               	movf	_op^0,w,c
  1287                           
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 6, Range of values is 33 to 120
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           19    10 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294   000D28  0A21               	xorlw	33	; case 33
  1295   000D2A  B4D8               	btfsc	status,2,c
  1296   000D2C  D797               	goto	l3053
  1297   000D2E  0A0A               	xorlw	10	; case 43
  1298   000D30  B4D8               	btfsc	status,2,c
  1299   000D32  D70A               	goto	l3019
  1300   000D34  0A06               	xorlw	6	; case 45
  1301   000D36  B4D8               	btfsc	status,2,c
  1302   000D38  D72E               	goto	l3023
  1303   000D3A  0A02               	xorlw	2	; case 47
  1304   000D3C  B4D8               	btfsc	status,2,c
  1305   000D3E  D740               	goto	l3031
  1306   000D40  0A71               	xorlw	113	; case 94
  1307   000D42  B4D8               	btfsc	status,2,c
  1308   000D44  D7BA               	goto	l3063
  1309   000D46  0A26               	xorlw	38	; case 120
  1310   000D48  B4D8               	btfsc	status,2,c
  1311   000D4A  D72B               	goto	l3027
  1312   000D4C  D7E3               	goto	l3075
  1313   000D4E                     l3081:
  1314                           
  1315                           ;Laboratorio4.c: 171: if(op=='!') DireccionaLCD(0x83);
  1316   000D4E  0E21               	movlw	33
  1317   000D50  1841               	xorwf	_op^0,w,c
  1318   000D52  A4D8               	btfss	status,2,c
  1319   000D54  D004               	goto	l3085
  1320   000D56  0E83               	movlw	131
  1321   000D58  EC17  F00C         	call	_DireccionaLCD
  1322   000D5C  D003               	goto	l210
  1323   000D5E                     l3085:
  1324                           
  1325                           ;Laboratorio4.c: 172: else DireccionaLCD(0x84);
  1326   000D5E  0E84               	movlw	132
  1327   000D60  EC17  F00C         	call	_DireccionaLCD
  1328   000D64                     l210:
  1329                           
  1330                           ;Laboratorio4.c: 173: if ((partdecl-(r*100))!= 0 & (partdecl-(r*100))>0){
  1331   000D64  C025  F00E         	movff	_r,___lmul@multiplier
  1332   000D68  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1333   000D6C  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1334   000D70  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1335   000D74  0E9C               	movlw	156
  1336   000D76  6E12               	movwf	___lmul@multiplicand^0,c
  1337   000D78  0EFF               	movlw	255
  1338   000D7A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1339   000D7C  0EFF               	movlw	255
  1340   000D7E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1341   000D80  0EFF               	movlw	255
  1342   000D82  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1343   000D84  EC46  F00A         	call	___lmul	;wreg free
  1344   000D88  5029               	movf	_partdecl^0,w,c
  1345   000D8A  240E               	addwf	?___lmul^0,w,c
  1346   000D8C  6E1B               	movwf	??_main^0,c
  1347   000D8E  502A               	movf	(_partdecl+1)^0,w,c
  1348   000D90  200F               	addwfc	(?___lmul+1)^0,w,c
  1349   000D92  6E1C               	movwf	(??_main+1)^0,c
  1350   000D94  502B               	movf	(_partdecl+2)^0,w,c
  1351   000D96  2010               	addwfc	(?___lmul+2)^0,w,c
  1352   000D98  6E1D               	movwf	(??_main+2)^0,c
  1353   000D9A  502C               	movf	(_partdecl+3)^0,w,c
  1354   000D9C  2011               	addwfc	(?___lmul+3)^0,w,c
  1355   000D9E  6E1E               	movwf	(??_main+3)^0,c
  1356   000DA0  501B               	movf	??_main^0,w,c
  1357   000DA2  101C               	iorwf	(??_main+1)^0,w,c
  1358   000DA4  101D               	iorwf	(??_main+2)^0,w,c
  1359   000DA6  101E               	iorwf	(??_main+3)^0,w,c
  1360   000DA8  B4D8               	btfsc	status,2,c
  1361   000DAA  D07A               	goto	l3111
  1362   000DAC  C025  F00E         	movff	_r,___lmul@multiplier
  1363   000DB0  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1364   000DB4  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1365   000DB8  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1366   000DBC  0E9C               	movlw	156
  1367   000DBE  6E12               	movwf	___lmul@multiplicand^0,c
  1368   000DC0  0EFF               	movlw	255
  1369   000DC2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1370   000DC4  0EFF               	movlw	255
  1371   000DC6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1372   000DC8  0EFF               	movlw	255
  1373   000DCA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1374   000DCC  EC46  F00A         	call	___lmul	;wreg free
  1375   000DD0  5029               	movf	_partdecl^0,w,c
  1376   000DD2  240E               	addwf	?___lmul^0,w,c
  1377   000DD4  6E1B               	movwf	??_main^0,c
  1378   000DD6  502A               	movf	(_partdecl+1)^0,w,c
  1379   000DD8  200F               	addwfc	(?___lmul+1)^0,w,c
  1380   000DDA  6E1C               	movwf	(??_main+1)^0,c
  1381   000DDC  502B               	movf	(_partdecl+2)^0,w,c
  1382   000DDE  2010               	addwfc	(?___lmul+2)^0,w,c
  1383   000DE0  6E1D               	movwf	(??_main+2)^0,c
  1384   000DE2  502C               	movf	(_partdecl+3)^0,w,c
  1385   000DE4  2011               	addwfc	(?___lmul+3)^0,w,c
  1386   000DE6  6E1E               	movwf	(??_main+3)^0,c
  1387   000DE8  501B               	movf	??_main^0,w,c
  1388   000DEA  101C               	iorwf	(??_main+1)^0,w,c
  1389   000DEC  101D               	iorwf	(??_main+2)^0,w,c
  1390   000DEE  101E               	iorwf	(??_main+3)^0,w,c
  1391   000DF0  B4D8               	btfsc	status,2,c
  1392   000DF2  D056               	goto	l3111
  1393                           
  1394                           ;Laboratorio4.c: 174: for (int i = 0; i < 3; i++) {
  1395   000DF4  0E00               	movlw	0
  1396   000DF6  6E22               	movwf	(main@i+1)^0,c
  1397   000DF8  0E00               	movlw	0
  1398   000DFA  6E21               	movwf	main@i^0,c
  1399   000DFC                     l3091:
  1400   000DFC  BE22               	btfsc	(main@i+1)^0,7,c
  1401   000DFE  D008               	goto	l3095
  1402   000E00  5022               	movf	(main@i+1)^0,w,c
  1403   000E02  E105               	bnz	u3390
  1404   000E04  0E03               	movlw	3
  1405   000E06  5C21               	subwf	main@i^0,w,c
  1406   000E08  B0D8               	btfsc	status,0,c
  1407   000E0A  D16C               	goto	l3185
  1408   000E0C  D001               	goto	l3095
  1409   000E0E                     u3390:
  1410   000E0E  D16A               	goto	l3185
  1411   000E10                     l3095:
  1412                           
  1413                           ;Laboratorio4.c: 175: r = n1 / n2;
  1414   000E10  C037  F014         	movff	_n1,___lwdiv@dividend
  1415   000E14  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1416   000E18  C035  F016         	movff	_n2,___lwdiv@divisor
  1417   000E1C  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1418   000E20  ECC7  F00A         	call	___lwdiv	;wreg free
  1419   000E24  C014  F025         	movff	?___lwdiv,_r
  1420   000E28  C015  F026         	movff	?___lwdiv+1,_r+1
  1421   000E2C  6A27               	clrf	(_r+2)^0,c
  1422   000E2E  6A28               	clrf	(_r+3)^0,c
  1423                           
  1424                           ;Laboratorio4.c: 176: m = n1 % n2;
  1425   000E30  C037  F00E         	movff	_n1,___lwmod@dividend
  1426   000E34  C038  F00F         	movff	_n1+1,___lwmod@dividend+1
  1427   000E38  C035  F010         	movff	_n2,___lwmod@divisor
  1428   000E3C  C036  F011         	movff	_n2+1,___lwmod@divisor+1
  1429   000E40  EC84  F00B         	call	___lwmod	;wreg free
  1430   000E44  C00E  F03B         	movff	?___lwmod,_m
  1431   000E48  C00F  F03C         	movff	?___lwmod+1,_m+1
  1432   000E4C  6A3D               	clrf	(_m+2)^0,c
  1433   000E4E  6A3E               	clrf	(_m+3)^0,c
  1434                           
  1435                           ;Laboratorio4.c: 177: EscribeLCD_c(r+'0');
  1436   000E50  5025               	movf	_r^0,w,c
  1437   000E52  0F30               	addlw	48
  1438   000E54  EC0C  F00C         	call	_EscribeLCD_c
  1439                           
  1440                           ;Laboratorio4.c: 178: if(i == 0 && m != 0) {
  1441   000E58  5021               	movf	main@i^0,w,c
  1442   000E5A  1022               	iorwf	(main@i+1)^0,w,c
  1443   000E5C  A4D8               	btfss	status,2,c
  1444   000E5E  D009               	goto	l3103
  1445   000E60  503B               	movf	_m^0,w,c
  1446   000E62  103C               	iorwf	(_m+1)^0,w,c
  1447   000E64  103D               	iorwf	(_m+2)^0,w,c
  1448   000E66  103E               	iorwf	(_m+3)^0,w,c
  1449   000E68  B4D8               	btfsc	status,2,c
  1450   000E6A  D003               	goto	l3103
  1451                           
  1452                           ;Laboratorio4.c: 179: EscribeLCD_c(',');
  1453   000E6C  0E2C               	movlw	44
  1454   000E6E  EC0C  F00C         	call	_EscribeLCD_c
  1455   000E72                     l3103:
  1456                           
  1457                           ;Laboratorio4.c: 180: };Laboratorio4.c: 181: if (m != 0) {
  1458   000E72  503B               	movf	_m^0,w,c
  1459   000E74  103C               	iorwf	(_m+1)^0,w,c
  1460   000E76  103D               	iorwf	(_m+2)^0,w,c
  1461   000E78  103E               	iorwf	(_m+3)^0,w,c
  1462   000E7A  B4D8               	btfsc	status,2,c
  1463   000E7C  D133               	goto	l3185
  1464                           
  1465                           ;Laboratorio4.c: 182: n1 = m * 10;
  1466   000E7E  C03B  F00E         	movff	_m,___wmul@multiplier
  1467   000E82  C03C  F00F         	movff	_m+1,___wmul@multiplier+1
  1468   000E86  0E00               	movlw	0
  1469   000E88  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1470   000E8A  0E0A               	movlw	10
  1471   000E8C  6E10               	movwf	___wmul@multiplicand^0,c
  1472   000E8E  ECF9  F00B         	call	___wmul	;wreg free
  1473   000E92  C00E  F037         	movff	?___wmul,_n1
  1474   000E96  C00F  F038         	movff	?___wmul+1,_n1+1
  1475                           
  1476                           ;Laboratorio4.c: 183: } else {
  1477   000E9A  4A21               	infsnz	main@i^0,f,c
  1478   000E9C  2A22               	incf	(main@i+1)^0,f,c
  1479   000E9E  D7AE               	goto	l3091
  1480   000EA0                     l3111:
  1481   000EA0  5028               	movf	(_r+3)^0,w,c
  1482   000EA2  1027               	iorwf	(_r+2)^0,w,c
  1483   000EA4  1026               	iorwf	(_r+1)^0,w,c
  1484   000EA6  E104               	bnz	u3430
  1485   000EA8  0E52               	movlw	82
  1486   000EAA  5C25               	subwf	_r^0,w,c
  1487   000EAC  A0D8               	btfss	status,0,c
  1488   000EAE  D029               	goto	l3125
  1489   000EB0                     u3430:
  1490   000EB0  0EE8               	movlw	232
  1491   000EB2  1825               	xorwf	_r^0,w,c
  1492   000EB4  E106               	bnz	u3440
  1493   000EB6  0E03               	movlw	3
  1494   000EB8  1826               	xorwf	(_r+1)^0,w,c
  1495   000EBA  1027               	iorwf	(_r+2)^0,w,c
  1496   000EBC  1028               	iorwf	(_r+3)^0,w,c
  1497   000EBE  B4D8               	btfsc	status,2,c
  1498   000EC0  D020               	goto	l3125
  1499   000EC2                     u3440:
  1500   000EC2  0EE9               	movlw	233
  1501   000EC4  1825               	xorwf	_r^0,w,c
  1502   000EC6  E106               	bnz	u3450
  1503   000EC8  0E03               	movlw	3
  1504   000ECA  1826               	xorwf	(_r+1)^0,w,c
  1505   000ECC  1027               	iorwf	(_r+2)^0,w,c
  1506   000ECE  1028               	iorwf	(_r+3)^0,w,c
  1507   000ED0  B4D8               	btfsc	status,2,c
  1508   000ED2  D017               	goto	l3125
  1509   000ED4                     u3450:
  1510   000ED4  0E2D               	movlw	45
  1511   000ED6  1841               	xorwf	_op^0,w,c
  1512   000ED8  A4D8               	btfss	status,2,c
  1513   000EDA  D013               	goto	l3125
  1514                           
  1515                           ;Laboratorio4.c: 189: EscribeLCD_c('-');
  1516   000EDC  0E2D               	movlw	45
  1517   000EDE  EC0C  F00C         	call	_EscribeLCD_c
  1518                           
  1519                           ;Laboratorio4.c: 190: DireccionaLCD(0x85);
  1520   000EE2  0E85               	movlw	133
  1521   000EE4  EC17  F00C         	call	_DireccionaLCD
  1522                           
  1523                           ;Laboratorio4.c: 191: r = ~r+1;
  1524   000EE8  1E28               	comf	(_r+3)^0,f,c
  1525   000EEA  1E27               	comf	(_r+2)^0,f,c
  1526   000EEC  1E26               	comf	(_r+1)^0,f,c
  1527   000EEE  6C25               	negf	_r^0,c
  1528   000EF0  0E00               	movlw	0
  1529   000EF2  2226               	addwfc	(_r+1)^0,f,c
  1530   000EF4  2227               	addwfc	(_r+2)^0,f,c
  1531   000EF6  2228               	addwfc	(_r+3)^0,f,c
  1532                           
  1533                           ;Laboratorio4.c: 192: EscribeLCD_c(r+'0');
  1534   000EF8  5025               	movf	_r^0,w,c
  1535   000EFA  0F30               	addlw	48
  1536   000EFC  EC0C  F00C         	call	_EscribeLCD_c
  1537                           
  1538                           ;Laboratorio4.c: 193: }else{
  1539   000F00  D0F1               	goto	l3185
  1540   000F02                     l3125:
  1541                           
  1542                           ;Laboratorio4.c: 194: if(r==1000){
  1543   000F02  0EE8               	movlw	232
  1544   000F04  1825               	xorwf	_r^0,w,c
  1545   000F06  E10B               	bnz	l3129
  1546   000F08  0E03               	movlw	3
  1547   000F0A  1826               	xorwf	(_r+1)^0,w,c
  1548   000F0C  1027               	iorwf	(_r+2)^0,w,c
  1549   000F0E  1028               	iorwf	(_r+3)^0,w,c
  1550   000F10  A4D8               	btfss	status,2,c
  1551   000F12  D005               	goto	l3129
  1552                           
  1553                           ;Laboratorio4.c: 195: MensajeLCD_Word("Inf.");
  1554   000F14  0E35               	movlw	low STR_6
  1555   000F16  6E13               	movwf	MensajeLCD_Word@a^0,c
  1556   000F18  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
  1557                           
  1558                           ;Laboratorio4.c: 196: }else{
  1559   000F1C  D0E3               	goto	l3185
  1560   000F1E                     l3129:
  1561                           
  1562                           ;Laboratorio4.c: 197: if(r==1001){
  1563   000F1E  0EE9               	movlw	233
  1564   000F20  1825               	xorwf	_r^0,w,c
  1565   000F22  E10B               	bnz	l3133
  1566   000F24  0E03               	movlw	3
  1567   000F26  1826               	xorwf	(_r+1)^0,w,c
  1568   000F28  1027               	iorwf	(_r+2)^0,w,c
  1569   000F2A  1028               	iorwf	(_r+3)^0,w,c
  1570   000F2C  A4D8               	btfss	status,2,c
  1571   000F2E  D005               	goto	l3133
  1572                           
  1573                           ;Laboratorio4.c: 198: MensajeLCD_Word("Ind.");
  1574   000F30  0E30               	movlw	low STR_7
  1575   000F32  6E13               	movwf	MensajeLCD_Word@a^0,c
  1576   000F34  ECF0  F00A         	call	_MensajeLCD_Word	;wreg free
  1577                           
  1578                           ;Laboratorio4.c: 199: }else{
  1579   000F38  D0D5               	goto	l3185
  1580   000F3A                     l3133:
  1581                           
  1582                           ;Laboratorio4.c: 200: if(r>=0xA & r!=1000 & r !=1001){
  1583   000F3A  5028               	movf	(_r+3)^0,w,c
  1584   000F3C  1027               	iorwf	(_r+2)^0,w,c
  1585   000F3E  1026               	iorwf	(_r+1)^0,w,c
  1586   000F40  E104               	bnz	u3490
  1587   000F42  0E0A               	movlw	10
  1588   000F44  5C25               	subwf	_r^0,w,c
  1589   000F46  A0D8               	btfss	status,0,c
  1590   000F48  D0C5               	goto	l3181
  1591   000F4A                     u3490:
  1592   000F4A  0EE8               	movlw	232
  1593   000F4C  1825               	xorwf	_r^0,w,c
  1594   000F4E  E106               	bnz	u3500
  1595   000F50  0E03               	movlw	3
  1596   000F52  1826               	xorwf	(_r+1)^0,w,c
  1597   000F54  1027               	iorwf	(_r+2)^0,w,c
  1598   000F56  1028               	iorwf	(_r+3)^0,w,c
  1599   000F58  B4D8               	btfsc	status,2,c
  1600   000F5A  D0BC               	goto	l3181
  1601   000F5C                     u3500:
  1602   000F5C  0EE9               	movlw	233
  1603   000F5E  1825               	xorwf	_r^0,w,c
  1604   000F60  E106               	bnz	u3510
  1605   000F62  0E03               	movlw	3
  1606   000F64  1826               	xorwf	(_r+1)^0,w,c
  1607   000F66  1027               	iorwf	(_r+2)^0,w,c
  1608   000F68  1028               	iorwf	(_r+3)^0,w,c
  1609   000F6A  B4D8               	btfsc	status,2,c
  1610   000F6C  D0B3               	goto	l3181
  1611   000F6E                     u3510:
  1612                           
  1613                           ;Laboratorio4.c: 201: for(int j=9;j>=0;j--){
  1614   000F6E  0E00               	movlw	0
  1615   000F70  6E24               	movwf	(main@j+1)^0,c
  1616   000F72  0E09               	movlw	9
  1617   000F74  6E23               	movwf	main@j^0,c
  1618   000F76                     l3141:
  1619   000F76  BE24               	btfsc	(main@j+1)^0,7,c
  1620   000F78  D0B5               	goto	l3185
  1621                           
  1622                           ;Laboratorio4.c: 202: partdecl = 10;
  1623   000F7A  0E0A               	movlw	10
  1624   000F7C  6E29               	movwf	_partdecl^0,c
  1625   000F7E  0E00               	movlw	0
  1626   000F80  6E2A               	movwf	(_partdecl+1)^0,c
  1627   000F82  0E00               	movlw	0
  1628   000F84  6E2B               	movwf	(_partdecl+2)^0,c
  1629   000F86  0E00               	movlw	0
  1630   000F88  6E2C               	movwf	(_partdecl+3)^0,c
  1631                           
  1632                           ;Laboratorio4.c: 203: for(int k=j-1;k>0;k--){
  1633   000F8A  0EFF               	movlw	255
  1634   000F8C  2423               	addwf	main@j^0,w,c
  1635   000F8E  6E1F               	movwf	main@k^0,c
  1636   000F90  0EFF               	movlw	255
  1637   000F92  2024               	addwfc	(main@j+1)^0,w,c
  1638   000F94  6E20               	movwf	(main@k+1)^0,c
  1639   000F96                     l3149:
  1640   000F96  BE20               	btfsc	(main@k+1)^0,7,c
  1641   000F98  D023               	goto	l3159
  1642   000F9A  5020               	movf	(main@k+1)^0,w,c
  1643   000F9C  E103               	bnz	l3153
  1644   000F9E  041F               	decf	main@k^0,w,c
  1645   000FA0  A0D8               	btfss	status,0,c
  1646   000FA2  D01E               	goto	l3159
  1647   000FA4                     l3153:
  1648                           
  1649                           ;Laboratorio4.c: 204: partdecl = partdecl*10;
  1650   000FA4  C029  F00E         	movff	_partdecl,___lmul@multiplier
  1651   000FA8  C02A  F00F         	movff	_partdecl+1,___lmul@multiplier+1
  1652   000FAC  C02B  F010         	movff	_partdecl+2,___lmul@multiplier+2
  1653   000FB0  C02C  F011         	movff	_partdecl+3,___lmul@multiplier+3
  1654   000FB4  0E0A               	movlw	10
  1655   000FB6  6E12               	movwf	___lmul@multiplicand^0,c
  1656   000FB8  0E00               	movlw	0
  1657   000FBA  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1658   000FBC  0E00               	movlw	0
  1659   000FBE  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1660   000FC0  0E00               	movlw	0
  1661   000FC2  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1662   000FC4  EC46  F00A         	call	___lmul	;wreg free
  1663   000FC8  C00E  F029         	movff	?___lmul,_partdecl
  1664   000FCC  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1665   000FD0  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1666   000FD4  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1667   000FD8  061F               	decf	main@k^0,f,c
  1668   000FDA  A0D8               	btfss	status,0,c
  1669   000FDC  0620               	decf	(main@k+1)^0,f,c
  1670   000FDE  D7DB               	goto	l3149
  1671   000FE0                     l3159:
  1672                           
  1673                           ;Laboratorio4.c: 205: };Laboratorio4.c: 206: if(r/partdecl>0){
  1674   000FE0  C025  F00E         	movff	_r,___lldiv@dividend
  1675   000FE4  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1676   000FE8  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1677   000FEC  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1678   000FF0  C029  F012         	movff	_partdecl,___lldiv@divisor
  1679   000FF4  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1680   000FF8  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1681   000FFC  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1682   001000  EC56  F009         	call	___lldiv	;wreg free
  1683   001004  500E               	movf	?___lldiv^0,w,c
  1684   001006  100F               	iorwf	(?___lldiv+1)^0,w,c
  1685   001008  1010               	iorwf	(?___lldiv+2)^0,w,c
  1686   00100A  1011               	iorwf	(?___lldiv+3)^0,w,c
  1687   00100C  B4D8               	btfsc	status,2,c
  1688   00100E  D033               	goto	l3167
  1689                           
  1690                           ;Laboratorio4.c: 207: flag = 1;
  1691   001010  0E01               	movlw	1
  1692   001012  6E39               	movwf	_flag^0,c
  1693                           
  1694                           ;Laboratorio4.c: 208: EscribeLCD_c(r/partdecl+48);
  1695   001014  C025  F00E         	movff	_r,___lldiv@dividend
  1696   001018  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1697   00101C  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1698   001020  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1699   001024  C029  F012         	movff	_partdecl,___lldiv@divisor
  1700   001028  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1701   00102C  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1702   001030  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1703   001034  EC56  F009         	call	___lldiv	;wreg free
  1704   001038  500E               	movf	?___lldiv^0,w,c
  1705   00103A  0F30               	addlw	48
  1706   00103C  EC0C  F00C         	call	_EscribeLCD_c
  1707                           
  1708                           ;Laboratorio4.c: 209: r=r%partdecl;
  1709   001040  C025  F00E         	movff	_r,___llmod@dividend
  1710   001044  C026  F00F         	movff	_r+1,___llmod@dividend+1
  1711   001048  C027  F010         	movff	_r+2,___llmod@dividend+2
  1712   00104C  C028  F011         	movff	_r+3,___llmod@dividend+3
  1713   001050  C029  F012         	movff	_partdecl,___llmod@divisor
  1714   001054  C02A  F013         	movff	_partdecl+1,___llmod@divisor+1
  1715   001058  C02B  F014         	movff	_partdecl+2,___llmod@divisor+2
  1716   00105C  C02C  F015         	movff	_partdecl+3,___llmod@divisor+3
  1717   001060  EC13  F00A         	call	___llmod	;wreg free
  1718   001064  C00E  F025         	movff	?___llmod,_r
  1719   001068  C00F  F026         	movff	?___llmod+1,_r+1
  1720   00106C  C010  F027         	movff	?___llmod+2,_r+2
  1721   001070  C011  F028         	movff	?___llmod+3,_r+3
  1722                           
  1723                           ;Laboratorio4.c: 210: }else if( (r/partdecl)==0 && flag){
  1724   001074  D02B               	goto	l3177
  1725   001076                     l3167:
  1726   001076  C025  F00E         	movff	_r,___lldiv@dividend
  1727   00107A  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1728   00107E  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1729   001082  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1730   001086  C029  F012         	movff	_partdecl,___lldiv@divisor
  1731   00108A  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1732   00108E  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1733   001092  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1734   001096  EC56  F009         	call	___lldiv	;wreg free
  1735   00109A  500E               	movf	?___lldiv^0,w,c
  1736   00109C  100F               	iorwf	(?___lldiv+1)^0,w,c
  1737   00109E  1010               	iorwf	(?___lldiv+2)^0,w,c
  1738   0010A0  1011               	iorwf	(?___lldiv+3)^0,w,c
  1739   0010A2  A4D8               	btfss	status,2,c
  1740   0010A4  D013               	goto	l3177
  1741   0010A6  5039               	movf	_flag^0,w,c
  1742   0010A8  B4D8               	btfsc	status,2,c
  1743   0010AA  D010               	goto	l3177
  1744                           
  1745                           ;Laboratorio4.c: 211: if(r<10) EscribeLCD_c(r+48);
  1746   0010AC  5028               	movf	(_r+3)^0,w,c
  1747   0010AE  1027               	iorwf	(_r+2)^0,w,c
  1748   0010B0  1026               	iorwf	(_r+1)^0,w,c
  1749   0010B2  E109               	bnz	l3175
  1750   0010B4  0E0A               	movlw	10
  1751   0010B6  5C25               	subwf	_r^0,w,c
  1752   0010B8  B0D8               	btfsc	status,0,c
  1753   0010BA  D005               	goto	l3175
  1754   0010BC  5025               	movf	_r^0,w,c
  1755   0010BE  0F30               	addlw	48
  1756   0010C0  EC0C  F00C         	call	_EscribeLCD_c
  1757   0010C4  D003               	goto	l3177
  1758   0010C6                     l3175:
  1759                           
  1760                           ;Laboratorio4.c: 212: else EscribeLCD_c(48);
  1761   0010C6  0E30               	movlw	48
  1762   0010C8  EC0C  F00C         	call	_EscribeLCD_c
  1763   0010CC                     l3177:
  1764   0010CC  0623               	decf	main@j^0,f,c
  1765   0010CE  A0D8               	btfss	status,0,c
  1766   0010D0  0624               	decf	(main@j+1)^0,f,c
  1767   0010D2  D751               	goto	l3141
  1768   0010D4                     l3181:
  1769                           
  1770                           ;Laboratorio4.c: 216: EscribeLCD_c(r+'0');
  1771   0010D4  5025               	movf	_r^0,w,c
  1772   0010D6  0F30               	addlw	48
  1773   0010D8  EC0C  F00C         	call	_EscribeLCD_c
  1774   0010DC  D003               	goto	l3185
  1775   0010DE                     l3183:
  1776                           
  1777                           ;Laboratorio4.c: 222: EscribeLCD_c(' ');
  1778   0010DE  0E20               	movlw	32
  1779   0010E0  EC0C  F00C         	call	_EscribeLCD_c
  1780   0010E4                     l3185:
  1781                           
  1782                           ;Laboratorio4.c: 223: };Laboratorio4.c: 224: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1783   0010E4  0EE4               	movlw	228
  1784   0010E6  6E1B               	movwf	??_main^0,c
  1785   0010E8  0E44               	movlw	68
  1786   0010EA                     u3607:
  1787   0010EA  2EE8               	decfsz	wreg,f,c
  1788   0010EC  D7FE               	bra	u3607
  1789   0010EE  2E1B               	decfsz	??_main^0,f,c
  1790   0010F0  D7FC               	bra	u3607
  1791   0010F2  D000               	nop2	
  1792   0010F4  D415               	goto	l2881
  1793   0010F6                     __end_of_main:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function ___wmul *****************
  1797 ;; Defined at:
  1798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  multiplier      2   13[COMRAM] unsigned int 
  1801 ;;  multiplicand    2   15[COMRAM] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  product         2   17[COMRAM] unsigned int 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2   13[COMRAM] unsigned int 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, prodl, prodh
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1813 ;;      Params:         4       0       0       0       0       0       0       0       0
  1814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1816 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1817 ;;Total ram usage:        6 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 5
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text1
  1828   0017F2                     __ptext1:
  1829                           	callstack 0
  1830   0017F2                     ___wmul:
  1831                           	callstack 25
  1832                           
  1833                           ;incstack = 0
  1834   0017F2  500E               	movf	___wmul@multiplier^0,w,c
  1835   0017F4  0210               	mulwf	___wmul@multiplicand^0,c
  1836   0017F6  CFF3 F012          	movff	prodl,___wmul@product
  1837   0017FA  CFF4 F013          	movff	prodh,___wmul@product+1
  1838   0017FE  500E               	movf	___wmul@multiplier^0,w,c
  1839   001800  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  1840   001802  50F3               	movf	243,w,c
  1841   001804  2613               	addwf	(___wmul@product+1)^0,f,c
  1842   001806  500F               	movf	(___wmul@multiplier+1)^0,w,c
  1843   001808  0210               	mulwf	___wmul@multiplicand^0,c
  1844   00180A  50F3               	movf	243,w,c
  1845   00180C  2613               	addwf	(___wmul@product+1)^0,f,c
  1846   00180E  C012  F00E         	movff	___wmul@product,?___wmul
  1847   001812  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  1848   001816  0012               	return		;funcret
  1849   001818                     __end_of___wmul:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function ___lwmod *****************
  1853 ;; Defined at:
  1854 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  dividend        2   13[COMRAM] unsigned int 
  1857 ;;  divisor         2   15[COMRAM] unsigned int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  counter         1   17[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2   13[COMRAM] unsigned int 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         4       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        5 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 5
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text2
  1884   001708                     __ptext2:
  1885                           	callstack 0
  1886   001708                     ___lwmod:
  1887                           	callstack 25
  1888                           
  1889                           ;incstack = 0
  1890   001708  5010               	movf	___lwmod@divisor^0,w,c
  1891   00170A  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1892   00170C  B4D8               	btfsc	status,2,c
  1893   00170E  D018               	goto	l801
  1894   001710  0E01               	movlw	1
  1895   001712  6E12               	movwf	___lwmod@counter^0,c
  1896   001714  D004               	goto	l2395
  1897   001716                     l2393:
  1898   001716  90D8               	bcf	status,0,c
  1899   001718  3610               	rlcf	___lwmod@divisor^0,f,c
  1900   00171A  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1901   00171C  2A12               	incf	___lwmod@counter^0,f,c
  1902   00171E                     l2395:
  1903   00171E  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1904   001720  D7FA               	goto	l2393
  1905   001722                     u1950:
  1906   001722  5010               	movf	___lwmod@divisor^0,w,c
  1907   001724  5C0E               	subwf	___lwmod@dividend^0,w,c
  1908   001726  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1909   001728  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1910   00172A  A0D8               	btfss	status,0,c
  1911   00172C  D004               	goto	l2401
  1912   00172E  5010               	movf	___lwmod@divisor^0,w,c
  1913   001730  5E0E               	subwf	___lwmod@dividend^0,f,c
  1914   001732  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1915   001734  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1916   001736                     l2401:
  1917   001736  90D8               	bcf	status,0,c
  1918   001738  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1919   00173A  3210               	rrcf	___lwmod@divisor^0,f,c
  1920   00173C  2E12               	decfsz	___lwmod@counter^0,f,c
  1921   00173E  D7F1               	goto	u1950
  1922   001740                     l801:
  1923   001740  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1924   001744  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1925   001748  0012               	return		;funcret
  1926   00174A                     __end_of___lwmod:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function ___lwdiv *****************
  1930 ;; Defined at:
  1931 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  dividend        2   19[COMRAM] unsigned int 
  1934 ;;  divisor         2   21[COMRAM] unsigned int 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  quotient        2   23[COMRAM] unsigned int 
  1937 ;;  counter         1   25[COMRAM] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  2   19[COMRAM] unsigned int 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         4       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        7 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 5
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text3
  1962   00158E                     __ptext3:
  1963                           	callstack 0
  1964   00158E                     ___lwdiv:
  1965                           	callstack 25
  1966                           
  1967                           ;incstack = 0
  1968   00158E  0E00               	movlw	0
  1969   001590  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  1970   001592  0E00               	movlw	0
  1971   001594  6E18               	movwf	___lwdiv@quotient^0,c
  1972   001596  5016               	movf	___lwdiv@divisor^0,w,c
  1973   001598  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1974   00159A  B4D8               	btfsc	status,2,c
  1975   00159C  D01C               	goto	l791
  1976   00159E  0E01               	movlw	1
  1977   0015A0  6E1A               	movwf	___lwdiv@counter^0,c
  1978   0015A2  D004               	goto	l2375
  1979   0015A4                     l2373:
  1980   0015A4  90D8               	bcf	status,0,c
  1981   0015A6  3616               	rlcf	___lwdiv@divisor^0,f,c
  1982   0015A8  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1983   0015AA  2A1A               	incf	___lwdiv@counter^0,f,c
  1984   0015AC                     l2375:
  1985   0015AC  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1986   0015AE  D7FA               	goto	l2373
  1987   0015B0                     u1920:
  1988   0015B0  90D8               	bcf	status,0,c
  1989   0015B2  3618               	rlcf	___lwdiv@quotient^0,f,c
  1990   0015B4  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1991   0015B6  5016               	movf	___lwdiv@divisor^0,w,c
  1992   0015B8  5C14               	subwf	___lwdiv@dividend^0,w,c
  1993   0015BA  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1994   0015BC  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1995   0015BE  A0D8               	btfss	status,0,c
  1996   0015C0  D005               	goto	l2385
  1997   0015C2  5016               	movf	___lwdiv@divisor^0,w,c
  1998   0015C4  5E14               	subwf	___lwdiv@dividend^0,f,c
  1999   0015C6  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2000   0015C8  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2001   0015CA  8018               	bsf	___lwdiv@quotient^0,0,c
  2002   0015CC                     l2385:
  2003   0015CC  90D8               	bcf	status,0,c
  2004   0015CE  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2005   0015D0  3216               	rrcf	___lwdiv@divisor^0,f,c
  2006   0015D2  2E1A               	decfsz	___lwdiv@counter^0,f,c
  2007   0015D4  D7ED               	goto	u1920
  2008   0015D6                     l791:
  2009   0015D6  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  2010   0015DA  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2011   0015DE  0012               	return		;funcret
  2012   0015E0                     __end_of___lwdiv:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function ___lmul *****************
  2016 ;; Defined at:
  2017 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  multiplier      4   13[COMRAM] unsigned long 
  2020 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  product         4   21[COMRAM] unsigned long 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  4   13[COMRAM] unsigned long 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2032 ;;      Params:         8       0       0       0       0       0       0       0       0
  2033 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2035 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2036 ;;Total ram usage:       12 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 5
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text4
  2047   00148C                     __ptext4:
  2048                           	callstack 0
  2049   00148C                     ___lmul:
  2050                           	callstack 25
  2051                           
  2052                           ;incstack = 0
  2053   00148C  0E00               	movlw	0
  2054   00148E  6E16               	movwf	___lmul@product^0,c
  2055   001490  0E00               	movlw	0
  2056   001492  6E17               	movwf	(___lmul@product+1)^0,c
  2057   001494  0E00               	movlw	0
  2058   001496  6E18               	movwf	(___lmul@product+2)^0,c
  2059   001498  0E00               	movlw	0
  2060   00149A  6E19               	movwf	(___lmul@product+3)^0,c
  2061   00149C                     l2321:
  2062   00149C  A00E               	btfss	___lmul@multiplier^0,0,c
  2063   00149E  D008               	goto	l2325
  2064   0014A0  5012               	movf	___lmul@multiplicand^0,w,c
  2065   0014A2  2616               	addwf	___lmul@product^0,f,c
  2066   0014A4  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2067   0014A6  2217               	addwfc	(___lmul@product+1)^0,f,c
  2068   0014A8  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2069   0014AA  2218               	addwfc	(___lmul@product+2)^0,f,c
  2070   0014AC  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2071   0014AE  2219               	addwfc	(___lmul@product+3)^0,f,c
  2072   0014B0                     l2325:
  2073   0014B0  90D8               	bcf	status,0,c
  2074   0014B2  3612               	rlcf	___lmul@multiplicand^0,f,c
  2075   0014B4  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2076   0014B6  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2077   0014B8  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2078   0014BA  90D8               	bcf	status,0,c
  2079   0014BC  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2080   0014BE  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2081   0014C0  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2082   0014C2  320E               	rrcf	___lmul@multiplier^0,f,c
  2083   0014C4  500E               	movf	___lmul@multiplier^0,w,c
  2084   0014C6  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2085   0014C8  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2086   0014CA  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2087   0014CC  A4D8               	btfss	status,2,c
  2088   0014CE  D7E6               	goto	l2321
  2089   0014D0  C016  F00E         	movff	___lmul@product,?___lmul
  2090   0014D4  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2091   0014D8  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2092   0014DC  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2093   0014E0  0012               	return		;funcret
  2094   0014E2                     __end_of___lmul:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function ___llmod *****************
  2098 ;; Defined at:
  2099 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  dividend        4   13[COMRAM] unsigned long 
  2102 ;;  divisor         4   17[COMRAM] unsigned long 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  counter         1   21[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  4   13[COMRAM] unsigned long 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         8       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        9 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 5
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text5
  2129   001426                     __ptext5:
  2130                           	callstack 0
  2131   001426                     ___llmod:
  2132                           	callstack 25
  2133                           
  2134                           ;incstack = 0
  2135   001426  5012               	movf	___llmod@divisor^0,w,c
  2136   001428  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2137   00142A  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2138   00142C  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2139   00142E  B4D8               	btfsc	status,2,c
  2140   001430  D024               	goto	l720
  2141   001432  0E01               	movlw	1
  2142   001434  6E16               	movwf	___llmod@counter^0,c
  2143   001436  D006               	goto	l2357
  2144   001438                     l2355:
  2145   001438  90D8               	bcf	status,0,c
  2146   00143A  3612               	rlcf	___llmod@divisor^0,f,c
  2147   00143C  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2148   00143E  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2149   001440  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2150   001442  2A16               	incf	___llmod@counter^0,f,c
  2151   001444                     l2357:
  2152   001444  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2153   001446  D7F8               	goto	l2355
  2154   001448                     u1890:
  2155   001448  5012               	movf	___llmod@divisor^0,w,c
  2156   00144A  5C0E               	subwf	___llmod@dividend^0,w,c
  2157   00144C  5013               	movf	(___llmod@divisor+1)^0,w,c
  2158   00144E  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2159   001450  5014               	movf	(___llmod@divisor+2)^0,w,c
  2160   001452  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2161   001454  5015               	movf	(___llmod@divisor+3)^0,w,c
  2162   001456  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2163   001458  A0D8               	btfss	status,0,c
  2164   00145A  D008               	goto	l2363
  2165   00145C  5012               	movf	___llmod@divisor^0,w,c
  2166   00145E  5E0E               	subwf	___llmod@dividend^0,f,c
  2167   001460  5013               	movf	(___llmod@divisor+1)^0,w,c
  2168   001462  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2169   001464  5014               	movf	(___llmod@divisor+2)^0,w,c
  2170   001466  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2171   001468  5015               	movf	(___llmod@divisor+3)^0,w,c
  2172   00146A  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2173   00146C                     l2363:
  2174   00146C  90D8               	bcf	status,0,c
  2175   00146E  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2176   001470  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2177   001472  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2178   001474  3212               	rrcf	___llmod@divisor^0,f,c
  2179   001476  2E16               	decfsz	___llmod@counter^0,f,c
  2180   001478  D7E7               	goto	u1890
  2181   00147A                     l720:
  2182   00147A  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2183   00147E  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2184   001482  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2185   001486  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2186   00148A  0012               	return		;funcret
  2187   00148C                     __end_of___llmod:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function ___lldiv *****************
  2191 ;; Defined at:
  2192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dividend        4   13[COMRAM] unsigned long 
  2195 ;;  divisor         4   17[COMRAM] unsigned long 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  quotient        4   21[COMRAM] unsigned long 
  2198 ;;  counter         1   25[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  4   13[COMRAM] unsigned long 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2208 ;;      Params:         8       0       0       0       0       0       0       0       0
  2209 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2211 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2212 ;;Total ram usage:       13 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 5
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text6
  2223   0012AC                     __ptext6:
  2224                           	callstack 0
  2225   0012AC                     ___lldiv:
  2226                           	callstack 25
  2227                           
  2228                           ;incstack = 0
  2229   0012AC  0E00               	movlw	0
  2230   0012AE  6E16               	movwf	___lldiv@quotient^0,c
  2231   0012B0  0E00               	movlw	0
  2232   0012B2  6E17               	movwf	(___lldiv@quotient+1)^0,c
  2233   0012B4  0E00               	movlw	0
  2234   0012B6  6E18               	movwf	(___lldiv@quotient+2)^0,c
  2235   0012B8  0E00               	movlw	0
  2236   0012BA  6E19               	movwf	(___lldiv@quotient+3)^0,c
  2237   0012BC  5012               	movf	___lldiv@divisor^0,w,c
  2238   0012BE  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  2239   0012C0  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  2240   0012C2  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  2241   0012C4  B4D8               	btfsc	status,2,c
  2242   0012C6  D02A               	goto	l339
  2243   0012C8  0E01               	movlw	1
  2244   0012CA  6E1A               	movwf	___lldiv@counter^0,c
  2245   0012CC  D006               	goto	l2337
  2246   0012CE                     l2335:
  2247   0012CE  90D8               	bcf	status,0,c
  2248   0012D0  3612               	rlcf	___lldiv@divisor^0,f,c
  2249   0012D2  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  2250   0012D4  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  2251   0012D6  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  2252   0012D8  2A1A               	incf	___lldiv@counter^0,f,c
  2253   0012DA                     l2337:
  2254   0012DA  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  2255   0012DC  D7F8               	goto	l2335
  2256   0012DE                     u1860:
  2257   0012DE  90D8               	bcf	status,0,c
  2258   0012E0  3616               	rlcf	___lldiv@quotient^0,f,c
  2259   0012E2  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  2260   0012E4  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  2261   0012E6  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  2262   0012E8  5012               	movf	___lldiv@divisor^0,w,c
  2263   0012EA  5C0E               	subwf	___lldiv@dividend^0,w,c
  2264   0012EC  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2265   0012EE  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  2266   0012F0  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2267   0012F2  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  2268   0012F4  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2269   0012F6  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  2270   0012F8  A0D8               	btfss	status,0,c
  2271   0012FA  D009               	goto	l2347
  2272   0012FC  5012               	movf	___lldiv@divisor^0,w,c
  2273   0012FE  5E0E               	subwf	___lldiv@dividend^0,f,c
  2274   001300  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2275   001302  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  2276   001304  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2277   001306  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  2278   001308  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2279   00130A  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  2280   00130C  8016               	bsf	___lldiv@quotient^0,0,c
  2281   00130E                     l2347:
  2282   00130E  90D8               	bcf	status,0,c
  2283   001310  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  2284   001312  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  2285   001314  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  2286   001316  3212               	rrcf	___lldiv@divisor^0,f,c
  2287   001318  2E1A               	decfsz	___lldiv@counter^0,f,c
  2288   00131A  D7E1               	goto	u1860
  2289   00131C                     l339:
  2290   00131C  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  2291   001320  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  2292   001324  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  2293   001328  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  2294   00132C  0012               	return		;funcret
  2295   00132E                     __end_of___lldiv:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _NuevoCaracter *****************
  2299 ;; Defined at:
  2300 ;;		line 143 in file "LibLCDXC8.h"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  addr            1    wreg     unsigned char 
  2303 ;;  c               1   18[COMRAM] PTR unsigned char 
  2304 ;;		 -> heart(8), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  addr            1   19[COMRAM] unsigned char 
  2307 ;;  i               2   20[COMRAM] int 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2317 ;;      Params:         1       0       0       0       0       0       0       0       0
  2318 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2320 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 8
  2324 ;; This function calls:
  2325 ;;		_ComandoLCD
  2326 ;;		_EscribeLCD_c
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text7
  2333   00174A                     __ptext7:
  2334                           	callstack 0
  2335   00174A                     _NuevoCaracter:
  2336                           	callstack 22
  2337                           
  2338                           ;incstack = 0
  2339                           ;NuevoCaracter@addr stored from wreg
  2340   00174A  6E14               	movwf	NuevoCaracter@addr^0,c
  2341                           
  2342                           ;LibLCDXC8.h: 144: int i;;LibLCDXC8.h: 145: ComandoLCD(0x40 + (addr * 8));
  2343   00174C  5014               	movf	NuevoCaracter@addr^0,w,c
  2344   00174E  0D08               	mullw	8
  2345   001750  50F3               	movf	243,w,c
  2346   001752  0F40               	addlw	64
  2347   001754  ECE0  F00B         	call	_ComandoLCD
  2348                           
  2349                           ;LibLCDXC8.h: 146: for (i = 0; i < 8; i++) {
  2350   001758  0E00               	movlw	0
  2351   00175A  6E16               	movwf	(NuevoCaracter@i+1)^0,c
  2352   00175C  0E00               	movlw	0
  2353   00175E  6E15               	movwf	NuevoCaracter@i^0,c
  2354   001760                     l2821:
  2355                           
  2356                           ;LibLCDXC8.h: 147: EscribeLCD_c(c[i]);
  2357   001760  5013               	movf	NuevoCaracter@c^0,w,c
  2358   001762  2415               	addwf	NuevoCaracter@i^0,w,c
  2359   001764  6ED9               	movwf	fsr2l,c
  2360   001766  6ADA               	clrf	fsr2h,c
  2361   001768  50DF               	movf	indf2,w,c
  2362   00176A  EC0C  F00C         	call	_EscribeLCD_c
  2363   00176E  4A15               	infsnz	NuevoCaracter@i^0,f,c
  2364   001770  2A16               	incf	(NuevoCaracter@i+1)^0,f,c
  2365   001772  BE16               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2366   001774  D7F5               	goto	l2821
  2367   001776  5016               	movf	(NuevoCaracter@i+1)^0,w,c
  2368   001778  E105               	bnz	u2810
  2369   00177A  0E08               	movlw	8
  2370   00177C  5C15               	subwf	NuevoCaracter@i^0,w,c
  2371   00177E  B0D8               	btfsc	status,0,c
  2372   001780  0012               	return	
  2373   001782  D7EE               	goto	l2821
  2374   001784                     u2810:
  2375   001784  0012               	return		;funcret
  2376   001786                     __end_of_NuevoCaracter:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _ComandoLCD *****************
  2380 ;; Defined at:
  2381 ;;		line 127 in file "LibLCDXC8.h"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  data            1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  data            1   14[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2398 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        2 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 5
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_NuevoCaracter
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text8
  2410   0017C0                     __ptext8:
  2411                           	callstack 0
  2412   0017C0                     _ComandoLCD:
  2413                           	callstack 24
  2414                           
  2415                           ;incstack = 0
  2416                           ;ComandoLCD@data stored from wreg
  2417   0017C0  6E0F               	movwf	ComandoLCD@data^0,c
  2418                           
  2419                           ;LibLCDXC8.h: 129: LATE0 = 0;
  2420   0017C2  908D               	bcf	3981,0,c	;volatile
  2421                           
  2422                           ;LibLCDXC8.h: 130: LATD = data & 0xF0;
  2423   0017C4  500F               	movf	ComandoLCD@data^0,w,c
  2424   0017C6  0BF0               	andlw	240
  2425   0017C8  6E8C               	movwf	140,c	;volatile
  2426                           
  2427                           ;LibLCDXC8.h: 131: LATE1 = 1;
  2428   0017CA  828D               	bsf	3981,1,c	;volatile
  2429                           
  2430                           ;LibLCDXC8.h: 132: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2431   0017CC  F000               	nop	
  2432                           
  2433                           ;LibLCDXC8.h: 133: LATE1 = 0;
  2434   0017CE  928D               	bcf	3981,1,c	;volatile
  2435                           
  2436                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2437   0017D0  F000               	nop	
  2438                           
  2439                           ;LibLCDXC8.h: 135: LATD = ((data & 0x0F) << 4);
  2440   0017D2  C00F  F00E         	movff	ComandoLCD@data,??_ComandoLCD
  2441   0017D6  0E0F               	movlw	15
  2442   0017D8  160E               	andwf	??_ComandoLCD^0,f,c
  2443   0017DA  380E               	swapf	??_ComandoLCD^0,w,c
  2444   0017DC  0BF0               	andlw	240
  2445   0017DE  6E8C               	movwf	140,c	;volatile
  2446                           
  2447                           ;LibLCDXC8.h: 136: LATE1 = 1;
  2448   0017E0  828D               	bsf	3981,1,c	;volatile
  2449                           
  2450                           ;LibLCDXC8.h: 137: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2451   0017E2  F000               	nop	
  2452                           
  2453                           ;LibLCDXC8.h: 138: LATE1 = 0;
  2454   0017E4  928D               	bcf	3981,1,c	;volatile
  2455                           
  2456                           ;LibLCDXC8.h: 139: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2457   0017E6  F000               	nop	
  2458                           
  2459                           ;LibLCDXC8.h: 140: _delay((unsigned long)((2)*(1000000/4000.0)));
  2460   0017E8  0EA6               	movlw	166
  2461   0017EA                     u3617:
  2462   0017EA  2EE8               	decfsz	wreg,f,c
  2463   0017EC  D7FE               	bra	u3617
  2464   0017EE  D000               	nop2	
  2465   0017F0  0012               	return		;funcret
  2466   0017F2                     __end_of_ComandoLCD:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _MensajeLCD_Word *****************
  2470 ;; Defined at:
  2471 ;;		line 250 in file "LibLCDXC8.h"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  a               1   18[COMRAM] PTR unsigned char 
  2474 ;;		 -> STR_8(11), STR_7(5), STR_6(5), STR_5(17), 
  2475 ;;		 -> STR_4(17), STR_3(11), STR_2(5), STR_1(8), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  i               2   20[COMRAM] int 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2487 ;;      Params:         1       0       0       0       0       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2489 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2490 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2491 ;;Total ram usage:        4 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 8
  2494 ;; This function calls:
  2495 ;;		_EscribeLCD_c
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text9
  2502   0015E0                     __ptext9:
  2503                           	callstack 0
  2504   0015E0                     _MensajeLCD_Word:
  2505                           	callstack 22
  2506                           
  2507                           ;LibLCDXC8.h: 254: for(int i = 0; i<16; i++){
  2508                           
  2509                           ;incstack = 0
  2510   0015E0  0E00               	movlw	0
  2511   0015E2  6E16               	movwf	(MensajeLCD_Word@i+1)^0,c
  2512   0015E4  0E00               	movlw	0
  2513   0015E6  6E15               	movwf	MensajeLCD_Word@i^0,c
  2514   0015E8                     l2123:
  2515                           
  2516                           ;LibLCDXC8.h: 255: if(a[i] == (0)){
  2517   0015E8  5013               	movf	MensajeLCD_Word@a^0,w,c
  2518   0015EA  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2519   0015EC  6E14               	movwf	??_MensajeLCD_Word^0,c
  2520   0015EE  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2521   0015F2                     	if	1	;There is more than 1 active tblptr byte
  2522   0015F2  0E08               	movlw	high __smallconst
  2523   0015F4  6EF7               	movwf	tblptrh,c
  2524   0015F6                     	endif
  2525   0015F6                     	if	0	;tblptru may be non-zero
  2526   0015F6                     	endif
  2527   0015F6                     	if	0	;tblptru may be non-zero
  2528   0015F6                     	endif
  2529   0015F6  0008               	tblrd		*
  2530   0015F8  50F5               	movf	tablat,w,c
  2531   0015FA  0900               	iorlw	0
  2532   0015FC  B4D8               	btfsc	status,2,c
  2533   0015FE  0012               	return	
  2534                           
  2535                           ;LibLCDXC8.h: 257: };LibLCDXC8.h: 258: EscribeLCD_c(a[i]);
  2536   001600  5013               	movf	MensajeLCD_Word@a^0,w,c
  2537   001602  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2538   001604  6E14               	movwf	??_MensajeLCD_Word^0,c
  2539   001606  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2540   00160A                     	if	1	;There is more than 1 active tblptr byte
  2541   00160A  0E08               	movlw	high __smallconst
  2542   00160C  6EF7               	movwf	tblptrh,c
  2543   00160E                     	endif
  2544   00160E                     	if	0	;tblptru may be non-zero
  2545   00160E                     	endif
  2546   00160E                     	if	0	;tblptru may be non-zero
  2547   00160E                     	endif
  2548   00160E  0008               	tblrd		*
  2549   001610  50F5               	movf	tablat,w,c
  2550   001612  EC0C  F00C         	call	_EscribeLCD_c
  2551   001616  4A15               	infsnz	MensajeLCD_Word@i^0,f,c
  2552   001618  2A16               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2553   00161A  BE16               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2554   00161C  D7E5               	goto	l2123
  2555   00161E  5016               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2556   001620  E105               	bnz	u1510
  2557   001622  0E10               	movlw	16
  2558   001624  5C15               	subwf	MensajeLCD_Word@i^0,w,c
  2559   001626  B0D8               	btfsc	status,0,c
  2560   001628  0012               	return	
  2561   00162A  D7DE               	goto	l2123
  2562   00162C                     u1510:
  2563   00162C  0012               	return		;funcret
  2564   00162E                     __end_of_MensajeLCD_Word:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _EscribeLCD_c *****************
  2568 ;; Defined at:
  2569 ;;		line 151 in file "LibLCDXC8.h"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  a               1    wreg     unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  a               1   17[COMRAM] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0
  2584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2586 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        1 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 7
  2590 ;; This function calls:
  2591 ;;		_EnviaDato
  2592 ;;		_HabilitaLCD
  2593 ;;		_RetardoLCD
  2594 ;; This function is called by:
  2595 ;;		_NuevoCaracter
  2596 ;;		_MensajeLCD_Word
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text10
  2602   001818                     __ptext10:
  2603                           	callstack 0
  2604   001818                     _EscribeLCD_c:
  2605                           	callstack 22
  2606                           
  2607                           ;incstack = 0
  2608                           ;EscribeLCD_c@a stored from wreg
  2609   001818  6E12               	movwf	EscribeLCD_c@a^0,c
  2610                           
  2611                           ;LibLCDXC8.h: 155: LATE0=1;
  2612   00181A  808D               	bsf	3981,0,c	;volatile
  2613                           
  2614                           ;LibLCDXC8.h: 156: EnviaDato(a);
  2615   00181C  5012               	movf	EscribeLCD_c@a^0,w,c
  2616   00181E  EC3E  F00B         	call	_EnviaDato
  2617                           
  2618                           ;LibLCDXC8.h: 157: HabilitaLCD();
  2619   001822  EC41  F00C         	call	_HabilitaLCD	;wreg free
  2620                           
  2621                           ;LibLCDXC8.h: 158: RetardoLCD(4);
  2622   001826  0E04               	movlw	4
  2623   001828  EC71  F00A         	call	_RetardoLCD
  2624   00182C  0012               	return		;funcret
  2625   00182E                     __end_of_EscribeLCD_c:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _LeerTeclado *****************
  2629 ;; Defined at:
  2630 ;;		line 230 in file "Laboratorio4.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2646 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2647 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2648 ;;Total ram usage:        1 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 5
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text11
  2659   0010F6                     __ptext11:
  2660                           	callstack 0
  2661   0010F6                     _LeerTeclado:
  2662                           	callstack 25
  2663                           
  2664                           ;Laboratorio4.c: 231: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2665                           
  2666                           ;incstack = 0
  2667   0010F6  B881               	btfsc	3969,4,c	;volatile
  2668   0010F8  AA81               	btfss	3969,5,c	;volatile
  2669   0010FA  D004               	goto	u1550
  2670   0010FC  AC81               	btfss	3969,6,c	;volatile
  2671   0010FE  D002               	goto	u1550
  2672   001100  BE81               	btfsc	3969,7,c	;volatile
  2673   001102  D7F9               	goto	__ptext11
  2674   001104                     u1550:
  2675                           
  2676                           ;Laboratorio4.c: 232: verificador = 1;
  2677   001104  0E00               	movlw	0
  2678   001106  6E2E               	movwf	(_verificador+1)^0,c
  2679   001108  0E01               	movlw	1
  2680   00110A  6E2D               	movwf	_verificador^0,c
  2681                           
  2682                           ;Laboratorio4.c: 233: LATB=0b11111110;
  2683   00110C  0EFE               	movlw	254
  2684   00110E  6E8A               	movwf	138,c	;volatile
  2685                           
  2686                           ;Laboratorio4.c: 234: if(RB4==0) return '1';
  2687   001110  B881               	btfsc	3969,4,c	;volatile
  2688   001112  D002               	goto	l246
  2689   001114  0E31               	movlw	49
  2690   001116  0012               	return	
  2691   001118                     l246:
  2692                           
  2693                           ;Laboratorio4.c: 235: else if(RB5==0) return '2';
  2694   001118  BA81               	btfsc	3969,5,c	;volatile
  2695   00111A  D002               	goto	l249
  2696   00111C  0E32               	movlw	50
  2697   00111E  0012               	return	
  2698   001120                     l249:
  2699                           
  2700                           ;Laboratorio4.c: 236: else if(RB6==0) return '3';
  2701   001120  BC81               	btfsc	3969,6,c	;volatile
  2702   001122  D002               	goto	l2171
  2703   001124  0E33               	movlw	51
  2704   001126  0012               	return	
  2705   001128                     l2171:
  2706                           
  2707                           ;Laboratorio4.c: 237: else if(RB7==0 & RC6==0) return '+';
  2708   001128  BC82               	btfsc	3970,6,c	;volatile
  2709   00112A  D002               	goto	u1590
  2710   00112C  0E01               	movlw	1
  2711   00112E  D001               	goto	u1592
  2712   001130                     u1590:
  2713   001130  0E00               	movlw	0
  2714   001132                     u1592:
  2715   001132  6E0E               	movwf	??_LeerTeclado^0,c
  2716   001134  BE81               	btfsc	3969,7,c	;volatile
  2717   001136  D002               	goto	u1600
  2718   001138  0E01               	movlw	1
  2719   00113A  D001               	goto	u1602
  2720   00113C                     u1600:
  2721   00113C  0E00               	movlw	0
  2722   00113E                     u1602:
  2723   00113E  140E               	andwf	??_LeerTeclado^0,w,c
  2724   001140  A0E8               	btfss	wreg,0,c
  2725   001142  D002               	goto	l2179
  2726   001144  0E2B               	movlw	43
  2727   001146  0012               	return	
  2728   001148                     l2179:
  2729                           
  2730                           ;Laboratorio4.c: 238: else if(RB7==0 & RC6==1) return '!';
  2731   001148  AC82               	btfss	3970,6,c	;volatile
  2732   00114A  D002               	goto	u1620
  2733   00114C  0E01               	movlw	1
  2734   00114E  D001               	goto	u1622
  2735   001150                     u1620:
  2736   001150  0E00               	movlw	0
  2737   001152                     u1622:
  2738   001152  6E0E               	movwf	??_LeerTeclado^0,c
  2739   001154  BE81               	btfsc	3969,7,c	;volatile
  2740   001156  D002               	goto	u1630
  2741   001158  0E01               	movlw	1
  2742   00115A  D001               	goto	u1632
  2743   00115C                     u1630:
  2744   00115C  0E00               	movlw	0
  2745   00115E                     u1632:
  2746   00115E  140E               	andwf	??_LeerTeclado^0,w,c
  2747   001160  A0E8               	btfss	wreg,0,c
  2748   001162  D002               	goto	l2187
  2749   001164  0E21               	movlw	33
  2750   001166  0012               	return	
  2751   001168                     l2187:
  2752                           
  2753                           ;Laboratorio4.c: 239: else{;Laboratorio4.c: 240: LATB=0b11111101;
  2754   001168  0EFD               	movlw	253
  2755   00116A  6E8A               	movwf	138,c	;volatile
  2756                           
  2757                           ;Laboratorio4.c: 241: if(RB4==0) return '4';
  2758   00116C  B881               	btfsc	3969,4,c	;volatile
  2759   00116E  D002               	goto	l257
  2760   001170  0E34               	movlw	52
  2761   001172  0012               	return	
  2762   001174                     l257:
  2763                           
  2764                           ;Laboratorio4.c: 242: else if(RB5==0) return '5';
  2765   001174  BA81               	btfsc	3969,5,c	;volatile
  2766   001176  D002               	goto	l259
  2767   001178  0E35               	movlw	53
  2768   00117A  0012               	return	
  2769   00117C                     l259:
  2770                           
  2771                           ;Laboratorio4.c: 243: else if(RB6==0) return '6';
  2772   00117C  BC81               	btfsc	3969,6,c	;volatile
  2773   00117E  D002               	goto	l2209
  2774   001180  0E36               	movlw	54
  2775   001182  0012               	return	
  2776   001184                     l2209:
  2777                           
  2778                           ;Laboratorio4.c: 244: else if(RB7==0 & RC6==0) return '-';
  2779   001184  BC82               	btfsc	3970,6,c	;volatile
  2780   001186  D002               	goto	u1680
  2781   001188  0E01               	movlw	1
  2782   00118A  D001               	goto	u1682
  2783   00118C                     u1680:
  2784   00118C  0E00               	movlw	0
  2785   00118E                     u1682:
  2786   00118E  6E0E               	movwf	??_LeerTeclado^0,c
  2787   001190  BE81               	btfsc	3969,7,c	;volatile
  2788   001192  D002               	goto	u1690
  2789   001194  0E01               	movlw	1
  2790   001196  D001               	goto	u1692
  2791   001198                     u1690:
  2792   001198  0E00               	movlw	0
  2793   00119A                     u1692:
  2794   00119A  140E               	andwf	??_LeerTeclado^0,w,c
  2795   00119C  A0E8               	btfss	wreg,0,c
  2796   00119E  D002               	goto	l2217
  2797   0011A0  0E2D               	movlw	45
  2798   0011A2  0012               	return	
  2799   0011A4                     l2217:
  2800                           
  2801                           ;Laboratorio4.c: 245: else if(RB7==0 & RC6==1) return '^';
  2802   0011A4  AC82               	btfss	3970,6,c	;volatile
  2803   0011A6  D002               	goto	u1710
  2804   0011A8  0E01               	movlw	1
  2805   0011AA  D001               	goto	u1712
  2806   0011AC                     u1710:
  2807   0011AC  0E00               	movlw	0
  2808   0011AE                     u1712:
  2809   0011AE  6E0E               	movwf	??_LeerTeclado^0,c
  2810   0011B0  BE81               	btfsc	3969,7,c	;volatile
  2811   0011B2  D002               	goto	u1720
  2812   0011B4  0E01               	movlw	1
  2813   0011B6  D001               	goto	u1722
  2814   0011B8                     u1720:
  2815   0011B8  0E00               	movlw	0
  2816   0011BA                     u1722:
  2817   0011BA  140E               	andwf	??_LeerTeclado^0,w,c
  2818   0011BC  A0E8               	btfss	wreg,0,c
  2819   0011BE  D002               	goto	l2225
  2820   0011C0  0E5E               	movlw	94
  2821   0011C2  0012               	return	
  2822   0011C4                     l2225:
  2823                           
  2824                           ;Laboratorio4.c: 246: else{;Laboratorio4.c: 247: LATB=0b11111011;
  2825   0011C4  0EFB               	movlw	251
  2826   0011C6  6E8A               	movwf	138,c	;volatile
  2827                           
  2828                           ;Laboratorio4.c: 248: if(RB4==0) return '7';
  2829   0011C8  B881               	btfsc	3969,4,c	;volatile
  2830   0011CA  D002               	goto	l267
  2831   0011CC  0E37               	movlw	55
  2832   0011CE  0012               	return	
  2833   0011D0                     l267:
  2834                           
  2835                           ;Laboratorio4.c: 249: else if(RB5==0) return '8';
  2836   0011D0  BA81               	btfsc	3969,5,c	;volatile
  2837   0011D2  D002               	goto	l269
  2838   0011D4  0E38               	movlw	56
  2839   0011D6  0012               	return	
  2840   0011D8                     l269:
  2841                           
  2842                           ;Laboratorio4.c: 250: else if(RB6==0) return '9';
  2843   0011D8  BC81               	btfsc	3969,6,c	;volatile
  2844   0011DA  D002               	goto	l271
  2845   0011DC  0E39               	movlw	57
  2846   0011DE  0012               	return	
  2847   0011E0                     l271:
  2848                           
  2849                           ;Laboratorio4.c: 251: else if(RB7==0) return '/';
  2850   0011E0  BE81               	btfsc	3969,7,c	;volatile
  2851   0011E2  D002               	goto	l2253
  2852   0011E4  0E2F               	movlw	47
  2853   0011E6  0012               	return	
  2854   0011E8                     l2253:
  2855                           
  2856                           ;Laboratorio4.c: 252: else{;Laboratorio4.c: 253: LATB=0b11110111;
  2857   0011E8  0EF7               	movlw	247
  2858   0011EA  6E8A               	movwf	138,c	;volatile
  2859                           
  2860                           ;Laboratorio4.c: 254: if(RB4==0) return 'C';
  2861   0011EC  B881               	btfsc	3969,4,c	;volatile
  2862   0011EE  D002               	goto	l275
  2863   0011F0  0E43               	movlw	67
  2864   0011F2  0012               	return	
  2865   0011F4                     l275:
  2866                           
  2867                           ;Laboratorio4.c: 255: else if(RB5==0) return '0';
  2868   0011F4  BA81               	btfsc	3969,5,c	;volatile
  2869   0011F6  D002               	goto	l277
  2870   0011F8  0E30               	movlw	48
  2871   0011FA  0012               	return	
  2872   0011FC                     l277:
  2873                           
  2874                           ;Laboratorio4.c: 256: else if(RB6==0) return '=';
  2875   0011FC  BC81               	btfsc	3969,6,c	;volatile
  2876   0011FE  D002               	goto	l279
  2877   001200  0E3D               	movlw	61
  2878   001202  0012               	return	
  2879   001204                     l279:
  2880                           
  2881                           ;Laboratorio4.c: 257: else if(RB7==0) return 'x';
  2882   001204  BE81               	btfsc	3969,7,c	;volatile
  2883   001206  D002               	goto	l276
  2884   001208  0E78               	movlw	120
  2885   00120A  0012               	return	
  2886   00120C                     l276:
  2887                           
  2888                           ;Laboratorio4.c: 258: };Laboratorio4.c: 259: };Laboratorio4.c: 260: };Laboratorio4.c: 26
      +                          1: return '?';
  2889   00120C  0E3F               	movlw	63
  2890   00120E  0012               	return		;funcret
  2891   001210                     __end_of_LeerTeclado:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _InicializaLCD *****************
  2895 ;; Defined at:
  2896 ;;		line 72 in file "LibLCDXC8.h"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 8
  2917 ;; This function calls:
  2918 ;;		_BorraLCD
  2919 ;;		_EnviaDato
  2920 ;;		_HabilitaLCD
  2921 ;;		_RetardoLCD
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text12
  2928   001210                     __ptext12:
  2929                           	callstack 0
  2930   001210                     _InicializaLCD:
  2931                           	callstack 22
  2932                           
  2933                           ;LibLCDXC8.h: 74: LATE0=0;
  2934                           
  2935                           ;incstack = 0
  2936   001210  908D               	bcf	3981,0,c	;volatile
  2937                           
  2938                           ;LibLCDXC8.h: 75: if(interfaz==4)
  2939   001212  0E04               	movlw	4
  2940   001214  1842               	xorwf	_interfaz^0,w,c
  2941   001216  A4D8               	btfss	status,2,c
  2942   001218  D004               	goto	l2055
  2943                           
  2944                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2945   00121A  508C               	movf	140,w,c	;volatile
  2946   00121C  0B0F               	andlw	15
  2947   00121E  0930               	iorlw	48
  2948   001220  D001               	goto	L4
  2949   001222                     l2055:
  2950                           
  2951                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  2952   001222  0E3F               	movlw	63
  2953   001224                     L4:
  2954   001224  6E8C               	movwf	140,c	;volatile
  2955                           
  2956                           ;LibLCDXC8.h: 79: HabilitaLCD();
  2957   001226  EC41  F00C         	call	_HabilitaLCD	;wreg free
  2958                           
  2959                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  2960   00122A  0E01               	movlw	1
  2961   00122C  EC71  F00A         	call	_RetardoLCD
  2962                           
  2963                           ;LibLCDXC8.h: 81: if(interfaz==4)
  2964   001230  0E04               	movlw	4
  2965   001232  1842               	xorwf	_interfaz^0,w,c
  2966   001234  A4D8               	btfss	status,2,c
  2967   001236  D004               	goto	l2065
  2968                           
  2969                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2970   001238  508C               	movf	140,w,c	;volatile
  2971   00123A  0B0F               	andlw	15
  2972   00123C  0930               	iorlw	48
  2973   00123E  D001               	goto	L5
  2974   001240                     l2065:
  2975                           
  2976                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  2977   001240  0E3F               	movlw	63
  2978   001242                     L5:
  2979   001242  6E8C               	movwf	140,c	;volatile
  2980                           
  2981                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2982   001244  EC41  F00C         	call	_HabilitaLCD	;wreg free
  2983                           
  2984                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  2985   001248  0E03               	movlw	3
  2986   00124A  EC71  F00A         	call	_RetardoLCD
  2987                           
  2988                           ;LibLCDXC8.h: 87: if(interfaz==4)
  2989   00124E  0E04               	movlw	4
  2990   001250  1842               	xorwf	_interfaz^0,w,c
  2991   001252  A4D8               	btfss	status,2,c
  2992   001254  D004               	goto	l2075
  2993                           
  2994                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  2995   001256  508C               	movf	140,w,c	;volatile
  2996   001258  0B0F               	andlw	15
  2997   00125A  0930               	iorlw	48
  2998   00125C  D001               	goto	L6
  2999   00125E                     l2075:
  3000                           
  3001                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  3002   00125E  0E3F               	movlw	63
  3003   001260                     L6:
  3004   001260  6E8C               	movwf	140,c	;volatile
  3005                           
  3006                           ;LibLCDXC8.h: 91: HabilitaLCD();
  3007   001262  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3008                           
  3009                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  3010   001266  0E04               	movlw	4
  3011   001268  EC71  F00A         	call	_RetardoLCD
  3012                           
  3013                           ;LibLCDXC8.h: 93: if(interfaz==4){
  3014   00126C  0E04               	movlw	4
  3015   00126E  1842               	xorwf	_interfaz^0,w,c
  3016   001270  A4D8               	btfss	status,2,c
  3017   001272  D011               	goto	l2095
  3018                           
  3019                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  3020   001274  508C               	movf	140,w,c	;volatile
  3021   001276  0B0F               	andlw	15
  3022   001278  0920               	iorlw	32
  3023   00127A  6E8C               	movwf	140,c	;volatile
  3024                           
  3025                           ;LibLCDXC8.h: 95: HabilitaLCD();
  3026   00127C  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3027                           
  3028                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  3029   001280  0E04               	movlw	4
  3030   001282  EC71  F00A         	call	_RetardoLCD
  3031                           
  3032                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  3033   001286  0E2F               	movlw	47
  3034   001288  EC3E  F00B         	call	_EnviaDato
  3035                           
  3036                           ;LibLCDXC8.h: 98: HabilitaLCD();
  3037   00128C  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3038                           
  3039                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  3040   001290  0E04               	movlw	4
  3041   001292  EC71  F00A         	call	_RetardoLCD
  3042   001296                     l2095:
  3043                           
  3044                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  3045   001296  EC2D  F00C         	call	_BorraLCD	;wreg free
  3046                           
  3047                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  3048   00129A  0E0F               	movlw	15
  3049   00129C  EC3E  F00B         	call	_EnviaDato
  3050                           
  3051                           ;LibLCDXC8.h: 103: HabilitaLCD();
  3052   0012A0  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3053                           
  3054                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  3055   0012A4  0E04               	movlw	4
  3056   0012A6  EC71  F00A         	call	_RetardoLCD
  3057   0012AA  0012               	return		;funcret
  3058   0012AC                     __end_of_InicializaLCD:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _BorraLCD *****************
  3062 ;; Defined at:
  3063 ;;		line 113 in file "LibLCDXC8.h"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 7
  3084 ;; This function calls:
  3085 ;;		_EnviaDato
  3086 ;;		_HabilitaLCD
  3087 ;;		_RetardoLCD
  3088 ;; This function is called by:
  3089 ;;		_InicializaLCD
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text13
  3095   00185A                     __ptext13:
  3096                           	callstack 0
  3097   00185A                     _BorraLCD:
  3098                           	callstack 22
  3099                           
  3100                           ;LibLCDXC8.h: 115: LATE0=0;
  3101                           
  3102                           ;incstack = 0
  3103   00185A  908D               	bcf	3981,0,c	;volatile
  3104                           
  3105                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3106   00185C  0E01               	movlw	1
  3107   00185E  EC3E  F00B         	call	_EnviaDato
  3108                           
  3109                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3110   001862  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3111                           
  3112                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3113   001866  0E02               	movlw	2
  3114   001868  EC71  F00A         	call	_RetardoLCD
  3115   00186C  0012               	return		;funcret
  3116   00186E                     __end_of_BorraLCD:
  3117                           	callstack 0
  3118                           
  3119 ;; *************** function _DireccionaLCD *****************
  3120 ;; Defined at:
  3121 ;;		line 262 in file "LibLCDXC8.h"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  a               1    wreg     unsigned char 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  a               1   17[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0
  3136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3138 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3139 ;;Total ram usage:        1 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 7
  3142 ;; This function calls:
  3143 ;;		_EnviaDato
  3144 ;;		_HabilitaLCD
  3145 ;;		_RetardoLCD
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text14
  3152   00182E                     __ptext14:
  3153                           	callstack 0
  3154   00182E                     _DireccionaLCD:
  3155                           	callstack 23
  3156                           
  3157                           ;incstack = 0
  3158                           ;DireccionaLCD@a stored from wreg
  3159   00182E  6E12               	movwf	DireccionaLCD@a^0,c
  3160                           
  3161                           ;LibLCDXC8.h: 265: LATE0=0;
  3162   001830  908D               	bcf	3981,0,c	;volatile
  3163                           
  3164                           ;LibLCDXC8.h: 266: EnviaDato(a);
  3165   001832  5012               	movf	DireccionaLCD@a^0,w,c
  3166   001834  EC3E  F00B         	call	_EnviaDato
  3167                           
  3168                           ;LibLCDXC8.h: 267: HabilitaLCD();
  3169   001838  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3170                           
  3171                           ;LibLCDXC8.h: 268: RetardoLCD(4);
  3172   00183C  0E04               	movlw	4
  3173   00183E  EC71  F00A         	call	_RetardoLCD
  3174   001842  0012               	return		;funcret
  3175   001844                     __end_of_DireccionaLCD:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _EnviaDato *****************
  3179 ;; Defined at:
  3180 ;;		line 60 in file "LibLCDXC8.h"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  a               1    wreg     unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  a               1   16[COMRAM] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0
  3195 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3197 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3198 ;;Total ram usage:        2 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 6
  3201 ;; This function calls:
  3202 ;;		_HabilitaLCD
  3203 ;;		_RetardoLCD
  3204 ;; This function is called by:
  3205 ;;		_InicializaLCD
  3206 ;;		_BorraLCD
  3207 ;;		_EscribeLCD_c
  3208 ;;		_DireccionaLCD
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text15
  3213   00167C                     __ptext15:
  3214                           	callstack 0
  3215   00167C                     _EnviaDato:
  3216                           	callstack 22
  3217                           
  3218                           ;incstack = 0
  3219                           ;EnviaDato@a stored from wreg
  3220   00167C  6E11               	movwf	EnviaDato@a^0,c
  3221                           
  3222                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3223   00167E  0E04               	movlw	4
  3224   001680  1842               	xorwf	_interfaz^0,w,c
  3225   001682  A4D8               	btfss	status,2,c
  3226   001684  D017               	goto	l1985
  3227                           
  3228                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3229   001686  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3230   00168A  0EF0               	movlw	240
  3231   00168C  1610               	andwf	??_EnviaDato^0,f,c
  3232   00168E  508C               	movf	140,w,c	;volatile
  3233   001690  0B0F               	andlw	15
  3234   001692  1010               	iorwf	??_EnviaDato^0,w,c
  3235   001694  6E8C               	movwf	140,c	;volatile
  3236                           
  3237                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3238   001696  EC41  F00C         	call	_HabilitaLCD	;wreg free
  3239                           
  3240                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3241   00169A  0E01               	movlw	1
  3242   00169C  EC71  F00A         	call	_RetardoLCD
  3243                           
  3244                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3245   0016A0  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3246   0016A4  3A10               	swapf	??_EnviaDato^0,f,c
  3247   0016A6  0EF0               	movlw	240
  3248   0016A8  1610               	andwf	??_EnviaDato^0,f,c
  3249   0016AA  508C               	movf	140,w,c	;volatile
  3250   0016AC  0B0F               	andlw	15
  3251   0016AE  1010               	iorwf	??_EnviaDato^0,w,c
  3252   0016B0  6E8C               	movwf	140,c	;volatile
  3253                           
  3254                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  3255   0016B2  0012               	return	
  3256   0016B4                     l1985:
  3257   0016B4  0E08               	movlw	8
  3258   0016B6  1842               	xorwf	_interfaz^0,w,c
  3259   0016B8  A4D8               	btfss	status,2,c
  3260   0016BA  0012               	return	
  3261                           
  3262                           ;LibLCDXC8.h: 69: LATD=a;
  3263   0016BC  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3264   0016C0  0012               	return		;funcret
  3265   0016C2                     __end_of_EnviaDato:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _RetardoLCD *****************
  3269 ;; Defined at:
  3270 ;;		line 298 in file "LibLCDXC8.h"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  a               1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  a               1   14[COMRAM] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 5
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_EnviaDato
  3295 ;;		_InicializaLCD
  3296 ;;		_BorraLCD
  3297 ;;		_EscribeLCD_c
  3298 ;;		_DireccionaLCD
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text16
  3303   0014E2                     __ptext16:
  3304                           	callstack 0
  3305   0014E2                     _RetardoLCD:
  3306                           	callstack 23
  3307                           
  3308                           ;incstack = 0
  3309                           ;RetardoLCD@a stored from wreg
  3310   0014E2  6E0F               	movwf	RetardoLCD@a^0,c
  3311                           
  3312                           ;LibLCDXC8.h: 299: switch(a){
  3313   0014E4  D01B               	goto	l1953
  3314   0014E6                     l1943:
  3315   0014E6  0E05               	movlw	5
  3316   0014E8  6E0E               	movwf	??_RetardoLCD^0,c
  3317   0014EA  0EDE               	movlw	222
  3318   0014EC                     u3627:
  3319   0014EC  2EE8               	decfsz	wreg,f,c
  3320   0014EE  D7FE               	bra	u3627
  3321   0014F0  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3322   0014F2  D7FC               	bra	u3627
  3323                           
  3324                           ;LibLCDXC8.h: 302: break;
  3325   0014F4  0012               	return	
  3326   0014F6                     l1945:
  3327   0014F6  0E53               	movlw	83
  3328   0014F8                     u3637:
  3329   0014F8  2EE8               	decfsz	wreg,f,c
  3330   0014FA  D7FE               	bra	u3637
  3331   0014FC  F000               	nop	
  3332                           
  3333                           ;LibLCDXC8.h: 304: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3334   0014FE  0E35               	movlw	53
  3335   001500                     u3647:
  3336   001500  2EE8               	decfsz	wreg,f,c
  3337   001502  D7FE               	bra	u3647
  3338   001504  F000               	nop	
  3339                           
  3340                           ;LibLCDXC8.h: 306: break;
  3341   001506  0012               	return	
  3342   001508                     l1947:
  3343   001508  0E08               	movlw	8
  3344   00150A                     u3657:
  3345   00150A  2EE8               	decfsz	wreg,f,c
  3346   00150C  D7FE               	bra	u3657
  3347   00150E  F000               	nop	
  3348                           
  3349                           ;LibLCDXC8.h: 309: break;
  3350   001510  0012               	return	
  3351   001512                     l1949:
  3352   001512  0E03               	movlw	3
  3353   001514                     u3667:
  3354   001514  2EE8               	decfsz	wreg,f,c
  3355   001516  D7FE               	bra	u3667
  3356   001518  F000               	nop	
  3357                           
  3358                           ;LibLCDXC8.h: 312: break;
  3359   00151A  0012               	return	
  3360   00151C                     l1953:
  3361   00151C  500F               	movf	RetardoLCD@a^0,w,c
  3362                           
  3363                           ; Switch size 1, requested type "simple"
  3364                           ; Number of cases is 4, Range of values is 1 to 4
  3365                           ; switch strategies available:
  3366                           ; Name         Instructions Cycles
  3367                           ; simple_byte           13     7 (average)
  3368                           ;	Chosen strategy is simple_byte
  3369   00151E  0A01               	xorlw	1	; case 1
  3370   001520  B4D8               	btfsc	status,2,c
  3371   001522  D7E1               	goto	l1943
  3372   001524  0A03               	xorlw	3	; case 2
  3373   001526  B4D8               	btfsc	status,2,c
  3374   001528  D7E6               	goto	l1945
  3375   00152A  0A01               	xorlw	1	; case 3
  3376   00152C  B4D8               	btfsc	status,2,c
  3377   00152E  D7EC               	goto	l1947
  3378   001530  0A07               	xorlw	7	; case 4
  3379   001532  A4D8               	btfss	status,2,c
  3380   001534  0012               	return	
  3381   001536  D7ED               	goto	l1949
  3382   001538                     __end_of_RetardoLCD:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _HabilitaLCD *****************
  3386 ;; Defined at:
  3387 ;;		line 106 in file "LibLCDXC8.h"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 5
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_EnviaDato
  3412 ;;		_InicializaLCD
  3413 ;;		_BorraLCD
  3414 ;;		_EscribeLCD_c
  3415 ;;		_DireccionaLCD
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text17
  3420   001882                     __ptext17:
  3421                           	callstack 0
  3422   001882                     _HabilitaLCD:
  3423                           	callstack 23
  3424                           
  3425                           ;LibLCDXC8.h: 108: LATE1=1;
  3426                           
  3427                           ;incstack = 0
  3428   001882  828D               	bsf	3981,1,c	;volatile
  3429                           
  3430                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3431   001884  0E03               	movlw	3
  3432   001886                     u3677:
  3433   001886  2EE8               	decfsz	wreg,f,c
  3434   001888  D7FE               	bra	u3677
  3435   00188A  F000               	nop	
  3436                           
  3437                           ;LibLCDXC8.h: 111: LATE1=0;
  3438   00188C  928D               	bcf	3981,1,c	;volatile
  3439   00188E  0012               	return		;funcret
  3440   001890                     __end_of_HabilitaLCD:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _ColorRGB *****************
  3444 ;; Defined at:
  3445 ;;		line 264 in file "Laboratorio4.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         0       0       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3461 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3462 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        2 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 5
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text18
  3474   0013AC                     __ptext18:
  3475                           	callstack 0
  3476   0013AC                     _ColorRGB:
  3477                           	callstack 25
  3478                           
  3479                           ;Laboratorio4.c: 265: if(color==8) color = 0;
  3480                           
  3481                           ;incstack = 0
  3482   0013AC  0E08               	movlw	8
  3483   0013AE  1831               	xorwf	_color^0,w,c
  3484   0013B0  1032               	iorwf	(_color+1)^0,w,c
  3485   0013B2  A4D8               	btfss	status,2,c
  3486   0013B4  D014               	goto	l2305
  3487   0013B6  0E00               	movlw	0
  3488   0013B8  6E32               	movwf	(_color+1)^0,c
  3489   0013BA  0E00               	movlw	0
  3490   0013BC  6E31               	movwf	_color^0,c
  3491   0013BE  D00F               	goto	l2305
  3492   0013C0                     l2287:
  3493                           
  3494                           ;Laboratorio4.c: 268: LATC = 0b00000000;
  3495   0013C0  0E00               	movlw	0
  3496   0013C2  D00B               	goto	L12
  3497   0013C4                     l2289:
  3498                           
  3499                           ;Laboratorio4.c: 271: LATC = 0b00000101;
  3500   0013C4  0E05               	movlw	5
  3501   0013C6  D009               	goto	L12
  3502   0013C8                     l2291:
  3503                           
  3504                           ;Laboratorio4.c: 274: LATC = 0b00000110;
  3505   0013C8  0E06               	movlw	6
  3506   0013CA  D007               	goto	L12
  3507   0013CC                     l2293:
  3508                           
  3509                           ;Laboratorio4.c: 277: LATC = 0b00000011;
  3510   0013CC  0E03               	movlw	3
  3511   0013CE  D005               	goto	L12
  3512   0013D0                     l2295:
  3513                           
  3514                           ;Laboratorio4.c: 280: LATC = 0b00000010;
  3515   0013D0  0E02               	movlw	2
  3516   0013D2  D003               	goto	L12
  3517   0013D4                     l2299:
  3518                           
  3519                           ;Laboratorio4.c: 286: LATC = 0b00000100;
  3520   0013D4  0E04               	movlw	4
  3521   0013D6  D001               	goto	L12
  3522   0013D8                     l2301:
  3523                           
  3524                           ;Laboratorio4.c: 289: LATC = 0b00000111;
  3525   0013D8  0E07               	movlw	7
  3526   0013DA                     L12:
  3527   0013DA  6E8B               	movwf	139,c	;volatile
  3528                           
  3529                           ;Laboratorio4.c: 290: break;
  3530   0013DC  D021               	goto	l2307
  3531   0013DE                     l2305:
  3532   0013DE  C031  F00E         	movff	_color,??_ColorRGB
  3533   0013E2  C032  F00F         	movff	_color+1,??_ColorRGB+1
  3534                           
  3535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 1, Range of values is 0 to 0
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            4     3 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542   0013E6  500F               	movf	(??_ColorRGB+1)^0,w,c
  3543   0013E8  0A00               	xorlw	0	; case 0
  3544   0013EA  A4D8               	btfss	status,2,c
  3545   0013EC  D019               	goto	l2307
  3546                           
  3547                           ; Switch size 1, requested type "simple"
  3548                           ; Number of cases is 8, Range of values is 0 to 7
  3549                           ; switch strategies available:
  3550                           ; Name         Instructions Cycles
  3551                           ; simple_byte           25    13 (average)
  3552                           ;	Chosen strategy is simple_byte
  3553   0013EE  500E               	movf	??_ColorRGB^0,w,c
  3554   0013F0  0A00               	xorlw	0	; case 0
  3555   0013F2  B4D8               	btfsc	status,2,c
  3556   0013F4  D7E5               	goto	l2287
  3557   0013F6  0A01               	xorlw	1	; case 1
  3558   0013F8  B4D8               	btfsc	status,2,c
  3559   0013FA  D7E4               	goto	l2289
  3560   0013FC  0A03               	xorlw	3	; case 2
  3561   0013FE  B4D8               	btfsc	status,2,c
  3562   001400  D7E3               	goto	l2291
  3563   001402  0A01               	xorlw	1	; case 3
  3564   001404  B4D8               	btfsc	status,2,c
  3565   001406  D7E2               	goto	l2293
  3566   001408  0A07               	xorlw	7	; case 4
  3567   00140A  B4D8               	btfsc	status,2,c
  3568   00140C  D7E1               	goto	l2295
  3569   00140E  0A01               	xorlw	1	; case 5
  3570   001410  B4D8               	btfsc	status,2,c
  3571   001412  D7DA               	goto	l2291
  3572   001414  0A03               	xorlw	3	; case 6
  3573   001416  B4D8               	btfsc	status,2,c
  3574   001418  D7DD               	goto	l2299
  3575   00141A  0A01               	xorlw	1	; case 7
  3576   00141C  B4D8               	btfsc	status,2,c
  3577   00141E  D7DC               	goto	l2301
  3578   001420                     l2307:
  3579                           
  3580                           ;Laboratorio4.c: 294: color += 1;
  3581   001420  4A31               	infsnz	_color^0,f,c
  3582   001422  2A32               	incf	(_color+1)^0,f,c
  3583   001424  0012               	return		;funcret
  3584   001426                     __end_of_ColorRGB:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _ISR *****************
  3588 ;; Defined at:
  3589 ;;		line 297 in file "Laboratorio4.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3605 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3606 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:        4 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 4
  3610 ;; This function calls:
  3611 ;;		i2_BorraLCD
  3612 ;;		i2_MensajeLCD_Word
  3613 ;; This function is called by:
  3614 ;;		Interrupt level 2
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	intcode
  3619   000008                     __pintcode:
  3620                           	callstack 0
  3621   000008                     _ISR:
  3622                           	callstack 22
  3623                           
  3624                           ;incstack = 0
  3625   000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3626   00000A  ED97  F009         	call	int_func,f	;refresh shadow registers
  3627                           
  3628                           	psect	intcode_body
  3629   00132E                     __pintcode_body:
  3630                           	callstack 22
  3631   00132E                     int_func:
  3632                           	callstack 22
  3633   00132E  0006               	pop		; remove dummy address from shadow register refresh
  3634   001330  CFF6 F00A          	movff	tblptrl,??_ISR
  3635   001334  CFF7 F00B          	movff	tblptrh,??_ISR+1
  3636   001338  CFF8 F00C          	movff	tblptru,??_ISR+2
  3637   00133C  CFF5 F00D          	movff	tablat,??_ISR+3
  3638                           
  3639                           ;Laboratorio4.c: 298: if(TMR0IF==1){
  3640   001340  A4F2               	btfss	4082,2,c	;volatile
  3641   001342  D019               	goto	i2l2801
  3642                           
  3643                           ;Laboratorio4.c: 299: if(!verificador) contador = contador +1;
  3644   001344  502D               	movf	_verificador^0,w,c
  3645   001346  102E               	iorwf	(_verificador+1)^0,w,c
  3646   001348  A4D8               	btfss	status,2,c
  3647   00134A  D007               	goto	i2l2795
  3648   00134C  0E01               	movlw	1
  3649   00134E  242F               	addwf	_contador^0,w,c
  3650   001350  6E2F               	movwf	_contador^0,c
  3651   001352  0E00               	movlw	0
  3652   001354  2030               	addwfc	(_contador+1)^0,w,c
  3653   001356  6E30               	movwf	(_contador+1)^0,c
  3654   001358  D004               	goto	i2l2797
  3655   00135A                     i2l2795:
  3656                           
  3657                           ;Laboratorio4.c: 300: else contador = 0;
  3658   00135A  0E00               	movlw	0
  3659   00135C  6E30               	movwf	(_contador+1)^0,c
  3660   00135E  0E00               	movlw	0
  3661   001360  6E2F               	movwf	_contador^0,c
  3662   001362                     i2l2797:
  3663                           
  3664                           ;Laboratorio4.c: 301: TMR0IF=0;
  3665   001362  94F2               	bcf	4082,2,c	;volatile
  3666                           
  3667                           ;Laboratorio4.c: 302: LATE2 = !LATE2;
  3668   001364  B48D               	btfsc	3981,2,c	;volatile
  3669   001366  D002               	goto	i2u277_40
  3670   001368  848D               	bsf	3981,2,c	;volatile
  3671   00136A  D001               	goto	i2u278_45
  3672   00136C                     i2u277_40:
  3673   00136C  948D               	bcf	3981,2,c	;volatile
  3674   00136E                     i2u278_45:
  3675                           
  3676                           ;Laboratorio4.c: 303: TMR0 = 49911;
  3677   00136E  0EC2               	movlw	194
  3678   001370  6ED7               	movwf	215,c	;volatile
  3679   001372  0EF7               	movlw	247
  3680   001374  6ED6               	movwf	214,c	;volatile
  3681   001376                     i2l2801:
  3682                           
  3683                           ;Laboratorio4.c: 306: };Laboratorio4.c: 308: if(contador == 20){
  3684   001376  0E14               	movlw	20
  3685   001378  182F               	xorwf	_contador^0,w,c
  3686   00137A  1030               	iorwf	(_contador+1)^0,w,c
  3687   00137C  A4D8               	btfss	status,2,c
  3688   00137E  D00C               	goto	i2l309
  3689                           
  3690                           ;Laboratorio4.c: 309: if(!verificador){
  3691   001380  502D               	movf	_verificador^0,w,c
  3692   001382  102E               	iorwf	(_verificador+1)^0,w,c
  3693   001384  A4D8               	btfss	status,2,c
  3694   001386  D008               	goto	i2l309
  3695                           
  3696                           ;Laboratorio4.c: 310: BorraLCD();
  3697   001388  EC37  F00C         	call	i2_BorraLCD	;wreg free
  3698                           
  3699                           ;Laboratorio4.c: 311: MensajeLCD_Word("En Resposo");
  3700   00138C  0E1D               	movlw	low STR_8
  3701   00138E  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3702   001390  EC17  F00B         	call	i2_MensajeLCD_Word	;wreg free
  3703   001394  0003               	sleep		;# 
  3704   001396                     i2l306:
  3705   001396  D7FF               	goto	i2l306
  3706   001398                     i2l309:
  3707   001398  C00D  FFF5         	movff	??_ISR+3,tablat
  3708   00139C  C00C  FFF8         	movff	??_ISR+2,tblptru
  3709   0013A0  C00B  FFF7         	movff	??_ISR+1,tblptrh
  3710   0013A4  C00A  FFF6         	movff	??_ISR,tblptrl
  3711   0013A8  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3712   0013AA  0011               	retfie		f
  3713   0013AC                     __end_of_ISR:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function i2_MensajeLCD_Word *****************
  3717 ;; Defined at:
  3718 ;;		line 250 in file "LibLCDXC8.h"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  a               1    5[COMRAM] PTR unsigned char 
  3721 ;;		 -> STR_8(11), STR_7(5), STR_6(5), STR_5(17), 
  3722 ;;		 -> STR_4(17), STR_3(11), STR_2(5), STR_1(8), 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  i               2    7[COMRAM] int 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3734 ;;      Params:         1       0       0       0       0       0       0       0       0
  3735 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3736 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3737 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        4 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 3
  3741 ;; This function calls:
  3742 ;;		i2_EscribeLCD_c
  3743 ;; This function is called by:
  3744 ;;		_ISR
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text20
  3749   00162E                     __ptext20:
  3750                           	callstack 0
  3751   00162E                     i2_MensajeLCD_Word:
  3752                           	callstack 22
  3753                           
  3754                           ;LibLCDXC8.h: 254: for(int i = 0; i<16; i++){
  3755                           
  3756                           ;incstack = 0
  3757   00162E  0E00               	movlw	0
  3758   001630  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  3759   001632  0E00               	movlw	0
  3760   001634  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  3761   001636                     i2l2419:
  3762                           
  3763                           ;LibLCDXC8.h: 255: if(a[i] == (0)){
  3764   001636  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3765   001638  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3766   00163A  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3767   00163C  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3768   001640                     	if	1	;There is more than 1 active tblptr byte
  3769   001640  0E08               	movlw	high __smallconst
  3770   001642  6EF7               	movwf	tblptrh,c
  3771   001644                     	endif
  3772   001644                     	if	0	;tblptru may be non-zero
  3773   001644                     	endif
  3774   001644                     	if	0	;tblptru may be non-zero
  3775   001644                     	endif
  3776   001644  0008               	tblrd		*
  3777   001646  50F5               	movf	tablat,w,c
  3778   001648  0900               	iorlw	0
  3779   00164A  B4D8               	btfsc	status,2,c
  3780   00164C  0012               	return	
  3781                           
  3782                           ;LibLCDXC8.h: 257: };LibLCDXC8.h: 258: EscribeLCD_c(a[i]);
  3783   00164E  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3784   001650  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3785   001652  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3786   001654  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3787   001658                     	if	1	;There is more than 1 active tblptr byte
  3788   001658  0E08               	movlw	high __smallconst
  3789   00165A  6EF7               	movwf	tblptrh,c
  3790   00165C                     	endif
  3791   00165C                     	if	0	;tblptru may be non-zero
  3792   00165C                     	endif
  3793   00165C                     	if	0	;tblptru may be non-zero
  3794   00165C                     	endif
  3795   00165C  0008               	tblrd		*
  3796   00165E  50F5               	movf	tablat,w,c
  3797   001660  EC22  F00C         	call	i2_EscribeLCD_c
  3798   001664  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  3799   001666  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  3800   001668  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  3801   00166A  D7E5               	goto	i2l2419
  3802   00166C  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  3803   00166E  E105               	bnz	i2u198_40
  3804   001670  0E10               	movlw	16
  3805   001672  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  3806   001674  B0D8               	btfsc	status,0,c
  3807   001676  0012               	return	
  3808   001678  D7DE               	goto	i2l2419
  3809   00167A                     i2u198_40:
  3810   00167A  0012               	return		;funcret
  3811   00167C                     __end_ofi2_MensajeLCD_Word:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function i2_EscribeLCD_c *****************
  3815 ;; Defined at:
  3816 ;;		line 151 in file "LibLCDXC8.h"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  a               1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  a               1    4[COMRAM] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 2
  3837 ;; This function calls:
  3838 ;;		i2_EnviaDato
  3839 ;;		i2_HabilitaLCD
  3840 ;;		i2_RetardoLCD
  3841 ;; This function is called by:
  3842 ;;		i2_MensajeLCD_Word
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text21
  3847   001844                     __ptext21:
  3848                           	callstack 0
  3849   001844                     i2_EscribeLCD_c:
  3850                           	callstack 22
  3851                           
  3852                           ;incstack = 0
  3853                           ;i2EscribeLCD_c@a stored from wreg
  3854   001844  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3855                           
  3856                           ;LibLCDXC8.h: 155: LATE0=1;
  3857   001846  808D               	bsf	3981,0,c	;volatile
  3858                           
  3859                           ;LibLCDXC8.h: 156: EnviaDato(a);
  3860   001848  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3861   00184A  EC61  F00B         	call	i2_EnviaDato
  3862                           
  3863                           ;LibLCDXC8.h: 157: HabilitaLCD();
  3864   00184E  EC48  F00C         	call	i2_HabilitaLCD	;wreg free
  3865                           
  3866                           ;LibLCDXC8.h: 158: RetardoLCD(4);
  3867   001852  0E04               	movlw	4
  3868   001854  EC9C  F00A         	call	i2_RetardoLCD
  3869   001858  0012               	return		;funcret
  3870   00185A                     __end_ofi2_EscribeLCD_c:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function i2_BorraLCD *****************
  3874 ;; Defined at:
  3875 ;;		line 113 in file "LibLCDXC8.h"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 2
  3896 ;; This function calls:
  3897 ;;		i2_EnviaDato
  3898 ;;		i2_HabilitaLCD
  3899 ;;		i2_RetardoLCD
  3900 ;; This function is called by:
  3901 ;;		_ISR
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text22
  3906   00186E                     __ptext22:
  3907                           	callstack 0
  3908   00186E                     i2_BorraLCD:
  3909                           	callstack 23
  3910                           
  3911                           ;LibLCDXC8.h: 115: LATE0=0;
  3912                           
  3913                           ;incstack = 0
  3914   00186E  908D               	bcf	3981,0,c	;volatile
  3915                           
  3916                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3917   001870  0E01               	movlw	1
  3918   001872  EC61  F00B         	call	i2_EnviaDato
  3919                           
  3920                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3921   001876  EC48  F00C         	call	i2_HabilitaLCD	;wreg free
  3922                           
  3923                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3924   00187A  0E02               	movlw	2
  3925   00187C  EC9C  F00A         	call	i2_RetardoLCD
  3926   001880  0012               	return		;funcret
  3927   001882                     __end_ofi2_BorraLCD:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function i2_EnviaDato *****************
  3931 ;; Defined at:
  3932 ;;		line 60 in file "LibLCDXC8.h"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  a               1    wreg     unsigned char 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  a               1    3[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0
  3947 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3949 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 1
  3953 ;; This function calls:
  3954 ;;		i2_HabilitaLCD
  3955 ;;		i2_RetardoLCD
  3956 ;; This function is called by:
  3957 ;;		i2_BorraLCD
  3958 ;;		i2_EscribeLCD_c
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text23
  3963   0016C2                     __ptext23:
  3964                           	callstack 0
  3965   0016C2                     i2_EnviaDato:
  3966                           	callstack 22
  3967                           
  3968                           ;incstack = 0
  3969                           ;i2EnviaDato@a stored from wreg
  3970   0016C2  6E04               	movwf	i2EnviaDato@a^0,c
  3971                           
  3972                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3973   0016C4  0E04               	movlw	4
  3974   0016C6  1842               	xorwf	_interfaz^0,w,c
  3975   0016C8  A4D8               	btfss	status,2,c
  3976   0016CA  D017               	goto	i2l1999
  3977                           
  3978                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3979   0016CC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3980   0016D0  0EF0               	movlw	240
  3981   0016D2  1603               	andwf	??i2_EnviaDato^0,f,c
  3982   0016D4  508C               	movf	140,w,c	;volatile
  3983   0016D6  0B0F               	andlw	15
  3984   0016D8  1003               	iorwf	??i2_EnviaDato^0,w,c
  3985   0016DA  6E8C               	movwf	140,c	;volatile
  3986                           
  3987                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3988   0016DC  EC48  F00C         	call	i2_HabilitaLCD	;wreg free
  3989                           
  3990                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3991   0016E0  0E01               	movlw	1
  3992   0016E2  EC9C  F00A         	call	i2_RetardoLCD
  3993                           
  3994                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3995   0016E6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3996   0016EA  3A03               	swapf	??i2_EnviaDato^0,f,c
  3997   0016EC  0EF0               	movlw	240
  3998   0016EE  1603               	andwf	??i2_EnviaDato^0,f,c
  3999   0016F0  508C               	movf	140,w,c	;volatile
  4000   0016F2  0B0F               	andlw	15
  4001   0016F4  1003               	iorwf	??i2_EnviaDato^0,w,c
  4002   0016F6  6E8C               	movwf	140,c	;volatile
  4003                           
  4004                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  4005   0016F8  0012               	return	
  4006   0016FA                     i2l1999:
  4007   0016FA  0E08               	movlw	8
  4008   0016FC  1842               	xorwf	_interfaz^0,w,c
  4009   0016FE  A4D8               	btfss	status,2,c
  4010   001700  0012               	return	
  4011                           
  4012                           ;LibLCDXC8.h: 69: LATD=a;
  4013   001702  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4014   001706  0012               	return		;funcret
  4015   001708                     __end_ofi2_EnviaDato:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function i2_RetardoLCD *****************
  4019 ;; Defined at:
  4020 ;;		line 298 in file "LibLCDXC8.h"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  a               1    wreg     unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  a               1    1[COMRAM] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		i2_EnviaDato
  4044 ;;		i2_BorraLCD
  4045 ;;		i2_EscribeLCD_c
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text24
  4050   001538                     __ptext24:
  4051                           	callstack 0
  4052   001538                     i2_RetardoLCD:
  4053                           	callstack 23
  4054                           
  4055                           ;incstack = 0
  4056                           ;i2RetardoLCD@a stored from wreg
  4057   001538  6E02               	movwf	i2RetardoLCD@a^0,c
  4058                           
  4059                           ;LibLCDXC8.h: 299: switch(a){
  4060   00153A  D01B               	goto	i2l1973
  4061   00153C                     i2l1963:
  4062   00153C  0E05               	movlw	5
  4063   00153E  6E01               	movwf	??i2_RetardoLCD^0,c
  4064   001540  0EDE               	movlw	222
  4065   001542                     i2u368_47:
  4066   001542  2EE8               	decfsz	wreg,f,c
  4067   001544  D7FE               	bra	i2u368_47
  4068   001546  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4069   001548  D7FC               	bra	i2u368_47
  4070                           
  4071                           ;LibLCDXC8.h: 302: break;
  4072   00154A  0012               	return	
  4073   00154C                     i2l1965:
  4074   00154C  0E53               	movlw	83
  4075   00154E                     i2u369_47:
  4076   00154E  2EE8               	decfsz	wreg,f,c
  4077   001550  D7FE               	bra	i2u369_47
  4078   001552  F000               	nop	
  4079                           
  4080                           ;LibLCDXC8.h: 304: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4081   001554  0E35               	movlw	53
  4082   001556                     i2u370_47:
  4083   001556  2EE8               	decfsz	wreg,f,c
  4084   001558  D7FE               	bra	i2u370_47
  4085   00155A  F000               	nop	
  4086                           
  4087                           ;LibLCDXC8.h: 306: break;
  4088   00155C  0012               	return	
  4089   00155E                     i2l1967:
  4090   00155E  0E08               	movlw	8
  4091   001560                     i2u371_47:
  4092   001560  2EE8               	decfsz	wreg,f,c
  4093   001562  D7FE               	bra	i2u371_47
  4094   001564  F000               	nop	
  4095                           
  4096                           ;LibLCDXC8.h: 309: break;
  4097   001566  0012               	return	
  4098   001568                     i2l1969:
  4099   001568  0E03               	movlw	3
  4100   00156A                     i2u372_47:
  4101   00156A  2EE8               	decfsz	wreg,f,c
  4102   00156C  D7FE               	bra	i2u372_47
  4103   00156E  F000               	nop	
  4104                           
  4105                           ;LibLCDXC8.h: 312: break;
  4106   001570  0012               	return	
  4107   001572                     i2l1973:
  4108   001572  5002               	movf	i2RetardoLCD@a^0,w,c
  4109                           
  4110                           ; Switch size 1, requested type "simple"
  4111                           ; Number of cases is 4, Range of values is 1 to 4
  4112                           ; switch strategies available:
  4113                           ; Name         Instructions Cycles
  4114                           ; simple_byte           13     7 (average)
  4115                           ;	Chosen strategy is simple_byte
  4116   001574  0A01               	xorlw	1	; case 1
  4117   001576  B4D8               	btfsc	status,2,c
  4118   001578  D7E1               	goto	i2l1963
  4119   00157A  0A03               	xorlw	3	; case 2
  4120   00157C  B4D8               	btfsc	status,2,c
  4121   00157E  D7E6               	goto	i2l1965
  4122   001580  0A01               	xorlw	1	; case 3
  4123   001582  B4D8               	btfsc	status,2,c
  4124   001584  D7EC               	goto	i2l1967
  4125   001586  0A07               	xorlw	7	; case 4
  4126   001588  A4D8               	btfss	status,2,c
  4127   00158A  0012               	return	
  4128   00158C  D7ED               	goto	i2l1969
  4129   00158E                     __end_ofi2_RetardoLCD:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function i2_HabilitaLCD *****************
  4133 ;; Defined at:
  4134 ;;		line 106 in file "LibLCDXC8.h"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4152 ;;Total ram usage:        0 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		i2_EnviaDato
  4158 ;;		i2_BorraLCD
  4159 ;;		i2_EscribeLCD_c
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text25
  4164   001890                     __ptext25:
  4165                           	callstack 0
  4166   001890                     i2_HabilitaLCD:
  4167                           	callstack 23
  4168                           
  4169                           ;LibLCDXC8.h: 108: LATE1=1;
  4170                           
  4171                           ;incstack = 0
  4172   001890  828D               	bsf	3981,1,c	;volatile
  4173                           
  4174                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4175   001892  0E03               	movlw	3
  4176   001894                     i2u373_47:
  4177   001894  2EE8               	decfsz	wreg,f,c
  4178   001896  D7FE               	bra	i2u373_47
  4179   001898  F000               	nop	
  4180                           
  4181                           ;LibLCDXC8.h: 111: LATE1=0;
  4182   00189A  928D               	bcf	3981,1,c	;volatile
  4183   00189C  0012               	return		;funcret
  4184   00189E                     __end_ofi2_HabilitaLCD:
  4185                           	callstack 0
  4186                           
  4187                           	psect	rparam
  4188   000000                     
  4189                           	psect	temp
  4190   00004B                     btemp:
  4191                           	callstack 0
  4192   00004B                     	ds	1
  4193   000000                     int$flags	set	btemp
  4194   000000                     wtemp8	set	btemp+1
  4195   000000                     ttemp5	set	btemp+1
  4196   000000                     ttemp6	set	btemp+4
  4197   000000                     ttemp7	set	btemp+8
  4198                           
  4199                           	psect	idloc
  4200                           
  4201                           ;Config register IDLOC0 @ 0x200000
  4202                           ;	unspecified, using default values
  4203   200000                     	org	2097152
  4204   200000  FF                 	db	255
  4205                           
  4206                           ;Config register IDLOC1 @ 0x200001
  4207                           ;	unspecified, using default values
  4208   200001                     	org	2097153
  4209   200001  FF                 	db	255
  4210                           
  4211                           ;Config register IDLOC2 @ 0x200002
  4212                           ;	unspecified, using default values
  4213   200002                     	org	2097154
  4214   200002  FF                 	db	255
  4215                           
  4216                           ;Config register IDLOC3 @ 0x200003
  4217                           ;	unspecified, using default values
  4218   200003                     	org	2097155
  4219   200003  FF                 	db	255
  4220                           
  4221                           ;Config register IDLOC4 @ 0x200004
  4222                           ;	unspecified, using default values
  4223   200004                     	org	2097156
  4224   200004  FF                 	db	255
  4225                           
  4226                           ;Config register IDLOC5 @ 0x200005
  4227                           ;	unspecified, using default values
  4228   200005                     	org	2097157
  4229   200005  FF                 	db	255
  4230                           
  4231                           ;Config register IDLOC6 @ 0x200006
  4232                           ;	unspecified, using default values
  4233   200006                     	org	2097158
  4234   200006  FF                 	db	255
  4235                           
  4236                           ;Config register IDLOC7 @ 0x200007
  4237                           ;	unspecified, using default values
  4238   200007                     	org	2097159
  4239   200007  FF                 	db	255
  4240                           
  4241                           	psect	config
  4242                           
  4243                           ;Config register CONFIG1L @ 0x300000
  4244                           ;	unspecified, using default values
  4245                           ;	PLL Prescaler Selection bits
  4246                           ;	PLLDIV = 0x0, unprogrammed default
  4247                           ;	System Clock Postscaler Selection bits
  4248                           ;	CPUDIV = 0x0, unprogrammed default
  4249                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4250                           ;	USBDIV = 0x0, unprogrammed default
  4251   300000                     	org	3145728
  4252   300000  00                 	db	0
  4253                           
  4254                           ;Config register CONFIG1H @ 0x300001
  4255                           ;	Oscillator Selection bits
  4256                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4257                           ;	Fail-Safe Clock Monitor Enable bit
  4258                           ;	FCMEN = 0x0, unprogrammed default
  4259                           ;	Internal/External Oscillator Switchover bit
  4260                           ;	IESO = 0x0, unprogrammed default
  4261   300001                     	org	3145729
  4262   300001  09                 	db	9
  4263                           
  4264                           ;Config register CONFIG2L @ 0x300002
  4265                           ;	unspecified, using default values
  4266                           ;	Power-up Timer Enable bit
  4267                           ;	PWRT = 0x1, unprogrammed default
  4268                           ;	Brown-out Reset Enable bits
  4269                           ;	BOR = 0x3, unprogrammed default
  4270                           ;	Brown-out Reset Voltage bits
  4271                           ;	BORV = 0x3, unprogrammed default
  4272                           ;	USB Voltage Regulator Enable bit
  4273                           ;	VREGEN = 0x0, unprogrammed default
  4274   300002                     	org	3145730
  4275   300002  1F                 	db	31
  4276                           
  4277                           ;Config register CONFIG2H @ 0x300003
  4278                           ;	Watchdog Timer Enable bit
  4279                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4280                           ;	Watchdog Timer Postscale Select bits
  4281                           ;	WDTPS = 0xF, unprogrammed default
  4282   300003                     	org	3145731
  4283   300003  1E                 	db	30
  4284                           
  4285                           ; Padding undefined space
  4286   300004                     	org	3145732
  4287   300004  FF                 	db	255
  4288                           
  4289                           ;Config register CONFIG3H @ 0x300005
  4290                           ;	CCP2 MUX bit
  4291                           ;	CCP2MX = 0x1, unprogrammed default
  4292                           ;	PORTB A/D Enable bit
  4293                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4294                           ;	Low-Power Timer 1 Oscillator Enable bit
  4295                           ;	LPT1OSC = 0x0, unprogrammed default
  4296                           ;	MCLR Pin Enable bit
  4297                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4298   300005                     	org	3145733
  4299   300005  81                 	db	129
  4300                           
  4301                           ;Config register CONFIG4L @ 0x300006
  4302                           ;	Stack Full/Underflow Reset Enable bit
  4303                           ;	STVREN = 0x1, unprogrammed default
  4304                           ;	Single-Supply ICSP Enable bit
  4305                           ;	LVP = OFF, Single-Supply ICSP disabled
  4306                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4307                           ;	ICPRT = 0x0, unprogrammed default
  4308                           ;	Extended Instruction Set Enable bit
  4309                           ;	XINST = 0x0, unprogrammed default
  4310                           ;	Background Debugger Enable bit
  4311                           ;	DEBUG = 0x1, unprogrammed default
  4312   300006                     	org	3145734
  4313   300006  81                 	db	129
  4314                           
  4315                           ; Padding undefined space
  4316   300007                     	org	3145735
  4317   300007  FF                 	db	255
  4318                           
  4319                           ;Config register CONFIG5L @ 0x300008
  4320                           ;	unspecified, using default values
  4321                           ;	Code Protection bit
  4322                           ;	CP0 = 0x1, unprogrammed default
  4323                           ;	Code Protection bit
  4324                           ;	CP1 = 0x1, unprogrammed default
  4325                           ;	Code Protection bit
  4326                           ;	CP2 = 0x1, unprogrammed default
  4327                           ;	Code Protection bit
  4328                           ;	CP3 = 0x1, unprogrammed default
  4329   300008                     	org	3145736
  4330   300008  0F                 	db	15
  4331                           
  4332                           ;Config register CONFIG5H @ 0x300009
  4333                           ;	unspecified, using default values
  4334                           ;	Boot Block Code Protection bit
  4335                           ;	CPB = 0x1, unprogrammed default
  4336                           ;	Data EEPROM Code Protection bit
  4337                           ;	CPD = 0x1, unprogrammed default
  4338   300009                     	org	3145737
  4339   300009  C0                 	db	192
  4340                           
  4341                           ;Config register CONFIG6L @ 0x30000A
  4342                           ;	unspecified, using default values
  4343                           ;	Write Protection bit
  4344                           ;	WRT0 = 0x1, unprogrammed default
  4345                           ;	Write Protection bit
  4346                           ;	WRT1 = 0x1, unprogrammed default
  4347                           ;	Write Protection bit
  4348                           ;	WRT2 = 0x1, unprogrammed default
  4349                           ;	Write Protection bit
  4350                           ;	WRT3 = 0x1, unprogrammed default
  4351   30000A                     	org	3145738
  4352   30000A  0F                 	db	15
  4353                           
  4354                           ;Config register CONFIG6H @ 0x30000B
  4355                           ;	unspecified, using default values
  4356                           ;	Configuration Register Write Protection bit
  4357                           ;	WRTC = 0x1, unprogrammed default
  4358                           ;	Boot Block Write Protection bit
  4359                           ;	WRTB = 0x1, unprogrammed default
  4360                           ;	Data EEPROM Write Protection bit
  4361                           ;	WRTD = 0x1, unprogrammed default
  4362   30000B                     	org	3145739
  4363   30000B  E0                 	db	224
  4364                           
  4365                           ;Config register CONFIG7L @ 0x30000C
  4366                           ;	unspecified, using default values
  4367                           ;	Table Read Protection bit
  4368                           ;	EBTR0 = 0x1, unprogrammed default
  4369                           ;	Table Read Protection bit
  4370                           ;	EBTR1 = 0x1, unprogrammed default
  4371                           ;	Table Read Protection bit
  4372                           ;	EBTR2 = 0x1, unprogrammed default
  4373                           ;	Table Read Protection bit
  4374                           ;	EBTR3 = 0x1, unprogrammed default
  4375   30000C                     	org	3145740
  4376   30000C  0F                 	db	15
  4377                           
  4378                           ;Config register CONFIG7H @ 0x30000D
  4379                           ;	unspecified, using default values
  4380                           ;	Boot Block Table Read Protection bit
  4381                           ;	EBTRB = 0x1, unprogrammed default
  4382   30000D                     	org	3145741
  4383   30000D  40                 	db	64
  4384                           tosu	equ	0xFFF
  4385                           tosh	equ	0xFFE
  4386                           tosl	equ	0xFFD
  4387                           stkptr	equ	0xFFC
  4388                           pclatu	equ	0xFFB
  4389                           pclath	equ	0xFFA
  4390                           pcl	equ	0xFF9
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           prodh	equ	0xFF4
  4396                           prodl	equ	0xFF3
  4397                           indf0	equ	0xFEF
  4398                           postinc0	equ	0xFEE
  4399                           postdec0	equ	0xFED
  4400                           preinc0	equ	0xFEC
  4401                           plusw0	equ	0xFEB
  4402                           fsr0h	equ	0xFEA
  4403                           fsr0l	equ	0xFE9
  4404                           wreg	equ	0xFE8
  4405                           indf1	equ	0xFE7
  4406                           postinc1	equ	0xFE6
  4407                           postdec1	equ	0xFE5
  4408                           preinc1	equ	0xFE4
  4409                           plusw1	equ	0xFE3
  4410                           fsr1h	equ	0xFE2
  4411                           fsr1l	equ	0xFE1
  4412                           bsr	equ	0xFE0
  4413                           indf2	equ	0xFDF
  4414                           postinc2	equ	0xFDE
  4415                           postdec2	equ	0xFDD
  4416                           preinc2	equ	0xFDC
  4417                           plusw2	equ	0xFDB
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    0
    Data        12
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[11]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[11]), STR_2(CODE[5]), STR_1(CODE[8]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> heart(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _main->___lwdiv
    ___lwdiv->___wmul
    _NuevoCaracter->_EscribeLCD_c
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    6498
                                             26 COMRAM    10    10      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                      _NuevoCaracter
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1890
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     427
                                             18 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      44
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     848
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      88
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      22
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     402
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   ___lldiv
   ___llmod
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         7      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      29        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 19 12:13:44 2023

                        _i 0033                          _m 003B                          _r 0025  
                       _PD 007E82                         _RI 007E84                         _TO 007E83  
                       _n1 0037                         _n2 0035                 EnviaDato@a 0011  
                       _op 0041        ___wmul@multiplicand 0010              ??_LeerTeclado 000E  
                      l210 0D64              _InicializaLCD 1210                        l246 1118  
                      l271 11E0                        l257 1174                        l249 1120  
                      l275 11F4                        l267 11D0                        l259 117C  
                      l339 131C                        l187 0B40                        l276 120C  
                      l277 11FC                        l269 11D8                        l279 1204  
                      l720 147A                        l801 1740                        l791 15D6  
                      _GIE 007F97                        _RB4 007C0C                        _RB5 007C0D  
                      _RB6 007C0E                        _RB7 007C0F                        _RC6 007C16  
                      _ISR 0008                        _n1c 0040                        _n2c 003F  
                      wreg 000FE8                       ?_ISR 0001           ??i2_EscribeLCD_c 0005  
                     l2123 15E8                       l2301 13D8                       l3021 0B60  
                     l3005 0B0A                       l2055 1222                       l3103 0E72  
                     l3111 0EA0                       l3031 0BC0                       l3023 0B96  
                     l2305 13DE                       l2065 1240                       l2225 11C4  
                     l2217 11A4                       l2209 1184                       l2321 149C  
                     l2401 1736                       l3017 0B3A                       l2307 1420  
                     l2075 125E                       l2171 1128                       l3027 0BA2  
                     l3019 0B48                       l2253 11E8                       l2325 14B0  
                     l3141 0F76                       l3133 0F3A                       l3125 0F02  
                     l3053 0C5C                       l3045 0C3A                       l2095 1296  
                     l2335 12CE                       l3071 0D0A                       l3063 0CBA  
                     l3055 0C6A                       l3039 0C26                       l2337 12DA  
                     l3153 0FA4                       l3129 0F1E                       l3081 0D4E  
                     l2291 13C8                       l2187 1168                       l2179 1148  
                     l2347 130E                       l2363 146C                       l2355 1438  
                     l3091 0DFC                       l3075 0D14                       l3067 0CD4  
                     l3059 0CAC                       l2293 13CC                       l2357 1444  
                     l2373 15A4                       l3149 0F96                       l3181 10D4  
                     l3085 0D5E                       l2295 13D0                       l2287 13C0  
                     l2375 15AC                       l3175 10C6                       l3167 1076  
                     l3159 0FE0                       l3095 0E10                       l3079 0D26  
                     l3183 10DE                       l2289 13C4                       l2385 15CC  
                     l2393 1716                       l3177 10CC                       l3185 10E4  
                     l2299 13D4                       l2395 171E                       l2821 1760  
                     l1943 14E6                       l1945 14F6                       l1953 151C  
                     l1947 1508                       l2915 0998                       l1949 1512  
                     l2861 08BC                       l2855 0894                       l1985 16B4  
                     l2945 0A0E                       l2881 0920                       l2973 0A84  
                     STR_1 0828                       STR_2 083A                       STR_3 0812  
                     STR_4 0801                       STR_5 0801                       STR_6 0835  
                     STR_7 0830                       STR_8 081D                       u1510 162C  
                     _LATB 000F8A                       _LATC 000F8B                       u1600 113C  
                     _LATD 000F8C                       u1602 113E                       u1620 1150  
                     u3220 0AEC                       u1710 11AC                       u1630 115C  
                     u1622 1152                       u1550 1104                       u1720 11B8  
                     u1712 11AE                       u1632 115E                       u3080 0A5E  
                     u1722 11BA                       u3500 0F5C                       u1590 1130  
                     u3510 0F6E                       u3430 0EB0                       u1680 118C  
                     u1592 1132                       u1920 15B0                       u3440 0EC2  
                     u1690 1198                       u1682 118E                       u2810 1784  
                     u3450 0ED4                       u1692 119A                       u1860 12DE  
                     u1950 1722                       u3390 0E0E                       u2830 089C  
                     u3607 10EA                       u2840 08A8                       u2832 089E  
                     u3617 17EA                       u1890 1448                       u3490 0F4A  
                     u2842 08AA                       u3627 14EC                       u3637 14F8  
                     u2950 09E0                       u3647 1500                       u3657 150A  
                     u2890 09B0                       u3667 1514                       u3587 08C6  
                     u3677 1886                       u3597 0904                       _RBPU 007F8F  
                     _TMR0 000FD6             ??_EscribeLCD_c 0012                       _flag 0039  
                     _main 0840                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004B  
                     prodh 000FF4                       prodl 000FF3                       start 000E  
             ___param_bank 000000                      ??_ISR 000A             ?_InicializaLCD 0001  
                    ?_main 0001                 _ComandoLCD 17C0              EscribeLCD_c@a 0012  
          __end_of___lldiv 132E                      _T0CON 000FD5            __end_of___llmod 148C  
                    _LATE0 007C68                      _LATE1 007C69                      _LATE2 007C6A  
          __end_of___lwdiv 15E0            __end_of___lwmod 174A                      i2l306 1396  
                    i2l309 1398                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96        ___lmul@multiplicand 0012  
                    _Tecla 003A        __end_of_LeerTeclado 1210                      _heart 0043  
                    _color 0031                ?i2_BorraLCD 0001                      main@i 0021  
                    main@j 0023                      main@k 001F             NuevoCaracter@c 0013  
           NuevoCaracter@i 0015                      tablat 000FF5                _HabilitaLCD 1882  
                    ttemp5 004C                      ttemp6 004F                      ttemp7 0053  
                    status 000FD8                      wtemp8 004C           __end_of_BorraLCD 186E  
         __end_of_ColorRGB 1426            __initialization 1786               __end_of_main 10F6  
                   ??_main 001B              __activetblptr 000002                     _ADCON1 000FC1  
    __end_of_NuevoCaracter 1786           ___llmod@dividend 000E             DireccionaLCD@a 0012  
                   i2l2419 1636                     i2l2801 1376                     i2l1963 153C  
                   i2l1965 154C                     i2l1973 1572                     i2l1967 155E  
                   i2l1969 1568                     i2l2795 135A                     i2l2797 1362  
                   i2l1999 16FA                     _OSCCON 000FD3                     _TMR0IE 007F95  
                   _TMR0IF 007F92                     _TMR0ON 007EAF      __end_of_DireccionaLCD 1844  
               _RetardoLCD 14E2                     ___lmul 148C                     ___wmul 17F2  
                ??___lldiv 0016                  ??___llmod 0016                  ??___lwdiv 0018  
                ??___lwmod 0012            ??_InicializaLCD 0012                     clear_0 17AC  
                   isa$std 000001       __end_of_EscribeLCD_c 182E                ?_ComandoLCD 0001  
              _LeerTeclado 10F6               ?i2_EnviaDato 0001               __pdataCOMRAM 003F  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8      __end_ofi2_HabilitaLCD 189E                 __accesstop 0060  
  __end_of__initialization 17B2              ___rparam_used 000001             __pcstackCOMRAM 0001  
        __end_of_EnviaDato 16C2          i2_MensajeLCD_Word 162E         ?i2_MensajeLCD_Word 0006  
                ?_BorraLCD 0001                  ?_ColorRGB 0001        ??i2_MensajeLCD_Word 0007  
              ?_RetardoLCD 0001                RetardoLCD@a 000F             ComandoLCD@data 000F  
                  ?___lmul 000E                    ?___wmul 000E             ___lmul@product 0016  
__end_ofi2_MensajeLCD_Word 167C               ??i2_BorraLCD 0005                 ??_BorraLCD 0012  
               ??_ColorRGB 000E          ??_MensajeLCD_Word 0014               ?_HabilitaLCD 0001  
                  __Hparam 0000                    __Lparam 0000                    ___lldiv 12AC  
                  ___llmod 1426                    ___lwdiv 158E                    ___lwmod 1708  
             __psmallconst 0800         __end_ofi2_BorraLCD 1882                    __pcinit 1786  
                  __ramtop 0800                    __ptext0 0840                    __ptext1 17F2  
                  __ptext2 1708                    __ptext3 158E                    __ptext4 148C  
                  __ptext5 1426                    __ptext6 12AC                    __ptext7 174A  
                  __ptext8 17C0                    __ptext9 15E0             __pintcode_body 132E  
     end_of_initialization 17B2              __Lmediumconst 0000                    int_func 132E  
             _EscribeLCD_c 1818            ___lldiv@divisor 0012            ___lldiv@counter 001A  
                  postdec1 000FE5                    postinc0 000FEE               ??_ComandoLCD 000E  
             ?_LeerTeclado 0001            i2EscribeLCD_c@a 0005              ?i2_RetardoLCD 0001  
       __end_of_ComandoLCD 17F2             __end_of___lmul 14E2             __end_of___wmul 1818  
            __pidataCOMRAM 189E      __end_of_InicializaLCD 12AC                  _EnviaDato 167C  
      start_initialization 1786                __end_of_ISR 13AC             ??i2_RetardoLCD 0001  
             ??_RetardoLCD 000E            ___llmod@divisor 0012            ___llmod@counter 0016  
                 ??___lmul 0016                   ??___wmul 0012            _MensajeLCD_Word 15E0  
               ?_EnviaDato 0001                __pbssCOMRAM 0025         __end_of_RetardoLCD 1538  
         MensajeLCD_Word@a 0013           MensajeLCD_Word@i 0015              _NuevoCaracter 174A  
            _DireccionaLCD 182E             i2_EscribeLCD_c 1844           ___lwdiv@dividend 0014  
                __pintcode 0008                   ?___lldiv 000E                   ?___llmod 000E  
                 ?___lwdiv 0014                   ?___lwmod 000E                __smallconst 0800  
         ___lwdiv@quotient 0018             ?_NuevoCaracter 0013             ___wmul@product 0012  
            i2_HabilitaLCD 1890             ?_DireccionaLCD 0001     __end_ofi2_EscribeLCD_c 185A  
                 i2u370_47 1556                   i2u371_47 1560                   i2u372_47 156A  
                 i2u277_40 136C                   i2u373_47 1894                   i2u198_40 167A  
                 i2u278_45 136E                   i2u368_47 1542                   i2u369_47 154E  
  __end_of_MensajeLCD_Word 162E          ___wmul@multiplier 000E              ??i2_EnviaDato 0003  
     __end_ofi2_RetardoLCD 158E                ??_EnviaDato 0010                   _BorraLCD 185A  
                 _ColorRGB 13AC          ___lmul@multiplier 000E                  copy_data0 179A  
           ?i2_HabilitaLCD 0001            ?i2_EscribeLCD_c 0001                   __Hrparam 0000  
                 __Lrparam 0000               i2EnviaDato@a 0004            ??_NuevoCaracter 0014  
          ___lwdiv@divisor 0016            ___lwdiv@counter 001A                   __ptext10 1818  
                 __ptext11 10F6                   __ptext20 162E                   __ptext12 1210  
                 __ptext21 1844                   __ptext13 185A                   __ptext22 186E  
                 __ptext14 182E                   __ptext23 16C2                   __ptext15 167C  
                 __ptext24 1538                   __ptext16 14E2                   __ptext25 1890  
                 __ptext17 1882                   __ptext18 13AC        __end_ofi2_EnviaDato 1708  
                 _contador 002F            ??_DireccionaLCD 0012                   _interfaz 0042  
                 _partdecl 0029                   isa$xinst 000000           ?_MensajeLCD_Word 0013  
                 int$flags 004B          NuevoCaracter@addr 0014            ??i2_HabilitaLCD 0001  
                 intlevel2 0000              ??_HabilitaLCD 000E           ___lwmod@dividend 000E  
         ___lldiv@dividend 000E              i2RetardoLCD@a 0002                i2_EnviaDato 16C2  
         ___lldiv@quotient 0016            ___lwmod@divisor 0010            ___lwmod@counter 0012  
               i2_BorraLCD 186E         i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008  
            ?_EscribeLCD_c 0001                _verificador 002D               i2_RetardoLCD 1538  
      __end_of_HabilitaLCD 1890  

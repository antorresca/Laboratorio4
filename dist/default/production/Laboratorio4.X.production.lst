

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 12 15:35:06 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 04/07/2022 GMT
    26                           ; 
    27                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   000A3E                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _interfaz
    65   000A3E  08                 	db	8
    66   000000                     _LATD0	set	31840
    67   000000                     _RB7	set	31759
    68   000000                     _RB6	set	31758
    69   000000                     _RB5	set	31757
    70   000000                     _LATE1	set	31849
    71   000000                     _LATB	set	3978
    72   000000                     _LATD	set	3980
    73   000000                     _RB4	set	31756
    74   000000                     _TRISB	set	3987
    75   000000                     _TRISD	set	3989
    76   000000                     _ADCON1	set	4033
    77   000000                     _LATE0	set	31848
    78   000000                     _RBPU	set	32655
    79   000000                     _TRISE	set	3990
    80                           
    81                           	psect	smallconst
    82   000800                     __psmallconst:
    83                           	callstack 0
    84   000800  00                 	db	0
    85   000801                     STR_1:
    86   000801  48                 	db	72	;'H'
    87   000802  6F                 	db	111	;'o'
    88   000803  6C                 	db	108	;'l'
    89   000804  61                 	db	97	;'a'
    90   000805  20                 	db	32
    91   000806  6D                 	db	109	;'m'
    92   000807  75                 	db	117	;'u'
    93   000808  6E                 	db	110	;'n'
    94   000809  64                 	db	100	;'d'
    95   00080A  6F                 	db	111	;'o'
    96   00080B  00                 	db	0
    97   00080C  00                 	db	0	; dummy byte at the end
    98   000000                     
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   0009DE                     __pcinit:
   103                           	callstack 0
   104   0009DE                     start_initialization:
   105                           	callstack 0
   106   0009DE                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (1 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111   0009DE  0E3E               	movlw	low __pidataCOMRAM
   112   0009E0  6EF6               	movwf	tblptrl,c
   113   0009E2  0E0A               	movlw	high __pidataCOMRAM
   114   0009E4  6EF7               	movwf	tblptrh,c
   115   0009E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116   0009E8  6EF8               	movwf	tblptru,c
   117   0009EA  0009               	tblrd		*+	;fetch initializer
   118   0009EC  CFF5 F00C          	movff	tablat,__pdataCOMRAM
   119                           
   120                           ; Clear objects allocated to COMRAM (2 bytes)
   121   0009F0  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122   0009F2  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   123   0009F4                     end_of_initialization:
   124                           	callstack 0
   125   0009F4                     __end_of__initialization:
   126                           	callstack 0
   127   0009F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128   0009F6  6EF8               	movwf	tblptru,c
   129   0009F8  0100               	movlb	0
   130   0009FA  EF07  F004         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   00000A                     __pbssCOMRAM:
   134                           	callstack 0
   135   00000A                     _i:
   136                           	callstack 0
   137   00000A                     	ds	1
   138   00000B                     _Tecla:
   139                           	callstack 0
   140   00000B                     	ds	1
   141                           
   142                           	psect	dataCOMRAM
   143   00000C                     __pdataCOMRAM:
   144                           	callstack 0
   145   00000C                     _interfaz:
   146                           	callstack 0
   147   00000C                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150   000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152   000001                     ??_RetardoLCD:
   153   000001                     
   154                           ; 1 bytes @ 0x0
   155   000001                     	ds	1
   156   000002                     RetardoLCD@a:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x1
   160   000002                     	ds	1
   161   000003                     EnviaDato@a:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x2
   165   000003                     	ds	1
   166   000004                     EscribeLCD_c@a:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x3
   170   000004                     	ds	1
   171   000005                     MensajeLCD_Word@a:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175   000005                     	ds	1
   176   000006                     ??_MensajeLCD_Word:
   177                           
   178                           ; 1 bytes @ 0x5
   179   000006                     	ds	1
   180   000007                     MensajeLCD_Word@i:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x6
   184   000007                     	ds	2
   185   000009                     ??_main:
   186                           
   187                           ; 1 bytes @ 0x8
   188   000009                     	ds	1
   189                           
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 11 in file "Laboratorio4.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   209 ;;      Params:         0       0       0       0       0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0       0       0
   211 ;;      Temps:          1       0       0       0       0       0       0       0       0
   212 ;;      Totals:         1       0       0       0       0       0       0       0       0
   213 ;;Total ram usage:        1 bytes
   214 ;; Hardware stack levels required when called: 4
   215 ;; This function calls:
   216 ;;		_BorraLCD
   217 ;;		_InicializaLCD
   218 ;;		_MensajeLCD_Word
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text0
   225   00080E                     __ptext0:
   226                           	callstack 0
   227   00080E                     _main:
   228                           	callstack 27
   229                           
   230                           ;Laboratorio4.c: 12: ADCON1=15;
   231                           
   232                           ;incstack = 0
   233   00080E  0E0F               	movlw	15
   234   000810  6EC1               	movwf	193,c	;volatile
   235                           
   236                           ;Laboratorio4.c: 13: TRISD=0;
   237   000812  0E00               	movlw	0
   238   000814  6E95               	movwf	149,c	;volatile
   239                           
   240                           ;Laboratorio4.c: 14: TRISB=0b11110000;
   241   000816  0EF0               	movlw	240
   242   000818  6E93               	movwf	147,c	;volatile
   243                           
   244                           ;Laboratorio4.c: 15: TRISE=0;
   245   00081A  0E00               	movlw	0
   246   00081C  6E96               	movwf	150,c	;volatile
   247                           
   248                           ;Laboratorio4.c: 16: LATB=0B00000000;
   249   00081E  0E00               	movlw	0
   250   000820  6E8A               	movwf	138,c	;volatile
   251                           
   252                           ;Laboratorio4.c: 17: RBPU=0;
   253   000822  9EF1               	bcf	4081,7,c	;volatile
   254                           
   255                           ;Laboratorio4.c: 18: InicializaLCD();
   256   000824  ECB3  F004         	call	_InicializaLCD	;wreg free
   257                           
   258                           ;Laboratorio4.c: 19: BorraLCD();
   259   000828  EC0A  F005         	call	_BorraLCD	;wreg free
   260                           
   261                           ;Laboratorio4.c: 20: MensajeLCD_Word("Hola mundo");
   262   00082C  0E01               	movlw	low STR_1
   263   00082E  6E05               	movwf	MensajeLCD_Word@a^0,c
   264   000830  ECD4  F004         	call	_MensajeLCD_Word	;wreg free
   265   000834                     l97:
   266   000834  B881               	btfsc	3969,4,c	;volatile
   267   000836  AA81               	btfss	3969,5,c	;volatile
   268   000838  D004               	goto	u270
   269   00083A  AC81               	btfss	3969,6,c	;volatile
   270   00083C  D002               	goto	u270
   271   00083E  BE81               	btfsc	3969,7,c	;volatile
   272   000840  D7F9               	goto	l97
   273   000842                     u270:
   274                           
   275                           ;Laboratorio4.c: 23: LATB=0b11111110;
   276   000842  0EFE               	movlw	254
   277   000844  6E8A               	movwf	138,c	;volatile
   278                           
   279                           ;Laboratorio4.c: 24: if(RB4==0) Tecla=1;
   280   000846  B881               	btfsc	3969,4,c	;volatile
   281   000848  D002               	goto	l102
   282   00084A  0E01               	movlw	1
   283   00084C  D043               	goto	L1
   284   00084E                     l102:
   285                           
   286                           ;Laboratorio4.c: 25: else if(RB5==0) Tecla=2;
   287   00084E  BA81               	btfsc	3969,5,c	;volatile
   288   000850  D002               	goto	l104
   289   000852  0E02               	movlw	2
   290   000854  D03F               	goto	L1
   291   000856                     l104:
   292                           
   293                           ;Laboratorio4.c: 26: else if(RB6==0) Tecla=3;
   294   000856  BC81               	btfsc	3969,6,c	;volatile
   295   000858  D002               	goto	l106
   296   00085A  0E03               	movlw	3
   297   00085C  D03B               	goto	L1
   298   00085E                     l106:
   299                           
   300                           ;Laboratorio4.c: 27: else if(RB7==0) Tecla=4;
   301   00085E  BE81               	btfsc	3969,7,c	;volatile
   302   000860  D002               	goto	l1142
   303   000862  0E04               	movlw	4
   304   000864  D037               	goto	L1
   305   000866                     l1142:
   306                           
   307                           ;Laboratorio4.c: 28: else{;Laboratorio4.c: 29: LATB=0b11111101;
   308   000866  0EFD               	movlw	253
   309   000868  6E8A               	movwf	138,c	;volatile
   310                           
   311                           ;Laboratorio4.c: 30: if(RB4==0) Tecla=5;
   312   00086A  B881               	btfsc	3969,4,c	;volatile
   313   00086C  D002               	goto	l110
   314   00086E  0E05               	movlw	5
   315   000870  D031               	goto	L1
   316   000872                     l110:
   317                           
   318                           ;Laboratorio4.c: 31: else if(RB5==0) Tecla=6;
   319   000872  BA81               	btfsc	3969,5,c	;volatile
   320   000874  D002               	goto	l112
   321   000876  0E06               	movlw	6
   322   000878  D02D               	goto	L1
   323   00087A                     l112:
   324                           
   325                           ;Laboratorio4.c: 32: else if(RB6==0) Tecla=7;
   326   00087A  BC81               	btfsc	3969,6,c	;volatile
   327   00087C  D002               	goto	l114
   328   00087E  0E07               	movlw	7
   329   000880  D029               	goto	L1
   330   000882                     l114:
   331                           
   332                           ;Laboratorio4.c: 33: else if(RB7==0) Tecla=8;
   333   000882  BE81               	btfsc	3969,7,c	;volatile
   334   000884  D002               	goto	l1154
   335   000886  0E08               	movlw	8
   336   000888  D025               	goto	L1
   337   00088A                     l1154:
   338                           
   339                           ;Laboratorio4.c: 34: else{;Laboratorio4.c: 35: LATB=0b11111011;
   340   00088A  0EFB               	movlw	251
   341   00088C  6E8A               	movwf	138,c	;volatile
   342                           
   343                           ;Laboratorio4.c: 36: if(RB4==0) Tecla=9;
   344   00088E  B881               	btfsc	3969,4,c	;volatile
   345   000890  D002               	goto	l118
   346   000892  0E09               	movlw	9
   347   000894  D01F               	goto	L1
   348   000896                     l118:
   349                           
   350                           ;Laboratorio4.c: 37: else if(RB5==0) Tecla=10;
   351   000896  BA81               	btfsc	3969,5,c	;volatile
   352   000898  D002               	goto	l120
   353   00089A  0E0A               	movlw	10
   354   00089C  D01B               	goto	L1
   355   00089E                     l120:
   356                           
   357                           ;Laboratorio4.c: 38: else if(RB6==0) Tecla=11;
   358   00089E  BC81               	btfsc	3969,6,c	;volatile
   359   0008A0  D002               	goto	l122
   360   0008A2  0E0B               	movlw	11
   361   0008A4  D017               	goto	L1
   362   0008A6                     l122:
   363                           
   364                           ;Laboratorio4.c: 39: else if(RB7==0) Tecla=12;
   365   0008A6  BE81               	btfsc	3969,7,c	;volatile
   366   0008A8  D002               	goto	l1166
   367   0008AA  0E0C               	movlw	12
   368   0008AC  D013               	goto	L1
   369   0008AE                     l1166:
   370                           
   371                           ;Laboratorio4.c: 40: else{;Laboratorio4.c: 41: LATB=0b11110111;
   372   0008AE  0EF7               	movlw	247
   373   0008B0  6E8A               	movwf	138,c	;volatile
   374                           
   375                           ;Laboratorio4.c: 42: if(RB4==0) Tecla=13;
   376   0008B2  B881               	btfsc	3969,4,c	;volatile
   377   0008B4  D002               	goto	l126
   378   0008B6  0E0D               	movlw	13
   379   0008B8  D00D               	goto	L1
   380   0008BA                     l126:
   381                           
   382                           ;Laboratorio4.c: 43: else if(RB5==0) Tecla=14;
   383   0008BA  BA81               	btfsc	3969,5,c	;volatile
   384   0008BC  D002               	goto	l128
   385   0008BE  0E0E               	movlw	14
   386   0008C0  D009               	goto	L1
   387   0008C2                     l128:
   388                           
   389                           ;Laboratorio4.c: 44: else if(RB6==0) Tecla=15;
   390   0008C2  BC81               	btfsc	3969,6,c	;volatile
   391   0008C4  D002               	goto	l130
   392   0008C6  0E0F               	movlw	15
   393   0008C8  D005               	goto	L1
   394   0008CA                     l130:
   395                           
   396                           ;Laboratorio4.c: 45: else if(RB7==0) Tecla=16;
   397   0008CA  BE81               	btfsc	3969,7,c	;volatile
   398   0008CC  D002               	goto	l1178
   399   0008CE  0E10               	movlw	16
   400   0008D0  D001               	goto	L1
   401   0008D2                     l1178:
   402                           
   403                           ;Laboratorio4.c: 46: else Tecla=0;
   404   0008D2  0E00               	movlw	0
   405   0008D4                     L1:
   406   0008D4  6E0B               	movwf	_Tecla^0,c
   407                           
   408                           ;Laboratorio4.c: 47: };Laboratorio4.c: 48: };Laboratorio4.c: 49: };Laboratorio4.c: 50: L
      +                          ATB=0b11110000;
   409   0008D6  0EF0               	movlw	240
   410   0008D8  6E8A               	movwf	138,c	;volatile
   411                           
   412                           ;Laboratorio4.c: 51: for(i=0;i<Tecla;i++){
   413   0008DA  0E00               	movlw	0
   414   0008DC  6E0A               	movwf	_i^0,c
   415   0008DE  D011               	goto	l134
   416   0008E0                     l135:
   417                           
   418                           ;Laboratorio4.c: 52: LATD0=1;
   419   0008E0  808C               	bsf	3980,0,c	;volatile
   420                           
   421                           ;Laboratorio4.c: 53: _delay((unsigned long)((400)*(1000000/4000.0)));
   422   0008E2  0E82               	movlw	130
   423   0008E4  6E09               	movwf	??_main^0,c
   424   0008E6  0EDE               	movlw	222
   425   0008E8                     u457:
   426   0008E8  2EE8               	decfsz	wreg,f,c
   427   0008EA  D7FE               	bra	u457
   428   0008EC  2E09               	decfsz	??_main^0,f,c
   429   0008EE  D7FC               	bra	u457
   430                           
   431                           ;Laboratorio4.c: 54: LATD0=0;
   432   0008F0  908C               	bcf	3980,0,c	;volatile
   433                           
   434                           ;Laboratorio4.c: 55: _delay((unsigned long)((400)*(1000000/4000.0)));
   435   0008F2  0E82               	movlw	130
   436   0008F4  6E09               	movwf	??_main^0,c
   437   0008F6  0EDE               	movlw	222
   438   0008F8                     u467:
   439   0008F8  2EE8               	decfsz	wreg,f,c
   440   0008FA  D7FE               	bra	u467
   441   0008FC  2E09               	decfsz	??_main^0,f,c
   442   0008FE  D7FC               	bra	u467
   443   000900  2A0A               	incf	_i^0,f,c
   444   000902                     l134:
   445   000902  500B               	movf	_Tecla^0,w,c
   446   000904  5C0A               	subwf	_i^0,w,c
   447   000906  A0D8               	btfss	status,0,c
   448   000908  D7EB               	goto	l135
   449                           
   450                           ;Laboratorio4.c: 56: };Laboratorio4.c: 57: Tecla=0;
   451   00090A  0E00               	movlw	0
   452   00090C  6E0B               	movwf	_Tecla^0,c
   453   00090E  D792               	goto	l97
   454   000910                     __end_of_main:
   455                           	callstack 0
   456                           
   457 ;; *************** function _MensajeLCD_Word *****************
   458 ;; Defined at:
   459 ;;		line 239 in file "LibLCDXC8.h"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  a               1    4[COMRAM] PTR unsigned char 
   462 ;;		 -> STR_1(11), 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  i               2    6[COMRAM] int 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         1       0       0       0       0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0       0       0       0       0
   476 ;;      Temps:          1       0       0       0       0       0       0       0       0
   477 ;;      Totals:         4       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        4 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 3
   481 ;; This function calls:
   482 ;;		_EscribeLCD_c
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text1
   489   0009A8                     __ptext1:
   490                           	callstack 0
   491   0009A8                     _MensajeLCD_Word:
   492                           	callstack 27
   493                           
   494                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
   495                           
   496                           ;incstack = 0
   497   0009A8  0E00               	movlw	0
   498   0009AA  6E08               	movwf	(MensajeLCD_Word@i+1)^0,c
   499   0009AC  0E00               	movlw	0
   500   0009AE  6E07               	movwf	MensajeLCD_Word@i^0,c
   501   0009B0                     l1108:
   502                           
   503                           ;LibLCDXC8.h: 244: EscribeLCD_c(a[i]);
   504   0009B0  5005               	movf	MensajeLCD_Word@a^0,w,c
   505   0009B2  2407               	addwf	MensajeLCD_Word@i^0,w,c
   506   0009B4  6E06               	movwf	??_MensajeLCD_Word^0,c
   507   0009B6  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
   508   0009BA                     	if	1	;There is more than 1 active tblptr byte
   509   0009BA  0E08               	movlw	high __smallconst
   510   0009BC  6EF7               	movwf	tblptrh,c
   511   0009BE                     	endif
   512   0009BE                     	if	0	;tblptru may be non-zero
   513   0009BE                     	endif
   514   0009BE                     	if	0	;tblptru may be non-zero
   515   0009BE                     	endif
   516   0009BE  0008               	tblrd		*
   517   0009C0  50F5               	movf	tablat,w,c
   518   0009C2  ECFF  F004         	call	_EscribeLCD_c
   519   0009C6  4A07               	infsnz	MensajeLCD_Word@i^0,f,c
   520   0009C8  2A08               	incf	(MensajeLCD_Word@i+1)^0,f,c
   521   0009CA  BE08               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
   522   0009CC  D7F1               	goto	l1108
   523   0009CE  5008               	movf	(MensajeLCD_Word@i+1)^0,w,c
   524   0009D0  E105               	bnz	u230
   525   0009D2  0E10               	movlw	16
   526   0009D4  5C07               	subwf	MensajeLCD_Word@i^0,w,c
   527   0009D6  B0D8               	btfsc	status,0,c
   528   0009D8  0012               	return	
   529   0009DA  D7EA               	goto	l1108
   530   0009DC                     u230:
   531   0009DC  0012               	return		;funcret
   532   0009DE                     __end_of_MensajeLCD_Word:
   533                           	callstack 0
   534                           
   535 ;; *************** function _EscribeLCD_c *****************
   536 ;; Defined at:
   537 ;;		line 140 in file "LibLCDXC8.h"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  a               1    wreg     unsigned char 
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  a               1    3[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   551 ;;      Params:         0       0       0       0       0       0       0       0       0
   552 ;;      Locals:         1       0       0       0       0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0       0       0
   554 ;;      Totals:         1       0       0       0       0       0       0       0       0
   555 ;;Total ram usage:        1 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 2
   558 ;; This function calls:
   559 ;;		_EnviaDato
   560 ;;		_HabilitaLCD
   561 ;;		_RetardoLCD
   562 ;; This function is called by:
   563 ;;		_MensajeLCD_Word
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text2
   568   0009FE                     __ptext2:
   569                           	callstack 0
   570   0009FE                     _EscribeLCD_c:
   571                           	callstack 27
   572                           
   573                           ;incstack = 0
   574                           ;EscribeLCD_c@a stored from wreg
   575   0009FE  6E04               	movwf	EscribeLCD_c@a^0,c
   576                           
   577                           ;LibLCDXC8.h: 144: LATE0=1;
   578   000A00  808D               	bsf	3981,0,c	;volatile
   579                           
   580                           ;LibLCDXC8.h: 145: EnviaDato(a);
   581   000A02  5004               	movf	EscribeLCD_c@a^0,w,c
   582   000A04  EC1B  F005         	call	_EnviaDato
   583                           
   584                           ;LibLCDXC8.h: 146: HabilitaLCD();
   585   000A08  EC14  F005         	call	_HabilitaLCD	;wreg free
   586                           
   587                           ;LibLCDXC8.h: 147: RetardoLCD(4);
   588   000A0C  0E04               	movlw	4
   589   000A0E  EC88  F004         	call	_RetardoLCD
   590   000A12  0012               	return		;funcret
   591   000A14                     __end_of_EscribeLCD_c:
   592                           	callstack 0
   593                           
   594 ;; *************** function _InicializaLCD *****************
   595 ;; Defined at:
   596 ;;		line 71 in file "LibLCDXC8.h"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   610 ;;      Params:         0       0       0       0       0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0
   613 ;;      Totals:         0       0       0       0       0       0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 3
   617 ;; This function calls:
   618 ;;		_BorraLCD
   619 ;;		_EnviaDato
   620 ;;		_HabilitaLCD
   621 ;;		_RetardoLCD
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text3
   628   000966                     __ptext3:
   629                           	callstack 0
   630   000966                     _InicializaLCD:
   631                           	callstack 27
   632                           
   633                           ;LibLCDXC8.h: 73: LATE0=0;
   634                           
   635                           ;incstack = 0
   636   000966  908D               	bcf	3981,0,c	;volatile
   637                           
   638                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
   639                           
   640                           ;LibLCDXC8.h: 74: if(interfaz==4)
   641   000968  0E3F               	movlw	63
   642   00096A  6E8C               	movwf	140,c	;volatile
   643                           
   644                           ;LibLCDXC8.h: 78: HabilitaLCD();
   645   00096C  EC14  F005         	call	_HabilitaLCD	;wreg free
   646                           
   647                           ;LibLCDXC8.h: 79: RetardoLCD(1);
   648   000970  0E01               	movlw	1
   649   000972  EC88  F004         	call	_RetardoLCD
   650                           
   651                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
   652                           
   653                           ;LibLCDXC8.h: 80: if(interfaz==4)
   654   000976  0E3F               	movlw	63
   655   000978  6E8C               	movwf	140,c	;volatile
   656                           
   657                           ;LibLCDXC8.h: 84: HabilitaLCD();
   658   00097A  EC14  F005         	call	_HabilitaLCD	;wreg free
   659                           
   660                           ;LibLCDXC8.h: 85: RetardoLCD(3);
   661   00097E  0E03               	movlw	3
   662   000980  EC88  F004         	call	_RetardoLCD
   663                           
   664                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
   665                           
   666                           ;LibLCDXC8.h: 86: if(interfaz==4)
   667   000984  0E3F               	movlw	63
   668   000986  6E8C               	movwf	140,c	;volatile
   669                           
   670                           ;LibLCDXC8.h: 90: HabilitaLCD();
   671   000988  EC14  F005         	call	_HabilitaLCD	;wreg free
   672                           
   673                           ;LibLCDXC8.h: 91: RetardoLCD(4);
   674   00098C  0E04               	movlw	4
   675   00098E  EC88  F004         	call	_RetardoLCD
   676                           
   677                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
   678                           
   679                           ;LibLCDXC8.h: 92: if(interfaz==4){
   680   000992  EC0A  F005         	call	_BorraLCD	;wreg free
   681                           
   682                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
   683   000996  0E0F               	movlw	15
   684   000998  EC1B  F005         	call	_EnviaDato
   685                           
   686                           ;LibLCDXC8.h: 102: HabilitaLCD();
   687   00099C  EC14  F005         	call	_HabilitaLCD	;wreg free
   688                           
   689                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   690   0009A0  0E04               	movlw	4
   691   0009A2  EC88  F004         	call	_RetardoLCD
   692   0009A6  0012               	return		;funcret
   693   0009A8                     __end_of_InicializaLCD:
   694                           	callstack 0
   695                           
   696 ;; *************** function _BorraLCD *****************
   697 ;; Defined at:
   698 ;;		line 112 in file "LibLCDXC8.h"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   712 ;;      Params:         0       0       0       0       0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 2
   719 ;; This function calls:
   720 ;;		_EnviaDato
   721 ;;		_HabilitaLCD
   722 ;;		_RetardoLCD
   723 ;; This function is called by:
   724 ;;		_InicializaLCD
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text4
   730   000A14                     __ptext4:
   731                           	callstack 0
   732   000A14                     _BorraLCD:
   733                           	callstack 27
   734                           
   735                           ;LibLCDXC8.h: 114: LATE0=0;
   736                           
   737                           ;incstack = 0
   738   000A14  908D               	bcf	3981,0,c	;volatile
   739                           
   740                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
   741   000A16  0E01               	movlw	1
   742   000A18  EC1B  F005         	call	_EnviaDato
   743                           
   744                           ;LibLCDXC8.h: 116: HabilitaLCD();
   745   000A1C  EC14  F005         	call	_HabilitaLCD	;wreg free
   746                           
   747                           ;LibLCDXC8.h: 117: RetardoLCD(2);
   748   000A20  0E02               	movlw	2
   749   000A22  EC88  F004         	call	_RetardoLCD
   750   000A26  0012               	return		;funcret
   751   000A28                     __end_of_BorraLCD:
   752                           	callstack 0
   753                           
   754 ;; *************** function _EnviaDato *****************
   755 ;; Defined at:
   756 ;;		line 59 in file "LibLCDXC8.h"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  a               1    wreg     unsigned char 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  a               1    2[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         1       0       0       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0
   773 ;;      Totals:         1       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        1 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 1
   777 ;; This function calls:
   778 ;;		_HabilitaLCD
   779 ;;		_RetardoLCD
   780 ;; This function is called by:
   781 ;;		_InicializaLCD
   782 ;;		_BorraLCD
   783 ;;		_EscribeLCD_c
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text5
   788   000A36                     __ptext5:
   789                           	callstack 0
   790   000A36                     _EnviaDato:
   791                           	callstack 27
   792                           
   793                           ;incstack = 0
   794                           ;EnviaDato@a stored from wreg
   795   000A36  6E03               	movwf	EnviaDato@a^0,c
   796                           
   797                           ;LibLCDXC8.h: 68: LATD=a;
   798                           
   799                           ;LibLCDXC8.h: 60: if(interfaz==4){
   800   000A38  C003  FF8C         	movff	EnviaDato@a,3980	;volatile
   801   000A3C  0012               	return		;funcret
   802   000A3E                     __end_of_EnviaDato:
   803                           	callstack 0
   804                           
   805 ;; *************** function _RetardoLCD *****************
   806 ;; Defined at:
   807 ;;		line 284 in file "LibLCDXC8.h"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  a               1    wreg     unsigned char 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  a               1    1[COMRAM] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         0       0       0       0       0       0       0       0       0
   822 ;;      Locals:         1       0       0       0       0       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0       0       0       0       0
   824 ;;      Totals:         2       0       0       0       0       0       0       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_EnviaDato
   831 ;;		_InicializaLCD
   832 ;;		_BorraLCD
   833 ;;		_EscribeLCD_c
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text6
   838   000910                     __ptext6:
   839                           	callstack 0
   840   000910                     _RetardoLCD:
   841                           	callstack 28
   842                           
   843                           ;incstack = 0
   844                           ;RetardoLCD@a stored from wreg
   845   000910  6E02               	movwf	RetardoLCD@a^0,c
   846                           
   847                           ;LibLCDXC8.h: 285: switch(a){
   848   000912  D01B               	goto	l944
   849   000914                     l934:
   850   000914  0E05               	movlw	5
   851   000916  6E01               	movwf	??_RetardoLCD^0,c
   852   000918  0EDE               	movlw	222
   853   00091A                     u477:
   854   00091A  2EE8               	decfsz	wreg,f,c
   855   00091C  D7FE               	bra	u477
   856   00091E  2E01               	decfsz	??_RetardoLCD^0,f,c
   857   000920  D7FC               	bra	u477
   858                           
   859                           ;LibLCDXC8.h: 288: break;
   860   000922  0012               	return	
   861   000924                     l936:
   862   000924  0E53               	movlw	83
   863   000926                     u487:
   864   000926  2EE8               	decfsz	wreg,f,c
   865   000928  D7FE               	bra	u487
   866   00092A  F000               	nop	
   867                           
   868                           ;LibLCDXC8.h: 290: _delay((unsigned long)((640)*(1000000/4000000.0)));
   869   00092C  0E35               	movlw	53
   870   00092E                     u497:
   871   00092E  2EE8               	decfsz	wreg,f,c
   872   000930  D7FE               	bra	u497
   873   000932  F000               	nop	
   874                           
   875                           ;LibLCDXC8.h: 292: break;
   876   000934  0012               	return	
   877   000936                     l938:
   878   000936  0E08               	movlw	8
   879   000938                     u507:
   880   000938  2EE8               	decfsz	wreg,f,c
   881   00093A  D7FE               	bra	u507
   882   00093C  F000               	nop	
   883                           
   884                           ;LibLCDXC8.h: 295: break;
   885   00093E  0012               	return	
   886   000940                     l940:
   887   000940  0E03               	movlw	3
   888   000942                     u517:
   889   000942  2EE8               	decfsz	wreg,f,c
   890   000944  D7FE               	bra	u517
   891   000946  F000               	nop	
   892                           
   893                           ;LibLCDXC8.h: 298: break;
   894   000948  0012               	return	
   895   00094A                     l944:
   896   00094A  5002               	movf	RetardoLCD@a^0,w,c
   897                           
   898                           ; Switch size 1, requested type "simple"
   899                           ; Number of cases is 4, Range of values is 1 to 4
   900                           ; switch strategies available:
   901                           ; Name         Instructions Cycles
   902                           ; simple_byte           13     7 (average)
   903                           ;	Chosen strategy is simple_byte
   904   00094C  0A01               	xorlw	1	; case 1
   905   00094E  B4D8               	btfsc	status,2,c
   906   000950  D7E1               	goto	l934
   907   000952  0A03               	xorlw	3	; case 2
   908   000954  B4D8               	btfsc	status,2,c
   909   000956  D7E6               	goto	l936
   910   000958  0A01               	xorlw	1	; case 3
   911   00095A  B4D8               	btfsc	status,2,c
   912   00095C  D7EC               	goto	l938
   913   00095E  0A07               	xorlw	7	; case 4
   914   000960  A4D8               	btfss	status,2,c
   915   000962  0012               	return	
   916   000964  D7ED               	goto	l940
   917   000966                     __end_of_RetardoLCD:
   918                           	callstack 0
   919                           
   920 ;; *************** function _HabilitaLCD *****************
   921 ;; Defined at:
   922 ;;		line 105 in file "LibLCDXC8.h"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         0       0       0       0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_EnviaDato
   946 ;;		_InicializaLCD
   947 ;;		_BorraLCD
   948 ;;		_EscribeLCD_c
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text7
   953   000A28                     __ptext7:
   954                           	callstack 0
   955   000A28                     _HabilitaLCD:
   956                           	callstack 28
   957                           
   958                           ;LibLCDXC8.h: 107: LATE1=1;
   959                           
   960                           ;incstack = 0
   961   000A28  828D               	bsf	3981,1,c	;volatile
   962                           
   963                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
   964   000A2A  0E03               	movlw	3
   965   000A2C                     u527:
   966   000A2C  2EE8               	decfsz	wreg,f,c
   967   000A2E  D7FE               	bra	u527
   968   000A30  F000               	nop	
   969                           
   970                           ;LibLCDXC8.h: 110: LATE1=0;
   971   000A32  928D               	bcf	3981,1,c	;volatile
   972   000A34  0012               	return		;funcret
   973   000A36                     __end_of_HabilitaLCD:
   974                           	callstack 0
   975                           
   976                           	psect	rparam
   977   000000                     
   978                           	psect	idloc
   979                           
   980                           ;Config register IDLOC0 @ 0x200000
   981                           ;	unspecified, using default values
   982   200000                     	org	2097152
   983   200000  FF                 	db	255
   984                           
   985                           ;Config register IDLOC1 @ 0x200001
   986                           ;	unspecified, using default values
   987   200001                     	org	2097153
   988   200001  FF                 	db	255
   989                           
   990                           ;Config register IDLOC2 @ 0x200002
   991                           ;	unspecified, using default values
   992   200002                     	org	2097154
   993   200002  FF                 	db	255
   994                           
   995                           ;Config register IDLOC3 @ 0x200003
   996                           ;	unspecified, using default values
   997   200003                     	org	2097155
   998   200003  FF                 	db	255
   999                           
  1000                           ;Config register IDLOC4 @ 0x200004
  1001                           ;	unspecified, using default values
  1002   200004                     	org	2097156
  1003   200004  FF                 	db	255
  1004                           
  1005                           ;Config register IDLOC5 @ 0x200005
  1006                           ;	unspecified, using default values
  1007   200005                     	org	2097157
  1008   200005  FF                 	db	255
  1009                           
  1010                           ;Config register IDLOC6 @ 0x200006
  1011                           ;	unspecified, using default values
  1012   200006                     	org	2097158
  1013   200006  FF                 	db	255
  1014                           
  1015                           ;Config register IDLOC7 @ 0x200007
  1016                           ;	unspecified, using default values
  1017   200007                     	org	2097159
  1018   200007  FF                 	db	255
  1019                           
  1020                           	psect	config
  1021                           
  1022                           ;Config register CONFIG1L @ 0x300000
  1023                           ;	unspecified, using default values
  1024                           ;	PLL Prescaler Selection bits
  1025                           ;	PLLDIV = 0x0, unprogrammed default
  1026                           ;	System Clock Postscaler Selection bits
  1027                           ;	CPUDIV = 0x0, unprogrammed default
  1028                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1029                           ;	USBDIV = 0x0, unprogrammed default
  1030   300000                     	org	3145728
  1031   300000  00                 	db	0
  1032                           
  1033                           ;Config register CONFIG1H @ 0x300001
  1034                           ;	Oscillator Selection bits
  1035                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1036                           ;	Fail-Safe Clock Monitor Enable bit
  1037                           ;	FCMEN = 0x0, unprogrammed default
  1038                           ;	Internal/External Oscillator Switchover bit
  1039                           ;	IESO = 0x0, unprogrammed default
  1040   300001                     	org	3145729
  1041   300001  09                 	db	9
  1042                           
  1043                           ;Config register CONFIG2L @ 0x300002
  1044                           ;	unspecified, using default values
  1045                           ;	Power-up Timer Enable bit
  1046                           ;	PWRT = 0x1, unprogrammed default
  1047                           ;	Brown-out Reset Enable bits
  1048                           ;	BOR = 0x3, unprogrammed default
  1049                           ;	Brown-out Reset Voltage bits
  1050                           ;	BORV = 0x3, unprogrammed default
  1051                           ;	USB Voltage Regulator Enable bit
  1052                           ;	VREGEN = 0x0, unprogrammed default
  1053   300002                     	org	3145730
  1054   300002  1F                 	db	31
  1055                           
  1056                           ;Config register CONFIG2H @ 0x300003
  1057                           ;	Watchdog Timer Enable bit
  1058                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1059                           ;	Watchdog Timer Postscale Select bits
  1060                           ;	WDTPS = 0xF, unprogrammed default
  1061   300003                     	org	3145731
  1062   300003  1E                 	db	30
  1063                           
  1064                           ; Padding undefined space
  1065   300004                     	org	3145732
  1066   300004  FF                 	db	255
  1067                           
  1068                           ;Config register CONFIG3H @ 0x300005
  1069                           ;	unspecified, using default values
  1070                           ;	CCP2 MUX bit
  1071                           ;	CCP2MX = 0x1, unprogrammed default
  1072                           ;	PORTB A/D Enable bit
  1073                           ;	PBADEN = 0x1, unprogrammed default
  1074                           ;	Low-Power Timer 1 Oscillator Enable bit
  1075                           ;	LPT1OSC = 0x0, unprogrammed default
  1076                           ;	MCLR Pin Enable bit
  1077                           ;	MCLRE = 0x1, unprogrammed default
  1078   300005                     	org	3145733
  1079   300005  83                 	db	131
  1080                           
  1081                           ;Config register CONFIG4L @ 0x300006
  1082                           ;	unspecified, using default values
  1083                           ;	Stack Full/Underflow Reset Enable bit
  1084                           ;	STVREN = 0x1, unprogrammed default
  1085                           ;	Single-Supply ICSP Enable bit
  1086                           ;	LVP = 0x1, unprogrammed default
  1087                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1088                           ;	ICPRT = 0x0, unprogrammed default
  1089                           ;	Extended Instruction Set Enable bit
  1090                           ;	XINST = 0x0, unprogrammed default
  1091                           ;	Background Debugger Enable bit
  1092                           ;	DEBUG = 0x1, unprogrammed default
  1093   300006                     	org	3145734
  1094   300006  85                 	db	133
  1095                           
  1096                           ; Padding undefined space
  1097   300007                     	org	3145735
  1098   300007  FF                 	db	255
  1099                           
  1100                           ;Config register CONFIG5L @ 0x300008
  1101                           ;	unspecified, using default values
  1102                           ;	Code Protection bit
  1103                           ;	CP0 = 0x1, unprogrammed default
  1104                           ;	Code Protection bit
  1105                           ;	CP1 = 0x1, unprogrammed default
  1106                           ;	Code Protection bit
  1107                           ;	CP2 = 0x1, unprogrammed default
  1108                           ;	Code Protection bit
  1109                           ;	CP3 = 0x1, unprogrammed default
  1110   300008                     	org	3145736
  1111   300008  0F                 	db	15
  1112                           
  1113                           ;Config register CONFIG5H @ 0x300009
  1114                           ;	unspecified, using default values
  1115                           ;	Boot Block Code Protection bit
  1116                           ;	CPB = 0x1, unprogrammed default
  1117                           ;	Data EEPROM Code Protection bit
  1118                           ;	CPD = 0x1, unprogrammed default
  1119   300009                     	org	3145737
  1120   300009  C0                 	db	192
  1121                           
  1122                           ;Config register CONFIG6L @ 0x30000A
  1123                           ;	unspecified, using default values
  1124                           ;	Write Protection bit
  1125                           ;	WRT0 = 0x1, unprogrammed default
  1126                           ;	Write Protection bit
  1127                           ;	WRT1 = 0x1, unprogrammed default
  1128                           ;	Write Protection bit
  1129                           ;	WRT2 = 0x1, unprogrammed default
  1130                           ;	Write Protection bit
  1131                           ;	WRT3 = 0x1, unprogrammed default
  1132   30000A                     	org	3145738
  1133   30000A  0F                 	db	15
  1134                           
  1135                           ;Config register CONFIG6H @ 0x30000B
  1136                           ;	unspecified, using default values
  1137                           ;	Configuration Register Write Protection bit
  1138                           ;	WRTC = 0x1, unprogrammed default
  1139                           ;	Boot Block Write Protection bit
  1140                           ;	WRTB = 0x1, unprogrammed default
  1141                           ;	Data EEPROM Write Protection bit
  1142                           ;	WRTD = 0x1, unprogrammed default
  1143   30000B                     	org	3145739
  1144   30000B  E0                 	db	224
  1145                           
  1146                           ;Config register CONFIG7L @ 0x30000C
  1147                           ;	unspecified, using default values
  1148                           ;	Table Read Protection bit
  1149                           ;	EBTR0 = 0x1, unprogrammed default
  1150                           ;	Table Read Protection bit
  1151                           ;	EBTR1 = 0x1, unprogrammed default
  1152                           ;	Table Read Protection bit
  1153                           ;	EBTR2 = 0x1, unprogrammed default
  1154                           ;	Table Read Protection bit
  1155                           ;	EBTR3 = 0x1, unprogrammed default
  1156   30000C                     	org	3145740
  1157   30000C  0F                 	db	15
  1158                           
  1159                           ;Config register CONFIG7H @ 0x30000D
  1160                           ;	unspecified, using default values
  1161                           ;	Boot Block Table Read Protection bit
  1162                           ;	EBTRB = 0x1, unprogrammed default
  1163   30000D                     	org	3145741
  1164   30000D  40                 	db	64
  1165                           tosu	equ	0xFFF
  1166                           tosh	equ	0xFFE
  1167                           tosl	equ	0xFFD
  1168                           stkptr	equ	0xFFC
  1169                           pclatu	equ	0xFFB
  1170                           pclath	equ	0xFFA
  1171                           pcl	equ	0xFF9
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           prodh	equ	0xFF4
  1177                           prodl	equ	0xFF3
  1178                           indf0	equ	0xFEF
  1179                           postinc0	equ	0xFEE
  1180                           postdec0	equ	0xFED
  1181                           preinc0	equ	0xFEC
  1182                           plusw0	equ	0xFEB
  1183                           fsr0h	equ	0xFEA
  1184                           fsr0l	equ	0xFE9
  1185                           wreg	equ	0xFE8
  1186                           indf1	equ	0xFE7
  1187                           postinc1	equ	0xFE6
  1188                           postdec1	equ	0xFE5
  1189                           preinc1	equ	0xFE4
  1190                           plusw1	equ	0xFE3
  1191                           fsr1h	equ	0xFE2
  1192                           fsr1l	equ	0xFE1
  1193                           bsr	equ	0xFE0
  1194                           indf2	equ	0xFDF
  1195                           postinc2	equ	0xFDE
  1196                           postdec2	equ	0xFDD
  1197                           preinc2	equ	0xFDC
  1198                           plusw2	equ	0xFDB
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     481
                                              8 COMRAM     1     1      0
                           _BorraLCD
                      _InicializaLCD
                    _MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     256
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Word
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       C       1       12.6%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      28        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 12 15:35:06 2023

                      _i 000A                       l97 0834               EnviaDato@a 0003  
                    l110 0872                      l102 084E                      l120 089E  
                    l112 087A                      l104 0856                      l130 08CA  
                    l122 08A6                      l114 0882                      l106 085E  
          _InicializaLCD 0966                      l134 0902                      l126 08BA  
                    l118 0896                      l135 08E0                      l128 08C2  
                    l940 0940                      l934 0914                      l936 0924  
                    l944 094A                      l938 0936                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RB7 007C0F  
                    u230 09DC                      u270 0842                      u507 0938  
                    u517 0942                      u527 0A2C                      u457 08E8  
                    u467 08F8                      u477 091A                      u487 0926  
                    u497 092E                      wreg 000FE8                     l1108 09B0  
                   l1142 0866                     l1154 088A                     l1166 08AE  
                   l1178 08D2                     STR_1 0801                     _LATB 000F8A  
                   _LATD 000F8C                     _RBPU 007F8F           ??_EscribeLCD_c 0004  
                   _main 080E                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 0001                    ?_main 0001            EscribeLCD_c@a 0004  
                  _LATD0 007C60                    _LATE0 007C68                    _LATE1 007C69  
                  _TRISB 000F93                    _TRISD 000F95                    _TRISE 000F96  
                  _Tecla 000B                    tablat 000FF5              _HabilitaLCD 0A28  
                  status 000FD8         __end_of_BorraLCD 0A28          __initialization 09DE  
           __end_of_main 0910                   ??_main 0009            __activetblptr 000002  
                 _ADCON1 000FC1               _RetardoLCD 0910          ??_InicializaLCD 0004  
                 isa$std 000001     __end_of_EscribeLCD_c 0A14             __pdataCOMRAM 000C  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 09F4  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 0A3E  
              ?_BorraLCD 0001              ?_RetardoLCD 0001              RetardoLCD@a 0002  
             ??_BorraLCD 0004        ??_MensajeLCD_Word 0006             ?_HabilitaLCD 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 09DE                  __ramtop 0800                  __ptext0 080E  
                __ptext1 09A8                  __ptext2 09FE                  __ptext3 0966  
                __ptext4 0A14                  __ptext5 0A36                  __ptext6 0910  
                __ptext7 0A28     end_of_initialization 09F4            __Lmediumconst 0000  
           _EscribeLCD_c 09FE            __pidataCOMRAM 0A3E    __end_of_InicializaLCD 09A8  
              _EnviaDato 0A36      start_initialization 09DE             ??_RetardoLCD 0001  
        _MensajeLCD_Word 09A8               ?_EnviaDato 0001              __pbssCOMRAM 000A  
     __end_of_RetardoLCD 0966         MensajeLCD_Word@a 0005         MensajeLCD_Word@i 0007  
            __smallconst 0800  __end_of_MensajeLCD_Word 09DE              ??_EnviaDato 0003  
               _BorraLCD 0A14                 __Hrparam 0000                 __Lrparam 0000  
               _interfaz 000C                 isa$xinst 000000         ?_MensajeLCD_Word 0005  
          ??_HabilitaLCD 0001            ?_EscribeLCD_c 0001      __end_of_HabilitaLCD 0A36  

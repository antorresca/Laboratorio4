

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 17 08:32:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   0011C4                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75   0011C4  20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78   0011C5  20                 	db	32
    79                           
    80                           ;initializer for _op
    81   0011C6  20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84   0011C7  08                 	db	8
    85   000000                     _LATC	set	3979
    86   000000                     _TRISC	set	3988
    87   000000                     _LATC7	set	31839
    88   000000                     _LATE2	set	31850
    89   000000                     _RB7	set	31759
    90   000000                     _RB6	set	31758
    91   000000                     _RB5	set	31757
    92   000000                     _POR	set	32385
    93   000000                     _PD	set	32386
    94   000000                     _TMR0ON	set	32431
    95   000000                     _GIE	set	32663
    96   000000                     _TMR0IE	set	32661
    97   000000                     _LATE1	set	31849
    98   000000                     _LATB	set	3978
    99   000000                     _LATD	set	3980
   100   000000                     _RB4	set	31756
   101   000000                     _TRISB	set	3987
   102   000000                     _TRISD	set	3989
   103   000000                     _ADCON1	set	4033
   104   000000                     _LATE0	set	31848
   105   000000                     _OSCCON	set	4051
   106   000000                     _T0CON	set	4053
   107   000000                     _TO	set	32387
   108   000000                     _RBPU	set	32655
   109   000000                     _TRISE	set	3990
   110   000000                     _TMR0IF	set	32658
   111   000000                     _TMR0	set	4054
   112                           
   113                           	psect	smallconst
   114   000800                     __psmallconst:
   115                           	callstack 0
   116   000800  00                 	db	0
   117   000801                     STR_3:
   118   000801  20                 	db	32
   119   000802  20                 	db	32
   120   000803  20                 	db	32
   121   000804  20                 	db	32
   122   000805  20                 	db	32
   123   000806  20                 	db	32
   124   000807  20                 	db	32
   125   000808  20                 	db	32
   126   000809  20                 	db	32
   127   00080A  20                 	db	32
   128   00080B  20                 	db	32
   129   00080C  20                 	db	32
   130   00080D  20                 	db	32
   131   00080E  20                 	db	32
   132   00080F  20                 	db	32
   133   000810  20                 	db	32
   134   000811  00                 	db	0
   135   000812                     STR_1:
   136   000812  45                 	db	69	;'E'
   137   000813  6E                 	db	110	;'n'
   138   000814  65                 	db	101	;'e'
   139   000815  72                 	db	114	;'r'
   140   000816  67                 	db	103	;'g'
   141   000817  69                 	db	105	;'i'
   142   000818  61                 	db	97	;'a'
   143   000819  00                 	db	0
   144   00081A                     STR_2:
   145   00081A  4D                 	db	77	;'M'
   146   00081B  43                 	db	67	;'C'
   147   00081C  4C                 	db	76	;'L'
   148   00081D  52                 	db	82	;'R'
   149   00081E  00                 	db	0
   150   00081F  00                 	db	0	; dummy byte at the end
   151   000000                     
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155   0010D8                     __pcinit:
   156                           	callstack 0
   157   0010D8                     start_initialization:
   158                           	callstack 0
   159   0010D8                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Initialize objects allocated to COMRAM (4 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164   0010D8  0EC4               	movlw	low __pidataCOMRAM
   165   0010DA  6EF6               	movwf	tblptrl,c
   166   0010DC  0E11               	movlw	high __pidataCOMRAM
   167   0010DE  6EF7               	movwf	tblptrh,c
   168   0010E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169   0010E2  6EF8               	movwf	tblptru,c
   170   0010E4  EE00  F02D         	lfsr	0,__pdataCOMRAM
   171   0010E8  EE10 F004          	lfsr	1,4
   172   0010EC                     copy_data0:
   173   0010EC  0009               	tblrd		*+
   174   0010EE  CFF5 FFEE          	movff	tablat,postinc0
   175   0010F2  50E5               	movf	postdec1,w,c
   176   0010F4  50E1               	movf	fsr1l,w,c
   177   0010F6  E1FA               	bnz	copy_data0
   178                           
   179                           ; Clear objects allocated to COMRAM (25 bytes)
   180   0010F8  EE00  F001         	lfsr	0,__pbssCOMRAM
   181   0010FC  0E19               	movlw	25
   182   0010FE                     clear_0:
   183   0010FE  6AEE               	clrf	postinc0,c
   184   001100  06E8               	decf	wreg,f,c
   185   001102  E1FD               	bnz	clear_0
   186   001104                     end_of_initialization:
   187                           	callstack 0
   188   001104                     __end_of__initialization:
   189                           	callstack 0
   190   001104  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   191   001106  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   192   001108  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193   00110A  6EF8               	movwf	tblptru,c
   194   00110C  0100               	movlb	0
   195   00110E  EF10  F004         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198   000001                     __pbssCOMRAM:
   199                           	callstack 0
   200   000001                     _r:
   201                           	callstack 0
   202   000001                     	ds	4
   203   000005                     _partdecl:
   204                           	callstack 0
   205   000005                     	ds	4
   206   000009                     _verificador:
   207                           	callstack 0
   208   000009                     	ds	2
   209   00000B                     _contador:
   210                           	callstack 0
   211   00000B                     	ds	2
   212   00000D                     _color:
   213                           	callstack 0
   214   00000D                     	ds	2
   215   00000F                     _i:
   216                           	callstack 0
   217   00000F                     	ds	2
   218   000011                     _n2:
   219                           	callstack 0
   220   000011                     	ds	2
   221   000013                     _n1:
   222                           	callstack 0
   223   000013                     	ds	2
   224   000015                     _Tecla:
   225                           	callstack 0
   226   000015                     	ds	1
   227   000016                     _m:
   228                           	callstack 0
   229   000016                     	ds	4
   230                           
   231                           	psect	dataCOMRAM
   232   00002D                     __pdataCOMRAM:
   233                           	callstack 0
   234   00002D                     _n2c:
   235                           	callstack 0
   236   00002D                     	ds	1
   237   00002E                     _n1c:
   238                           	callstack 0
   239   00002E                     	ds	1
   240   00002F                     _op:
   241                           	callstack 0
   242   00002F                     	ds	1
   243   000030                     _interfaz:
   244                           	callstack 0
   245   000030                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248   00001A                     __pcstackCOMRAM:
   249                           	callstack 0
   250   00001A                     ??_RetardoLCD:
   251   00001A                     ??_ColorRGB:
   252   00001A                     ?___wmul:
   253                           	callstack 0
   254   00001A                     ?___lwmod:
   255                           	callstack 0
   256   00001A                     ?___lmul:
   257                           	callstack 0
   258   00001A                     ___wmul@multiplier:
   259                           	callstack 0
   260   00001A                     ___lwmod@dividend:
   261                           	callstack 0
   262   00001A                     ___lmul@multiplier:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x0
   266   00001A                     	ds	1
   267   00001B                     RetardoLCD@a:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x1
   271   00001B                     	ds	1
   272   00001C                     EnviaDato@a:
   273                           	callstack 0
   274   00001C                     ___wmul@multiplicand:
   275                           	callstack 0
   276   00001C                     ___lwmod@divisor:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x2
   280   00001C                     	ds	1
   281   00001D                     EscribeLCD_c@a:
   282                           	callstack 0
   283   00001D                     DireccionaLCD@a:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287   00001D                     	ds	1
   288   00001E                     MensajeLCD_Word@a:
   289                           	callstack 0
   290   00001E                     ___lwmod@counter:
   291                           	callstack 0
   292   00001E                     ___wmul@product:
   293                           	callstack 0
   294   00001E                     ___lmul@multiplicand:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x4
   298   00001E                     	ds	1
   299   00001F                     ??_MensajeLCD_Word:
   300                           
   301                           ; 1 bytes @ 0x5
   302   00001F                     	ds	1
   303   000020                     ?___lwdiv:
   304                           	callstack 0
   305   000020                     MensajeLCD_Word@i:
   306                           	callstack 0
   307   000020                     ___lwdiv@dividend:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x6
   311   000020                     	ds	2
   312   000022                     ___lwdiv@divisor:
   313                           	callstack 0
   314   000022                     ___lmul@product:
   315                           	callstack 0
   316                           
   317                           ; 4 bytes @ 0x8
   318   000022                     	ds	2
   319   000024                     ___lwdiv@quotient:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xA
   323   000024                     	ds	2
   324   000026                     ___lwdiv@counter:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xC
   328   000026                     	ds	1
   329   000027                     ??_main:
   330                           
   331                           ; 1 bytes @ 0xD
   332   000027                     	ds	4
   333   00002B                     main@i:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x11
   337   00002B                     	ds	2
   338                           
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 24 in file "Laboratorio4.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  i               2   17[COMRAM] int 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   358 ;;      Params:         0       0       0       0       0       0       0       0       0
   359 ;;      Locals:         2       0       0       0       0       0       0       0       0
   360 ;;      Temps:          4       0       0       0       0       0       0       0       0
   361 ;;      Totals:         6       0       0       0       0       0       0       0       0
   362 ;;Total ram usage:        6 bytes
   363 ;; Hardware stack levels required when called: 5
   364 ;; This function calls:
   365 ;;		_BorraLCD
   366 ;;		_ColorRGB
   367 ;;		_DireccionaLCD
   368 ;;		_EscribeLCD_c
   369 ;;		_InicializaLCD
   370 ;;		_LeerTeclado
   371 ;;		_MensajeLCD_Word
   372 ;;		___lmul
   373 ;;		___lwdiv
   374 ;;		___lwmod
   375 ;;		___wmul
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text0
   382   000820                     __ptext0:
   383                           	callstack 0
   384   000820                     _main:
   385                           	callstack 26
   386                           
   387                           ;Laboratorio4.c: 25: ADCON1=15;
   388                           
   389                           ;incstack = 0
   390   000820  0E0F               	movlw	15
   391   000822  6EC1               	movwf	193,c	;volatile
   392                           
   393                           ;Laboratorio4.c: 26: TRISD=0;
   394   000824  0E00               	movlw	0
   395   000826  6E95               	movwf	149,c	;volatile
   396                           
   397                           ;Laboratorio4.c: 27: TRISB=0b11110000;
   398   000828  0EF0               	movlw	240
   399   00082A  6E93               	movwf	147,c	;volatile
   400                           
   401                           ;Laboratorio4.c: 28: TRISE=0;
   402   00082C  0E00               	movlw	0
   403   00082E  6E96               	movwf	150,c	;volatile
   404                           
   405                           ;Laboratorio4.c: 29: TRISC=0;
   406   000830  0E00               	movlw	0
   407   000832  6E94               	movwf	148,c	;volatile
   408                           
   409                           ;Laboratorio4.c: 30: RBPU=0;
   410   000834  9EF1               	bcf	4081,7,c	;volatile
   411                           
   412                           ;Laboratorio4.c: 31: InicializaLCD();
   413   000836  EC4B  F008         	call	_InicializaLCD	;wreg free
   414                           
   415                           ;Laboratorio4.c: 33: T0CON=0b10000011;
   416   00083A  0E83               	movlw	131
   417   00083C  6ED5               	movwf	213,c	;volatile
   418                           
   419                           ;Laboratorio4.c: 34: TMR0IF=0;
   420   00083E  94F2               	bcf	4082,2,c	;volatile
   421                           
   422                           ;Laboratorio4.c: 35: TMR0=49911;
   423   000840  0EC2               	movlw	194
   424   000842  6ED7               	movwf	215,c	;volatile
   425   000844  0EF7               	movlw	247
   426   000846  6ED6               	movwf	214,c	;volatile
   427                           
   428                           ;Laboratorio4.c: 36: TMR0IE=1;
   429   000848  8AF2               	bsf	4082,5,c	;volatile
   430                           
   431                           ;Laboratorio4.c: 37: GIE=1;
   432   00084A  8EF2               	bsf	4082,7,c	;volatile
   433                           
   434                           ;Laboratorio4.c: 38: TMR0ON=1;
   435   00084C  8ED5               	bsf	4053,7,c	;volatile
   436                           
   437                           ;Laboratorio4.c: 41: OSCCON = 0b11000100;
   438   00084E  0EC4               	movlw	196
   439   000850  6ED3               	movwf	211,c	;volatile
   440                           
   441                           ;Laboratorio4.c: 43: BorraLCD();
   442   000852  ECCD  F008         	call	_BorraLCD	;wreg free
   443                           
   444                           ;Laboratorio4.c: 44: if(TO == 1 && PD == 1){
   445   000856  B6D0               	btfsc	4048,3,c	;volatile
   446   000858  A4D0               	btfss	4048,2,c	;volatile
   447   00085A  D007               	goto	l148
   448                           
   449                           ;Laboratorio4.c: 45: BorraLCD();
   450   00085C  ECCD  F008         	call	_BorraLCD	;wreg free
   451                           
   452                           ;Laboratorio4.c: 46: MensajeLCD_Word("Energia");
   453   000860  0E12               	movlw	low STR_1
   454   000862  6E1E               	movwf	MensajeLCD_Word@a^0,c
   455   000864  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   456                           
   457                           ;Laboratorio4.c: 47: }else{
   458   000868  D008               	goto	l1699
   459   00086A                     l148:
   460                           
   461                           ;Laboratorio4.c: 48: if(POR==0){
   462   00086A  B2D0               	btfsc	4048,1,c	;volatile
   463   00086C  D006               	goto	l1699
   464                           
   465                           ;Laboratorio4.c: 49: BorraLCD();
   466   00086E  ECCD  F008         	call	_BorraLCD	;wreg free
   467                           
   468                           ;Laboratorio4.c: 50: MensajeLCD_Word("MCLR");
   469   000872  0E1A               	movlw	low STR_2
   470   000874  6E1E               	movwf	MensajeLCD_Word@a^0,c
   471   000876  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   472   00087A                     l1699:
   473                           
   474                           ;Laboratorio4.c: 51: };Laboratorio4.c: 52: };Laboratorio4.c: 53: _delay((unsigned long)(
      +                          (2000)*(1000000/4000.0)));
   475   00087A  0E03               	movlw	3
   476   00087C  6E28               	movwf	(??_main+1)^0,c
   477   00087E  0E8A               	movlw	138
   478   000880  6E27               	movwf	??_main^0,c
   479   000882  0E56               	movlw	86
   480   000884                     u1567:
   481   000884  2EE8               	decfsz	wreg,f,c
   482   000886  D7FE               	bra	u1567
   483   000888  2E27               	decfsz	??_main^0,f,c
   484   00088A  D7FC               	bra	u1567
   485   00088C  2E28               	decfsz	(??_main+1)^0,f,c
   486   00088E  D7FA               	bra	u1567
   487                           
   488                           ;Laboratorio4.c: 54: BorraLCD();
   489   000890  ECCD  F008         	call	_BorraLCD	;wreg free
   490   000894                     l1703:
   491                           
   492                           ;Laboratorio4.c: 56: LATB=0B00000000;
   493   000894  0E00               	movlw	0
   494   000896  6E8A               	movwf	138,c	;volatile
   495                           
   496                           ;Laboratorio4.c: 57: verificador = 0;
   497   000898  0E00               	movlw	0
   498   00089A  6E0A               	movwf	(_verificador+1)^0,c
   499   00089C  0E00               	movlw	0
   500   00089E  6E09               	movwf	_verificador^0,c
   501                           
   502                           ;Laboratorio4.c: 58: Tecla = LeerTeclado();
   503   0008A0  ECEC  F006         	call	_LeerTeclado	;wreg free
   504   0008A4  6E15               	movwf	_Tecla^0,c
   505                           
   506                           ;Laboratorio4.c: 59: ColorRGB();
   507   0008A6  EC41  F007         	call	_ColorRGB	;wreg free
   508                           
   509                           ;Laboratorio4.c: 60: if(Tecla=='C'){
   510   0008AA  0E43               	movlw	67
   511   0008AC  1815               	xorwf	_Tecla^0,w,c
   512   0008AE  A4D8               	btfss	status,2,c
   513   0008B0  D02B               	goto	l1737
   514                           
   515                           ;Laboratorio4.c: 61: DireccionaLCD(0xC0);
   516   0008B2  0EC0               	movlw	192
   517   0008B4  ECC2  F008         	call	_DireccionaLCD
   518                           
   519                           ;Laboratorio4.c: 63: op = ' ';
   520   0008B8  0E20               	movlw	32
   521   0008BA  6E2F               	movwf	_op^0,c
   522                           
   523                           ;Laboratorio4.c: 64: n1c = ' ';
   524   0008BC  0E20               	movlw	32
   525   0008BE  6E2E               	movwf	_n1c^0,c
   526                           
   527                           ;Laboratorio4.c: 65: n2c = ' ';
   528   0008C0  0E20               	movlw	32
   529   0008C2  6E2D               	movwf	_n2c^0,c
   530                           
   531                           ;Laboratorio4.c: 66: n1 = 0;
   532   0008C4  0E00               	movlw	0
   533   0008C6  6E14               	movwf	(_n1+1)^0,c
   534   0008C8  0E00               	movlw	0
   535   0008CA  6E13               	movwf	_n1^0,c
   536                           
   537                           ;Laboratorio4.c: 67: n2 = 0;
   538   0008CC  0E00               	movlw	0
   539   0008CE  6E12               	movwf	(_n2+1)^0,c
   540   0008D0  0E00               	movlw	0
   541   0008D2  6E11               	movwf	_n2^0,c
   542                           
   543                           ;Laboratorio4.c: 68: i = 0;
   544   0008D4  0E00               	movlw	0
   545   0008D6  6E10               	movwf	(_i+1)^0,c
   546   0008D8  0E00               	movlw	0
   547   0008DA  6E0F               	movwf	_i^0,c
   548                           
   549                           ;Laboratorio4.c: 69: partdecl = 0;
   550   0008DC  0E00               	movlw	0
   551   0008DE  6E05               	movwf	_partdecl^0,c
   552   0008E0  0E00               	movlw	0
   553   0008E2  6E06               	movwf	(_partdecl+1)^0,c
   554   0008E4  0E00               	movlw	0
   555   0008E6  6E07               	movwf	(_partdecl+2)^0,c
   556   0008E8  0E00               	movlw	0
   557   0008EA  6E08               	movwf	(_partdecl+3)^0,c
   558                           
   559                           ;Laboratorio4.c: 70: DireccionaLCD(0x80);
   560   0008EC  0E80               	movlw	128
   561   0008EE  ECC2  F008         	call	_DireccionaLCD
   562                           
   563                           ;Laboratorio4.c: 71: MensajeLCD_Word("                ");
   564   0008F2  0E01               	movlw	low STR_3
   565   0008F4  6E1E               	movwf	MensajeLCD_Word@a^0,c
   566   0008F6  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   567                           
   568                           ;Laboratorio4.c: 72: DireccionaLCD(0xC0);
   569   0008FA  0EC0               	movlw	192
   570   0008FC  ECC2  F008         	call	_DireccionaLCD
   571                           
   572                           ;Laboratorio4.c: 73: DireccionaLCD(0x80);
   573   000900  0E80               	movlw	128
   574   000902  ECC2  F008         	call	_DireccionaLCD
   575                           
   576                           ;Laboratorio4.c: 74: }else{
   577   000906  D7C6               	goto	l1703
   578   000908                     l1737:
   579                           
   580                           ;Laboratorio4.c: 75: if(n1c==' '|n2c==' '|op==' '){
   581   000908  0E20               	movlw	32
   582   00090A  182E               	xorwf	_n1c^0,w,c
   583   00090C  B4D8               	btfsc	status,2,c
   584   00090E  D008               	goto	u1080
   585   000910  0E20               	movlw	32
   586   000912  182D               	xorwf	_n2c^0,w,c
   587   000914  B4D8               	btfsc	status,2,c
   588   000916  D004               	goto	u1080
   589   000918  0E20               	movlw	32
   590   00091A  182F               	xorwf	_op^0,w,c
   591   00091C  A4D8               	btfss	status,2,c
   592   00091E  D083               	goto	l1805
   593   000920                     u1080:
   594                           
   595                           ;Laboratorio4.c: 76: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   596   000920  0E20               	movlw	32
   597   000922  182F               	xorwf	_op^0,w,c
   598   000924  A4D8               	btfss	status,2,c
   599   000926  D021               	goto	l1761
   600   000928  0E2B               	movlw	43
   601   00092A  1815               	xorwf	_Tecla^0,w,c
   602   00092C  B4D8               	btfsc	status,2,c
   603   00092E  D00C               	goto	u1130
   604   000930  0E2D               	movlw	45
   605   000932  1815               	xorwf	_Tecla^0,w,c
   606   000934  B4D8               	btfsc	status,2,c
   607   000936  D008               	goto	u1130
   608   000938  0E2F               	movlw	47
   609   00093A  1815               	xorwf	_Tecla^0,w,c
   610   00093C  B4D8               	btfsc	status,2,c
   611   00093E  D004               	goto	u1130
   612   000940  0E78               	movlw	120
   613   000942  1815               	xorwf	_Tecla^0,w,c
   614   000944  A4D8               	btfss	status,2,c
   615   000946  D011               	goto	l1761
   616   000948                     u1130:
   617   000948  0E20               	movlw	32
   618   00094A  182E               	xorwf	_n1c^0,w,c
   619   00094C  B4D8               	btfsc	status,2,c
   620   00094E  D00D               	goto	l1761
   621   000950  0E20               	movlw	32
   622   000952  182D               	xorwf	_n2c^0,w,c
   623   000954  A4D8               	btfss	status,2,c
   624   000956  D009               	goto	l1761
   625                           
   626                           ;Laboratorio4.c: 77: DireccionaLCD(0x81);
   627   000958  0E81               	movlw	129
   628   00095A  ECC2  F008         	call	_DireccionaLCD
   629                           
   630                           ;Laboratorio4.c: 78: EscribeLCD_c(Tecla);
   631   00095E  5015               	movf	_Tecla^0,w,c
   632   000960  ECB7  F008         	call	_EscribeLCD_c
   633                           
   634                           ;Laboratorio4.c: 79: op = Tecla;
   635   000964  C015  F02F         	movff	_Tecla,_op
   636                           
   637                           ;Laboratorio4.c: 80: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   638   000968  D22E               	goto	l1913
   639   00096A                     l1761:
   640   00096A  0E20               	movlw	32
   641   00096C  182E               	xorwf	_n1c^0,w,c
   642   00096E  A4D8               	btfss	status,2,c
   643   000970  D027               	goto	l1781
   644   000972  0E2B               	movlw	43
   645   000974  1815               	xorwf	_Tecla^0,w,c
   646   000976  A4D8               	btfss	status,2,c
   647   000978  D014               	goto	u1220
   648   00097A  0E2D               	movlw	45
   649   00097C  1815               	xorwf	_Tecla^0,w,c
   650   00097E  A4D8               	btfss	status,2,c
   651   000980  D010               	goto	u1220
   652   000982  0E2F               	movlw	47
   653   000984  1815               	xorwf	_Tecla^0,w,c
   654   000986  A4D8               	btfss	status,2,c
   655   000988  D00C               	goto	u1220
   656   00098A  0E78               	movlw	120
   657   00098C  1815               	xorwf	_Tecla^0,w,c
   658   00098E  A4D8               	btfss	status,2,c
   659   000990  D008               	goto	u1220
   660   000992  0E3D               	movlw	61
   661   000994  1815               	xorwf	_Tecla^0,w,c
   662   000996  A4D8               	btfss	status,2,c
   663   000998  D004               	goto	u1220
   664   00099A  0E43               	movlw	67
   665   00099C  1815               	xorwf	_Tecla^0,w,c
   666   00099E  B4D8               	btfsc	status,2,c
   667   0009A0  D00F               	goto	l1781
   668   0009A2                     u1220:
   669                           
   670                           ;Laboratorio4.c: 81: DireccionaLCD(0x80);
   671   0009A2  0E80               	movlw	128
   672   0009A4  ECC2  F008         	call	_DireccionaLCD
   673                           
   674                           ;Laboratorio4.c: 82: EscribeLCD_c(Tecla);
   675   0009A8  5015               	movf	_Tecla^0,w,c
   676   0009AA  ECB7  F008         	call	_EscribeLCD_c
   677                           
   678                           ;Laboratorio4.c: 83: n1c=Tecla;
   679   0009AE  C015  F02E         	movff	_Tecla,_n1c
   680                           
   681                           ;Laboratorio4.c: 84: n1 = Tecla-'0';
   682   0009B2  0ED0               	movlw	208
   683   0009B4  2415               	addwf	_Tecla^0,w,c
   684   0009B6  6E13               	movwf	_n1^0,c
   685   0009B8  6A14               	clrf	(_n1+1)^0,c
   686   0009BA  0EFF               	movlw	255
   687   0009BC  2214               	addwfc	(_n1+1)^0,f,c
   688                           
   689                           ;Laboratorio4.c: 85: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   690   0009BE  D203               	goto	l1913
   691   0009C0                     l1781:
   692   0009C0  0E20               	movlw	32
   693   0009C2  182D               	xorwf	_n2c^0,w,c
   694   0009C4  A4D8               	btfss	status,2,c
   695   0009C6  D1FF               	goto	l1913
   696   0009C8  0E20               	movlw	32
   697   0009CA  182F               	xorwf	_op^0,w,c
   698   0009CC  B4D8               	btfsc	status,2,c
   699   0009CE  D1FB               	goto	l1913
   700   0009D0  0E20               	movlw	32
   701   0009D2  182E               	xorwf	_n1c^0,w,c
   702   0009D4  B4D8               	btfsc	status,2,c
   703   0009D6  D1F7               	goto	l1913
   704   0009D8  0E2B               	movlw	43
   705   0009DA  1815               	xorwf	_Tecla^0,w,c
   706   0009DC  A4D8               	btfss	status,2,c
   707   0009DE  D014               	goto	u1310
   708   0009E0  0E2D               	movlw	45
   709   0009E2  1815               	xorwf	_Tecla^0,w,c
   710   0009E4  A4D8               	btfss	status,2,c
   711   0009E6  D010               	goto	u1310
   712   0009E8  0E2F               	movlw	47
   713   0009EA  1815               	xorwf	_Tecla^0,w,c
   714   0009EC  A4D8               	btfss	status,2,c
   715   0009EE  D00C               	goto	u1310
   716   0009F0  0E78               	movlw	120
   717   0009F2  1815               	xorwf	_Tecla^0,w,c
   718   0009F4  A4D8               	btfss	status,2,c
   719   0009F6  D008               	goto	u1310
   720   0009F8  0E3D               	movlw	61
   721   0009FA  1815               	xorwf	_Tecla^0,w,c
   722   0009FC  A4D8               	btfss	status,2,c
   723   0009FE  D004               	goto	u1310
   724   000A00  0E43               	movlw	67
   725   000A02  1815               	xorwf	_Tecla^0,w,c
   726   000A04  B4D8               	btfsc	status,2,c
   727   000A06  D1DF               	goto	l1913
   728   000A08                     u1310:
   729                           
   730                           ;Laboratorio4.c: 86: DireccionaLCD(0x82);
   731   000A08  0E82               	movlw	130
   732   000A0A  ECC2  F008         	call	_DireccionaLCD
   733                           
   734                           ;Laboratorio4.c: 87: EscribeLCD_c(Tecla);
   735   000A0E  5015               	movf	_Tecla^0,w,c
   736   000A10  ECB7  F008         	call	_EscribeLCD_c
   737                           
   738                           ;Laboratorio4.c: 88: n2c=Tecla;
   739   000A14  C015  F02D         	movff	_Tecla,_n2c
   740                           
   741                           ;Laboratorio4.c: 89: n2 = Tecla-'0';
   742   000A18  0ED0               	movlw	208
   743   000A1A  2415               	addwf	_Tecla^0,w,c
   744   000A1C  6E11               	movwf	_n2^0,c
   745   000A1E  6A12               	clrf	(_n2+1)^0,c
   746   000A20  0EFF               	movlw	255
   747   000A22  2212               	addwfc	(_n2+1)^0,f,c
   748                           
   749                           ;Laboratorio4.c: 90: };Laboratorio4.c: 91: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   750   000A24  D1D0               	goto	l1913
   751   000A26                     l1805:
   752   000A26  0E3D               	movlw	61
   753   000A28  1815               	xorwf	_Tecla^0,w,c
   754   000A2A  A4D8               	btfss	status,2,c
   755   000A2C  D1C9               	goto	l1911
   756   000A2E  0E20               	movlw	32
   757   000A30  182D               	xorwf	_n2c^0,w,c
   758   000A32  B4D8               	btfsc	status,2,c
   759   000A34  D1C5               	goto	l1911
   760   000A36  0E20               	movlw	32
   761   000A38  182F               	xorwf	_op^0,w,c
   762   000A3A  B4D8               	btfsc	status,2,c
   763   000A3C  D1C1               	goto	l1911
   764   000A3E  0E20               	movlw	32
   765   000A40  182E               	xorwf	_n1c^0,w,c
   766   000A42  B4D8               	btfsc	status,2,c
   767   000A44  D1BD               	goto	l1911
   768                           
   769                           ;Laboratorio4.c: 92: DireccionaLCD(0x83);
   770   000A46  0E83               	movlw	131
   771   000A48  ECC2  F008         	call	_DireccionaLCD
   772                           
   773                           ;Laboratorio4.c: 93: EscribeLCD_c('=');
   774   000A4C  0E3D               	movlw	61
   775   000A4E  ECB7  F008         	call	_EscribeLCD_c
   776                           
   777                           ;Laboratorio4.c: 94: switch(op){
   778   000A52  D093               	goto	l1853
   779   000A54                     l1815:
   780                           
   781                           ;Laboratorio4.c: 96: r = n1 + n2;
   782   000A54  5011               	movf	_n2^0,w,c
   783   000A56  2413               	addwf	_n1^0,w,c
   784   000A58  6E27               	movwf	??_main^0,c
   785   000A5A  5012               	movf	(_n2+1)^0,w,c
   786   000A5C  2014               	addwfc	(_n1+1)^0,w,c
   787   000A5E  6E28               	movwf	(??_main+1)^0,c
   788   000A60  C027  F001         	movff	??_main,_r
   789   000A64  C028  F002         	movff	??_main+1,_r+1
   790   000A68  6A03               	clrf	(_r+2)^0,c
   791   000A6A  6A04               	clrf	(_r+3)^0,c
   792   000A6C                     l1817:
   793                           
   794                           ;Laboratorio4.c: 97: partdecl = r*100;
   795   000A6C  C001  F01A         	movff	_r,___lmul@multiplier
   796   000A70  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   797   000A74  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   798   000A78  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   799   000A7C  0E64               	movlw	100
   800   000A7E  6E1E               	movwf	___lmul@multiplicand^0,c
   801   000A80  0E00               	movlw	0
   802   000A82  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   803   000A84  0E00               	movlw	0
   804   000A86  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   805   000A88  0E00               	movlw	0
   806   000A8A  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   807   000A8C  ECAB  F007         	call	___lmul	;wreg free
   808   000A90  C01A  F005         	movff	?___lmul,_partdecl
   809   000A94  C01B  F006         	movff	?___lmul+1,_partdecl+1
   810   000A98  C01C  F007         	movff	?___lmul+2,_partdecl+2
   811   000A9C  C01D  F008         	movff	?___lmul+3,_partdecl+3
   812                           
   813                           ;Laboratorio4.c: 98: break;
   814   000AA0  D07A               	goto	l1855
   815   000AA2                     l1819:
   816                           
   817                           ;Laboratorio4.c: 100: r = n1 - n2;
   818   000AA2  5011               	movf	_n2^0,w,c
   819   000AA4  5C13               	subwf	_n1^0,w,c
   820   000AA6  6E27               	movwf	??_main^0,c
   821   000AA8  5012               	movf	(_n2+1)^0,w,c
   822   000AAA  5814               	subwfb	(_n1+1)^0,w,c
   823   000AAC  D7D8               	goto	L1
   824   000AAE                     l1823:
   825                           
   826                           ;Laboratorio4.c: 104: r = n1*n2;
   827   000AAE  C013  F01A         	movff	_n1,___wmul@multiplier
   828   000AB2  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   829   000AB6  C011  F01C         	movff	_n2,___wmul@multiplicand
   830   000ABA  C012  F01D         	movff	_n2+1,___wmul@multiplicand+1
   831   000ABE  ECA4  F008         	call	___wmul	;wreg free
   832   000AC2  C01A  F001         	movff	?___wmul,_r
   833   000AC6  C01B  F002         	movff	?___wmul+1,_r+1
   834   000ACA  D7CE               	goto	L2
   835   000ACC                     l1827:
   836                           
   837                           ;Laboratorio4.c: 108: if(n2!=0){
   838   000ACC  5011               	movf	_n2^0,w,c
   839   000ACE  1012               	iorwf	(_n2+1)^0,w,c
   840   000AD0  B4D8               	btfsc	status,2,c
   841   000AD2  D02F               	goto	l1835
   842                           
   843                           ;Laboratorio4.c: 109: if(n1!=0){
   844   000AD4  5013               	movf	_n1^0,w,c
   845   000AD6  1014               	iorwf	(_n1+1)^0,w,c
   846   000AD8  B4D8               	btfsc	status,2,c
   847   000ADA  D05D               	goto	l1855
   848                           
   849                           ;Laboratorio4.c: 110: r = n1/n2;
   850   000ADC  C013  F020         	movff	_n1,___lwdiv@dividend
   851   000AE0  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
   852   000AE4  C011  F022         	movff	_n2,___lwdiv@divisor
   853   000AE8  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   854   000AEC  EC01  F008         	call	___lwdiv	;wreg free
   855   000AF0  C020  F001         	movff	?___lwdiv,_r
   856   000AF4  C021  F002         	movff	?___lwdiv+1,_r+1
   857   000AF8  6A03               	clrf	(_r+2)^0,c
   858   000AFA  6A04               	clrf	(_r+3)^0,c
   859                           
   860                           ;Laboratorio4.c: 111: partdecl = (n1*100)/n2;
   861   000AFC  C013  F01A         	movff	_n1,___wmul@multiplier
   862   000B00  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   863   000B04  0E00               	movlw	0
   864   000B06  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
   865   000B08  0E64               	movlw	100
   866   000B0A  6E1C               	movwf	___wmul@multiplicand^0,c
   867   000B0C  ECA4  F008         	call	___wmul	;wreg free
   868   000B10  C01A  F020         	movff	?___wmul,___lwdiv@dividend
   869   000B14  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
   870   000B18  C011  F022         	movff	_n2,___lwdiv@divisor
   871   000B1C  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   872   000B20  EC01  F008         	call	___lwdiv	;wreg free
   873   000B24  C020  F005         	movff	?___lwdiv,_partdecl
   874   000B28  C021  F006         	movff	?___lwdiv+1,_partdecl+1
   875   000B2C  6A07               	clrf	(_partdecl+2)^0,c
   876   000B2E  6A08               	clrf	(_partdecl+3)^0,c
   877   000B30  D032               	goto	l1855
   878   000B32                     l1835:
   879                           
   880                           ;Laboratorio4.c: 114: if(n1 != 0 & n2 == 0) r = 1000;
   881   000B32  5013               	movf	_n1^0,w,c
   882   000B34  1014               	iorwf	(_n1+1)^0,w,c
   883   000B36  B4D8               	btfsc	status,2,c
   884   000B38  D006               	goto	l1841
   885   000B3A  5011               	movf	_n2^0,w,c
   886   000B3C  1012               	iorwf	(_n2+1)^0,w,c
   887   000B3E  A4D8               	btfss	status,2,c
   888   000B40  D002               	goto	l1841
   889   000B42  0EE8               	movlw	232
   890   000B44  D009               	goto	L3
   891   000B46                     l1841:
   892                           
   893                           ;Laboratorio4.c: 115: else if(n1 == 0 & n2 == 0) r = 1001;
   894   000B46  5013               	movf	_n1^0,w,c
   895   000B48  1014               	iorwf	(_n1+1)^0,w,c
   896   000B4A  A4D8               	btfss	status,2,c
   897   000B4C  D78F               	goto	l1817
   898   000B4E  5011               	movf	_n2^0,w,c
   899   000B50  1012               	iorwf	(_n2+1)^0,w,c
   900   000B52  A4D8               	btfss	status,2,c
   901   000B54  D78B               	goto	l1817
   902   000B56  0EE9               	movlw	233
   903   000B58                     L3:
   904   000B58  6E01               	movwf	_r^0,c
   905   000B5A  0E03               	movlw	3
   906   000B5C  6E02               	movwf	(_r+1)^0,c
   907   000B5E  0E00               	movlw	0
   908   000B60  6E03               	movwf	(_r+2)^0,c
   909   000B62  0E00               	movlw	0
   910   000B64  6E04               	movwf	(_r+3)^0,c
   911   000B66  D782               	goto	l1817
   912   000B68                     l1849:
   913                           
   914                           ;Laboratorio4.c: 120: r = 0;
   915   000B68  0E00               	movlw	0
   916   000B6A  6E01               	movwf	_r^0,c
   917   000B6C  0E00               	movlw	0
   918   000B6E  6E02               	movwf	(_r+1)^0,c
   919   000B70  0E00               	movlw	0
   920   000B72  6E03               	movwf	(_r+2)^0,c
   921   000B74  0E00               	movlw	0
   922   000B76  6E04               	movwf	(_r+3)^0,c
   923                           
   924                           ;Laboratorio4.c: 121: break;
   925   000B78  D00E               	goto	l1855
   926   000B7A                     l1853:
   927   000B7A  502F               	movf	_op^0,w,c
   928                           
   929                           ; Switch size 1, requested type "simple"
   930                           ; Number of cases is 4, Range of values is 43 to 120
   931                           ; switch strategies available:
   932                           ; Name         Instructions Cycles
   933                           ; simple_byte           13     7 (average)
   934                           ;	Chosen strategy is simple_byte
   935   000B7C  0A2B               	xorlw	43	; case 43
   936   000B7E  B4D8               	btfsc	status,2,c
   937   000B80  D769               	goto	l1815
   938   000B82  0A06               	xorlw	6	; case 45
   939   000B84  B4D8               	btfsc	status,2,c
   940   000B86  D78D               	goto	l1819
   941   000B88  0A02               	xorlw	2	; case 47
   942   000B8A  B4D8               	btfsc	status,2,c
   943   000B8C  D79F               	goto	l1827
   944   000B8E  0A57               	xorlw	87	; case 120
   945   000B90  B4D8               	btfsc	status,2,c
   946   000B92  D78D               	goto	l1823
   947   000B94  D7E9               	goto	l1849
   948   000B96                     l1855:
   949                           
   950                           ;Laboratorio4.c: 123: DireccionaLCD(0x84);
   951   000B96  0E84               	movlw	132
   952   000B98  ECC2  F008         	call	_DireccionaLCD
   953                           
   954                           ;Laboratorio4.c: 124: if ((partdecl-(r*100))!= 0){
   955   000B9C  C001  F01A         	movff	_r,___lmul@multiplier
   956   000BA0  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   957   000BA4  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   958   000BA8  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   959   000BAC  0E9C               	movlw	156
   960   000BAE  6E1E               	movwf	___lmul@multiplicand^0,c
   961   000BB0  0EFF               	movlw	255
   962   000BB2  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   963   000BB4  0EFF               	movlw	255
   964   000BB6  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   965   000BB8  0EFF               	movlw	255
   966   000BBA  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   967   000BBC  ECAB  F007         	call	___lmul	;wreg free
   968   000BC0  5005               	movf	_partdecl^0,w,c
   969   000BC2  241A               	addwf	?___lmul^0,w,c
   970   000BC4  6E27               	movwf	??_main^0,c
   971   000BC6  5006               	movf	(_partdecl+1)^0,w,c
   972   000BC8  201B               	addwfc	(?___lmul+1)^0,w,c
   973   000BCA  6E28               	movwf	(??_main+1)^0,c
   974   000BCC  5007               	movf	(_partdecl+2)^0,w,c
   975   000BCE  201C               	addwfc	(?___lmul+2)^0,w,c
   976   000BD0  6E29               	movwf	(??_main+2)^0,c
   977   000BD2  5008               	movf	(_partdecl+3)^0,w,c
   978   000BD4  201D               	addwfc	(?___lmul+3)^0,w,c
   979   000BD6  6E2A               	movwf	(??_main+3)^0,c
   980   000BD8  5027               	movf	??_main^0,w,c
   981   000BDA  1028               	iorwf	(??_main+1)^0,w,c
   982   000BDC  1029               	iorwf	(??_main+2)^0,w,c
   983   000BDE  102A               	iorwf	(??_main+3)^0,w,c
   984   000BE0  B4D8               	btfsc	status,2,c
   985   000BE2  D056               	goto	l1879
   986                           
   987                           ;Laboratorio4.c: 125: for (int i = 0; i < 3; i++) {
   988   000BE4  0E00               	movlw	0
   989   000BE6  6E2C               	movwf	(main@i+1)^0,c
   990   000BE8  0E00               	movlw	0
   991   000BEA  6E2B               	movwf	main@i^0,c
   992   000BEC                     l1859:
   993   000BEC  BE2C               	btfsc	(main@i+1)^0,7,c
   994   000BEE  D008               	goto	l1863
   995   000BF0  502C               	movf	(main@i+1)^0,w,c
   996   000BF2  E105               	bnz	u1430
   997   000BF4  0E03               	movlw	3
   998   000BF6  5C2B               	subwf	main@i^0,w,c
   999   000BF8  B0D8               	btfsc	status,0,c
  1000   000BFA  D0E5               	goto	l1913
  1001   000BFC  D001               	goto	l1863
  1002   000BFE                     u1430:
  1003   000BFE  D0E3               	goto	l1913
  1004   000C00                     l1863:
  1005                           
  1006                           ;Laboratorio4.c: 126: r = n1 / n2;
  1007   000C00  C013  F020         	movff	_n1,___lwdiv@dividend
  1008   000C04  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
  1009   000C08  C011  F022         	movff	_n2,___lwdiv@divisor
  1010   000C0C  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
  1011   000C10  EC01  F008         	call	___lwdiv	;wreg free
  1012   000C14  C020  F001         	movff	?___lwdiv,_r
  1013   000C18  C021  F002         	movff	?___lwdiv+1,_r+1
  1014   000C1C  6A03               	clrf	(_r+2)^0,c
  1015   000C1E  6A04               	clrf	(_r+3)^0,c
  1016                           
  1017                           ;Laboratorio4.c: 127: m = n1 % n2;
  1018   000C20  C013  F01A         	movff	_n1,___lwmod@dividend
  1019   000C24  C014  F01B         	movff	_n1+1,___lwmod@dividend+1
  1020   000C28  C011  F01C         	movff	_n2,___lwmod@divisor
  1021   000C2C  C012  F01D         	movff	_n2+1,___lwmod@divisor+1
  1022   000C30  EC2A  F008         	call	___lwmod	;wreg free
  1023   000C34  C01A  F016         	movff	?___lwmod,_m
  1024   000C38  C01B  F017         	movff	?___lwmod+1,_m+1
  1025   000C3C  6A18               	clrf	(_m+2)^0,c
  1026   000C3E  6A19               	clrf	(_m+3)^0,c
  1027                           
  1028                           ;Laboratorio4.c: 128: EscribeLCD_c(r+'0');
  1029   000C40  5001               	movf	_r^0,w,c
  1030   000C42  0F30               	addlw	48
  1031   000C44  ECB7  F008         	call	_EscribeLCD_c
  1032                           
  1033                           ;Laboratorio4.c: 129: if(i == 0 && m != 0) {
  1034   000C48  502B               	movf	main@i^0,w,c
  1035   000C4A  102C               	iorwf	(main@i+1)^0,w,c
  1036   000C4C  A4D8               	btfss	status,2,c
  1037   000C4E  D009               	goto	l1871
  1038   000C50  5016               	movf	_m^0,w,c
  1039   000C52  1017               	iorwf	(_m+1)^0,w,c
  1040   000C54  1018               	iorwf	(_m+2)^0,w,c
  1041   000C56  1019               	iorwf	(_m+3)^0,w,c
  1042   000C58  B4D8               	btfsc	status,2,c
  1043   000C5A  D003               	goto	l1871
  1044                           
  1045                           ;Laboratorio4.c: 130: EscribeLCD_c(',');
  1046   000C5C  0E2C               	movlw	44
  1047   000C5E  ECB7  F008         	call	_EscribeLCD_c
  1048   000C62                     l1871:
  1049                           
  1050                           ;Laboratorio4.c: 131: };Laboratorio4.c: 133: if (m != 0) {
  1051   000C62  5016               	movf	_m^0,w,c
  1052   000C64  1017               	iorwf	(_m+1)^0,w,c
  1053   000C66  1018               	iorwf	(_m+2)^0,w,c
  1054   000C68  1019               	iorwf	(_m+3)^0,w,c
  1055   000C6A  B4D8               	btfsc	status,2,c
  1056   000C6C  D0AC               	goto	l1913
  1057                           
  1058                           ;Laboratorio4.c: 134: n1 = m * 10;
  1059   000C6E  C016  F01A         	movff	_m,___wmul@multiplier
  1060   000C72  C017  F01B         	movff	_m+1,___wmul@multiplier+1
  1061   000C76  0E00               	movlw	0
  1062   000C78  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1063   000C7A  0E0A               	movlw	10
  1064   000C7C  6E1C               	movwf	___wmul@multiplicand^0,c
  1065   000C7E  ECA4  F008         	call	___wmul	;wreg free
  1066   000C82  C01A  F013         	movff	?___wmul,_n1
  1067   000C86  C01B  F014         	movff	?___wmul+1,_n1+1
  1068                           
  1069                           ;Laboratorio4.c: 135: } else {
  1070   000C8A  4A2B               	infsnz	main@i^0,f,c
  1071   000C8C  2A2C               	incf	(main@i+1)^0,f,c
  1072   000C8E  D7AE               	goto	l1859
  1073   000C90                     l1879:
  1074   000C90  5004               	movf	(_r+3)^0,w,c
  1075   000C92  1003               	iorwf	(_r+2)^0,w,c
  1076   000C94  1002               	iorwf	(_r+1)^0,w,c
  1077   000C96  E104               	bnz	u1470
  1078   000C98  0E52               	movlw	82
  1079   000C9A  5C01               	subwf	_r^0,w,c
  1080   000C9C  A0D8               	btfss	status,0,c
  1081   000C9E  D025               	goto	l1891
  1082   000CA0                     u1470:
  1083   000CA0  0EE8               	movlw	232
  1084   000CA2  1801               	xorwf	_r^0,w,c
  1085   000CA4  E106               	bnz	u1480
  1086   000CA6  0E03               	movlw	3
  1087   000CA8  1802               	xorwf	(_r+1)^0,w,c
  1088   000CAA  1003               	iorwf	(_r+2)^0,w,c
  1089   000CAC  1004               	iorwf	(_r+3)^0,w,c
  1090   000CAE  B4D8               	btfsc	status,2,c
  1091   000CB0  D01C               	goto	l1891
  1092   000CB2                     u1480:
  1093   000CB2  0EE9               	movlw	233
  1094   000CB4  1801               	xorwf	_r^0,w,c
  1095   000CB6  E106               	bnz	u1490
  1096   000CB8  0E03               	movlw	3
  1097   000CBA  1802               	xorwf	(_r+1)^0,w,c
  1098   000CBC  1003               	iorwf	(_r+2)^0,w,c
  1099   000CBE  1004               	iorwf	(_r+3)^0,w,c
  1100   000CC0  B4D8               	btfsc	status,2,c
  1101   000CC2  D013               	goto	l1891
  1102   000CC4                     u1490:
  1103                           
  1104                           ;Laboratorio4.c: 141: EscribeLCD_c('-');
  1105   000CC4  0E2D               	movlw	45
  1106   000CC6  ECB7  F008         	call	_EscribeLCD_c
  1107                           
  1108                           ;Laboratorio4.c: 142: DireccionaLCD(0x85);
  1109   000CCA  0E85               	movlw	133
  1110   000CCC  ECC2  F008         	call	_DireccionaLCD
  1111                           
  1112                           ;Laboratorio4.c: 143: r = ~r+1;
  1113   000CD0  1E04               	comf	(_r+3)^0,f,c
  1114   000CD2  1E03               	comf	(_r+2)^0,f,c
  1115   000CD4  1E02               	comf	(_r+1)^0,f,c
  1116   000CD6  6C01               	negf	_r^0,c
  1117   000CD8  0E00               	movlw	0
  1118   000CDA  2202               	addwfc	(_r+1)^0,f,c
  1119   000CDC  2203               	addwfc	(_r+2)^0,f,c
  1120   000CDE  2204               	addwfc	(_r+3)^0,f,c
  1121                           
  1122                           ;Laboratorio4.c: 144: EscribeLCD_c(r+'0');
  1123   000CE0  5001               	movf	_r^0,w,c
  1124   000CE2  0F30               	addlw	48
  1125   000CE4  ECB7  F008         	call	_EscribeLCD_c
  1126                           
  1127                           ;Laboratorio4.c: 145: }else{
  1128   000CE8  D06E               	goto	l1913
  1129   000CEA                     l1891:
  1130                           
  1131                           ;Laboratorio4.c: 146: if(r>0xA & r!=1000 & r !=1001){
  1132   000CEA  5004               	movf	(_r+3)^0,w,c
  1133   000CEC  1003               	iorwf	(_r+2)^0,w,c
  1134   000CEE  1002               	iorwf	(_r+1)^0,w,c
  1135   000CF0  E104               	bnz	u1500
  1136   000CF2  0E0B               	movlw	11
  1137   000CF4  5C01               	subwf	_r^0,w,c
  1138   000CF6  A0D8               	btfss	status,0,c
  1139   000CF8  D038               	goto	l1901
  1140   000CFA                     u1500:
  1141   000CFA  0EE8               	movlw	232
  1142   000CFC  1801               	xorwf	_r^0,w,c
  1143   000CFE  E106               	bnz	u1510
  1144   000D00  0E03               	movlw	3
  1145   000D02  1802               	xorwf	(_r+1)^0,w,c
  1146   000D04  1003               	iorwf	(_r+2)^0,w,c
  1147   000D06  1004               	iorwf	(_r+3)^0,w,c
  1148   000D08  B4D8               	btfsc	status,2,c
  1149   000D0A  D02F               	goto	l1901
  1150   000D0C                     u1510:
  1151   000D0C  0EE9               	movlw	233
  1152   000D0E  1801               	xorwf	_r^0,w,c
  1153   000D10  E106               	bnz	u1520
  1154   000D12  0E03               	movlw	3
  1155   000D14  1802               	xorwf	(_r+1)^0,w,c
  1156   000D16  1003               	iorwf	(_r+2)^0,w,c
  1157   000D18  1004               	iorwf	(_r+3)^0,w,c
  1158   000D1A  B4D8               	btfsc	status,2,c
  1159   000D1C  D026               	goto	l1901
  1160   000D1E                     u1520:
  1161   000D1E                     l1897:
  1162                           
  1163                           ;Laboratorio4.c: 148: i = i+1;
  1164   000D1E  0E01               	movlw	1
  1165   000D20  240F               	addwf	_i^0,w,c
  1166   000D22  6E0F               	movwf	_i^0,c
  1167   000D24  0E00               	movlw	0
  1168   000D26  2010               	addwfc	(_i+1)^0,w,c
  1169   000D28  6E10               	movwf	(_i+1)^0,c
  1170                           
  1171                           ;Laboratorio4.c: 149: r = r - 10;
  1172   000D2A  0EF6               	movlw	246
  1173   000D2C  2401               	addwf	_r^0,w,c
  1174   000D2E  6E01               	movwf	_r^0,c
  1175   000D30  0EFF               	movlw	255
  1176   000D32  2002               	addwfc	(_r+1)^0,w,c
  1177   000D34  6E02               	movwf	(_r+1)^0,c
  1178   000D36  0EFF               	movlw	255
  1179   000D38  2003               	addwfc	(_r+2)^0,w,c
  1180   000D3A  6E03               	movwf	(_r+2)^0,c
  1181   000D3C  0EFF               	movlw	255
  1182   000D3E  2004               	addwfc	(_r+3)^0,w,c
  1183   000D40  6E04               	movwf	(_r+3)^0,c
  1184                           
  1185                           ;Laboratorio4.c: 150: }while(r>0xA);
  1186   000D42  5004               	movf	(_r+3)^0,w,c
  1187   000D44  1003               	iorwf	(_r+2)^0,w,c
  1188   000D46  1002               	iorwf	(_r+1)^0,w,c
  1189   000D48  E1EA               	bnz	l1897
  1190   000D4A  0E0B               	movlw	11
  1191   000D4C  5C01               	subwf	_r^0,w,c
  1192   000D4E  B0D8               	btfsc	status,0,c
  1193   000D50  D7E6               	goto	u1520
  1194                           
  1195                           ;Laboratorio4.c: 151: EscribeLCD_c(i+'0');
  1196   000D52  500F               	movf	_i^0,w,c
  1197   000D54  0F30               	addlw	48
  1198   000D56  ECB7  F008         	call	_EscribeLCD_c
  1199                           
  1200                           ;Laboratorio4.c: 152: DireccionaLCD(0x85);
  1201   000D5A  0E85               	movlw	133
  1202   000D5C  ECC2  F008         	call	_DireccionaLCD
  1203                           
  1204                           ;Laboratorio4.c: 153: EscribeLCD_c(r+'0');
  1205   000D60  5001               	movf	_r^0,w,c
  1206   000D62  0F30               	addlw	48
  1207   000D64  ECB7  F008         	call	_EscribeLCD_c
  1208                           
  1209                           ;Laboratorio4.c: 154: }else{
  1210   000D68  D02E               	goto	l1913
  1211   000D6A                     l1901:
  1212                           
  1213                           ;Laboratorio4.c: 155: if(r==1000){
  1214   000D6A  0EE8               	movlw	232
  1215   000D6C  1801               	xorwf	_r^0,w,c
  1216   000D6E  E110               	bnz	l1905
  1217   000D70  0E03               	movlw	3
  1218   000D72  1802               	xorwf	(_r+1)^0,w,c
  1219   000D74  1003               	iorwf	(_r+2)^0,w,c
  1220   000D76  1004               	iorwf	(_r+3)^0,w,c
  1221   000D78  A4D8               	btfss	status,2,c
  1222   000D7A  D00A               	goto	l1905
  1223                           
  1224                           ;Laboratorio4.c: 156: EscribeLCD_c('I');
  1225   000D7C  0E49               	movlw	73
  1226   000D7E  ECB7  F008         	call	_EscribeLCD_c
  1227                           
  1228                           ;Laboratorio4.c: 157: EscribeLCD_c('N');
  1229   000D82  0E4E               	movlw	78
  1230   000D84  ECB7  F008         	call	_EscribeLCD_c
  1231                           
  1232                           ;Laboratorio4.c: 158: EscribeLCD_c('F');
  1233   000D88  0E46               	movlw	70
  1234   000D8A  ECB7  F008         	call	_EscribeLCD_c
  1235                           
  1236                           ;Laboratorio4.c: 159: }else{
  1237   000D8E  D01B               	goto	l1913
  1238   000D90                     l1905:
  1239                           
  1240                           ;Laboratorio4.c: 160: if(r==1001){
  1241   000D90  0EE9               	movlw	233
  1242   000D92  1801               	xorwf	_r^0,w,c
  1243   000D94  E110               	bnz	l1909
  1244   000D96  0E03               	movlw	3
  1245   000D98  1802               	xorwf	(_r+1)^0,w,c
  1246   000D9A  1003               	iorwf	(_r+2)^0,w,c
  1247   000D9C  1004               	iorwf	(_r+3)^0,w,c
  1248   000D9E  A4D8               	btfss	status,2,c
  1249   000DA0  D00A               	goto	l1909
  1250                           
  1251                           ;Laboratorio4.c: 161: EscribeLCD_c('I');
  1252   000DA2  0E49               	movlw	73
  1253   000DA4  ECB7  F008         	call	_EscribeLCD_c
  1254                           
  1255                           ;Laboratorio4.c: 162: EscribeLCD_c('N');
  1256   000DA8  0E4E               	movlw	78
  1257   000DAA  ECB7  F008         	call	_EscribeLCD_c
  1258                           
  1259                           ;Laboratorio4.c: 163: EscribeLCD_c('D');
  1260   000DAE  0E44               	movlw	68
  1261   000DB0  ECB7  F008         	call	_EscribeLCD_c
  1262                           
  1263                           ;Laboratorio4.c: 164: }else{
  1264   000DB4  D008               	goto	l1913
  1265   000DB6                     l1909:
  1266                           
  1267                           ;Laboratorio4.c: 165: EscribeLCD_c(r+'0');
  1268   000DB6  5001               	movf	_r^0,w,c
  1269   000DB8  0F30               	addlw	48
  1270   000DBA  ECB7  F008         	call	_EscribeLCD_c
  1271   000DBE  D003               	goto	l1913
  1272   000DC0                     l1911:
  1273                           
  1274                           ;Laboratorio4.c: 171: EscribeLCD_c('W');
  1275   000DC0  0E57               	movlw	87
  1276   000DC2  ECB7  F008         	call	_EscribeLCD_c
  1277   000DC6                     l1913:
  1278                           
  1279                           ;Laboratorio4.c: 172: };Laboratorio4.c: 173: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1280   000DC6  0EE4               	movlw	228
  1281   000DC8  6E27               	movwf	??_main^0,c
  1282   000DCA  0E44               	movlw	68
  1283   000DCC                     u1577:
  1284   000DCC  2EE8               	decfsz	wreg,f,c
  1285   000DCE  D7FE               	bra	u1577
  1286   000DD0  2E27               	decfsz	??_main^0,f,c
  1287   000DD2  D7FC               	bra	u1577
  1288   000DD4  D000               	nop2	
  1289   000DD6  D55E               	goto	l1703
  1290   000DD8                     __end_of_main:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function ___wmul *****************
  1294 ;; Defined at:
  1295 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  multiplier      2    0[COMRAM] unsigned int 
  1298 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  product         2    4[COMRAM] unsigned int 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  2    0[COMRAM] unsigned int 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, prodl, prodh
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1310 ;;      Params:         4       0       0       0       0       0       0       0       0
  1311 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1313 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1314 ;;Total ram usage:        6 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text1
  1325   001148                     __ptext1:
  1326                           	callstack 0
  1327   001148                     ___wmul:
  1328                           	callstack 29
  1329                           
  1330                           ;incstack = 0
  1331   001148  501A               	movf	___wmul@multiplier^0,w,c
  1332   00114A  021C               	mulwf	___wmul@multiplicand^0,c
  1333   00114C  CFF3 F01E          	movff	prodl,___wmul@product
  1334   001150  CFF4 F01F          	movff	prodh,___wmul@product+1
  1335   001154  501A               	movf	___wmul@multiplier^0,w,c
  1336   001156  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  1337   001158  50F3               	movf	243,w,c
  1338   00115A  261F               	addwf	(___wmul@product+1)^0,f,c
  1339   00115C  501B               	movf	(___wmul@multiplier+1)^0,w,c
  1340   00115E  021C               	mulwf	___wmul@multiplicand^0,c
  1341   001160  50F3               	movf	243,w,c
  1342   001162  261F               	addwf	(___wmul@product+1)^0,f,c
  1343   001164  C01E  F01A         	movff	___wmul@product,?___wmul
  1344   001168  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  1345   00116C  0012               	return		;funcret
  1346   00116E                     __end_of___wmul:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function ___lwmod *****************
  1350 ;; Defined at:
  1351 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  dividend        2    0[COMRAM] unsigned int 
  1354 ;;  divisor         2    2[COMRAM] unsigned int 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  counter         1    4[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    0[COMRAM] unsigned int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1366 ;;      Params:         4       0       0       0       0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1369 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1370 ;;Total ram usage:        5 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text2
  1381   001054                     __ptext2:
  1382                           	callstack 0
  1383   001054                     ___lwmod:
  1384                           	callstack 29
  1385                           
  1386                           ;incstack = 0
  1387   001054  501C               	movf	___lwmod@divisor^0,w,c
  1388   001056  101D               	iorwf	(___lwmod@divisor+1)^0,w,c
  1389   001058  B4D8               	btfsc	status,2,c
  1390   00105A  D018               	goto	l759
  1391   00105C  0E01               	movlw	1
  1392   00105E  6E1E               	movwf	___lwmod@counter^0,c
  1393   001060  D004               	goto	l1657
  1394   001062                     l1655:
  1395   001062  90D8               	bcf	status,0,c
  1396   001064  361C               	rlcf	___lwmod@divisor^0,f,c
  1397   001066  361D               	rlcf	(___lwmod@divisor+1)^0,f,c
  1398   001068  2A1E               	incf	___lwmod@counter^0,f,c
  1399   00106A                     l1657:
  1400   00106A  AE1D               	btfss	(___lwmod@divisor+1)^0,7,c
  1401   00106C  D7FA               	goto	l1655
  1402   00106E                     u1000:
  1403   00106E  501C               	movf	___lwmod@divisor^0,w,c
  1404   001070  5C1A               	subwf	___lwmod@dividend^0,w,c
  1405   001072  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1406   001074  581B               	subwfb	(___lwmod@dividend+1)^0,w,c
  1407   001076  A0D8               	btfss	status,0,c
  1408   001078  D004               	goto	l1663
  1409   00107A  501C               	movf	___lwmod@divisor^0,w,c
  1410   00107C  5E1A               	subwf	___lwmod@dividend^0,f,c
  1411   00107E  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1412   001080  5A1B               	subwfb	(___lwmod@dividend+1)^0,f,c
  1413   001082                     l1663:
  1414   001082  90D8               	bcf	status,0,c
  1415   001084  321D               	rrcf	(___lwmod@divisor+1)^0,f,c
  1416   001086  321C               	rrcf	___lwmod@divisor^0,f,c
  1417   001088  2E1E               	decfsz	___lwmod@counter^0,f,c
  1418   00108A  D7F1               	goto	u1000
  1419   00108C                     l759:
  1420   00108C  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1421   001090  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1422   001094  0012               	return		;funcret
  1423   001096                     __end_of___lwmod:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function ___lwdiv *****************
  1427 ;; Defined at:
  1428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  dividend        2    6[COMRAM] unsigned int 
  1431 ;;  divisor         2    8[COMRAM] unsigned int 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  quotient        2   10[COMRAM] unsigned int 
  1434 ;;  counter         1   12[COMRAM] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2    6[COMRAM] unsigned int 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         4       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        7 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text3
  1459   001002                     __ptext3:
  1460                           	callstack 0
  1461   001002                     ___lwdiv:
  1462                           	callstack 29
  1463                           
  1464                           ;incstack = 0
  1465   001002  0E00               	movlw	0
  1466   001004  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  1467   001006  0E00               	movlw	0
  1468   001008  6E24               	movwf	___lwdiv@quotient^0,c
  1469   00100A  5022               	movf	___lwdiv@divisor^0,w,c
  1470   00100C  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1471   00100E  B4D8               	btfsc	status,2,c
  1472   001010  D01C               	goto	l749
  1473   001012  0E01               	movlw	1
  1474   001014  6E26               	movwf	___lwdiv@counter^0,c
  1475   001016  D004               	goto	l1637
  1476   001018                     l1635:
  1477   001018  90D8               	bcf	status,0,c
  1478   00101A  3622               	rlcf	___lwdiv@divisor^0,f,c
  1479   00101C  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1480   00101E  2A26               	incf	___lwdiv@counter^0,f,c
  1481   001020                     l1637:
  1482   001020  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  1483   001022  D7FA               	goto	l1635
  1484   001024                     u970:
  1485   001024  90D8               	bcf	status,0,c
  1486   001026  3624               	rlcf	___lwdiv@quotient^0,f,c
  1487   001028  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1488   00102A  5022               	movf	___lwdiv@divisor^0,w,c
  1489   00102C  5C20               	subwf	___lwdiv@dividend^0,w,c
  1490   00102E  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1491   001030  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1492   001032  A0D8               	btfss	status,0,c
  1493   001034  D005               	goto	l1647
  1494   001036  5022               	movf	___lwdiv@divisor^0,w,c
  1495   001038  5E20               	subwf	___lwdiv@dividend^0,f,c
  1496   00103A  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1497   00103C  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1498   00103E  8024               	bsf	___lwdiv@quotient^0,0,c
  1499   001040                     l1647:
  1500   001040  90D8               	bcf	status,0,c
  1501   001042  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1502   001044  3222               	rrcf	___lwdiv@divisor^0,f,c
  1503   001046  2E26               	decfsz	___lwdiv@counter^0,f,c
  1504   001048  D7ED               	goto	u970
  1505   00104A                     l749:
  1506   00104A  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  1507   00104E  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1508   001052  0012               	return		;funcret
  1509   001054                     __end_of___lwdiv:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function ___lmul *****************
  1513 ;; Defined at:
  1514 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  multiplier      4    0[COMRAM] unsigned long 
  1517 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  product         4    8[COMRAM] unsigned long 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  4    0[COMRAM] unsigned long 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         8       0       0       0       0       0       0       0       0
  1530 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1533 ;;Total ram usage:       12 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text4
  1544   000F56                     __ptext4:
  1545                           	callstack 0
  1546   000F56                     ___lmul:
  1547                           	callstack 29
  1548                           
  1549                           ;incstack = 0
  1550   000F56  0E00               	movlw	0
  1551   000F58  6E22               	movwf	___lmul@product^0,c
  1552   000F5A  0E00               	movlw	0
  1553   000F5C  6E23               	movwf	(___lmul@product+1)^0,c
  1554   000F5E  0E00               	movlw	0
  1555   000F60  6E24               	movwf	(___lmul@product+2)^0,c
  1556   000F62  0E00               	movlw	0
  1557   000F64  6E25               	movwf	(___lmul@product+3)^0,c
  1558   000F66                     l1621:
  1559   000F66  A01A               	btfss	___lmul@multiplier^0,0,c
  1560   000F68  D008               	goto	l1625
  1561   000F6A  501E               	movf	___lmul@multiplicand^0,w,c
  1562   000F6C  2622               	addwf	___lmul@product^0,f,c
  1563   000F6E  501F               	movf	(___lmul@multiplicand+1)^0,w,c
  1564   000F70  2223               	addwfc	(___lmul@product+1)^0,f,c
  1565   000F72  5020               	movf	(___lmul@multiplicand+2)^0,w,c
  1566   000F74  2224               	addwfc	(___lmul@product+2)^0,f,c
  1567   000F76  5021               	movf	(___lmul@multiplicand+3)^0,w,c
  1568   000F78  2225               	addwfc	(___lmul@product+3)^0,f,c
  1569   000F7A                     l1625:
  1570   000F7A  90D8               	bcf	status,0,c
  1571   000F7C  361E               	rlcf	___lmul@multiplicand^0,f,c
  1572   000F7E  361F               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1573   000F80  3620               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1574   000F82  3621               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1575   000F84  90D8               	bcf	status,0,c
  1576   000F86  321D               	rrcf	(___lmul@multiplier+3)^0,f,c
  1577   000F88  321C               	rrcf	(___lmul@multiplier+2)^0,f,c
  1578   000F8A  321B               	rrcf	(___lmul@multiplier+1)^0,f,c
  1579   000F8C  321A               	rrcf	___lmul@multiplier^0,f,c
  1580   000F8E  501A               	movf	___lmul@multiplier^0,w,c
  1581   000F90  101B               	iorwf	(___lmul@multiplier+1)^0,w,c
  1582   000F92  101C               	iorwf	(___lmul@multiplier+2)^0,w,c
  1583   000F94  101D               	iorwf	(___lmul@multiplier+3)^0,w,c
  1584   000F96  A4D8               	btfss	status,2,c
  1585   000F98  D7E6               	goto	l1621
  1586   000F9A  C022  F01A         	movff	___lmul@product,?___lmul
  1587   000F9E  C023  F01B         	movff	___lmul@product+1,?___lmul+1
  1588   000FA2  C024  F01C         	movff	___lmul@product+2,?___lmul+2
  1589   000FA6  C025  F01D         	movff	___lmul@product+3,?___lmul+3
  1590   000FAA  0012               	return		;funcret
  1591   000FAC                     __end_of___lmul:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _MensajeLCD_Word *****************
  1595 ;; Defined at:
  1596 ;;		line 239 in file "LibLCDXC8.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  a               1    4[COMRAM] PTR unsigned char 
  1599 ;;		 -> STR_3(17), STR_2(5), STR_1(8), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  i               2    6[COMRAM] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         1       0       0       0       0       0       0       0       0
  1612 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1614 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:        4 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 4
  1618 ;; This function calls:
  1619 ;;		_EscribeLCD_c
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text5
  1626   001112                     __ptext5:
  1627                           	callstack 0
  1628   001112                     _MensajeLCD_Word:
  1629                           	callstack 26
  1630                           
  1631                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1632                           
  1633                           ;incstack = 0
  1634   001112  0E00               	movlw	0
  1635   001114  6E21               	movwf	(MensajeLCD_Word@i+1)^0,c
  1636   001116  0E00               	movlw	0
  1637   001118  6E20               	movwf	MensajeLCD_Word@i^0,c
  1638   00111A                     l1607:
  1639                           
  1640                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1641   00111A  501E               	movf	MensajeLCD_Word@a^0,w,c
  1642   00111C  2420               	addwf	MensajeLCD_Word@i^0,w,c
  1643   00111E  6E1F               	movwf	??_MensajeLCD_Word^0,c
  1644   001120  C01F  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1645   001124                     	if	1	;There is more than 1 active tblptr byte
  1646   001124  0E08               	movlw	high __smallconst
  1647   001126  6EF7               	movwf	tblptrh,c
  1648   001128                     	endif
  1649   001128                     	if	0	;tblptru may be non-zero
  1650   001128                     	endif
  1651   001128                     	if	0	;tblptru may be non-zero
  1652   001128                     	endif
  1653   001128  0008               	tblrd		*
  1654   00112A  50F5               	movf	tablat,w,c
  1655   00112C  ECB7  F008         	call	_EscribeLCD_c
  1656   001130  4A20               	infsnz	MensajeLCD_Word@i^0,f,c
  1657   001132  2A21               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1658   001134  BE21               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1659   001136  D7F1               	goto	l1607
  1660   001138  5021               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1661   00113A  E105               	bnz	u930
  1662   00113C  0E10               	movlw	16
  1663   00113E  5C20               	subwf	MensajeLCD_Word@i^0,w,c
  1664   001140  B0D8               	btfsc	status,0,c
  1665   001142  0012               	return	
  1666   001144  D7EA               	goto	l1607
  1667   001146                     u930:
  1668   001146  0012               	return		;funcret
  1669   001148                     __end_of_MensajeLCD_Word:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _EscribeLCD_c *****************
  1673 ;; Defined at:
  1674 ;;		line 140 in file "LibLCDXC8.h"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  a               1    wreg     unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  a               1    3[COMRAM] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1688 ;;      Params:         0       0       0       0       0       0       0       0       0
  1689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1691 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 3
  1695 ;; This function calls:
  1696 ;;		_EnviaDato
  1697 ;;		_HabilitaLCD
  1698 ;;		_RetardoLCD
  1699 ;; This function is called by:
  1700 ;;		_MensajeLCD_Word
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text6
  1706   00116E                     __ptext6:
  1707                           	callstack 0
  1708   00116E                     _EscribeLCD_c:
  1709                           	callstack 26
  1710                           
  1711                           ;incstack = 0
  1712                           ;EscribeLCD_c@a stored from wreg
  1713   00116E  6E1D               	movwf	EscribeLCD_c@a^0,c
  1714                           
  1715                           ;LibLCDXC8.h: 144: LATE0=1;
  1716   001170  808D               	bsf	3981,0,c	;volatile
  1717                           
  1718                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1719   001172  501D               	movf	EscribeLCD_c@a^0,w,c
  1720   001174  ECDE  F008         	call	_EnviaDato
  1721                           
  1722                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1723   001178  ECD7  F008         	call	_HabilitaLCD	;wreg free
  1724                           
  1725                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1726   00117C  0E04               	movlw	4
  1727   00117E  ECD6  F007         	call	_RetardoLCD
  1728   001182  0012               	return		;funcret
  1729   001184                     __end_of_EscribeLCD_c:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _LeerTeclado *****************
  1733 ;; Defined at:
  1734 ;;		line 179 in file "Laboratorio4.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      unsigned char 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text7
  1763   000DD8                     __ptext7:
  1764                           	callstack 0
  1765   000DD8                     _LeerTeclado:
  1766                           	callstack 29
  1767                           
  1768                           ;Laboratorio4.c: 180: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1769                           
  1770                           ;incstack = 0
  1771   000DD8  B881               	btfsc	3969,4,c	;volatile
  1772   000DDA  AA81               	btfss	3969,5,c	;volatile
  1773   000DDC  D004               	goto	u50
  1774   000DDE  AC81               	btfss	3969,6,c	;volatile
  1775   000DE0  D002               	goto	u50
  1776   000DE2  BE81               	btfsc	3969,7,c	;volatile
  1777   000DE4  D7F9               	goto	__ptext7
  1778   000DE6                     u50:
  1779                           
  1780                           ;Laboratorio4.c: 181: verificador = 1;
  1781   000DE6  0E00               	movlw	0
  1782   000DE8  6E0A               	movwf	(_verificador+1)^0,c
  1783   000DEA  0E01               	movlw	1
  1784   000DEC  6E09               	movwf	_verificador^0,c
  1785                           
  1786                           ;Laboratorio4.c: 182: LATB=0b11111110;
  1787   000DEE  0EFE               	movlw	254
  1788   000DF0  6E8A               	movwf	138,c	;volatile
  1789                           
  1790                           ;Laboratorio4.c: 183: if(RB4==0) return '1';
  1791   000DF2  B881               	btfsc	3969,4,c	;volatile
  1792   000DF4  D002               	goto	l211
  1793   000DF6  0E31               	movlw	49
  1794   000DF8  0012               	return	
  1795   000DFA                     l211:
  1796                           
  1797                           ;Laboratorio4.c: 184: else if(RB5==0) return '2';
  1798   000DFA  BA81               	btfsc	3969,5,c	;volatile
  1799   000DFC  D002               	goto	l214
  1800   000DFE  0E32               	movlw	50
  1801   000E00  0012               	return	
  1802   000E02                     l214:
  1803                           
  1804                           ;Laboratorio4.c: 185: else if(RB6==0) return '3';
  1805   000E02  BC81               	btfsc	3969,6,c	;volatile
  1806   000E04  D002               	goto	l216
  1807   000E06  0E33               	movlw	51
  1808   000E08  0012               	return	
  1809   000E0A                     l216:
  1810                           
  1811                           ;Laboratorio4.c: 186: else if(RB7==0) return '+';
  1812   000E0A  BE81               	btfsc	3969,7,c	;volatile
  1813   000E0C  D002               	goto	l1161
  1814   000E0E  0E2B               	movlw	43
  1815   000E10  0012               	return	
  1816   000E12                     l1161:
  1817                           
  1818                           ;Laboratorio4.c: 187: else{;Laboratorio4.c: 188: LATB=0b11111101;
  1819   000E12  0EFD               	movlw	253
  1820   000E14  6E8A               	movwf	138,c	;volatile
  1821                           
  1822                           ;Laboratorio4.c: 189: if(RB4==0) return '4';
  1823   000E16  B881               	btfsc	3969,4,c	;volatile
  1824   000E18  D002               	goto	l220
  1825   000E1A  0E34               	movlw	52
  1826   000E1C  0012               	return	
  1827   000E1E                     l220:
  1828                           
  1829                           ;Laboratorio4.c: 190: else if(RB5==0) return '5';
  1830   000E1E  BA81               	btfsc	3969,5,c	;volatile
  1831   000E20  D002               	goto	l222
  1832   000E22  0E35               	movlw	53
  1833   000E24  0012               	return	
  1834   000E26                     l222:
  1835                           
  1836                           ;Laboratorio4.c: 191: else if(RB6==0) return '6';
  1837   000E26  BC81               	btfsc	3969,6,c	;volatile
  1838   000E28  D002               	goto	l224
  1839   000E2A  0E36               	movlw	54
  1840   000E2C  0012               	return	
  1841   000E2E                     l224:
  1842                           
  1843                           ;Laboratorio4.c: 192: else if(RB7==0) return '-';
  1844   000E2E  BE81               	btfsc	3969,7,c	;volatile
  1845   000E30  D002               	goto	l1189
  1846   000E32  0E2D               	movlw	45
  1847   000E34  0012               	return	
  1848   000E36                     l1189:
  1849                           
  1850                           ;Laboratorio4.c: 193: else{;Laboratorio4.c: 194: LATB=0b11111011;
  1851   000E36  0EFB               	movlw	251
  1852   000E38  6E8A               	movwf	138,c	;volatile
  1853                           
  1854                           ;Laboratorio4.c: 195: if(RB4==0) return '7';
  1855   000E3A  B881               	btfsc	3969,4,c	;volatile
  1856   000E3C  D002               	goto	l228
  1857   000E3E  0E37               	movlw	55
  1858   000E40  0012               	return	
  1859   000E42                     l228:
  1860                           
  1861                           ;Laboratorio4.c: 196: else if(RB5==0) return '8';
  1862   000E42  BA81               	btfsc	3969,5,c	;volatile
  1863   000E44  D002               	goto	l230
  1864   000E46  0E38               	movlw	56
  1865   000E48  0012               	return	
  1866   000E4A                     l230:
  1867                           
  1868                           ;Laboratorio4.c: 197: else if(RB6==0) return '9';
  1869   000E4A  BC81               	btfsc	3969,6,c	;volatile
  1870   000E4C  D002               	goto	l232
  1871   000E4E  0E39               	movlw	57
  1872   000E50  0012               	return	
  1873   000E52                     l232:
  1874                           
  1875                           ;Laboratorio4.c: 198: else if(RB7==0) return '/';
  1876   000E52  BE81               	btfsc	3969,7,c	;volatile
  1877   000E54  D002               	goto	l1217
  1878   000E56  0E2F               	movlw	47
  1879   000E58  0012               	return	
  1880   000E5A                     l1217:
  1881                           
  1882                           ;Laboratorio4.c: 199: else{;Laboratorio4.c: 200: LATB=0b11110111;
  1883   000E5A  0EF7               	movlw	247
  1884   000E5C  6E8A               	movwf	138,c	;volatile
  1885                           
  1886                           ;Laboratorio4.c: 201: if(RB4==0) return 'C';
  1887   000E5E  B881               	btfsc	3969,4,c	;volatile
  1888   000E60  D002               	goto	l236
  1889   000E62  0E43               	movlw	67
  1890   000E64  0012               	return	
  1891   000E66                     l236:
  1892                           
  1893                           ;Laboratorio4.c: 202: else if(RB5==0) return '0';
  1894   000E66  BA81               	btfsc	3969,5,c	;volatile
  1895   000E68  D002               	goto	l238
  1896   000E6A  0E30               	movlw	48
  1897   000E6C  0012               	return	
  1898   000E6E                     l238:
  1899                           
  1900                           ;Laboratorio4.c: 203: else if(RB6==0) return '=';
  1901   000E6E  BC81               	btfsc	3969,6,c	;volatile
  1902   000E70  D002               	goto	l240
  1903   000E72  0E3D               	movlw	61
  1904   000E74  0012               	return	
  1905   000E76                     l240:
  1906                           
  1907                           ;Laboratorio4.c: 204: else if(RB7==0) return 'x';
  1908   000E76  BE81               	btfsc	3969,7,c	;volatile
  1909   000E78  D002               	goto	l237
  1910   000E7A  0E78               	movlw	120
  1911   000E7C  0012               	return	
  1912   000E7E                     l237:
  1913                           
  1914                           ;Laboratorio4.c: 205: };Laboratorio4.c: 206: };Laboratorio4.c: 207: };Laboratorio4.c: 20
      +                          8: return '?';
  1915   000E7E  0E3F               	movlw	63
  1916   000E80  0012               	return		;funcret
  1917   000E82                     __end_of_LeerTeclado:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _InicializaLCD *****************
  1921 ;; Defined at:
  1922 ;;		line 71 in file "LibLCDXC8.h"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 4
  1943 ;; This function calls:
  1944 ;;		_BorraLCD
  1945 ;;		_EnviaDato
  1946 ;;		_HabilitaLCD
  1947 ;;		_RetardoLCD
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text8
  1954   001096                     __ptext8:
  1955                           	callstack 0
  1956   001096                     _InicializaLCD:
  1957                           	callstack 26
  1958                           
  1959                           ;LibLCDXC8.h: 73: LATE0=0;
  1960                           
  1961                           ;incstack = 0
  1962   001096  908D               	bcf	3981,0,c	;volatile
  1963                           
  1964                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1965                           
  1966                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1967   001098  0E3F               	movlw	63
  1968   00109A  6E8C               	movwf	140,c	;volatile
  1969                           
  1970                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1971   00109C  ECD7  F008         	call	_HabilitaLCD	;wreg free
  1972                           
  1973                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1974   0010A0  0E01               	movlw	1
  1975   0010A2  ECD6  F007         	call	_RetardoLCD
  1976                           
  1977                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1978                           
  1979                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1980   0010A6  0E3F               	movlw	63
  1981   0010A8  6E8C               	movwf	140,c	;volatile
  1982                           
  1983                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1984   0010AA  ECD7  F008         	call	_HabilitaLCD	;wreg free
  1985                           
  1986                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1987   0010AE  0E03               	movlw	3
  1988   0010B0  ECD6  F007         	call	_RetardoLCD
  1989                           
  1990                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1991                           
  1992                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1993   0010B4  0E3F               	movlw	63
  1994   0010B6  6E8C               	movwf	140,c	;volatile
  1995                           
  1996                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1997   0010B8  ECD7  F008         	call	_HabilitaLCD	;wreg free
  1998                           
  1999                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2000   0010BC  0E04               	movlw	4
  2001   0010BE  ECD6  F007         	call	_RetardoLCD
  2002                           
  2003                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2004                           
  2005                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2006   0010C2  ECCD  F008         	call	_BorraLCD	;wreg free
  2007                           
  2008                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2009   0010C6  0E0F               	movlw	15
  2010   0010C8  ECDE  F008         	call	_EnviaDato
  2011                           
  2012                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2013   0010CC  ECD7  F008         	call	_HabilitaLCD	;wreg free
  2014                           
  2015                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2016   0010D0  0E04               	movlw	4
  2017   0010D2  ECD6  F007         	call	_RetardoLCD
  2018   0010D6  0012               	return		;funcret
  2019   0010D8                     __end_of_InicializaLCD:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _BorraLCD *****************
  2023 ;; Defined at:
  2024 ;;		line 112 in file "LibLCDXC8.h"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 3
  2045 ;; This function calls:
  2046 ;;		_EnviaDato
  2047 ;;		_HabilitaLCD
  2048 ;;		_RetardoLCD
  2049 ;; This function is called by:
  2050 ;;		_InicializaLCD
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text9
  2056   00119A                     __ptext9:
  2057                           	callstack 0
  2058   00119A                     _BorraLCD:
  2059                           	callstack 26
  2060                           
  2061                           ;LibLCDXC8.h: 114: LATE0=0;
  2062                           
  2063                           ;incstack = 0
  2064   00119A  908D               	bcf	3981,0,c	;volatile
  2065                           
  2066                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2067   00119C  0E01               	movlw	1
  2068   00119E  ECDE  F008         	call	_EnviaDato
  2069                           
  2070                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2071   0011A2  ECD7  F008         	call	_HabilitaLCD	;wreg free
  2072                           
  2073                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2074   0011A6  0E02               	movlw	2
  2075   0011A8  ECD6  F007         	call	_RetardoLCD
  2076   0011AC  0012               	return		;funcret
  2077   0011AE                     __end_of_BorraLCD:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _DireccionaLCD *****************
  2081 ;; Defined at:
  2082 ;;		line 250 in file "LibLCDXC8.h"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  a               1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  a               1    3[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 3
  2103 ;; This function calls:
  2104 ;;		_EnviaDato
  2105 ;;		_HabilitaLCD
  2106 ;;		_RetardoLCD
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text10
  2113   001184                     __ptext10:
  2114                           	callstack 0
  2115   001184                     _DireccionaLCD:
  2116                           	callstack 27
  2117                           
  2118                           ;incstack = 0
  2119                           ;DireccionaLCD@a stored from wreg
  2120   001184  6E1D               	movwf	DireccionaLCD@a^0,c
  2121                           
  2122                           ;LibLCDXC8.h: 253: LATE0=0;
  2123   001186  908D               	bcf	3981,0,c	;volatile
  2124                           
  2125                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2126   001188  501D               	movf	DireccionaLCD@a^0,w,c
  2127   00118A  ECDE  F008         	call	_EnviaDato
  2128                           
  2129                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2130   00118E  ECD7  F008         	call	_HabilitaLCD	;wreg free
  2131                           
  2132                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2133   001192  0E04               	movlw	4
  2134   001194  ECD6  F007         	call	_RetardoLCD
  2135   001198  0012               	return		;funcret
  2136   00119A                     __end_of_DireccionaLCD:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _EnviaDato *****************
  2140 ;; Defined at:
  2141 ;;		line 59 in file "LibLCDXC8.h"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  a               1    2[COMRAM] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2158 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 2
  2162 ;; This function calls:
  2163 ;;		_HabilitaLCD
  2164 ;;		_RetardoLCD
  2165 ;; This function is called by:
  2166 ;;		_InicializaLCD
  2167 ;;		_BorraLCD
  2168 ;;		_EscribeLCD_c
  2169 ;;		_DireccionaLCD
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text11
  2174   0011BC                     __ptext11:
  2175                           	callstack 0
  2176   0011BC                     _EnviaDato:
  2177                           	callstack 26
  2178                           
  2179                           ;incstack = 0
  2180                           ;EnviaDato@a stored from wreg
  2181   0011BC  6E1C               	movwf	EnviaDato@a^0,c
  2182                           
  2183                           ;LibLCDXC8.h: 68: LATD=a;
  2184                           
  2185                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2186   0011BE  C01C  FF8C         	movff	EnviaDato@a,3980	;volatile
  2187   0011C2  0012               	return		;funcret
  2188   0011C4                     __end_of_EnviaDato:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _RetardoLCD *****************
  2192 ;; Defined at:
  2193 ;;		line 286 in file "LibLCDXC8.h"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  a               1    wreg     unsigned char 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  a               1    1[COMRAM] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2210 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        2 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_EnviaDato
  2218 ;;		_InicializaLCD
  2219 ;;		_BorraLCD
  2220 ;;		_EscribeLCD_c
  2221 ;;		_DireccionaLCD
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text12
  2226   000FAC                     __ptext12:
  2227                           	callstack 0
  2228   000FAC                     _RetardoLCD:
  2229                           	callstack 27
  2230                           
  2231                           ;incstack = 0
  2232                           ;RetardoLCD@a stored from wreg
  2233   000FAC  6E1B               	movwf	RetardoLCD@a^0,c
  2234                           
  2235                           ;LibLCDXC8.h: 287: switch(a){
  2236   000FAE  D01B               	goto	l1033
  2237   000FB0                     l1023:
  2238   000FB0  0E05               	movlw	5
  2239   000FB2  6E1A               	movwf	??_RetardoLCD^0,c
  2240   000FB4  0EDE               	movlw	222
  2241   000FB6                     u1587:
  2242   000FB6  2EE8               	decfsz	wreg,f,c
  2243   000FB8  D7FE               	bra	u1587
  2244   000FBA  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2245   000FBC  D7FC               	bra	u1587
  2246                           
  2247                           ;LibLCDXC8.h: 290: break;
  2248   000FBE  0012               	return	
  2249   000FC0                     l1025:
  2250   000FC0  0E53               	movlw	83
  2251   000FC2                     u1597:
  2252   000FC2  2EE8               	decfsz	wreg,f,c
  2253   000FC4  D7FE               	bra	u1597
  2254   000FC6  F000               	nop	
  2255                           
  2256                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2257   000FC8  0E35               	movlw	53
  2258   000FCA                     u1607:
  2259   000FCA  2EE8               	decfsz	wreg,f,c
  2260   000FCC  D7FE               	bra	u1607
  2261   000FCE  F000               	nop	
  2262                           
  2263                           ;LibLCDXC8.h: 294: break;
  2264   000FD0  0012               	return	
  2265   000FD2                     l1027:
  2266   000FD2  0E08               	movlw	8
  2267   000FD4                     u1617:
  2268   000FD4  2EE8               	decfsz	wreg,f,c
  2269   000FD6  D7FE               	bra	u1617
  2270   000FD8  F000               	nop	
  2271                           
  2272                           ;LibLCDXC8.h: 297: break;
  2273   000FDA  0012               	return	
  2274   000FDC                     l1029:
  2275   000FDC  0E03               	movlw	3
  2276   000FDE                     u1627:
  2277   000FDE  2EE8               	decfsz	wreg,f,c
  2278   000FE0  D7FE               	bra	u1627
  2279   000FE2  F000               	nop	
  2280                           
  2281                           ;LibLCDXC8.h: 300: break;
  2282   000FE4  0012               	return	
  2283   000FE6                     l1033:
  2284   000FE6  501B               	movf	RetardoLCD@a^0,w,c
  2285                           
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 4, Range of values is 1 to 4
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte           13     7 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292   000FE8  0A01               	xorlw	1	; case 1
  2293   000FEA  B4D8               	btfsc	status,2,c
  2294   000FEC  D7E1               	goto	l1023
  2295   000FEE  0A03               	xorlw	3	; case 2
  2296   000FF0  B4D8               	btfsc	status,2,c
  2297   000FF2  D7E6               	goto	l1025
  2298   000FF4  0A01               	xorlw	1	; case 3
  2299   000FF6  B4D8               	btfsc	status,2,c
  2300   000FF8  D7EC               	goto	l1027
  2301   000FFA  0A07               	xorlw	7	; case 4
  2302   000FFC  A4D8               	btfss	status,2,c
  2303   000FFE  0012               	return	
  2304   001000  D7ED               	goto	l1029
  2305   001002                     __end_of_RetardoLCD:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _HabilitaLCD *****************
  2309 ;; Defined at:
  2310 ;;		line 105 in file "LibLCDXC8.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_EnviaDato
  2335 ;;		_InicializaLCD
  2336 ;;		_BorraLCD
  2337 ;;		_EscribeLCD_c
  2338 ;;		_DireccionaLCD
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text13
  2343   0011AE                     __ptext13:
  2344                           	callstack 0
  2345   0011AE                     _HabilitaLCD:
  2346                           	callstack 27
  2347                           
  2348                           ;LibLCDXC8.h: 107: LATE1=1;
  2349                           
  2350                           ;incstack = 0
  2351   0011AE  828D               	bsf	3981,1,c	;volatile
  2352                           
  2353                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2354   0011B0  0E03               	movlw	3
  2355   0011B2                     u1637:
  2356   0011B2  2EE8               	decfsz	wreg,f,c
  2357   0011B4  D7FE               	bra	u1637
  2358   0011B6  F000               	nop	
  2359                           
  2360                           ;LibLCDXC8.h: 110: LATE1=0;
  2361   0011B8  928D               	bcf	3981,1,c	;volatile
  2362   0011BA  0012               	return		;funcret
  2363   0011BC                     __end_of_HabilitaLCD:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _ColorRGB *****************
  2367 ;; Defined at:
  2368 ;;		line 211 in file "Laboratorio4.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text14
  2397   000E82                     __ptext14:
  2398                           	callstack 0
  2399   000E82                     _ColorRGB:
  2400                           	callstack 29
  2401                           
  2402                           ;Laboratorio4.c: 212: if(color==8) color = 0;
  2403                           
  2404                           ;incstack = 0
  2405   000E82  0E08               	movlw	8
  2406   000E84  180D               	xorwf	_color^0,w,c
  2407   000E86  100E               	iorwf	(_color+1)^0,w,c
  2408   000E88  A4D8               	btfss	status,2,c
  2409   000E8A  D014               	goto	l1269
  2410   000E8C  0E00               	movlw	0
  2411   000E8E  6E0E               	movwf	(_color+1)^0,c
  2412   000E90  0E00               	movlw	0
  2413   000E92  6E0D               	movwf	_color^0,c
  2414   000E94  D00F               	goto	l1269
  2415   000E96                     l1251:
  2416                           
  2417                           ;Laboratorio4.c: 215: LATC = 0b00000000;
  2418   000E96  0E00               	movlw	0
  2419   000E98  D00B               	goto	L9
  2420   000E9A                     l1253:
  2421                           
  2422                           ;Laboratorio4.c: 218: LATC = 0b00000101;
  2423   000E9A  0E05               	movlw	5
  2424   000E9C  D009               	goto	L9
  2425   000E9E                     l1255:
  2426                           
  2427                           ;Laboratorio4.c: 221: LATC = 0b00000110;
  2428   000E9E  0E06               	movlw	6
  2429   000EA0  D007               	goto	L9
  2430   000EA2                     l1257:
  2431                           
  2432                           ;Laboratorio4.c: 224: LATC = 0b00000011;
  2433   000EA2  0E03               	movlw	3
  2434   000EA4  D005               	goto	L9
  2435   000EA6                     l1259:
  2436                           
  2437                           ;Laboratorio4.c: 227: LATC = 0b00000010;
  2438   000EA6  0E02               	movlw	2
  2439   000EA8  D003               	goto	L9
  2440   000EAA                     l1263:
  2441                           
  2442                           ;Laboratorio4.c: 233: LATC = 0b00000100;
  2443   000EAA  0E04               	movlw	4
  2444   000EAC  D001               	goto	L9
  2445   000EAE                     l1265:
  2446                           
  2447                           ;Laboratorio4.c: 236: LATC = 0b00000111;
  2448   000EAE  0E07               	movlw	7
  2449   000EB0                     L9:
  2450   000EB0  6E8B               	movwf	139,c	;volatile
  2451                           
  2452                           ;Laboratorio4.c: 237: break;
  2453   000EB2  D021               	goto	l1271
  2454   000EB4                     l1269:
  2455   000EB4  C00D  F01A         	movff	_color,??_ColorRGB
  2456   000EB8  C00E  F01B         	movff	_color+1,??_ColorRGB+1
  2457                           
  2458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2459                           ; Switch size 1, requested type "simple"
  2460                           ; Number of cases is 1, Range of values is 0 to 0
  2461                           ; switch strategies available:
  2462                           ; Name         Instructions Cycles
  2463                           ; simple_byte            4     3 (average)
  2464                           ;	Chosen strategy is simple_byte
  2465   000EBC  501B               	movf	(??_ColorRGB+1)^0,w,c
  2466   000EBE  0A00               	xorlw	0	; case 0
  2467   000EC0  A4D8               	btfss	status,2,c
  2468   000EC2  D019               	goto	l1271
  2469                           
  2470                           ; Switch size 1, requested type "simple"
  2471                           ; Number of cases is 8, Range of values is 0 to 7
  2472                           ; switch strategies available:
  2473                           ; Name         Instructions Cycles
  2474                           ; simple_byte           25    13 (average)
  2475                           ;	Chosen strategy is simple_byte
  2476   000EC4  501A               	movf	??_ColorRGB^0,w,c
  2477   000EC6  0A00               	xorlw	0	; case 0
  2478   000EC8  B4D8               	btfsc	status,2,c
  2479   000ECA  D7E5               	goto	l1251
  2480   000ECC  0A01               	xorlw	1	; case 1
  2481   000ECE  B4D8               	btfsc	status,2,c
  2482   000ED0  D7E4               	goto	l1253
  2483   000ED2  0A03               	xorlw	3	; case 2
  2484   000ED4  B4D8               	btfsc	status,2,c
  2485   000ED6  D7E3               	goto	l1255
  2486   000ED8  0A01               	xorlw	1	; case 3
  2487   000EDA  B4D8               	btfsc	status,2,c
  2488   000EDC  D7E2               	goto	l1257
  2489   000EDE  0A07               	xorlw	7	; case 4
  2490   000EE0  B4D8               	btfsc	status,2,c
  2491   000EE2  D7E1               	goto	l1259
  2492   000EE4  0A01               	xorlw	1	; case 5
  2493   000EE6  B4D8               	btfsc	status,2,c
  2494   000EE8  D7DA               	goto	l1255
  2495   000EEA  0A03               	xorlw	3	; case 6
  2496   000EEC  B4D8               	btfsc	status,2,c
  2497   000EEE  D7DD               	goto	l1263
  2498   000EF0  0A01               	xorlw	1	; case 7
  2499   000EF2  B4D8               	btfsc	status,2,c
  2500   000EF4  D7DC               	goto	l1265
  2501   000EF6                     l1271:
  2502                           
  2503                           ;Laboratorio4.c: 241: color += 1;
  2504   000EF6  4A0D               	infsnz	_color^0,f,c
  2505   000EF8  2A0E               	incf	(_color+1)^0,f,c
  2506   000EFA  0012               	return		;funcret
  2507   000EFC                     __end_of_ColorRGB:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _ISR *****************
  2511 ;; Defined at:
  2512 ;;		line 244 in file "Laboratorio4.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		Interrupt level 2
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	intcode
  2540   000008                     __pintcode:
  2541                           	callstack 0
  2542   000008                     _ISR:
  2543                           	callstack 26
  2544                           
  2545                           ;incstack = 0
  2546   000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2547   00000A  ED7E  F007         	call	int_func,f	;refresh shadow registers
  2548                           
  2549                           	psect	intcode_body
  2550   000EFC                     __pintcode_body:
  2551                           	callstack 26
  2552   000EFC                     int_func:
  2553                           	callstack 26
  2554   000EFC  0006               	pop		; remove dummy address from shadow register refresh
  2555                           
  2556                           ;Laboratorio4.c: 245: if(TMR0IF==1){
  2557   000EFE  A4F2               	btfss	4082,2,c	;volatile
  2558   000F00  D019               	goto	i2l1591
  2559                           
  2560                           ;Laboratorio4.c: 246: if(!verificador) contador = contador +1;
  2561   000F02  5009               	movf	_verificador^0,w,c
  2562   000F04  100A               	iorwf	(_verificador+1)^0,w,c
  2563   000F06  A4D8               	btfss	status,2,c
  2564   000F08  D007               	goto	i2l1585
  2565   000F0A  0E01               	movlw	1
  2566   000F0C  240B               	addwf	_contador^0,w,c
  2567   000F0E  6E0B               	movwf	_contador^0,c
  2568   000F10  0E00               	movlw	0
  2569   000F12  200C               	addwfc	(_contador+1)^0,w,c
  2570   000F14  6E0C               	movwf	(_contador+1)^0,c
  2571   000F16  D004               	goto	i2l1587
  2572   000F18                     i2l1585:
  2573                           
  2574                           ;Laboratorio4.c: 247: else contador = 0;
  2575   000F18  0E00               	movlw	0
  2576   000F1A  6E0C               	movwf	(_contador+1)^0,c
  2577   000F1C  0E00               	movlw	0
  2578   000F1E  6E0B               	movwf	_contador^0,c
  2579   000F20                     i2l1587:
  2580                           
  2581                           ;Laboratorio4.c: 248: TMR0IF=0;
  2582   000F20  94F2               	bcf	4082,2,c	;volatile
  2583                           
  2584                           ;Laboratorio4.c: 249: LATE2 = !LATE2;
  2585   000F22  B48D               	btfsc	3981,2,c	;volatile
  2586   000F24  D002               	goto	i2u87_40
  2587   000F26  848D               	bsf	3981,2,c	;volatile
  2588   000F28  D001               	goto	i2u88_45
  2589   000F2A                     i2u87_40:
  2590   000F2A  948D               	bcf	3981,2,c	;volatile
  2591   000F2C                     i2u88_45:
  2592                           
  2593                           ;Laboratorio4.c: 250: TMR0 = 49911;
  2594   000F2C  0EC2               	movlw	194
  2595   000F2E  6ED7               	movwf	215,c	;volatile
  2596   000F30  0EF7               	movlw	247
  2597   000F32  6ED6               	movwf	214,c	;volatile
  2598   000F34                     i2l1591:
  2599                           
  2600                           ;Laboratorio4.c: 251: };Laboratorio4.c: 253: if(contador == 10){
  2601   000F34  0E0A               	movlw	10
  2602   000F36  180B               	xorwf	_contador^0,w,c
  2603   000F38  100C               	iorwf	(_contador+1)^0,w,c
  2604   000F3A  A4D8               	btfss	status,2,c
  2605   000F3C  D00A               	goto	i2l267
  2606                           
  2607                           ;Laboratorio4.c: 254: if(!verificador){
  2608   000F3E  5009               	movf	_verificador^0,w,c
  2609   000F40  100A               	iorwf	(_verificador+1)^0,w,c
  2610   000F42  A4D8               	btfss	status,2,c
  2611   000F44  D006               	goto	i2l267
  2612                           
  2613                           ;Laboratorio4.c: 255: LATC7 = !LATC7;
  2614   000F46  BE8B               	btfsc	3979,7,c	;volatile
  2615   000F48  D002               	goto	i2u91_40
  2616   000F4A  8E8B               	bsf	3979,7,c	;volatile
  2617   000F4C  D001               	goto	i2u92_45
  2618   000F4E                     i2u91_40:
  2619   000F4E  9E8B               	bcf	3979,7,c	;volatile
  2620   000F50                     i2u92_45:
  2621   000F50  0003               	sleep		;# 
  2622   000F52                     i2l267:
  2623   000F52  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2624   000F54  0011               	retfie		f
  2625   000F56                     __end_of_ISR:
  2626                           	callstack 0
  2627                           
  2628                           	psect	rparam
  2629   000000                     
  2630                           	psect	temp
  2631   000031                     btemp:
  2632                           	callstack 0
  2633   000031                     	ds	1
  2634   000000                     int$flags	set	btemp
  2635   000000                     wtemp8	set	btemp+1
  2636   000000                     ttemp5	set	btemp+1
  2637   000000                     ttemp6	set	btemp+4
  2638   000000                     ttemp7	set	btemp+8
  2639                           
  2640                           	psect	idloc
  2641                           
  2642                           ;Config register IDLOC0 @ 0x200000
  2643                           ;	unspecified, using default values
  2644   200000                     	org	2097152
  2645   200000  FF                 	db	255
  2646                           
  2647                           ;Config register IDLOC1 @ 0x200001
  2648                           ;	unspecified, using default values
  2649   200001                     	org	2097153
  2650   200001  FF                 	db	255
  2651                           
  2652                           ;Config register IDLOC2 @ 0x200002
  2653                           ;	unspecified, using default values
  2654   200002                     	org	2097154
  2655   200002  FF                 	db	255
  2656                           
  2657                           ;Config register IDLOC3 @ 0x200003
  2658                           ;	unspecified, using default values
  2659   200003                     	org	2097155
  2660   200003  FF                 	db	255
  2661                           
  2662                           ;Config register IDLOC4 @ 0x200004
  2663                           ;	unspecified, using default values
  2664   200004                     	org	2097156
  2665   200004  FF                 	db	255
  2666                           
  2667                           ;Config register IDLOC5 @ 0x200005
  2668                           ;	unspecified, using default values
  2669   200005                     	org	2097157
  2670   200005  FF                 	db	255
  2671                           
  2672                           ;Config register IDLOC6 @ 0x200006
  2673                           ;	unspecified, using default values
  2674   200006                     	org	2097158
  2675   200006  FF                 	db	255
  2676                           
  2677                           ;Config register IDLOC7 @ 0x200007
  2678                           ;	unspecified, using default values
  2679   200007                     	org	2097159
  2680   200007  FF                 	db	255
  2681                           
  2682                           	psect	config
  2683                           
  2684                           ;Config register CONFIG1L @ 0x300000
  2685                           ;	unspecified, using default values
  2686                           ;	PLL Prescaler Selection bits
  2687                           ;	PLLDIV = 0x0, unprogrammed default
  2688                           ;	System Clock Postscaler Selection bits
  2689                           ;	CPUDIV = 0x0, unprogrammed default
  2690                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2691                           ;	USBDIV = 0x0, unprogrammed default
  2692   300000                     	org	3145728
  2693   300000  00                 	db	0
  2694                           
  2695                           ;Config register CONFIG1H @ 0x300001
  2696                           ;	Oscillator Selection bits
  2697                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2698                           ;	Fail-Safe Clock Monitor Enable bit
  2699                           ;	FCMEN = 0x0, unprogrammed default
  2700                           ;	Internal/External Oscillator Switchover bit
  2701                           ;	IESO = 0x0, unprogrammed default
  2702   300001                     	org	3145729
  2703   300001  09                 	db	9
  2704                           
  2705                           ;Config register CONFIG2L @ 0x300002
  2706                           ;	unspecified, using default values
  2707                           ;	Power-up Timer Enable bit
  2708                           ;	PWRT = 0x1, unprogrammed default
  2709                           ;	Brown-out Reset Enable bits
  2710                           ;	BOR = 0x3, unprogrammed default
  2711                           ;	Brown-out Reset Voltage bits
  2712                           ;	BORV = 0x3, unprogrammed default
  2713                           ;	USB Voltage Regulator Enable bit
  2714                           ;	VREGEN = 0x0, unprogrammed default
  2715   300002                     	org	3145730
  2716   300002  1F                 	db	31
  2717                           
  2718                           ;Config register CONFIG2H @ 0x300003
  2719                           ;	Watchdog Timer Enable bit
  2720                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2721                           ;	Watchdog Timer Postscale Select bits
  2722                           ;	WDTPS = 0xF, unprogrammed default
  2723   300003                     	org	3145731
  2724   300003  1E                 	db	30
  2725                           
  2726                           ; Padding undefined space
  2727   300004                     	org	3145732
  2728   300004  FF                 	db	255
  2729                           
  2730                           ;Config register CONFIG3H @ 0x300005
  2731                           ;	unspecified, using default values
  2732                           ;	CCP2 MUX bit
  2733                           ;	CCP2MX = 0x1, unprogrammed default
  2734                           ;	PORTB A/D Enable bit
  2735                           ;	PBADEN = 0x1, unprogrammed default
  2736                           ;	Low-Power Timer 1 Oscillator Enable bit
  2737                           ;	LPT1OSC = 0x0, unprogrammed default
  2738                           ;	MCLR Pin Enable bit
  2739                           ;	MCLRE = 0x1, unprogrammed default
  2740   300005                     	org	3145733
  2741   300005  83                 	db	131
  2742                           
  2743                           ;Config register CONFIG4L @ 0x300006
  2744                           ;	unspecified, using default values
  2745                           ;	Stack Full/Underflow Reset Enable bit
  2746                           ;	STVREN = 0x1, unprogrammed default
  2747                           ;	Single-Supply ICSP Enable bit
  2748                           ;	LVP = 0x1, unprogrammed default
  2749                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2750                           ;	ICPRT = 0x0, unprogrammed default
  2751                           ;	Extended Instruction Set Enable bit
  2752                           ;	XINST = 0x0, unprogrammed default
  2753                           ;	Background Debugger Enable bit
  2754                           ;	DEBUG = 0x1, unprogrammed default
  2755   300006                     	org	3145734
  2756   300006  85                 	db	133
  2757                           
  2758                           ; Padding undefined space
  2759   300007                     	org	3145735
  2760   300007  FF                 	db	255
  2761                           
  2762                           ;Config register CONFIG5L @ 0x300008
  2763                           ;	unspecified, using default values
  2764                           ;	Code Protection bit
  2765                           ;	CP0 = 0x1, unprogrammed default
  2766                           ;	Code Protection bit
  2767                           ;	CP1 = 0x1, unprogrammed default
  2768                           ;	Code Protection bit
  2769                           ;	CP2 = 0x1, unprogrammed default
  2770                           ;	Code Protection bit
  2771                           ;	CP3 = 0x1, unprogrammed default
  2772   300008                     	org	3145736
  2773   300008  0F                 	db	15
  2774                           
  2775                           ;Config register CONFIG5H @ 0x300009
  2776                           ;	unspecified, using default values
  2777                           ;	Boot Block Code Protection bit
  2778                           ;	CPB = 0x1, unprogrammed default
  2779                           ;	Data EEPROM Code Protection bit
  2780                           ;	CPD = 0x1, unprogrammed default
  2781   300009                     	org	3145737
  2782   300009  C0                 	db	192
  2783                           
  2784                           ;Config register CONFIG6L @ 0x30000A
  2785                           ;	unspecified, using default values
  2786                           ;	Write Protection bit
  2787                           ;	WRT0 = 0x1, unprogrammed default
  2788                           ;	Write Protection bit
  2789                           ;	WRT1 = 0x1, unprogrammed default
  2790                           ;	Write Protection bit
  2791                           ;	WRT2 = 0x1, unprogrammed default
  2792                           ;	Write Protection bit
  2793                           ;	WRT3 = 0x1, unprogrammed default
  2794   30000A                     	org	3145738
  2795   30000A  0F                 	db	15
  2796                           
  2797                           ;Config register CONFIG6H @ 0x30000B
  2798                           ;	unspecified, using default values
  2799                           ;	Configuration Register Write Protection bit
  2800                           ;	WRTC = 0x1, unprogrammed default
  2801                           ;	Boot Block Write Protection bit
  2802                           ;	WRTB = 0x1, unprogrammed default
  2803                           ;	Data EEPROM Write Protection bit
  2804                           ;	WRTD = 0x1, unprogrammed default
  2805   30000B                     	org	3145739
  2806   30000B  E0                 	db	224
  2807                           
  2808                           ;Config register CONFIG7L @ 0x30000C
  2809                           ;	unspecified, using default values
  2810                           ;	Table Read Protection bit
  2811                           ;	EBTR0 = 0x1, unprogrammed default
  2812                           ;	Table Read Protection bit
  2813                           ;	EBTR1 = 0x1, unprogrammed default
  2814                           ;	Table Read Protection bit
  2815                           ;	EBTR2 = 0x1, unprogrammed default
  2816                           ;	Table Read Protection bit
  2817                           ;	EBTR3 = 0x1, unprogrammed default
  2818   30000C                     	org	3145740
  2819   30000C  0F                 	db	15
  2820                           
  2821                           ;Config register CONFIG7H @ 0x30000D
  2822                           ;	unspecified, using default values
  2823                           ;	Boot Block Table Read Protection bit
  2824                           ;	EBTRB = 0x1, unprogrammed default
  2825   30000D                     	org	3145741
  2826   30000D  40                 	db	64
  2827                           tosu	equ	0xFFF
  2828                           tosh	equ	0xFFE
  2829                           tosl	equ	0xFFD
  2830                           stkptr	equ	0xFFC
  2831                           pclatu	equ	0xFFB
  2832                           pclath	equ	0xFFA
  2833                           pcl	equ	0xFF9
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           indf0	equ	0xFEF
  2841                           postinc0	equ	0xFEE
  2842                           postdec0	equ	0xFED
  2843                           preinc0	equ	0xFEC
  2844                           plusw0	equ	0xFEB
  2845                           fsr0h	equ	0xFEA
  2846                           fsr0l	equ	0xFE9
  2847                           wreg	equ	0xFE8
  2848                           indf1	equ	0xFE7
  2849                           postinc1	equ	0xFE6
  2850                           postdec1	equ	0xFE5
  2851                           preinc1	equ	0xFE4
  2852                           plusw1	equ	0xFE3
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           bsr	equ	0xFE0
  2856                           indf2	equ	0xFDF
  2857                           postinc2	equ	0xFDE
  2858                           postdec2	equ	0xFDD
  2859                           preinc2	equ	0xFDC
  2860                           plusw2	equ	0xFDB
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        4
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3403
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     408
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      30       1       51.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      29        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 17 08:32:25 2023

                      _i 000F                        _m 0016                        _r 0001  
                     _PD 007E82                       u50 0DE6                       _TO 007E83  
                     _n1 0013                       _n2 0011               EnviaDato@a 001C  
                     _op 002F      ___wmul@multiplicand 001C            ??_LeerTeclado 001A  
                    l211 0DFA                      l220 0E1E            _InicializaLCD 1096  
                    l230 0E4A                      l222 0E26                      l214 0E02  
                    l240 0E76                      l232 0E52                      l224 0E2E  
                    l216 0E0A                      l236 0E66                      l228 0E42  
                    l148 086A                      l237 0E7E                      l238 0E6E  
                    l749 104A                      l759 108C                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _ISR 0008                      u930 1146  
                    _POR 007E81                      u970 1024                      _n1c 002E  
                    _n2c 002D                      wreg 000FE8                     ?_ISR 001A  
                   l1023 0FB0                     l1025 0FC0                     l1033 0FE6  
                   l1027 0FD2                     l1029 0FDC                     l1217 0E5A  
                   l1161 0E12                     l1251 0E96                     l1253 0E9A  
                   l1263 0EAA                     l1255 0E9E                     l1271 0EF6  
                   l1265 0EAE                     l1257 0EA2                     l1259 0EA6  
                   l1269 0EB4                     l1189 0E36                     l1621 0F66  
                   l1607 111A                     l1703 0894                     l1625 0F7A  
                   l1635 1018                     l1637 1020                     l1901 0D6A  
                   l1805 0A26                     l1647 1040                     l1663 1082  
                   l1655 1062                     l1823 0AAE                     l1815 0A54  
                   l1911 0DC0                     l1657 106A                     l1905 0D90  
                   l1841 0B46                     l1817 0A6C                     l1913 0DC6  
                   l1761 096A                     l1737 0908                     l1835 0B32  
                   l1827 0ACC                     l1819 0AA2                     l1909 0DB6  
                   l1853 0B7A                     l1781 09C0                     l1871 0C62  
                   l1863 0C00                     l1855 0B96                     l1849 0B68  
                   l1891 0CEA                     l1859 0BEC                     l1699 087A  
                   l1879 0C90                     l1897 0D1E                     STR_1 0812  
                   STR_2 081A                     STR_3 0801                     u1000 106E  
                   u1130 0948                     u1220 09A2                     u1310 0A08  
                   u1080 0920                     u1500 0CFA                     u1510 0D0C  
                   u1430 0BFE                     _LATB 000F8A                     _LATC 000F8B  
                   u1520 0D1E                     _LATD 000F8C                     u1470 0CA0  
                   u1607 0FCA                     u1480 0CB2                     u1617 0FD4  
                   u1490 0CC4                     u1627 0FDE                     u1637 11B2  
                   u1567 0884                     u1577 0DCC                     u1587 0FB6  
                   u1597 0FC2                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 001D                     _main 0820                     fsr1l 000FE1  
                   btemp 0031                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ??_ISR 001A  
         ?_InicializaLCD 001A                    ?_main 001A            EscribeLCD_c@a 001D  
                  _T0CON 000FD5                    _LATE0 007C68                    _LATE1 007C69  
                  _LATE2 007C6A                    _LATC7 007C5F          __end_of___lwdiv 1054  
        __end_of___lwmod 1096                    i2l267 0F52                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 001E                    _Tecla 0015      __end_of_LeerTeclado 0E82  
                  _color 000D                    main@i 002B                    tablat 000FF5  
            _HabilitaLCD 11AE                    ttemp5 0032                    ttemp6 0035  
                  ttemp7 0039                    status 000FD8                    wtemp8 0032  
       __end_of_BorraLCD 11AE         __end_of_ColorRGB 0EFC          __initialization 10D8  
           __end_of_main 0DD8                   ??_main 0027            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 001D                   i2l1591 0F34  
                 i2l1585 0F18                   i2l1587 0F20                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
  __end_of_DireccionaLCD 119A               _RetardoLCD 0FAC                   ___lmul 0F56  
                 ___wmul 1148                ??___lwdiv 0024                ??___lwmod 001E  
        ??_InicializaLCD 001D                   clear_0 10FE                   isa$std 000001  
   __end_of_EscribeLCD_c 1184              _LeerTeclado 0DD8             __pdataCOMRAM 002D  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 1104  
          ___rparam_used 000001           __pcstackCOMRAM 001A        __end_of_EnviaDato 11C4  
              ?_BorraLCD 001A                ?_ColorRGB 001A              ?_RetardoLCD 001A  
            RetardoLCD@a 001B                  ?___lmul 001A                  ?___wmul 001A  
         ___lmul@product 0022                  i2u91_40 0F4E                  i2u92_45 0F50  
                i2u87_40 0F2A                  i2u88_45 0F2C               ??_BorraLCD 001D  
             ??_ColorRGB 001A        ??_MensajeLCD_Word 001F             ?_HabilitaLCD 001A  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 1002  
                ___lwmod 1054             __psmallconst 0800                  __pcinit 10D8  
                __ramtop 0800                  __ptext0 0820                  __ptext1 1148  
                __ptext2 1054                  __ptext3 1002                  __ptext4 0F56  
                __ptext5 1112                  __ptext6 116E                  __ptext7 0DD8  
                __ptext8 1096                  __ptext9 119A           __pintcode_body 0EFC  
   end_of_initialization 1104            __Lmediumconst 0000                  int_func 0EFC  
           _EscribeLCD_c 116E                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 001A           __end_of___lmul 0FAC           __end_of___wmul 116E  
          __pidataCOMRAM 11C4    __end_of_InicializaLCD 10D8                _EnviaDato 11BC  
    start_initialization 10D8              __end_of_ISR 0F56             ??_RetardoLCD 001A  
               ??___lmul 0022                 ??___wmul 001E          _MensajeLCD_Word 1112  
             ?_EnviaDato 001A              __pbssCOMRAM 0001       __end_of_RetardoLCD 1002  
       MensajeLCD_Word@a 001E         MensajeLCD_Word@i 0020            _DireccionaLCD 1184  
       ___lwdiv@dividend 0020                __pintcode 0008                 ?___lwdiv 0020  
               ?___lwmod 001A              __smallconst 0800         ___lwdiv@quotient 0024  
         ___wmul@product 001E           ?_DireccionaLCD 001A  __end_of_MensajeLCD_Word 1148  
      ___wmul@multiplier 001A              ??_EnviaDato 001C                 _BorraLCD 119A  
               _ColorRGB 0E82        ___lmul@multiplier 001A                copy_data0 10EC  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0022  
        ___lwdiv@counter 0026                 __ptext10 1184                 __ptext11 11BC  
               __ptext12 0FAC                 __ptext13 11AE                 __ptext14 0E82  
               _contador 000B          ??_DireccionaLCD 001D                 _interfaz 0030  
               _partdecl 0005                 isa$xinst 000000         ?_MensajeLCD_Word 001E  
               int$flags 0031                 intlevel2 0000            ??_HabilitaLCD 001A  
       ___lwmod@dividend 001A          ___lwmod@divisor 001C          ___lwmod@counter 001E  
          ?_EscribeLCD_c 001A              _verificador 0009      __end_of_HabilitaLCD 11BC  

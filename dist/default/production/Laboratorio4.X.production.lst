

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 19 14:22:43 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   0018C4                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _n2c
    85   0018C4  20                 	db	32
    86                           
    87                           ;initializer for _n1c
    88   0018C5  20                 	db	32
    89                           
    90                           ;initializer for _op
    91   0018C6  20                 	db	32
    92                           
    93                           ;initializer for _interfaz
    94   0018C7  08                 	db	8
    95                           
    96                           ;initializer for _cara
    97   0018C8  00                 	db	0
    98   0018C9  0A                 	db	10
    99   0018CA  0A                 	db	10
   100   0018CB  0A                 	db	10
   101   0018CC  00                 	db	0
   102   0018CD  1F                 	db	31
   103   0018CE  0E                 	db	14
   104   0018CF  00                 	db	0
   105   000000                     _LATC	set	3979
   106   000000                     _TRISC	set	3988
   107   000000                     _LATE2	set	31850
   108   000000                     _RB7	set	31759
   109   000000                     _RB6	set	31758
   110   000000                     _RB5	set	31757
   111   000000                     _PD	set	32386
   112   000000                     _RI	set	32388
   113   000000                     _TMR0ON	set	32431
   114   000000                     _GIE	set	32663
   115   000000                     _TMR0IE	set	32661
   116   000000                     _LATE1	set	31849
   117   000000                     _LATB	set	3978
   118   000000                     _LATD	set	3980
   119   000000                     _RB4	set	31756
   120   000000                     _TRISB	set	3987
   121   000000                     _TRISD	set	3989
   122   000000                     _ADCON1	set	4033
   123   000000                     _LATE0	set	31848
   124   000000                     _OSCCON	set	4051
   125   000000                     _T0CON	set	4053
   126   000000                     _TO	set	32387
   127   000000                     _RBPU	set	32655
   128   000000                     _TRISE	set	3990
   129   000000                     _TMR0IF	set	32658
   130   000000                     _TMR0	set	4054
   131   000000                     _RC6	set	31766
   132                           
   133                           	psect	smallconst
   134   000800                     __psmallconst:
   135                           	callstack 0
   136   000800  00                 	db	0
   137   000801                     STR_4:
   138   000801  20                 	db	32
   139   000802  20                 	db	32
   140   000803  20                 	db	32
   141   000804  20                 	db	32
   142   000805  20                 	db	32
   143   000806  20                 	db	32
   144   000807  20                 	db	32
   145   000808  20                 	db	32
   146   000809  20                 	db	32
   147   00080A  20                 	db	32
   148   00080B  20                 	db	32
   149   00080C  20                 	db	32
   150   00080D  20                 	db	32
   151   00080E  20                 	db	32
   152   00080F  20                 	db	32
   153   000810  20                 	db	32
   154   000811  00                 	db	0
   155   000812                     STR_3:
   156   000812  42                 	db	66	;'B'
   157   000813  69                 	db	105	;'i'
   158   000814  65                 	db	101	;'e'
   159   000815  6E                 	db	110	;'n'
   160   000816  76                 	db	118	;'v'
   161   000817  65                 	db	101	;'e'
   162   000818  6E                 	db	110	;'n'
   163   000819  69                 	db	105	;'i'
   164   00081A  64                 	db	100	;'d'
   165   00081B  6F                 	db	111	;'o'
   166   00081C  00                 	db	0
   167   00081D                     STR_8:
   168   00081D  45                 	db	69	;'E'
   169   00081E  6E                 	db	110	;'n'
   170   00081F  20                 	db	32
   171   000820  52                 	db	82	;'R'
   172   000821  65                 	db	101	;'e'
   173   000822  70                 	db	112	;'p'
   174   000823  6F                 	db	111	;'o'
   175   000824  73                 	db	115	;'s'
   176   000825  6F                 	db	111	;'o'
   177   000826  00                 	db	0
   178   000827                     STR_1:
   179   000827  45                 	db	69	;'E'
   180   000828  6E                 	db	110	;'n'
   181   000829  65                 	db	101	;'e'
   182   00082A  72                 	db	114	;'r'
   183   00082B  67                 	db	103	;'g'
   184   00082C  69                 	db	105	;'i'
   185   00082D  61                 	db	97	;'a'
   186   00082E  00                 	db	0
   187   00082F                     STR_7:
   188   00082F  49                 	db	73	;'I'
   189   000830  6E                 	db	110	;'n'
   190   000831  64                 	db	100	;'d'
   191   000832  2E                 	db	46
   192   000833  00                 	db	0
   193   000834                     STR_6:
   194   000834  49                 	db	73	;'I'
   195   000835  6E                 	db	110	;'n'
   196   000836  66                 	db	102	;'f'
   197   000837  2E                 	db	46
   198   000838  00                 	db	0
   199   000839                     STR_2:
   200   000839  4D                 	db	77	;'M'
   201   00083A  43                 	db	67	;'C'
   202   00083B  4C                 	db	76	;'L'
   203   00083C  52                 	db	82	;'R'
   204   00083D  00                 	db	0
   205   00083E  00                 	db	0	; dummy byte at the end
   206   000000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210   0017C4                     __pcinit:
   211                           	callstack 0
   212   0017C4                     start_initialization:
   213                           	callstack 0
   214   0017C4                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to COMRAM (12 bytes)
   218                           ; load TBLPTR registers with __pidataCOMRAM
   219   0017C4  0EC4               	movlw	low __pidataCOMRAM
   220   0017C6  6EF6               	movwf	tblptrl,c
   221   0017C8  0E18               	movlw	high __pidataCOMRAM
   222   0017CA  6EF7               	movwf	tblptrh,c
   223   0017CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   224   0017CE  6EF8               	movwf	tblptru,c
   225   0017D0  EE00  F03F         	lfsr	0,__pdataCOMRAM
   226   0017D4  EE10 F00C          	lfsr	1,12
   227   0017D8                     copy_data0:
   228   0017D8  0009               	tblrd		*+
   229   0017DA  CFF5 FFEE          	movff	tablat,postinc0
   230   0017DE  50E5               	movf	postdec1,w,c
   231   0017E0  50E1               	movf	fsr1l,w,c
   232   0017E2  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to COMRAM (26 bytes)
   235   0017E4  EE00  F025         	lfsr	0,__pbssCOMRAM
   236   0017E8  0E1A               	movlw	26
   237   0017EA                     clear_0:
   238   0017EA  6AEE               	clrf	postinc0,c
   239   0017EC  06E8               	decf	wreg,f,c
   240   0017EE  E1FD               	bnz	clear_0
   241   0017F0                     end_of_initialization:
   242                           	callstack 0
   243   0017F0                     __end_of__initialization:
   244                           	callstack 0
   245   0017F0  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246   0017F2  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247   0017F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248   0017F6  6EF8               	movwf	tblptru,c
   249   0017F8  0100               	movlb	0
   250   0017FA  EF20  F004         	goto	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMRAM
   253   000025                     __pbssCOMRAM:
   254                           	callstack 0
   255   000025                     _r:
   256                           	callstack 0
   257   000025                     	ds	4
   258   000029                     _partdecl:
   259                           	callstack 0
   260   000029                     	ds	4
   261   00002D                     _verificador:
   262                           	callstack 0
   263   00002D                     	ds	2
   264   00002F                     _contador:
   265                           	callstack 0
   266   00002F                     	ds	2
   267   000031                     _color:
   268                           	callstack 0
   269   000031                     	ds	2
   270   000033                     _i:
   271                           	callstack 0
   272   000033                     	ds	2
   273   000035                     _n2:
   274                           	callstack 0
   275   000035                     	ds	2
   276   000037                     _n1:
   277                           	callstack 0
   278   000037                     	ds	2
   279   000039                     _flag:
   280                           	callstack 0
   281   000039                     	ds	1
   282   00003A                     _Tecla:
   283                           	callstack 0
   284   00003A                     	ds	1
   285   00003B                     _m:
   286                           	callstack 0
   287   00003B                     	ds	4
   288                           
   289                           	psect	dataCOMRAM
   290   00003F                     __pdataCOMRAM:
   291                           	callstack 0
   292   00003F                     _n2c:
   293                           	callstack 0
   294   00003F                     	ds	1
   295   000040                     _n1c:
   296                           	callstack 0
   297   000040                     	ds	1
   298   000041                     _op:
   299                           	callstack 0
   300   000041                     	ds	1
   301   000042                     _interfaz:
   302                           	callstack 0
   303   000042                     	ds	1
   304   000043                     _cara:
   305                           	callstack 0
   306   000043                     	ds	8
   307                           
   308                           	psect	cstackCOMRAM
   309   000001                     __pcstackCOMRAM:
   310                           	callstack 0
   311   000001                     ??i2_RetardoLCD:
   312                           
   313                           ; 1 bytes @ 0x0
   314   000001                     	ds	1
   315   000002                     i2RetardoLCD@a:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x1
   319   000002                     	ds	1
   320   000003                     ??i2_EnviaDato:
   321                           
   322                           ; 1 bytes @ 0x2
   323   000003                     	ds	1
   324   000004                     i2EnviaDato@a:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x3
   328   000004                     	ds	1
   329   000005                     i2EscribeLCD_c@a:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x4
   333   000005                     	ds	1
   334   000006                     i2MensajeLCD_Word@a:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x5
   338   000006                     	ds	1
   339   000007                     ??i2_MensajeLCD_Word:
   340                           
   341                           ; 1 bytes @ 0x6
   342   000007                     	ds	1
   343   000008                     i2MensajeLCD_Word@i:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x7
   347   000008                     	ds	2
   348   00000A                     ??_ISR:
   349                           
   350                           ; 1 bytes @ 0x9
   351   00000A                     	ds	4
   352   00000E                     ??_RetardoLCD:
   353   00000E                     ??_LeerTeclado:
   354   00000E                     ??_ColorRGB:
   355   00000E                     ?___wmul:
   356                           	callstack 0
   357   00000E                     ?___lwmod:
   358                           	callstack 0
   359   00000E                     ?___lmul:
   360                           	callstack 0
   361   00000E                     ?___lldiv:
   362                           	callstack 0
   363   00000E                     ?___llmod:
   364                           	callstack 0
   365   00000E                     ComandoLCD@data:
   366                           	callstack 0
   367   00000E                     ___wmul@multiplier:
   368                           	callstack 0
   369   00000E                     ___lwmod@dividend:
   370                           	callstack 0
   371   00000E                     ___lmul@multiplier:
   372                           	callstack 0
   373   00000E                     ___lldiv@dividend:
   374                           	callstack 0
   375   00000E                     ___llmod@dividend:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0xD
   379   00000E                     	ds	1
   380   00000F                     RetardoLCD@a:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xE
   384   00000F                     	ds	1
   385   000010                     ??_EnviaDato:
   386   000010                     ___wmul@multiplicand:
   387                           	callstack 0
   388   000010                     ___lwmod@divisor:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xF
   392   000010                     	ds	1
   393   000011                     EnviaDato@a:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x10
   397   000011                     	ds	1
   398   000012                     EscribeLCD_c@a:
   399                           	callstack 0
   400   000012                     DireccionaLCD@a:
   401                           	callstack 0
   402   000012                     ___lwmod@counter:
   403                           	callstack 0
   404   000012                     ___wmul@product:
   405                           	callstack 0
   406   000012                     ___lmul@multiplicand:
   407                           	callstack 0
   408   000012                     ___lldiv@divisor:
   409                           	callstack 0
   410   000012                     ___llmod@divisor:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x11
   414   000012                     	ds	1
   415   000013                     NuevoCaracter@c:
   416                           	callstack 0
   417   000013                     MensajeLCD_Word@a:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x12
   421   000013                     	ds	1
   422   000014                     ??_MensajeLCD_Word:
   423   000014                     ?___lwdiv:
   424                           	callstack 0
   425   000014                     NuevoCaracter@addr:
   426                           	callstack 0
   427   000014                     ___lwdiv@dividend:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x13
   431   000014                     	ds	1
   432   000015                     NuevoCaracter@i:
   433                           	callstack 0
   434   000015                     MensajeLCD_Word@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x14
   438   000015                     	ds	1
   439   000016                     ___llmod@counter:
   440                           	callstack 0
   441   000016                     ___lwdiv@divisor:
   442                           	callstack 0
   443   000016                     ___lmul@product:
   444                           	callstack 0
   445   000016                     ___lldiv@quotient:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x15
   449   000016                     	ds	2
   450   000018                     ___lwdiv@quotient:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x17
   454   000018                     	ds	2
   455   00001A                     ___lldiv@counter:
   456                           	callstack 0
   457   00001A                     ___lwdiv@counter:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x19
   461   00001A                     	ds	1
   462   00001B                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x1A
   465   00001B                     	ds	4
   466   00001F                     main@k:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x1E
   470   00001F                     	ds	2
   471   000021                     main@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x20
   475   000021                     	ds	2
   476   000023                     main@j:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x22
   480   000023                     	ds	2
   481                           
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 44 in file "Laboratorio4.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  k               2   30[COMRAM] int 
   492 ;;  j               2   34[COMRAM] int 
   493 ;;  i               2   32[COMRAM] int 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         0       0       0       0       0       0       0       0       0
   504 ;;      Locals:         6       0       0       0       0       0       0       0       0
   505 ;;      Temps:          4       0       0       0       0       0       0       0       0
   506 ;;      Totals:        10       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:       10 bytes
   508 ;; Hardware stack levels required when called: 9
   509 ;; This function calls:
   510 ;;		_BorraLCD
   511 ;;		_ColorRGB
   512 ;;		_DireccionaLCD
   513 ;;		_EscribeLCD_c
   514 ;;		_InicializaLCD
   515 ;;		_LeerTeclado
   516 ;;		_MensajeLCD_Word
   517 ;;		_NuevoCaracter
   518 ;;		___lldiv
   519 ;;		___llmod
   520 ;;		___lmul
   521 ;;		___lwdiv
   522 ;;		___lwmod
   523 ;;		___wmul
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text0
   530   000840                     __ptext0:
   531                           	callstack 0
   532   000840                     _main:
   533                           	callstack 22
   534                           
   535                           ;Laboratorio4.c: 45: ADCON1=15;
   536                           
   537                           ;incstack = 0
   538   000840  0E0F               	movlw	15
   539   000842  6EC1               	movwf	193,c	;volatile
   540                           
   541                           ;Laboratorio4.c: 46: TRISD=0;
   542   000844  0E00               	movlw	0
   543   000846  6E95               	movwf	149,c	;volatile
   544                           
   545                           ;Laboratorio4.c: 47: TRISB=0b11110000;
   546   000848  0EF0               	movlw	240
   547   00084A  6E93               	movwf	147,c	;volatile
   548                           
   549                           ;Laboratorio4.c: 48: TRISE=0;
   550   00084C  0E00               	movlw	0
   551   00084E  6E96               	movwf	150,c	;volatile
   552                           
   553                           ;Laboratorio4.c: 49: TRISC=0b11110000;
   554   000850  0EF0               	movlw	240
   555   000852  6E94               	movwf	148,c	;volatile
   556                           
   557                           ;Laboratorio4.c: 50: RBPU=0;
   558   000854  9EF1               	bcf	4081,7,c	;volatile
   559                           
   560                           ;Laboratorio4.c: 51: InicializaLCD();
   561   000856  EC27  F009         	call	_InicializaLCD	;wreg free
   562                           
   563                           ;Laboratorio4.c: 53: T0CON=0b00000010;
   564   00085A  0E02               	movlw	2
   565   00085C  6ED5               	movwf	213,c	;volatile
   566                           
   567                           ;Laboratorio4.c: 54: TMR0IF=0;
   568   00085E  94F2               	bcf	4082,2,c	;volatile
   569                           
   570                           ;Laboratorio4.c: 55: TMR0=49911;
   571   000860  0EC2               	movlw	194
   572   000862  6ED7               	movwf	215,c	;volatile
   573   000864  0EF7               	movlw	247
   574   000866  6ED6               	movwf	214,c	;volatile
   575                           
   576                           ;Laboratorio4.c: 57: TMR0IE=1;
   577   000868  8AF2               	bsf	4082,5,c	;volatile
   578                           
   579                           ;Laboratorio4.c: 58: GIE=1;
   580   00086A  8EF2               	bsf	4082,7,c	;volatile
   581                           
   582                           ;Laboratorio4.c: 59: TMR0ON=1;
   583   00086C  8ED5               	bsf	4053,7,c	;volatile
   584                           
   585                           ;Laboratorio4.c: 62: OSCCON = 0b11000100;
   586   00086E  0EC4               	movlw	196
   587   000870  6ED3               	movwf	211,c	;volatile
   588                           
   589                           ;Laboratorio4.c: 64: BorraLCD();
   590   000872  EC40  F00C         	call	_BorraLCD	;wreg free
   591                           
   592                           ;Laboratorio4.c: 65: if(TO == 1 & RI == 1){
   593   000876  0E01               	movlw	1
   594   000878  A6D0               	btfss	4048,3,c	;volatile
   595   00087A  0E00               	movlw	0
   596   00087C  A8D0               	btfss	4048,4,c	;volatile
   597   00087E  0E00               	movlw	0
   598   000880  A0E8               	btfss	wreg,0,c
   599   000882  D008               	goto	l2871
   600                           
   601                           ;Laboratorio4.c: 66: BorraLCD();
   602   000884  EC40  F00C         	call	_BorraLCD	;wreg free
   603                           
   604                           ;Laboratorio4.c: 67: RI = 0;
   605   000888  98D0               	bcf	4048,4,c	;volatile
   606                           
   607                           ;Laboratorio4.c: 68: MensajeLCD_Word("Energia");
   608   00088A  0E27               	movlw	low STR_1
   609   00088C  6E13               	movwf	MensajeLCD_Word@a^0,c
   610   00088E  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
   611                           
   612                           ;Laboratorio4.c: 69: }else{
   613   000892  D014               	goto	l2877
   614   000894                     l2871:
   615                           
   616                           ;Laboratorio4.c: 70: if(TO == 1 | PD == 0 ){
   617   000894  A6D0               	btfss	4048,3,c	;volatile
   618   000896  D002               	goto	u2910
   619   000898  0E01               	movlw	1
   620   00089A  D001               	goto	u2912
   621   00089C                     u2910:
   622   00089C  0E00               	movlw	0
   623   00089E                     u2912:
   624   00089E  6E1B               	movwf	??_main^0,c
   625   0008A0  B4D0               	btfsc	4048,2,c	;volatile
   626   0008A2  D002               	goto	u2920
   627   0008A4  0E01               	movlw	1
   628   0008A6  D001               	goto	u2922
   629   0008A8                     u2920:
   630   0008A8  0E00               	movlw	0
   631   0008AA                     u2922:
   632   0008AA  101B               	iorwf	??_main^0,w,c
   633   0008AC  A0E8               	btfss	wreg,0,c
   634   0008AE  D006               	goto	l2877
   635                           
   636                           ;Laboratorio4.c: 71: BorraLCD();
   637   0008B0  EC40  F00C         	call	_BorraLCD	;wreg free
   638                           
   639                           ;Laboratorio4.c: 72: MensajeLCD_Word("MCLR");
   640   0008B4  0E39               	movlw	low STR_2
   641   0008B6  6E13               	movwf	MensajeLCD_Word@a^0,c
   642   0008B8  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
   643   0008BC                     l2877:
   644                           
   645                           ;Laboratorio4.c: 73: };Laboratorio4.c: 74: };Laboratorio4.c: 75: _delay((unsigned long)(
      +                          (1000)*(1000000/4000.0)));
   646   0008BC  0E02               	movlw	2
   647   0008BE  6E1C               	movwf	(??_main+1)^0,c
   648   0008C0  0E45               	movlw	69
   649   0008C2  6E1B               	movwf	??_main^0,c
   650   0008C4  0EAA               	movlw	170
   651   0008C6                     u3707:
   652   0008C6  2EE8               	decfsz	wreg,f,c
   653   0008C8  D7FE               	bra	u3707
   654   0008CA  2E1B               	decfsz	??_main^0,f,c
   655   0008CC  D7FC               	bra	u3707
   656   0008CE  2E1C               	decfsz	(??_main+1)^0,f,c
   657   0008D0  D7FA               	bra	u3707
   658                           
   659                           ;Laboratorio4.c: 76: BorraLCD();
   660   0008D2  EC40  F00C         	call	_BorraLCD	;wreg free
   661                           
   662                           ;Laboratorio4.c: 77: NuevoCaracter(0,cara);
   663   0008D6  0E43               	movlw	low _cara
   664   0008D8  6E13               	movwf	NuevoCaracter@c^0,c
   665   0008DA  0E00               	movlw	0
   666   0008DC  ECC4  F00B         	call	_NuevoCaracter
   667                           
   668                           ;Laboratorio4.c: 78: DireccionaLCD(0x82);
   669   0008E0  0E82               	movlw	130
   670   0008E2  EC2A  F00C         	call	_DireccionaLCD
   671                           
   672                           ;Laboratorio4.c: 79: EscribeLCD_c(0);
   673   0008E6  0E00               	movlw	0
   674   0008E8  EC1F  F00C         	call	_EscribeLCD_c
   675                           
   676                           ;Laboratorio4.c: 80: MensajeLCD_Word("Bienvenido");
   677   0008EC  0E12               	movlw	low STR_3
   678   0008EE  6E13               	movwf	MensajeLCD_Word@a^0,c
   679   0008F0  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
   680                           
   681                           ;Laboratorio4.c: 81: EscribeLCD_c(0);
   682   0008F4  0E00               	movlw	0
   683   0008F6  EC1F  F00C         	call	_EscribeLCD_c
   684                           
   685                           ;Laboratorio4.c: 82: DireccionaLCD(0xC7);
   686   0008FA  0EC7               	movlw	199
   687   0008FC  EC2A  F00C         	call	_DireccionaLCD
   688                           
   689                           ;Laboratorio4.c: 83: _delay((unsigned long)((1500)*(1000000/4000.0)));
   690   000900  0E02               	movlw	2
   691   000902  6E1C               	movwf	(??_main+1)^0,c
   692   000904  0EE7               	movlw	231
   693   000906  6E1B               	movwf	??_main^0,c
   694   000908  0E00               	movlw	0
   695   00090A                     u3717:
   696   00090A  2EE8               	decfsz	wreg,f,c
   697   00090C  D7FE               	bra	u3717
   698   00090E  2E1B               	decfsz	??_main^0,f,c
   699   000910  D7FC               	bra	u3717
   700   000912  2E1C               	decfsz	(??_main+1)^0,f,c
   701   000914  D7FA               	bra	u3717
   702   000916  D000               	nop2	
   703                           
   704                           ;Laboratorio4.c: 84: DireccionaLCD(0x80);
   705   000918  0E80               	movlw	128
   706   00091A  EC2A  F00C         	call	_DireccionaLCD
   707                           
   708                           ;Laboratorio4.c: 85: MensajeLCD_Word("                ");
   709   00091E  0E01               	movlw	low STR_4
   710   000920  6E13               	movwf	MensajeLCD_Word@a^0,c
   711   000922  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
   712   000926                     l2899:
   713                           
   714                           ;Laboratorio4.c: 87: LATB=0B00000000;
   715   000926  0E00               	movlw	0
   716   000928  6E8A               	movwf	138,c	;volatile
   717                           
   718                           ;Laboratorio4.c: 88: verificador = 0;
   719   00092A  0E00               	movlw	0
   720   00092C  6E2E               	movwf	(_verificador+1)^0,c
   721   00092E  0E00               	movlw	0
   722   000930  6E2D               	movwf	_verificador^0,c
   723                           
   724                           ;Laboratorio4.c: 89: Tecla = LeerTeclado();
   725   000932  EC9A  F008         	call	_LeerTeclado	;wreg free
   726   000936  6E3A               	movwf	_Tecla^0,c
   727                           
   728                           ;Laboratorio4.c: 90: ColorRGB();
   729   000938  ECF5  F009         	call	_ColorRGB	;wreg free
   730                           
   731                           ;Laboratorio4.c: 91: if(Tecla=='C'){
   732   00093C  0E43               	movlw	67
   733   00093E  183A               	xorwf	_Tecla^0,w,c
   734   000940  A4D8               	btfss	status,2,c
   735   000942  D034               	goto	l2935
   736                           
   737                           ;Laboratorio4.c: 92: DireccionaLCD(0xC0);
   738   000944  0EC0               	movlw	192
   739   000946  EC2A  F00C         	call	_DireccionaLCD
   740                           
   741                           ;Laboratorio4.c: 94: op = ' ';
   742   00094A  0E20               	movlw	32
   743   00094C  6E41               	movwf	_op^0,c
   744                           
   745                           ;Laboratorio4.c: 95: n1c = ' ';
   746   00094E  0E20               	movlw	32
   747   000950  6E40               	movwf	_n1c^0,c
   748                           
   749                           ;Laboratorio4.c: 96: n2c = ' ';
   750   000952  0E20               	movlw	32
   751   000954  6E3F               	movwf	_n2c^0,c
   752                           
   753                           ;Laboratorio4.c: 97: n1 = 0;
   754   000956  0E00               	movlw	0
   755   000958  6E38               	movwf	(_n1+1)^0,c
   756   00095A  0E00               	movlw	0
   757   00095C  6E37               	movwf	_n1^0,c
   758                           
   759                           ;Laboratorio4.c: 98: n2 = 0;
   760   00095E  0E00               	movlw	0
   761   000960  6E36               	movwf	(_n2+1)^0,c
   762   000962  0E00               	movlw	0
   763   000964  6E35               	movwf	_n2^0,c
   764                           
   765                           ;Laboratorio4.c: 99: i = 0;
   766   000966  0E00               	movlw	0
   767   000968  6E34               	movwf	(_i+1)^0,c
   768   00096A  0E00               	movlw	0
   769   00096C  6E33               	movwf	_i^0,c
   770                           
   771                           ;Laboratorio4.c: 100: partdecl = 0;
   772   00096E  0E00               	movlw	0
   773   000970  6E29               	movwf	_partdecl^0,c
   774   000972  0E00               	movlw	0
   775   000974  6E2A               	movwf	(_partdecl+1)^0,c
   776   000976  0E00               	movlw	0
   777   000978  6E2B               	movwf	(_partdecl+2)^0,c
   778   00097A  0E00               	movlw	0
   779   00097C  6E2C               	movwf	(_partdecl+3)^0,c
   780                           
   781                           ;Laboratorio4.c: 101: flag = 0;
   782   00097E  0E00               	movlw	0
   783   000980  6E39               	movwf	_flag^0,c
   784                           
   785                           ;Laboratorio4.c: 102: DireccionaLCD(0x80);
   786   000982  0E80               	movlw	128
   787   000984  EC2A  F00C         	call	_DireccionaLCD
   788                           
   789                           ;Laboratorio4.c: 103: MensajeLCD_Word("                ");
   790   000988  0E01               	movlw	low STR_4
   791   00098A  6E13               	movwf	MensajeLCD_Word@a^0,c
   792   00098C  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
   793                           
   794                           ;Laboratorio4.c: 104: DireccionaLCD(0xC0);
   795   000990  0EC0               	movlw	192
   796   000992  EC2A  F00C         	call	_DireccionaLCD
   797                           
   798                           ;Laboratorio4.c: 105: DireccionaLCD(0x80);
   799   000996  0E80               	movlw	128
   800   000998  EC2A  F00C         	call	_DireccionaLCD
   801                           
   802                           ;Laboratorio4.c: 106: _delay((unsigned long)((100)*(1000000/4000.0)));
   803   00099C  0E21               	movlw	33
   804   00099E  6E1B               	movwf	??_main^0,c
   805   0009A0  0E76               	movlw	118
   806   0009A2                     u3727:
   807   0009A2  2EE8               	decfsz	wreg,f,c
   808   0009A4  D7FE               	bra	u3727
   809   0009A6  2E1B               	decfsz	??_main^0,f,c
   810   0009A8  D7FC               	bra	u3727
   811   0009AA  D3C1               	goto	L1
   812   0009AC                     l2935:
   813                           
   814                           ;Laboratorio4.c: 108: if(n1c==' '|n2c==' '|op==' '){
   815   0009AC  0E20               	movlw	32
   816   0009AE  1840               	xorwf	_n1c^0,w,c
   817   0009B0  B4D8               	btfsc	status,2,c
   818   0009B2  D008               	goto	u2970
   819   0009B4  0E20               	movlw	32
   820   0009B6  183F               	xorwf	_n2c^0,w,c
   821   0009B8  B4D8               	btfsc	status,2,c
   822   0009BA  D004               	goto	u2970
   823   0009BC  0E20               	movlw	32
   824   0009BE  1841               	xorwf	_op^0,w,c
   825   0009C0  A4D8               	btfss	status,2,c
   826   0009C2  D0B5               	goto	l3029
   827   0009C4                     u2970:
   828                           
   829                           ;Laboratorio4.c: 109: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='
      +                          !'|Tecla=='^') & Tecla!='=' & n1c != ' ' & n2c ==' '){
   830   0009C4  0E20               	movlw	32
   831   0009C6  1841               	xorwf	_op^0,w,c
   832   0009C8  A4D8               	btfss	status,2,c
   833   0009CA  D033               	goto	l2969
   834   0009CC  0E2B               	movlw	43
   835   0009CE  183A               	xorwf	_Tecla^0,w,c
   836   0009D0  B4D8               	btfsc	status,2,c
   837   0009D2  D014               	goto	u3040
   838   0009D4  0E2D               	movlw	45
   839   0009D6  183A               	xorwf	_Tecla^0,w,c
   840   0009D8  B4D8               	btfsc	status,2,c
   841   0009DA  D010               	goto	u3040
   842   0009DC  0E2F               	movlw	47
   843   0009DE  183A               	xorwf	_Tecla^0,w,c
   844   0009E0  B4D8               	btfsc	status,2,c
   845   0009E2  D00C               	goto	u3040
   846   0009E4  0E78               	movlw	120
   847   0009E6  183A               	xorwf	_Tecla^0,w,c
   848   0009E8  B4D8               	btfsc	status,2,c
   849   0009EA  D008               	goto	u3040
   850   0009EC  0E21               	movlw	33
   851   0009EE  183A               	xorwf	_Tecla^0,w,c
   852   0009F0  B4D8               	btfsc	status,2,c
   853   0009F2  D004               	goto	u3040
   854   0009F4  0E5E               	movlw	94
   855   0009F6  183A               	xorwf	_Tecla^0,w,c
   856   0009F8  A4D8               	btfss	status,2,c
   857   0009FA  D01B               	goto	l2969
   858   0009FC                     u3040:
   859   0009FC  0E3D               	movlw	61
   860   0009FE  183A               	xorwf	_Tecla^0,w,c
   861   000A00  B4D8               	btfsc	status,2,c
   862   000A02  D017               	goto	l2969
   863   000A04  0E20               	movlw	32
   864   000A06  1840               	xorwf	_n1c^0,w,c
   865   000A08  B4D8               	btfsc	status,2,c
   866   000A0A  D013               	goto	l2969
   867   000A0C  0E20               	movlw	32
   868   000A0E  183F               	xorwf	_n2c^0,w,c
   869   000A10  A4D8               	btfss	status,2,c
   870   000A12  D00F               	goto	l2969
   871                           
   872                           ;Laboratorio4.c: 110: DireccionaLCD(0x81);
   873   000A14  0E81               	movlw	129
   874   000A16  EC2A  F00C         	call	_DireccionaLCD
   875                           
   876                           ;Laboratorio4.c: 111: EscribeLCD_c(Tecla);
   877   000A1A  503A               	movf	_Tecla^0,w,c
   878   000A1C  EC1F  F00C         	call	_EscribeLCD_c
   879                           
   880                           ;Laboratorio4.c: 112: op = Tecla;
   881   000A20  C03A  F041         	movff	_Tecla,_op
   882                           
   883                           ;Laboratorio4.c: 113: if(Tecla=='!') n2c = 'A';
   884   000A24  0E21               	movlw	33
   885   000A26  183A               	xorwf	_Tecla^0,w,c
   886   000A28  A4D8               	btfss	status,2,c
   887   000A2A  D37A               	goto	l3217
   888   000A2C  0E41               	movlw	65
   889   000A2E  6E3F               	movwf	_n2c^0,c
   890   000A30  D377               	goto	l3217
   891   000A32                     l2969:
   892   000A32  0E20               	movlw	32
   893   000A34  1840               	xorwf	_n1c^0,w,c
   894   000A36  A4D8               	btfss	status,2,c
   895   000A38  D037               	goto	l2997
   896   000A3A  0E2B               	movlw	43
   897   000A3C  183A               	xorwf	_Tecla^0,w,c
   898   000A3E  B4D8               	btfsc	status,2,c
   899   000A40  D033               	goto	l2997
   900   000A42  0E2D               	movlw	45
   901   000A44  183A               	xorwf	_Tecla^0,w,c
   902   000A46  B4D8               	btfsc	status,2,c
   903   000A48  D02F               	goto	l2997
   904   000A4A  0E2F               	movlw	47
   905   000A4C  183A               	xorwf	_Tecla^0,w,c
   906   000A4E  B4D8               	btfsc	status,2,c
   907   000A50  D02B               	goto	l2997
   908   000A52  0E78               	movlw	120
   909   000A54  183A               	xorwf	_Tecla^0,w,c
   910   000A56  B4D8               	btfsc	status,2,c
   911   000A58  D027               	goto	l2997
   912   000A5A  0E3D               	movlw	61
   913   000A5C  183A               	xorwf	_Tecla^0,w,c
   914   000A5E  B4D8               	btfsc	status,2,c
   915   000A60  D023               	goto	l2997
   916   000A62  0E43               	movlw	67
   917   000A64  183A               	xorwf	_Tecla^0,w,c
   918   000A66  B4D8               	btfsc	status,2,c
   919   000A68  D01F               	goto	l2997
   920   000A6A  0E21               	movlw	33
   921   000A6C  183A               	xorwf	_Tecla^0,w,c
   922   000A6E  B4D8               	btfsc	status,2,c
   923   000A70  D01B               	goto	l2997
   924   000A72  0E5E               	movlw	94
   925   000A74  183A               	xorwf	_Tecla^0,w,c
   926   000A76  B4D8               	btfsc	status,2,c
   927   000A78  D017               	goto	l2997
   928   000A7A  0E3D               	movlw	61
   929   000A7C  183A               	xorwf	_Tecla^0,w,c
   930   000A7E  B4D8               	btfsc	status,2,c
   931   000A80  D013               	goto	l2997
   932   000A82  0E20               	movlw	32
   933   000A84  1841               	xorwf	_op^0,w,c
   934   000A86  A4D8               	btfss	status,2,c
   935   000A88  D00F               	goto	l2997
   936                           
   937                           ;Laboratorio4.c: 115: DireccionaLCD(0x80);
   938   000A8A  0E80               	movlw	128
   939   000A8C  EC2A  F00C         	call	_DireccionaLCD
   940                           
   941                           ;Laboratorio4.c: 116: EscribeLCD_c(Tecla);
   942   000A90  503A               	movf	_Tecla^0,w,c
   943   000A92  EC1F  F00C         	call	_EscribeLCD_c
   944                           
   945                           ;Laboratorio4.c: 117: n1c=Tecla;
   946   000A96  C03A  F040         	movff	_Tecla,_n1c
   947                           
   948                           ;Laboratorio4.c: 118: n1 = Tecla-'0';
   949   000A9A  0ED0               	movlw	208
   950   000A9C  243A               	addwf	_Tecla^0,w,c
   951   000A9E  6E37               	movwf	_n1^0,c
   952   000AA0  6A38               	clrf	(_n1+1)^0,c
   953   000AA2  0EFF               	movlw	255
   954   000AA4  2238               	addwfc	(_n1+1)^0,f,c
   955                           
   956                           ;Laboratorio4.c: 119: }else if(n2c==' ' & op!=' ' & op!='!' & n1c != ' ' & (Tecla!='+' &
      +                           Tecla!='-' & Tecla!='/' & Tecla!='x' & Tecla!='='& Tecla!='C' & Tecla!='!' & Tecla!='^'
      +                           & Tecla!='=')){
   957   000AA6  D33C               	goto	l3217
   958   000AA8                     l2997:
   959   000AA8  0E20               	movlw	32
   960   000AAA  183F               	xorwf	_n2c^0,w,c
   961   000AAC  A4D8               	btfss	status,2,c
   962   000AAE  D338               	goto	l3217
   963   000AB0  0E20               	movlw	32
   964   000AB2  1841               	xorwf	_op^0,w,c
   965   000AB4  B4D8               	btfsc	status,2,c
   966   000AB6  D334               	goto	l3217
   967   000AB8  0E21               	movlw	33
   968   000ABA  1841               	xorwf	_op^0,w,c
   969   000ABC  B4D8               	btfsc	status,2,c
   970   000ABE  D330               	goto	l3217
   971   000AC0  0E20               	movlw	32
   972   000AC2  1840               	xorwf	_n1c^0,w,c
   973   000AC4  B4D8               	btfsc	status,2,c
   974   000AC6  D32C               	goto	l3217
   975   000AC8  0E2B               	movlw	43
   976   000ACA  183A               	xorwf	_Tecla^0,w,c
   977   000ACC  B4D8               	btfsc	status,2,c
   978   000ACE  D328               	goto	l3217
   979   000AD0  0E2D               	movlw	45
   980   000AD2  183A               	xorwf	_Tecla^0,w,c
   981   000AD4  B4D8               	btfsc	status,2,c
   982   000AD6  D324               	goto	l3217
   983   000AD8  0E2F               	movlw	47
   984   000ADA  183A               	xorwf	_Tecla^0,w,c
   985   000ADC  B4D8               	btfsc	status,2,c
   986   000ADE  D320               	goto	l3217
   987   000AE0  0E78               	movlw	120
   988   000AE2  183A               	xorwf	_Tecla^0,w,c
   989   000AE4  B4D8               	btfsc	status,2,c
   990   000AE6  D31C               	goto	l3217
   991   000AE8  0E3D               	movlw	61
   992   000AEA  183A               	xorwf	_Tecla^0,w,c
   993   000AEC  B4D8               	btfsc	status,2,c
   994   000AEE  D318               	goto	l3217
   995   000AF0  0E43               	movlw	67
   996   000AF2  183A               	xorwf	_Tecla^0,w,c
   997   000AF4  B4D8               	btfsc	status,2,c
   998   000AF6  D314               	goto	l3217
   999   000AF8  0E21               	movlw	33
  1000   000AFA  183A               	xorwf	_Tecla^0,w,c
  1001   000AFC  B4D8               	btfsc	status,2,c
  1002   000AFE  D310               	goto	l3217
  1003   000B00  0E5E               	movlw	94
  1004   000B02  183A               	xorwf	_Tecla^0,w,c
  1005   000B04  B4D8               	btfsc	status,2,c
  1006   000B06  D30C               	goto	l3217
  1007   000B08  0E3D               	movlw	61
  1008   000B0A  183A               	xorwf	_Tecla^0,w,c
  1009   000B0C  B4D8               	btfsc	status,2,c
  1010   000B0E  D308               	goto	l3217
  1011                           
  1012                           ;Laboratorio4.c: 120: DireccionaLCD(0x82);
  1013   000B10  0E82               	movlw	130
  1014   000B12  EC2A  F00C         	call	_DireccionaLCD
  1015                           
  1016                           ;Laboratorio4.c: 121: EscribeLCD_c(Tecla);
  1017   000B16  503A               	movf	_Tecla^0,w,c
  1018   000B18  EC1F  F00C         	call	_EscribeLCD_c
  1019                           
  1020                           ;Laboratorio4.c: 122: n2c=Tecla;
  1021   000B1C  C03A  F03F         	movff	_Tecla,_n2c
  1022                           
  1023                           ;Laboratorio4.c: 123: n2 = Tecla-'0';
  1024   000B20  0ED0               	movlw	208
  1025   000B22  243A               	addwf	_Tecla^0,w,c
  1026   000B24  6E35               	movwf	_n2^0,c
  1027   000B26  6A36               	clrf	(_n2+1)^0,c
  1028   000B28  0EFF               	movlw	255
  1029   000B2A  2236               	addwfc	(_n2+1)^0,f,c
  1030                           
  1031                           ;Laboratorio4.c: 124: };Laboratorio4.c: 125: }else if(Tecla=='=' & n1c != ' ' & op!=' ' 
      +                          & n2c!=' '){
  1032   000B2C  D2F9               	goto	l3217
  1033   000B2E                     l3029:
  1034   000B2E  0E3D               	movlw	61
  1035   000B30  183A               	xorwf	_Tecla^0,w,c
  1036   000B32  A4D8               	btfss	status,2,c
  1037   000B34  D2F2               	goto	l3215
  1038   000B36  0E20               	movlw	32
  1039   000B38  1840               	xorwf	_n1c^0,w,c
  1040   000B3A  B4D8               	btfsc	status,2,c
  1041   000B3C  D2EE               	goto	l3215
  1042   000B3E  0E20               	movlw	32
  1043   000B40  1841               	xorwf	_op^0,w,c
  1044   000B42  B4D8               	btfsc	status,2,c
  1045   000B44  D2EA               	goto	l3215
  1046   000B46  0E20               	movlw	32
  1047   000B48  183F               	xorwf	_n2c^0,w,c
  1048   000B4A  B4D8               	btfsc	status,2,c
  1049   000B4C  D2E6               	goto	l3215
  1050                           
  1051                           ;Laboratorio4.c: 126: if(op=='!') DireccionaLCD(0x82);
  1052   000B4E  0E21               	movlw	33
  1053   000B50  1841               	xorwf	_op^0,w,c
  1054   000B52  A4D8               	btfss	status,2,c
  1055   000B54  D004               	goto	l3041
  1056   000B56  0E82               	movlw	130
  1057   000B58  EC2A  F00C         	call	_DireccionaLCD
  1058   000B5C  D003               	goto	l183
  1059   000B5E                     l3041:
  1060                           
  1061                           ;Laboratorio4.c: 127: else DireccionaLCD(0x83);
  1062   000B5E  0E83               	movlw	131
  1063   000B60  EC2A  F00C         	call	_DireccionaLCD
  1064   000B64                     l183:
  1065                           
  1066                           ;Laboratorio4.c: 128: EscribeLCD_c('=');
  1067   000B64  0E3D               	movlw	61
  1068   000B66  EC1F  F00C         	call	_EscribeLCD_c
  1069                           
  1070                           ;Laboratorio4.c: 129: switch(op){
  1071   000B6A  D0FB               	goto	l3111
  1072   000B6C                     l3043:
  1073                           
  1074                           ;Laboratorio4.c: 131: r = n1 + n2;
  1075   000B6C  5035               	movf	_n2^0,w,c
  1076   000B6E  2437               	addwf	_n1^0,w,c
  1077   000B70  6E1B               	movwf	??_main^0,c
  1078   000B72  5036               	movf	(_n2+1)^0,w,c
  1079   000B74  2038               	addwfc	(_n1+1)^0,w,c
  1080   000B76  6E1C               	movwf	(??_main+1)^0,c
  1081   000B78  C01B  F025         	movff	??_main,_r
  1082   000B7C  C01C  F026         	movff	??_main+1,_r+1
  1083   000B80  6A27               	clrf	(_r+2)^0,c
  1084   000B82  6A28               	clrf	(_r+3)^0,c
  1085   000B84                     l3045:
  1086                           
  1087                           ;Laboratorio4.c: 132: partdecl = r*100;
  1088   000B84  C025  F00E         	movff	_r,___lmul@multiplier
  1089   000B88  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1090   000B8C  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1091   000B90  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1092   000B94  0E64               	movlw	100
  1093   000B96  6E12               	movwf	___lmul@multiplicand^0,c
  1094   000B98  0E00               	movlw	0
  1095   000B9A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1096   000B9C  0E00               	movlw	0
  1097   000B9E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1098   000BA0  0E00               	movlw	0
  1099   000BA2  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1100   000BA4  EC65  F00A         	call	___lmul	;wreg free
  1101   000BA8  C00E  F029         	movff	?___lmul,_partdecl
  1102   000BAC  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1103   000BB0  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1104   000BB4  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1105                           
  1106                           ;Laboratorio4.c: 133: break;
  1107   000BB8  D0E8               	goto	l3113
  1108   000BBA                     l3047:
  1109                           
  1110                           ;Laboratorio4.c: 135: r = n1 - n2;
  1111   000BBA  5035               	movf	_n2^0,w,c
  1112   000BBC  5C37               	subwf	_n1^0,w,c
  1113   000BBE  6E1B               	movwf	??_main^0,c
  1114   000BC0  5036               	movf	(_n2+1)^0,w,c
  1115   000BC2  5838               	subwfb	(_n1+1)^0,w,c
  1116   000BC4  D7D8               	goto	L2
  1117   000BC6                     l3051:
  1118                           
  1119                           ;Laboratorio4.c: 139: r = n1*n2;
  1120   000BC6  C037  F00E         	movff	_n1,___wmul@multiplier
  1121   000BCA  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1122   000BCE  C035  F010         	movff	_n2,___wmul@multiplicand
  1123   000BD2  C036  F011         	movff	_n2+1,___wmul@multiplicand+1
  1124   000BD6  ECFF  F00B         	call	___wmul	;wreg free
  1125   000BDA  C00E  F025         	movff	?___wmul,_r
  1126   000BDE  C00F  F026         	movff	?___wmul+1,_r+1
  1127   000BE2  D7CE               	goto	L3
  1128   000BE4                     l3055:
  1129                           
  1130                           ;Laboratorio4.c: 143: if(n2!=0){
  1131   000BE4  5035               	movf	_n2^0,w,c
  1132   000BE6  1036               	iorwf	(_n2+1)^0,w,c
  1133   000BE8  B4D8               	btfsc	status,2,c
  1134   000BEA  D02F               	goto	l3063
  1135                           
  1136                           ;Laboratorio4.c: 144: if(n1!=0){
  1137   000BEC  5037               	movf	_n1^0,w,c
  1138   000BEE  1038               	iorwf	(_n1+1)^0,w,c
  1139   000BF0  B4D8               	btfsc	status,2,c
  1140   000BF2  D0CB               	goto	l3113
  1141                           
  1142                           ;Laboratorio4.c: 145: r = n1/n2;
  1143   000BF4  C037  F014         	movff	_n1,___lwdiv@dividend
  1144   000BF8  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1145   000BFC  C035  F016         	movff	_n2,___lwdiv@divisor
  1146   000C00  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1147   000C04  ECE6  F00A         	call	___lwdiv	;wreg free
  1148   000C08  C014  F025         	movff	?___lwdiv,_r
  1149   000C0C  C015  F026         	movff	?___lwdiv+1,_r+1
  1150   000C10  6A27               	clrf	(_r+2)^0,c
  1151   000C12  6A28               	clrf	(_r+3)^0,c
  1152                           
  1153                           ;Laboratorio4.c: 146: partdecl = (n1*100)/n2;
  1154   000C14  C037  F00E         	movff	_n1,___wmul@multiplier
  1155   000C18  C038  F00F         	movff	_n1+1,___wmul@multiplier+1
  1156   000C1C  0E00               	movlw	0
  1157   000C1E  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1158   000C20  0E64               	movlw	100
  1159   000C22  6E10               	movwf	___wmul@multiplicand^0,c
  1160   000C24  ECFF  F00B         	call	___wmul	;wreg free
  1161   000C28  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1162   000C2C  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1163   000C30  C035  F016         	movff	_n2,___lwdiv@divisor
  1164   000C34  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1165   000C38  ECE6  F00A         	call	___lwdiv	;wreg free
  1166   000C3C  C014  F029         	movff	?___lwdiv,_partdecl
  1167   000C40  C015  F02A         	movff	?___lwdiv+1,_partdecl+1
  1168   000C44  6A2B               	clrf	(_partdecl+2)^0,c
  1169   000C46  6A2C               	clrf	(_partdecl+3)^0,c
  1170   000C48  D0A0               	goto	l3113
  1171   000C4A                     l3063:
  1172                           
  1173                           ;Laboratorio4.c: 149: if(n1 != 0 & n2 == 0) r = 1000;
  1174   000C4A  5037               	movf	_n1^0,w,c
  1175   000C4C  1038               	iorwf	(_n1+1)^0,w,c
  1176   000C4E  B4D8               	btfsc	status,2,c
  1177   000C50  D006               	goto	l3069
  1178   000C52  5035               	movf	_n2^0,w,c
  1179   000C54  1036               	iorwf	(_n2+1)^0,w,c
  1180   000C56  A4D8               	btfss	status,2,c
  1181   000C58  D002               	goto	l3069
  1182   000C5A  0EE8               	movlw	232
  1183   000C5C  D009               	goto	L4
  1184   000C5E                     l3069:
  1185                           
  1186                           ;Laboratorio4.c: 150: else if(n1 == 0 & n2 == 0) r = 1001;
  1187   000C5E  5037               	movf	_n1^0,w,c
  1188   000C60  1038               	iorwf	(_n1+1)^0,w,c
  1189   000C62  A4D8               	btfss	status,2,c
  1190   000C64  D78F               	goto	l3045
  1191   000C66  5035               	movf	_n2^0,w,c
  1192   000C68  1036               	iorwf	(_n2+1)^0,w,c
  1193   000C6A  A4D8               	btfss	status,2,c
  1194   000C6C  D78B               	goto	l3045
  1195   000C6E  0EE9               	movlw	233
  1196   000C70                     L4:
  1197   000C70  6E25               	movwf	_r^0,c
  1198   000C72  0E03               	movlw	3
  1199   000C74  D007               	goto	L5
  1200   000C76                     l3077:
  1201                           
  1202                           ;Laboratorio4.c: 155: if (n1==0) r = 1;
  1203   000C76  5037               	movf	_n1^0,w,c
  1204   000C78  1038               	iorwf	(_n1+1)^0,w,c
  1205   000C7A  A4D8               	btfss	status,2,c
  1206   000C7C  D009               	goto	l3081
  1207   000C7E                     u3440:
  1208   000C7E  0E01               	movlw	1
  1209   000C80  6E25               	movwf	_r^0,c
  1210   000C82  0E00               	movlw	0
  1211   000C84                     L5:
  1212   000C84  6E26               	movwf	(_r+1)^0,c
  1213   000C86  0E00               	movlw	0
  1214   000C88  6E27               	movwf	(_r+2)^0,c
  1215   000C8A  0E00               	movlw	0
  1216   000C8C  6E28               	movwf	(_r+3)^0,c
  1217   000C8E  D77A               	goto	l3045
  1218   000C90                     l3081:
  1219                           
  1220                           ;Laboratorio4.c: 156: else{;Laboratorio4.c: 157: r = n1;
  1221   000C90  C037  F025         	movff	_n1,_r
  1222   000C94  C038  F026         	movff	_n1+1,_r+1
  1223   000C98  6A27               	clrf	(_r+2)^0,c
  1224   000C9A  6A28               	clrf	(_r+3)^0,c
  1225   000C9C  D021               	goto	l3087
  1226   000C9E                     l3083:
  1227                           
  1228                           ;Laboratorio4.c: 159: r = r * (n1-1);
  1229   000C9E  0EFF               	movlw	255
  1230   000CA0  2437               	addwf	_n1^0,w,c
  1231   000CA2  6E1B               	movwf	??_main^0,c
  1232   000CA4  0EFF               	movlw	255
  1233   000CA6  2038               	addwfc	(_n1+1)^0,w,c
  1234   000CA8  6E1C               	movwf	(??_main+1)^0,c
  1235   000CAA  C01B  F00E         	movff	??_main,___lmul@multiplier
  1236   000CAE  C01C  F00F         	movff	??_main+1,___lmul@multiplier+1
  1237   000CB2  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1238   000CB4  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1239   000CB6  C025  F012         	movff	_r,___lmul@multiplicand
  1240   000CBA  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1241   000CBE  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1242   000CC2  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1243   000CC6  EC65  F00A         	call	___lmul	;wreg free
  1244   000CCA  C00E  F025         	movff	?___lmul,_r
  1245   000CCE  C00F  F026         	movff	?___lmul+1,_r+1
  1246   000CD2  C010  F027         	movff	?___lmul+2,_r+2
  1247   000CD6  C011  F028         	movff	?___lmul+3,_r+3
  1248   000CDA  0637               	decf	_n1^0,f,c
  1249   000CDC  A0D8               	btfss	status,0,c
  1250   000CDE  0638               	decf	(_n1+1)^0,f,c
  1251   000CE0                     l3087:
  1252   000CE0  5038               	movf	(_n1+1)^0,w,c
  1253   000CE2  E1DD               	bnz	l3083
  1254   000CE4  0E02               	movlw	2
  1255   000CE6  5C37               	subwf	_n1^0,w,c
  1256   000CE8  A0D8               	btfss	status,0,c
  1257   000CEA  D74C               	goto	l3045
  1258   000CEC  D7D8               	goto	l3083
  1259   000CEE                     l3091:
  1260                           
  1261                           ;Laboratorio4.c: 165: r = n1;
  1262   000CEE  C037  F025         	movff	_n1,_r
  1263   000CF2  C038  F026         	movff	_n1+1,_r+1
  1264   000CF6  6A27               	clrf	(_r+2)^0,c
  1265   000CF8  6A28               	clrf	(_r+3)^0,c
  1266                           
  1267                           ;Laboratorio4.c: 166: if(n2==0) r = 1;
  1268   000CFA  5035               	movf	_n2^0,w,c
  1269   000CFC  1036               	iorwf	(_n2+1)^0,w,c
  1270   000CFE  B4D8               	btfsc	status,2,c
  1271   000D00  D7BE               	goto	u3440
  1272                           
  1273                           ;Laboratorio4.c: 167: else{;Laboratorio4.c: 168: n2 = n2-1;
  1274   000D02  0EFF               	movlw	255
  1275   000D04  2435               	addwf	_n2^0,w,c
  1276   000D06  6E35               	movwf	_n2^0,c
  1277   000D08  0EFF               	movlw	255
  1278   000D0A  2036               	addwfc	(_n2+1)^0,w,c
  1279   000D0C  6E36               	movwf	(_n2+1)^0,c
  1280   000D0E  D01B               	goto	l3103
  1281   000D10                     l3099:
  1282                           
  1283                           ;Laboratorio4.c: 170: r = r * n1;
  1284   000D10  C037  F00E         	movff	_n1,___lmul@multiplier
  1285   000D14  C038  F00F         	movff	_n1+1,___lmul@multiplier+1
  1286   000D18  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1287   000D1A  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1288   000D1C  C025  F012         	movff	_r,___lmul@multiplicand
  1289   000D20  C026  F013         	movff	_r+1,___lmul@multiplicand+1
  1290   000D24  C027  F014         	movff	_r+2,___lmul@multiplicand+2
  1291   000D28  C028  F015         	movff	_r+3,___lmul@multiplicand+3
  1292   000D2C  EC65  F00A         	call	___lmul	;wreg free
  1293   000D30  C00E  F025         	movff	?___lmul,_r
  1294   000D34  C00F  F026         	movff	?___lmul+1,_r+1
  1295   000D38  C010  F027         	movff	?___lmul+2,_r+2
  1296   000D3C  C011  F028         	movff	?___lmul+3,_r+3
  1297   000D40  0635               	decf	_n2^0,f,c
  1298   000D42  A0D8               	btfss	status,0,c
  1299   000D44  0636               	decf	(_n2+1)^0,f,c
  1300   000D46                     l3103:
  1301   000D46  5035               	movf	_n2^0,w,c
  1302   000D48  1036               	iorwf	(_n2+1)^0,w,c
  1303   000D4A  B4D8               	btfsc	status,2,c
  1304   000D4C  D71B               	goto	l3045
  1305   000D4E  D7E0               	goto	l3099
  1306   000D50                     l3107:
  1307                           
  1308                           ;Laboratorio4.c: 176: r = 0;
  1309   000D50  0E00               	movlw	0
  1310   000D52  6E25               	movwf	_r^0,c
  1311   000D54  0E00               	movlw	0
  1312   000D56  6E26               	movwf	(_r+1)^0,c
  1313   000D58  0E00               	movlw	0
  1314   000D5A  6E27               	movwf	(_r+2)^0,c
  1315   000D5C  0E00               	movlw	0
  1316   000D5E  6E28               	movwf	(_r+3)^0,c
  1317                           
  1318                           ;Laboratorio4.c: 177: break;
  1319   000D60  D014               	goto	l3113
  1320   000D62                     l3111:
  1321   000D62  5041               	movf	_op^0,w,c
  1322                           
  1323                           ; Switch size 1, requested type "simple"
  1324                           ; Number of cases is 6, Range of values is 33 to 120
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte           19    10 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329   000D64  0A21               	xorlw	33	; case 33
  1330   000D66  B4D8               	btfsc	status,2,c
  1331   000D68  D786               	goto	l3077
  1332   000D6A  0A0A               	xorlw	10	; case 43
  1333   000D6C  B4D8               	btfsc	status,2,c
  1334   000D6E  D6FE               	goto	l3043
  1335   000D70  0A06               	xorlw	6	; case 45
  1336   000D72  B4D8               	btfsc	status,2,c
  1337   000D74  D722               	goto	l3047
  1338   000D76  0A02               	xorlw	2	; case 47
  1339   000D78  B4D8               	btfsc	status,2,c
  1340   000D7A  D734               	goto	l3055
  1341   000D7C  0A71               	xorlw	113	; case 94
  1342   000D7E  B4D8               	btfsc	status,2,c
  1343   000D80  D7B6               	goto	l3091
  1344   000D82  0A26               	xorlw	38	; case 120
  1345   000D84  B4D8               	btfsc	status,2,c
  1346   000D86  D71F               	goto	l3051
  1347   000D88  D7E3               	goto	l3107
  1348   000D8A                     l3113:
  1349                           
  1350                           ;Laboratorio4.c: 179: if(op=='!') DireccionaLCD(0x83);
  1351   000D8A  0E21               	movlw	33
  1352   000D8C  1841               	xorwf	_op^0,w,c
  1353   000D8E  A4D8               	btfss	status,2,c
  1354   000D90  D004               	goto	l3117
  1355   000D92  0E83               	movlw	131
  1356   000D94  EC2A  F00C         	call	_DireccionaLCD
  1357   000D98  D003               	goto	l210
  1358   000D9A                     l3117:
  1359                           
  1360                           ;Laboratorio4.c: 180: else DireccionaLCD(0x84);
  1361   000D9A  0E84               	movlw	132
  1362   000D9C  EC2A  F00C         	call	_DireccionaLCD
  1363   000DA0                     l210:
  1364                           
  1365                           ;Laboratorio4.c: 181: if ((partdecl-(r*100))!= 0 & (partdecl-(r*100))>0){
  1366   000DA0  C025  F00E         	movff	_r,___lmul@multiplier
  1367   000DA4  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1368   000DA8  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1369   000DAC  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1370   000DB0  0E9C               	movlw	156
  1371   000DB2  6E12               	movwf	___lmul@multiplicand^0,c
  1372   000DB4  0EFF               	movlw	255
  1373   000DB6  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1374   000DB8  0EFF               	movlw	255
  1375   000DBA  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1376   000DBC  0EFF               	movlw	255
  1377   000DBE  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1378   000DC0  EC65  F00A         	call	___lmul	;wreg free
  1379   000DC4  5029               	movf	_partdecl^0,w,c
  1380   000DC6  240E               	addwf	?___lmul^0,w,c
  1381   000DC8  6E1B               	movwf	??_main^0,c
  1382   000DCA  502A               	movf	(_partdecl+1)^0,w,c
  1383   000DCC  200F               	addwfc	(?___lmul+1)^0,w,c
  1384   000DCE  6E1C               	movwf	(??_main+1)^0,c
  1385   000DD0  502B               	movf	(_partdecl+2)^0,w,c
  1386   000DD2  2010               	addwfc	(?___lmul+2)^0,w,c
  1387   000DD4  6E1D               	movwf	(??_main+2)^0,c
  1388   000DD6  502C               	movf	(_partdecl+3)^0,w,c
  1389   000DD8  2011               	addwfc	(?___lmul+3)^0,w,c
  1390   000DDA  6E1E               	movwf	(??_main+3)^0,c
  1391   000DDC  501B               	movf	??_main^0,w,c
  1392   000DDE  101C               	iorwf	(??_main+1)^0,w,c
  1393   000DE0  101D               	iorwf	(??_main+2)^0,w,c
  1394   000DE2  101E               	iorwf	(??_main+3)^0,w,c
  1395   000DE4  B4D8               	btfsc	status,2,c
  1396   000DE6  D07A               	goto	l3143
  1397   000DE8  C025  F00E         	movff	_r,___lmul@multiplier
  1398   000DEC  C026  F00F         	movff	_r+1,___lmul@multiplier+1
  1399   000DF0  C027  F010         	movff	_r+2,___lmul@multiplier+2
  1400   000DF4  C028  F011         	movff	_r+3,___lmul@multiplier+3
  1401   000DF8  0E9C               	movlw	156
  1402   000DFA  6E12               	movwf	___lmul@multiplicand^0,c
  1403   000DFC  0EFF               	movlw	255
  1404   000DFE  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1405   000E00  0EFF               	movlw	255
  1406   000E02  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1407   000E04  0EFF               	movlw	255
  1408   000E06  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1409   000E08  EC65  F00A         	call	___lmul	;wreg free
  1410   000E0C  5029               	movf	_partdecl^0,w,c
  1411   000E0E  240E               	addwf	?___lmul^0,w,c
  1412   000E10  6E1B               	movwf	??_main^0,c
  1413   000E12  502A               	movf	(_partdecl+1)^0,w,c
  1414   000E14  200F               	addwfc	(?___lmul+1)^0,w,c
  1415   000E16  6E1C               	movwf	(??_main+1)^0,c
  1416   000E18  502B               	movf	(_partdecl+2)^0,w,c
  1417   000E1A  2010               	addwfc	(?___lmul+2)^0,w,c
  1418   000E1C  6E1D               	movwf	(??_main+2)^0,c
  1419   000E1E  502C               	movf	(_partdecl+3)^0,w,c
  1420   000E20  2011               	addwfc	(?___lmul+3)^0,w,c
  1421   000E22  6E1E               	movwf	(??_main+3)^0,c
  1422   000E24  501B               	movf	??_main^0,w,c
  1423   000E26  101C               	iorwf	(??_main+1)^0,w,c
  1424   000E28  101D               	iorwf	(??_main+2)^0,w,c
  1425   000E2A  101E               	iorwf	(??_main+3)^0,w,c
  1426   000E2C  B4D8               	btfsc	status,2,c
  1427   000E2E  D056               	goto	l3143
  1428                           
  1429                           ;Laboratorio4.c: 182: for (int i = 0; i < 3; i++) {
  1430   000E30  0E00               	movlw	0
  1431   000E32  6E22               	movwf	(main@i+1)^0,c
  1432   000E34  0E00               	movlw	0
  1433   000E36  6E21               	movwf	main@i^0,c
  1434   000E38                     l3123:
  1435   000E38  BE22               	btfsc	(main@i+1)^0,7,c
  1436   000E3A  D008               	goto	l3127
  1437   000E3C  5022               	movf	(main@i+1)^0,w,c
  1438   000E3E  E105               	bnz	u3510
  1439   000E40  0E03               	movlw	3
  1440   000E42  5C21               	subwf	main@i^0,w,c
  1441   000E44  B0D8               	btfsc	status,0,c
  1442   000E46  D16C               	goto	l3217
  1443   000E48  D001               	goto	l3127
  1444   000E4A                     u3510:
  1445   000E4A  D16A               	goto	l3217
  1446   000E4C                     l3127:
  1447                           
  1448                           ;Laboratorio4.c: 183: r = n1 / n2;
  1449   000E4C  C037  F014         	movff	_n1,___lwdiv@dividend
  1450   000E50  C038  F015         	movff	_n1+1,___lwdiv@dividend+1
  1451   000E54  C035  F016         	movff	_n2,___lwdiv@divisor
  1452   000E58  C036  F017         	movff	_n2+1,___lwdiv@divisor+1
  1453   000E5C  ECE6  F00A         	call	___lwdiv	;wreg free
  1454   000E60  C014  F025         	movff	?___lwdiv,_r
  1455   000E64  C015  F026         	movff	?___lwdiv+1,_r+1
  1456   000E68  6A27               	clrf	(_r+2)^0,c
  1457   000E6A  6A28               	clrf	(_r+3)^0,c
  1458                           
  1459                           ;Laboratorio4.c: 184: m = n1 % n2;
  1460   000E6C  C037  F00E         	movff	_n1,___lwmod@dividend
  1461   000E70  C038  F00F         	movff	_n1+1,___lwmod@dividend+1
  1462   000E74  C035  F010         	movff	_n2,___lwmod@divisor
  1463   000E78  C036  F011         	movff	_n2+1,___lwmod@divisor+1
  1464   000E7C  ECA3  F00B         	call	___lwmod	;wreg free
  1465   000E80  C00E  F03B         	movff	?___lwmod,_m
  1466   000E84  C00F  F03C         	movff	?___lwmod+1,_m+1
  1467   000E88  6A3D               	clrf	(_m+2)^0,c
  1468   000E8A  6A3E               	clrf	(_m+3)^0,c
  1469                           
  1470                           ;Laboratorio4.c: 185: EscribeLCD_c(r+'0');
  1471   000E8C  5025               	movf	_r^0,w,c
  1472   000E8E  0F30               	addlw	48
  1473   000E90  EC1F  F00C         	call	_EscribeLCD_c
  1474                           
  1475                           ;Laboratorio4.c: 186: if(i == 0 && m != 0) {
  1476   000E94  5021               	movf	main@i^0,w,c
  1477   000E96  1022               	iorwf	(main@i+1)^0,w,c
  1478   000E98  A4D8               	btfss	status,2,c
  1479   000E9A  D009               	goto	l3135
  1480   000E9C  503B               	movf	_m^0,w,c
  1481   000E9E  103C               	iorwf	(_m+1)^0,w,c
  1482   000EA0  103D               	iorwf	(_m+2)^0,w,c
  1483   000EA2  103E               	iorwf	(_m+3)^0,w,c
  1484   000EA4  B4D8               	btfsc	status,2,c
  1485   000EA6  D003               	goto	l3135
  1486                           
  1487                           ;Laboratorio4.c: 187: EscribeLCD_c(',');
  1488   000EA8  0E2C               	movlw	44
  1489   000EAA  EC1F  F00C         	call	_EscribeLCD_c
  1490   000EAE                     l3135:
  1491                           
  1492                           ;Laboratorio4.c: 188: };Laboratorio4.c: 189: if (m != 0) {
  1493   000EAE  503B               	movf	_m^0,w,c
  1494   000EB0  103C               	iorwf	(_m+1)^0,w,c
  1495   000EB2  103D               	iorwf	(_m+2)^0,w,c
  1496   000EB4  103E               	iorwf	(_m+3)^0,w,c
  1497   000EB6  B4D8               	btfsc	status,2,c
  1498   000EB8  D133               	goto	l3217
  1499                           
  1500                           ;Laboratorio4.c: 190: n1 = m * 10;
  1501   000EBA  C03B  F00E         	movff	_m,___wmul@multiplier
  1502   000EBE  C03C  F00F         	movff	_m+1,___wmul@multiplier+1
  1503   000EC2  0E00               	movlw	0
  1504   000EC4  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1505   000EC6  0E0A               	movlw	10
  1506   000EC8  6E10               	movwf	___wmul@multiplicand^0,c
  1507   000ECA  ECFF  F00B         	call	___wmul	;wreg free
  1508   000ECE  C00E  F037         	movff	?___wmul,_n1
  1509   000ED2  C00F  F038         	movff	?___wmul+1,_n1+1
  1510                           
  1511                           ;Laboratorio4.c: 191: } else {
  1512   000ED6  4A21               	infsnz	main@i^0,f,c
  1513   000ED8  2A22               	incf	(main@i+1)^0,f,c
  1514   000EDA  D7AE               	goto	l3123
  1515   000EDC                     l3143:
  1516   000EDC  5028               	movf	(_r+3)^0,w,c
  1517   000EDE  1027               	iorwf	(_r+2)^0,w,c
  1518   000EE0  1026               	iorwf	(_r+1)^0,w,c
  1519   000EE2  E104               	bnz	u3550
  1520   000EE4  0E52               	movlw	82
  1521   000EE6  5C25               	subwf	_r^0,w,c
  1522   000EE8  A0D8               	btfss	status,0,c
  1523   000EEA  D029               	goto	l3157
  1524   000EEC                     u3550:
  1525   000EEC  0EE8               	movlw	232
  1526   000EEE  1825               	xorwf	_r^0,w,c
  1527   000EF0  E106               	bnz	u3560
  1528   000EF2  0E03               	movlw	3
  1529   000EF4  1826               	xorwf	(_r+1)^0,w,c
  1530   000EF6  1027               	iorwf	(_r+2)^0,w,c
  1531   000EF8  1028               	iorwf	(_r+3)^0,w,c
  1532   000EFA  B4D8               	btfsc	status,2,c
  1533   000EFC  D020               	goto	l3157
  1534   000EFE                     u3560:
  1535   000EFE  0EE9               	movlw	233
  1536   000F00  1825               	xorwf	_r^0,w,c
  1537   000F02  E106               	bnz	u3570
  1538   000F04  0E03               	movlw	3
  1539   000F06  1826               	xorwf	(_r+1)^0,w,c
  1540   000F08  1027               	iorwf	(_r+2)^0,w,c
  1541   000F0A  1028               	iorwf	(_r+3)^0,w,c
  1542   000F0C  B4D8               	btfsc	status,2,c
  1543   000F0E  D017               	goto	l3157
  1544   000F10                     u3570:
  1545   000F10  0E2D               	movlw	45
  1546   000F12  1841               	xorwf	_op^0,w,c
  1547   000F14  A4D8               	btfss	status,2,c
  1548   000F16  D013               	goto	l3157
  1549                           
  1550                           ;Laboratorio4.c: 197: EscribeLCD_c('-');
  1551   000F18  0E2D               	movlw	45
  1552   000F1A  EC1F  F00C         	call	_EscribeLCD_c
  1553                           
  1554                           ;Laboratorio4.c: 198: DireccionaLCD(0x85);
  1555   000F1E  0E85               	movlw	133
  1556   000F20  EC2A  F00C         	call	_DireccionaLCD
  1557                           
  1558                           ;Laboratorio4.c: 199: r = ~r+1;
  1559   000F24  1E28               	comf	(_r+3)^0,f,c
  1560   000F26  1E27               	comf	(_r+2)^0,f,c
  1561   000F28  1E26               	comf	(_r+1)^0,f,c
  1562   000F2A  6C25               	negf	_r^0,c
  1563   000F2C  0E00               	movlw	0
  1564   000F2E  2226               	addwfc	(_r+1)^0,f,c
  1565   000F30  2227               	addwfc	(_r+2)^0,f,c
  1566   000F32  2228               	addwfc	(_r+3)^0,f,c
  1567                           
  1568                           ;Laboratorio4.c: 200: EscribeLCD_c(r+'0');
  1569   000F34  5025               	movf	_r^0,w,c
  1570   000F36  0F30               	addlw	48
  1571   000F38  EC1F  F00C         	call	_EscribeLCD_c
  1572                           
  1573                           ;Laboratorio4.c: 201: }else{
  1574   000F3C  D0F1               	goto	l3217
  1575   000F3E                     l3157:
  1576                           
  1577                           ;Laboratorio4.c: 202: if(r==1000){
  1578   000F3E  0EE8               	movlw	232
  1579   000F40  1825               	xorwf	_r^0,w,c
  1580   000F42  E10B               	bnz	l3161
  1581   000F44  0E03               	movlw	3
  1582   000F46  1826               	xorwf	(_r+1)^0,w,c
  1583   000F48  1027               	iorwf	(_r+2)^0,w,c
  1584   000F4A  1028               	iorwf	(_r+3)^0,w,c
  1585   000F4C  A4D8               	btfss	status,2,c
  1586   000F4E  D005               	goto	l3161
  1587                           
  1588                           ;Laboratorio4.c: 203: MensajeLCD_Word("Inf.");
  1589   000F50  0E34               	movlw	low STR_6
  1590   000F52  6E13               	movwf	MensajeLCD_Word@a^0,c
  1591   000F54  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
  1592                           
  1593                           ;Laboratorio4.c: 204: }else{
  1594   000F58  D0E3               	goto	l3217
  1595   000F5A                     l3161:
  1596                           
  1597                           ;Laboratorio4.c: 205: if(r==1001){
  1598   000F5A  0EE9               	movlw	233
  1599   000F5C  1825               	xorwf	_r^0,w,c
  1600   000F5E  E10B               	bnz	l3165
  1601   000F60  0E03               	movlw	3
  1602   000F62  1826               	xorwf	(_r+1)^0,w,c
  1603   000F64  1027               	iorwf	(_r+2)^0,w,c
  1604   000F66  1028               	iorwf	(_r+3)^0,w,c
  1605   000F68  A4D8               	btfss	status,2,c
  1606   000F6A  D005               	goto	l3165
  1607                           
  1608                           ;Laboratorio4.c: 206: MensajeLCD_Word("Ind.");
  1609   000F6C  0E2F               	movlw	low STR_7
  1610   000F6E  6E13               	movwf	MensajeLCD_Word@a^0,c
  1611   000F70  EC0F  F00B         	call	_MensajeLCD_Word	;wreg free
  1612                           
  1613                           ;Laboratorio4.c: 207: }else{
  1614   000F74  D0D5               	goto	l3217
  1615   000F76                     l3165:
  1616                           
  1617                           ;Laboratorio4.c: 208: if(r>=0xA & r!=1000 & r !=1001){
  1618   000F76  5028               	movf	(_r+3)^0,w,c
  1619   000F78  1027               	iorwf	(_r+2)^0,w,c
  1620   000F7A  1026               	iorwf	(_r+1)^0,w,c
  1621   000F7C  E104               	bnz	u3610
  1622   000F7E  0E0A               	movlw	10
  1623   000F80  5C25               	subwf	_r^0,w,c
  1624   000F82  A0D8               	btfss	status,0,c
  1625   000F84  D0C5               	goto	l3213
  1626   000F86                     u3610:
  1627   000F86  0EE8               	movlw	232
  1628   000F88  1825               	xorwf	_r^0,w,c
  1629   000F8A  E106               	bnz	u3620
  1630   000F8C  0E03               	movlw	3
  1631   000F8E  1826               	xorwf	(_r+1)^0,w,c
  1632   000F90  1027               	iorwf	(_r+2)^0,w,c
  1633   000F92  1028               	iorwf	(_r+3)^0,w,c
  1634   000F94  B4D8               	btfsc	status,2,c
  1635   000F96  D0BC               	goto	l3213
  1636   000F98                     u3620:
  1637   000F98  0EE9               	movlw	233
  1638   000F9A  1825               	xorwf	_r^0,w,c
  1639   000F9C  E106               	bnz	u3630
  1640   000F9E  0E03               	movlw	3
  1641   000FA0  1826               	xorwf	(_r+1)^0,w,c
  1642   000FA2  1027               	iorwf	(_r+2)^0,w,c
  1643   000FA4  1028               	iorwf	(_r+3)^0,w,c
  1644   000FA6  B4D8               	btfsc	status,2,c
  1645   000FA8  D0B3               	goto	l3213
  1646   000FAA                     u3630:
  1647                           
  1648                           ;Laboratorio4.c: 209: for(int j=9;j>=0;j--){
  1649   000FAA  0E00               	movlw	0
  1650   000FAC  6E24               	movwf	(main@j+1)^0,c
  1651   000FAE  0E09               	movlw	9
  1652   000FB0  6E23               	movwf	main@j^0,c
  1653   000FB2                     l3173:
  1654   000FB2  BE24               	btfsc	(main@j+1)^0,7,c
  1655   000FB4  D0B5               	goto	l3217
  1656                           
  1657                           ;Laboratorio4.c: 210: partdecl = 10;
  1658   000FB6  0E0A               	movlw	10
  1659   000FB8  6E29               	movwf	_partdecl^0,c
  1660   000FBA  0E00               	movlw	0
  1661   000FBC  6E2A               	movwf	(_partdecl+1)^0,c
  1662   000FBE  0E00               	movlw	0
  1663   000FC0  6E2B               	movwf	(_partdecl+2)^0,c
  1664   000FC2  0E00               	movlw	0
  1665   000FC4  6E2C               	movwf	(_partdecl+3)^0,c
  1666                           
  1667                           ;Laboratorio4.c: 211: for(int k=j-1;k>0;k--){
  1668   000FC6  0EFF               	movlw	255
  1669   000FC8  2423               	addwf	main@j^0,w,c
  1670   000FCA  6E1F               	movwf	main@k^0,c
  1671   000FCC  0EFF               	movlw	255
  1672   000FCE  2024               	addwfc	(main@j+1)^0,w,c
  1673   000FD0  6E20               	movwf	(main@k+1)^0,c
  1674   000FD2                     l3181:
  1675   000FD2  BE20               	btfsc	(main@k+1)^0,7,c
  1676   000FD4  D023               	goto	l3191
  1677   000FD6  5020               	movf	(main@k+1)^0,w,c
  1678   000FD8  E103               	bnz	l3185
  1679   000FDA  041F               	decf	main@k^0,w,c
  1680   000FDC  A0D8               	btfss	status,0,c
  1681   000FDE  D01E               	goto	l3191
  1682   000FE0                     l3185:
  1683                           
  1684                           ;Laboratorio4.c: 212: partdecl = partdecl*10;
  1685   000FE0  C029  F00E         	movff	_partdecl,___lmul@multiplier
  1686   000FE4  C02A  F00F         	movff	_partdecl+1,___lmul@multiplier+1
  1687   000FE8  C02B  F010         	movff	_partdecl+2,___lmul@multiplier+2
  1688   000FEC  C02C  F011         	movff	_partdecl+3,___lmul@multiplier+3
  1689   000FF0  0E0A               	movlw	10
  1690   000FF2  6E12               	movwf	___lmul@multiplicand^0,c
  1691   000FF4  0E00               	movlw	0
  1692   000FF6  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1693   000FF8  0E00               	movlw	0
  1694   000FFA  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1695   000FFC  0E00               	movlw	0
  1696   000FFE  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1697   001000  EC65  F00A         	call	___lmul	;wreg free
  1698   001004  C00E  F029         	movff	?___lmul,_partdecl
  1699   001008  C00F  F02A         	movff	?___lmul+1,_partdecl+1
  1700   00100C  C010  F02B         	movff	?___lmul+2,_partdecl+2
  1701   001010  C011  F02C         	movff	?___lmul+3,_partdecl+3
  1702   001014  061F               	decf	main@k^0,f,c
  1703   001016  A0D8               	btfss	status,0,c
  1704   001018  0620               	decf	(main@k+1)^0,f,c
  1705   00101A  D7DB               	goto	l3181
  1706   00101C                     l3191:
  1707                           
  1708                           ;Laboratorio4.c: 213: };Laboratorio4.c: 214: if(r/partdecl>0){
  1709   00101C  C025  F00E         	movff	_r,___lldiv@dividend
  1710   001020  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1711   001024  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1712   001028  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1713   00102C  C029  F012         	movff	_partdecl,___lldiv@divisor
  1714   001030  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1715   001034  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1716   001038  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1717   00103C  EC75  F009         	call	___lldiv	;wreg free
  1718   001040  500E               	movf	?___lldiv^0,w,c
  1719   001042  100F               	iorwf	(?___lldiv+1)^0,w,c
  1720   001044  1010               	iorwf	(?___lldiv+2)^0,w,c
  1721   001046  1011               	iorwf	(?___lldiv+3)^0,w,c
  1722   001048  B4D8               	btfsc	status,2,c
  1723   00104A  D033               	goto	l3199
  1724                           
  1725                           ;Laboratorio4.c: 215: flag = 1;
  1726   00104C  0E01               	movlw	1
  1727   00104E  6E39               	movwf	_flag^0,c
  1728                           
  1729                           ;Laboratorio4.c: 216: EscribeLCD_c(r/partdecl+48);
  1730   001050  C025  F00E         	movff	_r,___lldiv@dividend
  1731   001054  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1732   001058  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1733   00105C  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1734   001060  C029  F012         	movff	_partdecl,___lldiv@divisor
  1735   001064  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1736   001068  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1737   00106C  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1738   001070  EC75  F009         	call	___lldiv	;wreg free
  1739   001074  500E               	movf	?___lldiv^0,w,c
  1740   001076  0F30               	addlw	48
  1741   001078  EC1F  F00C         	call	_EscribeLCD_c
  1742                           
  1743                           ;Laboratorio4.c: 217: r=r%partdecl;
  1744   00107C  C025  F00E         	movff	_r,___llmod@dividend
  1745   001080  C026  F00F         	movff	_r+1,___llmod@dividend+1
  1746   001084  C027  F010         	movff	_r+2,___llmod@dividend+2
  1747   001088  C028  F011         	movff	_r+3,___llmod@dividend+3
  1748   00108C  C029  F012         	movff	_partdecl,___llmod@divisor
  1749   001090  C02A  F013         	movff	_partdecl+1,___llmod@divisor+1
  1750   001094  C02B  F014         	movff	_partdecl+2,___llmod@divisor+2
  1751   001098  C02C  F015         	movff	_partdecl+3,___llmod@divisor+3
  1752   00109C  EC32  F00A         	call	___llmod	;wreg free
  1753   0010A0  C00E  F025         	movff	?___llmod,_r
  1754   0010A4  C00F  F026         	movff	?___llmod+1,_r+1
  1755   0010A8  C010  F027         	movff	?___llmod+2,_r+2
  1756   0010AC  C011  F028         	movff	?___llmod+3,_r+3
  1757                           
  1758                           ;Laboratorio4.c: 218: }else if( (r/partdecl)==0 && flag){
  1759   0010B0  D02B               	goto	l3209
  1760   0010B2                     l3199:
  1761   0010B2  C025  F00E         	movff	_r,___lldiv@dividend
  1762   0010B6  C026  F00F         	movff	_r+1,___lldiv@dividend+1
  1763   0010BA  C027  F010         	movff	_r+2,___lldiv@dividend+2
  1764   0010BE  C028  F011         	movff	_r+3,___lldiv@dividend+3
  1765   0010C2  C029  F012         	movff	_partdecl,___lldiv@divisor
  1766   0010C6  C02A  F013         	movff	_partdecl+1,___lldiv@divisor+1
  1767   0010CA  C02B  F014         	movff	_partdecl+2,___lldiv@divisor+2
  1768   0010CE  C02C  F015         	movff	_partdecl+3,___lldiv@divisor+3
  1769   0010D2  EC75  F009         	call	___lldiv	;wreg free
  1770   0010D6  500E               	movf	?___lldiv^0,w,c
  1771   0010D8  100F               	iorwf	(?___lldiv+1)^0,w,c
  1772   0010DA  1010               	iorwf	(?___lldiv+2)^0,w,c
  1773   0010DC  1011               	iorwf	(?___lldiv+3)^0,w,c
  1774   0010DE  A4D8               	btfss	status,2,c
  1775   0010E0  D013               	goto	l3209
  1776   0010E2  5039               	movf	_flag^0,w,c
  1777   0010E4  B4D8               	btfsc	status,2,c
  1778   0010E6  D010               	goto	l3209
  1779                           
  1780                           ;Laboratorio4.c: 219: if(r<10) EscribeLCD_c(r+48);
  1781   0010E8  5028               	movf	(_r+3)^0,w,c
  1782   0010EA  1027               	iorwf	(_r+2)^0,w,c
  1783   0010EC  1026               	iorwf	(_r+1)^0,w,c
  1784   0010EE  E109               	bnz	l3207
  1785   0010F0  0E0A               	movlw	10
  1786   0010F2  5C25               	subwf	_r^0,w,c
  1787   0010F4  B0D8               	btfsc	status,0,c
  1788   0010F6  D005               	goto	l3207
  1789   0010F8  5025               	movf	_r^0,w,c
  1790   0010FA  0F30               	addlw	48
  1791   0010FC  EC1F  F00C         	call	_EscribeLCD_c
  1792   001100  D003               	goto	l3209
  1793   001102                     l3207:
  1794                           
  1795                           ;Laboratorio4.c: 220: else EscribeLCD_c(48);
  1796   001102  0E30               	movlw	48
  1797   001104  EC1F  F00C         	call	_EscribeLCD_c
  1798   001108                     l3209:
  1799   001108  0623               	decf	main@j^0,f,c
  1800   00110A  A0D8               	btfss	status,0,c
  1801   00110C  0624               	decf	(main@j+1)^0,f,c
  1802   00110E  D751               	goto	l3173
  1803   001110                     l3213:
  1804                           
  1805                           ;Laboratorio4.c: 224: EscribeLCD_c(r+'0');
  1806   001110  5025               	movf	_r^0,w,c
  1807   001112  0F30               	addlw	48
  1808   001114  EC1F  F00C         	call	_EscribeLCD_c
  1809   001118  D003               	goto	l3217
  1810   00111A                     l3215:
  1811                           
  1812                           ;Laboratorio4.c: 230: EscribeLCD_c(' ');
  1813   00111A  0E20               	movlw	32
  1814   00111C  EC1F  F00C         	call	_EscribeLCD_c
  1815   001120                     l3217:
  1816                           
  1817                           ;Laboratorio4.c: 231: };Laboratorio4.c: 232: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1818   001120  0EE4               	movlw	228
  1819   001122  6E1B               	movwf	??_main^0,c
  1820   001124  0E44               	movlw	68
  1821   001126                     u3737:
  1822   001126  2EE8               	decfsz	wreg,f,c
  1823   001128  D7FE               	bra	u3737
  1824   00112A  2E1B               	decfsz	??_main^0,f,c
  1825   00112C  D7FC               	bra	u3737
  1826   00112E                     L1:
  1827   00112E  D000               	nop2	
  1828   001130  EF93  F004         	goto	l2899
  1829   001134                     __end_of_main:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function ___wmul *****************
  1833 ;; Defined at:
  1834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  multiplier      2   13[COMRAM] unsigned int 
  1837 ;;  multiplicand    2   15[COMRAM] unsigned int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  product         2   17[COMRAM] unsigned int 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2   13[COMRAM] unsigned int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, prodl, prodh
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1849 ;;      Params:         4       0       0       0       0       0       0       0       0
  1850 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1852 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1853 ;;Total ram usage:        6 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 5
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text1
  1864   0017FE                     __ptext1:
  1865                           	callstack 0
  1866   0017FE                     ___wmul:
  1867                           	callstack 25
  1868                           
  1869                           ;incstack = 0
  1870   0017FE  500E               	movf	___wmul@multiplier^0,w,c
  1871   001800  0210               	mulwf	___wmul@multiplicand^0,c
  1872   001802  CFF3 F012          	movff	prodl,___wmul@product
  1873   001806  CFF4 F013          	movff	prodh,___wmul@product+1
  1874   00180A  500E               	movf	___wmul@multiplier^0,w,c
  1875   00180C  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  1876   00180E  50F3               	movf	243,w,c
  1877   001810  2613               	addwf	(___wmul@product+1)^0,f,c
  1878   001812  500F               	movf	(___wmul@multiplier+1)^0,w,c
  1879   001814  0210               	mulwf	___wmul@multiplicand^0,c
  1880   001816  50F3               	movf	243,w,c
  1881   001818  2613               	addwf	(___wmul@product+1)^0,f,c
  1882   00181A  C012  F00E         	movff	___wmul@product,?___wmul
  1883   00181E  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  1884   001822  0012               	return		;funcret
  1885   001824                     __end_of___wmul:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function ___lwmod *****************
  1889 ;; Defined at:
  1890 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  dividend        2   13[COMRAM] unsigned int 
  1893 ;;  divisor         2   15[COMRAM] unsigned int 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  counter         1   17[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2   13[COMRAM] unsigned int 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         4       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        5 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 5
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text2
  1920   001746                     __ptext2:
  1921                           	callstack 0
  1922   001746                     ___lwmod:
  1923                           	callstack 25
  1924                           
  1925                           ;incstack = 0
  1926   001746  5010               	movf	___lwmod@divisor^0,w,c
  1927   001748  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1928   00174A  B4D8               	btfsc	status,2,c
  1929   00174C  D018               	goto	l801
  1930   00174E  0E01               	movlw	1
  1931   001750  6E12               	movwf	___lwmod@counter^0,c
  1932   001752  D004               	goto	l2395
  1933   001754                     l2393:
  1934   001754  90D8               	bcf	status,0,c
  1935   001756  3610               	rlcf	___lwmod@divisor^0,f,c
  1936   001758  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1937   00175A  2A12               	incf	___lwmod@counter^0,f,c
  1938   00175C                     l2395:
  1939   00175C  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1940   00175E  D7FA               	goto	l2393
  1941   001760                     u1990:
  1942   001760  5010               	movf	___lwmod@divisor^0,w,c
  1943   001762  5C0E               	subwf	___lwmod@dividend^0,w,c
  1944   001764  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1945   001766  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1946   001768  A0D8               	btfss	status,0,c
  1947   00176A  D004               	goto	l2401
  1948   00176C  5010               	movf	___lwmod@divisor^0,w,c
  1949   00176E  5E0E               	subwf	___lwmod@dividend^0,f,c
  1950   001770  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1951   001772  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1952   001774                     l2401:
  1953   001774  90D8               	bcf	status,0,c
  1954   001776  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1955   001778  3210               	rrcf	___lwmod@divisor^0,f,c
  1956   00177A  2E12               	decfsz	___lwmod@counter^0,f,c
  1957   00177C  D7F1               	goto	u1990
  1958   00177E                     l801:
  1959   00177E  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1960   001782  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1961   001786  0012               	return		;funcret
  1962   001788                     __end_of___lwmod:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function ___lwdiv *****************
  1966 ;; Defined at:
  1967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dividend        2   19[COMRAM] unsigned int 
  1970 ;;  divisor         2   21[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  quotient        2   23[COMRAM] unsigned int 
  1973 ;;  counter         1   25[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  2   19[COMRAM] unsigned int 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         4       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        7 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 5
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text3
  1998   0015CC                     __ptext3:
  1999                           	callstack 0
  2000   0015CC                     ___lwdiv:
  2001                           	callstack 25
  2002                           
  2003                           ;incstack = 0
  2004   0015CC  0E00               	movlw	0
  2005   0015CE  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  2006   0015D0  0E00               	movlw	0
  2007   0015D2  6E18               	movwf	___lwdiv@quotient^0,c
  2008   0015D4  5016               	movf	___lwdiv@divisor^0,w,c
  2009   0015D6  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2010   0015D8  B4D8               	btfsc	status,2,c
  2011   0015DA  D01C               	goto	l791
  2012   0015DC  0E01               	movlw	1
  2013   0015DE  6E1A               	movwf	___lwdiv@counter^0,c
  2014   0015E0  D004               	goto	l2375
  2015   0015E2                     l2373:
  2016   0015E2  90D8               	bcf	status,0,c
  2017   0015E4  3616               	rlcf	___lwdiv@divisor^0,f,c
  2018   0015E6  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2019   0015E8  2A1A               	incf	___lwdiv@counter^0,f,c
  2020   0015EA                     l2375:
  2021   0015EA  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2022   0015EC  D7FA               	goto	l2373
  2023   0015EE                     u1960:
  2024   0015EE  90D8               	bcf	status,0,c
  2025   0015F0  3618               	rlcf	___lwdiv@quotient^0,f,c
  2026   0015F2  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2027   0015F4  5016               	movf	___lwdiv@divisor^0,w,c
  2028   0015F6  5C14               	subwf	___lwdiv@dividend^0,w,c
  2029   0015F8  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2030   0015FA  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2031   0015FC  A0D8               	btfss	status,0,c
  2032   0015FE  D005               	goto	l2385
  2033   001600  5016               	movf	___lwdiv@divisor^0,w,c
  2034   001602  5E14               	subwf	___lwdiv@dividend^0,f,c
  2035   001604  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2036   001606  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2037   001608  8018               	bsf	___lwdiv@quotient^0,0,c
  2038   00160A                     l2385:
  2039   00160A  90D8               	bcf	status,0,c
  2040   00160C  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2041   00160E  3216               	rrcf	___lwdiv@divisor^0,f,c
  2042   001610  2E1A               	decfsz	___lwdiv@counter^0,f,c
  2043   001612  D7ED               	goto	u1960
  2044   001614                     l791:
  2045   001614  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  2046   001618  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2047   00161C  0012               	return		;funcret
  2048   00161E                     __end_of___lwdiv:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function ___lmul *****************
  2052 ;; Defined at:
  2053 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  multiplier      4   13[COMRAM] unsigned long 
  2056 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  product         4   21[COMRAM] unsigned long 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  4   13[COMRAM] unsigned long 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2068 ;;      Params:         8       0       0       0       0       0       0       0       0
  2069 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2071 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:       12 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 5
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text4
  2083   0014CA                     __ptext4:
  2084                           	callstack 0
  2085   0014CA                     ___lmul:
  2086                           	callstack 25
  2087                           
  2088                           ;incstack = 0
  2089   0014CA  0E00               	movlw	0
  2090   0014CC  6E16               	movwf	___lmul@product^0,c
  2091   0014CE  0E00               	movlw	0
  2092   0014D0  6E17               	movwf	(___lmul@product+1)^0,c
  2093   0014D2  0E00               	movlw	0
  2094   0014D4  6E18               	movwf	(___lmul@product+2)^0,c
  2095   0014D6  0E00               	movlw	0
  2096   0014D8  6E19               	movwf	(___lmul@product+3)^0,c
  2097   0014DA                     l2321:
  2098   0014DA  A00E               	btfss	___lmul@multiplier^0,0,c
  2099   0014DC  D008               	goto	l2325
  2100   0014DE  5012               	movf	___lmul@multiplicand^0,w,c
  2101   0014E0  2616               	addwf	___lmul@product^0,f,c
  2102   0014E2  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2103   0014E4  2217               	addwfc	(___lmul@product+1)^0,f,c
  2104   0014E6  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2105   0014E8  2218               	addwfc	(___lmul@product+2)^0,f,c
  2106   0014EA  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2107   0014EC  2219               	addwfc	(___lmul@product+3)^0,f,c
  2108   0014EE                     l2325:
  2109   0014EE  90D8               	bcf	status,0,c
  2110   0014F0  3612               	rlcf	___lmul@multiplicand^0,f,c
  2111   0014F2  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2112   0014F4  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2113   0014F6  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2114   0014F8  90D8               	bcf	status,0,c
  2115   0014FA  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2116   0014FC  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2117   0014FE  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2118   001500  320E               	rrcf	___lmul@multiplier^0,f,c
  2119   001502  500E               	movf	___lmul@multiplier^0,w,c
  2120   001504  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2121   001506  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2122   001508  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2123   00150A  A4D8               	btfss	status,2,c
  2124   00150C  D7E6               	goto	l2321
  2125   00150E  C016  F00E         	movff	___lmul@product,?___lmul
  2126   001512  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2127   001516  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2128   00151A  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2129   00151E  0012               	return		;funcret
  2130   001520                     __end_of___lmul:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function ___llmod *****************
  2134 ;; Defined at:
  2135 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  dividend        4   13[COMRAM] unsigned long 
  2138 ;;  divisor         4   17[COMRAM] unsigned long 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  counter         1   21[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  4   13[COMRAM] unsigned long 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         8       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        9 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 5
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text5
  2165   001464                     __ptext5:
  2166                           	callstack 0
  2167   001464                     ___llmod:
  2168                           	callstack 25
  2169                           
  2170                           ;incstack = 0
  2171   001464  5012               	movf	___llmod@divisor^0,w,c
  2172   001466  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2173   001468  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2174   00146A  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2175   00146C  B4D8               	btfsc	status,2,c
  2176   00146E  D024               	goto	l720
  2177   001470  0E01               	movlw	1
  2178   001472  6E16               	movwf	___llmod@counter^0,c
  2179   001474  D006               	goto	l2357
  2180   001476                     l2355:
  2181   001476  90D8               	bcf	status,0,c
  2182   001478  3612               	rlcf	___llmod@divisor^0,f,c
  2183   00147A  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2184   00147C  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2185   00147E  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2186   001480  2A16               	incf	___llmod@counter^0,f,c
  2187   001482                     l2357:
  2188   001482  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2189   001484  D7F8               	goto	l2355
  2190   001486                     u1930:
  2191   001486  5012               	movf	___llmod@divisor^0,w,c
  2192   001488  5C0E               	subwf	___llmod@dividend^0,w,c
  2193   00148A  5013               	movf	(___llmod@divisor+1)^0,w,c
  2194   00148C  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2195   00148E  5014               	movf	(___llmod@divisor+2)^0,w,c
  2196   001490  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2197   001492  5015               	movf	(___llmod@divisor+3)^0,w,c
  2198   001494  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2199   001496  A0D8               	btfss	status,0,c
  2200   001498  D008               	goto	l2363
  2201   00149A  5012               	movf	___llmod@divisor^0,w,c
  2202   00149C  5E0E               	subwf	___llmod@dividend^0,f,c
  2203   00149E  5013               	movf	(___llmod@divisor+1)^0,w,c
  2204   0014A0  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2205   0014A2  5014               	movf	(___llmod@divisor+2)^0,w,c
  2206   0014A4  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2207   0014A6  5015               	movf	(___llmod@divisor+3)^0,w,c
  2208   0014A8  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2209   0014AA                     l2363:
  2210   0014AA  90D8               	bcf	status,0,c
  2211   0014AC  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2212   0014AE  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2213   0014B0  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2214   0014B2  3212               	rrcf	___llmod@divisor^0,f,c
  2215   0014B4  2E16               	decfsz	___llmod@counter^0,f,c
  2216   0014B6  D7E7               	goto	u1930
  2217   0014B8                     l720:
  2218   0014B8  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2219   0014BC  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2220   0014C0  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2221   0014C4  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2222   0014C8  0012               	return		;funcret
  2223   0014CA                     __end_of___llmod:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function ___lldiv *****************
  2227 ;; Defined at:
  2228 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  dividend        4   13[COMRAM] unsigned long 
  2231 ;;  divisor         4   17[COMRAM] unsigned long 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  quotient        4   21[COMRAM] unsigned long 
  2234 ;;  counter         1   25[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  4   13[COMRAM] unsigned long 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2244 ;;      Params:         8       0       0       0       0       0       0       0       0
  2245 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2247 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2248 ;;Total ram usage:       13 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 5
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text6
  2259   0012EA                     __ptext6:
  2260                           	callstack 0
  2261   0012EA                     ___lldiv:
  2262                           	callstack 25
  2263                           
  2264                           ;incstack = 0
  2265   0012EA  0E00               	movlw	0
  2266   0012EC  6E16               	movwf	___lldiv@quotient^0,c
  2267   0012EE  0E00               	movlw	0
  2268   0012F0  6E17               	movwf	(___lldiv@quotient+1)^0,c
  2269   0012F2  0E00               	movlw	0
  2270   0012F4  6E18               	movwf	(___lldiv@quotient+2)^0,c
  2271   0012F6  0E00               	movlw	0
  2272   0012F8  6E19               	movwf	(___lldiv@quotient+3)^0,c
  2273   0012FA  5012               	movf	___lldiv@divisor^0,w,c
  2274   0012FC  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  2275   0012FE  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  2276   001300  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  2277   001302  B4D8               	btfsc	status,2,c
  2278   001304  D02A               	goto	l339
  2279   001306  0E01               	movlw	1
  2280   001308  6E1A               	movwf	___lldiv@counter^0,c
  2281   00130A  D006               	goto	l2337
  2282   00130C                     l2335:
  2283   00130C  90D8               	bcf	status,0,c
  2284   00130E  3612               	rlcf	___lldiv@divisor^0,f,c
  2285   001310  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  2286   001312  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  2287   001314  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  2288   001316  2A1A               	incf	___lldiv@counter^0,f,c
  2289   001318                     l2337:
  2290   001318  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  2291   00131A  D7F8               	goto	l2335
  2292   00131C                     u1900:
  2293   00131C  90D8               	bcf	status,0,c
  2294   00131E  3616               	rlcf	___lldiv@quotient^0,f,c
  2295   001320  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  2296   001322  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  2297   001324  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  2298   001326  5012               	movf	___lldiv@divisor^0,w,c
  2299   001328  5C0E               	subwf	___lldiv@dividend^0,w,c
  2300   00132A  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2301   00132C  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  2302   00132E  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2303   001330  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  2304   001332  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2305   001334  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  2306   001336  A0D8               	btfss	status,0,c
  2307   001338  D009               	goto	l2347
  2308   00133A  5012               	movf	___lldiv@divisor^0,w,c
  2309   00133C  5E0E               	subwf	___lldiv@dividend^0,f,c
  2310   00133E  5013               	movf	(___lldiv@divisor+1)^0,w,c
  2311   001340  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  2312   001342  5014               	movf	(___lldiv@divisor+2)^0,w,c
  2313   001344  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  2314   001346  5015               	movf	(___lldiv@divisor+3)^0,w,c
  2315   001348  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  2316   00134A  8016               	bsf	___lldiv@quotient^0,0,c
  2317   00134C                     l2347:
  2318   00134C  90D8               	bcf	status,0,c
  2319   00134E  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  2320   001350  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  2321   001352  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  2322   001354  3212               	rrcf	___lldiv@divisor^0,f,c
  2323   001356  2E1A               	decfsz	___lldiv@counter^0,f,c
  2324   001358  D7E1               	goto	u1900
  2325   00135A                     l339:
  2326   00135A  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  2327   00135E  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  2328   001362  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  2329   001366  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  2330   00136A  0012               	return		;funcret
  2331   00136C                     __end_of___lldiv:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function _NuevoCaracter *****************
  2335 ;; Defined at:
  2336 ;;		line 138 in file "LibLCDXC8.h"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  addr            1    wreg     unsigned char 
  2339 ;;  c               1   18[COMRAM] PTR unsigned char 
  2340 ;;		 -> cara(8), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  addr            1   19[COMRAM] unsigned char 
  2343 ;;  i               2   20[COMRAM] int 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         1       0       0       0       0       0       0       0       0
  2354 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2356 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2357 ;;Total ram usage:        4 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 8
  2360 ;; This function calls:
  2361 ;;		_ComandoLCD
  2362 ;;		_EscribeLCD_c
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text7
  2369   001788                     __ptext7:
  2370                           	callstack 0
  2371   001788                     _NuevoCaracter:
  2372                           	callstack 22
  2373                           
  2374                           ;incstack = 0
  2375                           ;NuevoCaracter@addr stored from wreg
  2376   001788  6E14               	movwf	NuevoCaracter@addr^0,c
  2377                           
  2378                           ;LibLCDXC8.h: 139: int i;;LibLCDXC8.h: 140: ComandoLCD(0x40 + (addr * 8));
  2379   00178A  5014               	movf	NuevoCaracter@addr^0,w,c
  2380   00178C  0D08               	mullw	8
  2381   00178E  50F3               	movf	243,w,c
  2382   001790  0F40               	addlw	64
  2383   001792  EC12  F00C         	call	_ComandoLCD
  2384                           
  2385                           ;LibLCDXC8.h: 141: for (i = 0; i < 8; i++) {
  2386   001796  0E00               	movlw	0
  2387   001798  6E16               	movwf	(NuevoCaracter@i+1)^0,c
  2388   00179A  0E00               	movlw	0
  2389   00179C  6E15               	movwf	NuevoCaracter@i^0,c
  2390   00179E                     l2837:
  2391                           
  2392                           ;LibLCDXC8.h: 142: EscribeLCD_c(c[i]);
  2393   00179E  5013               	movf	NuevoCaracter@c^0,w,c
  2394   0017A0  2415               	addwf	NuevoCaracter@i^0,w,c
  2395   0017A2  6ED9               	movwf	fsr2l,c
  2396   0017A4  6ADA               	clrf	fsr2h,c
  2397   0017A6  50DF               	movf	indf2,w,c
  2398   0017A8  EC1F  F00C         	call	_EscribeLCD_c
  2399   0017AC  4A15               	infsnz	NuevoCaracter@i^0,f,c
  2400   0017AE  2A16               	incf	(NuevoCaracter@i+1)^0,f,c
  2401   0017B0  BE16               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2402   0017B2  D7F5               	goto	l2837
  2403   0017B4  5016               	movf	(NuevoCaracter@i+1)^0,w,c
  2404   0017B6  E105               	bnz	u2890
  2405   0017B8  0E08               	movlw	8
  2406   0017BA  5C15               	subwf	NuevoCaracter@i^0,w,c
  2407   0017BC  B0D8               	btfsc	status,0,c
  2408   0017BE  0012               	return	
  2409   0017C0  D7EE               	goto	l2837
  2410   0017C2                     u2890:
  2411   0017C2  0012               	return		;funcret
  2412   0017C4                     __end_of_NuevoCaracter:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _ComandoLCD *****************
  2416 ;; Defined at:
  2417 ;;		line 127 in file "LibLCDXC8.h"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  data            1    wreg     unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  data            1   13[COMRAM] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2435 ;;Total ram usage:        1 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 5
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_NuevoCaracter
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text8
  2446   001824                     __ptext8:
  2447                           	callstack 0
  2448   001824                     _ComandoLCD:
  2449                           	callstack 24
  2450                           
  2451                           ;incstack = 0
  2452                           ;ComandoLCD@data stored from wreg
  2453   001824  6E0E               	movwf	ComandoLCD@data^0,c
  2454                           
  2455                           ;LibLCDXC8.h: 129: LATE0 = 0;
  2456   001826  908D               	bcf	3981,0,c	;volatile
  2457                           
  2458                           ;LibLCDXC8.h: 130: LATD = data;
  2459   001828  C00E  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2460                           
  2461                           ;LibLCDXC8.h: 131: LATE1 = 1;
  2462   00182C  828D               	bsf	3981,1,c	;volatile
  2463                           
  2464                           ;LibLCDXC8.h: 132: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2465   00182E  F000               	nop	
  2466                           
  2467                           ;LibLCDXC8.h: 133: LATE1 = 0;
  2468   001830  928D               	bcf	3981,1,c	;volatile
  2469                           
  2470                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(1000000/4000000.0)));
  2471   001832  F000               	nop	
  2472                           
  2473                           ;LibLCDXC8.h: 135: _delay((unsigned long)((2)*(1000000/4000.0)));
  2474   001834  0EA6               	movlw	166
  2475   001836                     u3747:
  2476   001836  2EE8               	decfsz	wreg,f,c
  2477   001838  D7FE               	bra	u3747
  2478   00183A  D000               	nop2	
  2479   00183C  0012               	return		;funcret
  2480   00183E                     __end_of_ComandoLCD:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _MensajeLCD_Word *****************
  2484 ;; Defined at:
  2485 ;;		line 245 in file "LibLCDXC8.h"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  a               1   18[COMRAM] PTR unsigned char 
  2488 ;;		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(17), 
  2489 ;;		 -> STR_4(17), STR_3(11), STR_2(5), STR_1(8), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  i               2   20[COMRAM] int 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         1       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        4 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 8
  2508 ;; This function calls:
  2509 ;;		_EscribeLCD_c
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text9
  2516   00161E                     __ptext9:
  2517                           	callstack 0
  2518   00161E                     _MensajeLCD_Word:
  2519                           	callstack 22
  2520                           
  2521                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  2522                           
  2523                           ;incstack = 0
  2524   00161E  0E00               	movlw	0
  2525   001620  6E16               	movwf	(MensajeLCD_Word@i+1)^0,c
  2526   001622  0E00               	movlw	0
  2527   001624  6E15               	movwf	MensajeLCD_Word@i^0,c
  2528   001626                     l2123:
  2529                           
  2530                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  2531   001626  5013               	movf	MensajeLCD_Word@a^0,w,c
  2532   001628  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2533   00162A  6E14               	movwf	??_MensajeLCD_Word^0,c
  2534   00162C  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2535   001630                     	if	1	;There is more than 1 active tblptr byte
  2536   001630  0E08               	movlw	high __smallconst
  2537   001632  6EF7               	movwf	tblptrh,c
  2538   001634                     	endif
  2539   001634                     	if	0	;tblptru may be non-zero
  2540   001634                     	endif
  2541   001634                     	if	0	;tblptru may be non-zero
  2542   001634                     	endif
  2543   001634  0008               	tblrd		*
  2544   001636  50F5               	movf	tablat,w,c
  2545   001638  0900               	iorlw	0
  2546   00163A  B4D8               	btfsc	status,2,c
  2547   00163C  0012               	return	
  2548                           
  2549                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  2550   00163E  5013               	movf	MensajeLCD_Word@a^0,w,c
  2551   001640  2415               	addwf	MensajeLCD_Word@i^0,w,c
  2552   001642  6E14               	movwf	??_MensajeLCD_Word^0,c
  2553   001644  C014  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2554   001648                     	if	1	;There is more than 1 active tblptr byte
  2555   001648  0E08               	movlw	high __smallconst
  2556   00164A  6EF7               	movwf	tblptrh,c
  2557   00164C                     	endif
  2558   00164C                     	if	0	;tblptru may be non-zero
  2559   00164C                     	endif
  2560   00164C                     	if	0	;tblptru may be non-zero
  2561   00164C                     	endif
  2562   00164C  0008               	tblrd		*
  2563   00164E  50F5               	movf	tablat,w,c
  2564   001650  EC1F  F00C         	call	_EscribeLCD_c
  2565   001654  4A15               	infsnz	MensajeLCD_Word@i^0,f,c
  2566   001656  2A16               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2567   001658  BE16               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2568   00165A  D7E5               	goto	l2123
  2569   00165C  5016               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2570   00165E  E105               	bnz	u1550
  2571   001660  0E10               	movlw	16
  2572   001662  5C15               	subwf	MensajeLCD_Word@i^0,w,c
  2573   001664  B0D8               	btfsc	status,0,c
  2574   001666  0012               	return	
  2575   001668  D7DE               	goto	l2123
  2576   00166A                     u1550:
  2577   00166A  0012               	return		;funcret
  2578   00166C                     __end_of_MensajeLCD_Word:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _EscribeLCD_c *****************
  2582 ;; Defined at:
  2583 ;;		line 146 in file "LibLCDXC8.h"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  a               1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  a               1   17[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0
  2598 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2600 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2601 ;;Total ram usage:        1 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 7
  2604 ;; This function calls:
  2605 ;;		_EnviaDato
  2606 ;;		_HabilitaLCD
  2607 ;;		_RetardoLCD
  2608 ;; This function is called by:
  2609 ;;		_NuevoCaracter
  2610 ;;		_MensajeLCD_Word
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text10
  2616   00183E                     __ptext10:
  2617                           	callstack 0
  2618   00183E                     _EscribeLCD_c:
  2619                           	callstack 22
  2620                           
  2621                           ;incstack = 0
  2622                           ;EscribeLCD_c@a stored from wreg
  2623   00183E  6E12               	movwf	EscribeLCD_c@a^0,c
  2624                           
  2625                           ;LibLCDXC8.h: 150: LATE0=1;
  2626   001840  808D               	bsf	3981,0,c	;volatile
  2627                           
  2628                           ;LibLCDXC8.h: 151: EnviaDato(a);
  2629   001842  5012               	movf	EscribeLCD_c@a^0,w,c
  2630   001844  EC5D  F00B         	call	_EnviaDato
  2631                           
  2632                           ;LibLCDXC8.h: 152: HabilitaLCD();
  2633   001848  EC54  F00C         	call	_HabilitaLCD	;wreg free
  2634                           
  2635                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  2636   00184C  0E04               	movlw	4
  2637   00184E  EC90  F00A         	call	_RetardoLCD
  2638   001852  0012               	return		;funcret
  2639   001854                     __end_of_EscribeLCD_c:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _LeerTeclado *****************
  2643 ;; Defined at:
  2644 ;;		line 238 in file "Laboratorio4.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      unsigned char 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2660 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2661 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2662 ;;Total ram usage:        1 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 5
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text11
  2673   001134                     __ptext11:
  2674                           	callstack 0
  2675   001134                     _LeerTeclado:
  2676                           	callstack 25
  2677                           
  2678                           ;Laboratorio4.c: 239: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2679                           
  2680                           ;incstack = 0
  2681   001134  B881               	btfsc	3969,4,c	;volatile
  2682   001136  AA81               	btfss	3969,5,c	;volatile
  2683   001138  D004               	goto	u1590
  2684   00113A  AC81               	btfss	3969,6,c	;volatile
  2685   00113C  D002               	goto	u1590
  2686   00113E  BE81               	btfsc	3969,7,c	;volatile
  2687   001140  D7F9               	goto	__ptext11
  2688   001142                     u1590:
  2689                           
  2690                           ;Laboratorio4.c: 240: verificador = 1;
  2691   001142  0E00               	movlw	0
  2692   001144  6E2E               	movwf	(_verificador+1)^0,c
  2693   001146  0E01               	movlw	1
  2694   001148  6E2D               	movwf	_verificador^0,c
  2695                           
  2696                           ;Laboratorio4.c: 241: LATB=0b11111110;
  2697   00114A  0EFE               	movlw	254
  2698   00114C  6E8A               	movwf	138,c	;volatile
  2699                           
  2700                           ;Laboratorio4.c: 242: if(RB4==0) return '1';
  2701   00114E  B881               	btfsc	3969,4,c	;volatile
  2702   001150  D002               	goto	l246
  2703   001152  0E31               	movlw	49
  2704   001154  0012               	return	
  2705   001156                     l246:
  2706                           
  2707                           ;Laboratorio4.c: 243: else if(RB5==0) return '2';
  2708   001156  BA81               	btfsc	3969,5,c	;volatile
  2709   001158  D002               	goto	l249
  2710   00115A  0E32               	movlw	50
  2711   00115C  0012               	return	
  2712   00115E                     l249:
  2713                           
  2714                           ;Laboratorio4.c: 244: else if(RB6==0) return '3';
  2715   00115E  BC81               	btfsc	3969,6,c	;volatile
  2716   001160  D002               	goto	l2171
  2717   001162  0E33               	movlw	51
  2718   001164  0012               	return	
  2719   001166                     l2171:
  2720                           
  2721                           ;Laboratorio4.c: 245: else if(RB7==0 & RC6==0) return '+';
  2722   001166  BC82               	btfsc	3970,6,c	;volatile
  2723   001168  D002               	goto	u1630
  2724   00116A  0E01               	movlw	1
  2725   00116C  D001               	goto	u1632
  2726   00116E                     u1630:
  2727   00116E  0E00               	movlw	0
  2728   001170                     u1632:
  2729   001170  6E0E               	movwf	??_LeerTeclado^0,c
  2730   001172  BE81               	btfsc	3969,7,c	;volatile
  2731   001174  D002               	goto	u1640
  2732   001176  0E01               	movlw	1
  2733   001178  D001               	goto	u1642
  2734   00117A                     u1640:
  2735   00117A  0E00               	movlw	0
  2736   00117C                     u1642:
  2737   00117C  140E               	andwf	??_LeerTeclado^0,w,c
  2738   00117E  A0E8               	btfss	wreg,0,c
  2739   001180  D002               	goto	l2179
  2740   001182  0E2B               	movlw	43
  2741   001184  0012               	return	
  2742   001186                     l2179:
  2743                           
  2744                           ;Laboratorio4.c: 246: else if(RB7==0 & RC6==1) return '!';
  2745   001186  AC82               	btfss	3970,6,c	;volatile
  2746   001188  D002               	goto	u1660
  2747   00118A  0E01               	movlw	1
  2748   00118C  D001               	goto	u1662
  2749   00118E                     u1660:
  2750   00118E  0E00               	movlw	0
  2751   001190                     u1662:
  2752   001190  6E0E               	movwf	??_LeerTeclado^0,c
  2753   001192  BE81               	btfsc	3969,7,c	;volatile
  2754   001194  D002               	goto	u1670
  2755   001196  0E01               	movlw	1
  2756   001198  D001               	goto	u1672
  2757   00119A                     u1670:
  2758   00119A  0E00               	movlw	0
  2759   00119C                     u1672:
  2760   00119C  140E               	andwf	??_LeerTeclado^0,w,c
  2761   00119E  A0E8               	btfss	wreg,0,c
  2762   0011A0  D002               	goto	l2187
  2763   0011A2  0E21               	movlw	33
  2764   0011A4  0012               	return	
  2765   0011A6                     l2187:
  2766                           
  2767                           ;Laboratorio4.c: 247: else{;Laboratorio4.c: 248: LATB=0b11111101;
  2768   0011A6  0EFD               	movlw	253
  2769   0011A8  6E8A               	movwf	138,c	;volatile
  2770                           
  2771                           ;Laboratorio4.c: 249: if(RB4==0) return '4';
  2772   0011AA  B881               	btfsc	3969,4,c	;volatile
  2773   0011AC  D002               	goto	l257
  2774   0011AE  0E34               	movlw	52
  2775   0011B0  0012               	return	
  2776   0011B2                     l257:
  2777                           
  2778                           ;Laboratorio4.c: 250: else if(RB5==0) return '5';
  2779   0011B2  BA81               	btfsc	3969,5,c	;volatile
  2780   0011B4  D002               	goto	l259
  2781   0011B6  0E35               	movlw	53
  2782   0011B8  0012               	return	
  2783   0011BA                     l259:
  2784                           
  2785                           ;Laboratorio4.c: 251: else if(RB6==0) return '6';
  2786   0011BA  BC81               	btfsc	3969,6,c	;volatile
  2787   0011BC  D002               	goto	l2209
  2788   0011BE  0E36               	movlw	54
  2789   0011C0  0012               	return	
  2790   0011C2                     l2209:
  2791                           
  2792                           ;Laboratorio4.c: 252: else if(RB7==0 & RC6==0) return '-';
  2793   0011C2  BC82               	btfsc	3970,6,c	;volatile
  2794   0011C4  D002               	goto	u1720
  2795   0011C6  0E01               	movlw	1
  2796   0011C8  D001               	goto	u1722
  2797   0011CA                     u1720:
  2798   0011CA  0E00               	movlw	0
  2799   0011CC                     u1722:
  2800   0011CC  6E0E               	movwf	??_LeerTeclado^0,c
  2801   0011CE  BE81               	btfsc	3969,7,c	;volatile
  2802   0011D0  D002               	goto	u1730
  2803   0011D2  0E01               	movlw	1
  2804   0011D4  D001               	goto	u1732
  2805   0011D6                     u1730:
  2806   0011D6  0E00               	movlw	0
  2807   0011D8                     u1732:
  2808   0011D8  140E               	andwf	??_LeerTeclado^0,w,c
  2809   0011DA  A0E8               	btfss	wreg,0,c
  2810   0011DC  D002               	goto	l2217
  2811   0011DE  0E2D               	movlw	45
  2812   0011E0  0012               	return	
  2813   0011E2                     l2217:
  2814                           
  2815                           ;Laboratorio4.c: 253: else if(RB7==0 & RC6==1) return '^';
  2816   0011E2  AC82               	btfss	3970,6,c	;volatile
  2817   0011E4  D002               	goto	u1750
  2818   0011E6  0E01               	movlw	1
  2819   0011E8  D001               	goto	u1752
  2820   0011EA                     u1750:
  2821   0011EA  0E00               	movlw	0
  2822   0011EC                     u1752:
  2823   0011EC  6E0E               	movwf	??_LeerTeclado^0,c
  2824   0011EE  BE81               	btfsc	3969,7,c	;volatile
  2825   0011F0  D002               	goto	u1760
  2826   0011F2  0E01               	movlw	1
  2827   0011F4  D001               	goto	u1762
  2828   0011F6                     u1760:
  2829   0011F6  0E00               	movlw	0
  2830   0011F8                     u1762:
  2831   0011F8  140E               	andwf	??_LeerTeclado^0,w,c
  2832   0011FA  A0E8               	btfss	wreg,0,c
  2833   0011FC  D002               	goto	l2225
  2834   0011FE  0E5E               	movlw	94
  2835   001200  0012               	return	
  2836   001202                     l2225:
  2837                           
  2838                           ;Laboratorio4.c: 254: else{;Laboratorio4.c: 255: LATB=0b11111011;
  2839   001202  0EFB               	movlw	251
  2840   001204  6E8A               	movwf	138,c	;volatile
  2841                           
  2842                           ;Laboratorio4.c: 256: if(RB4==0) return '7';
  2843   001206  B881               	btfsc	3969,4,c	;volatile
  2844   001208  D002               	goto	l267
  2845   00120A  0E37               	movlw	55
  2846   00120C  0012               	return	
  2847   00120E                     l267:
  2848                           
  2849                           ;Laboratorio4.c: 257: else if(RB5==0) return '8';
  2850   00120E  BA81               	btfsc	3969,5,c	;volatile
  2851   001210  D002               	goto	l269
  2852   001212  0E38               	movlw	56
  2853   001214  0012               	return	
  2854   001216                     l269:
  2855                           
  2856                           ;Laboratorio4.c: 258: else if(RB6==0) return '9';
  2857   001216  BC81               	btfsc	3969,6,c	;volatile
  2858   001218  D002               	goto	l271
  2859   00121A  0E39               	movlw	57
  2860   00121C  0012               	return	
  2861   00121E                     l271:
  2862                           
  2863                           ;Laboratorio4.c: 259: else if(RB7==0) return '/';
  2864   00121E  BE81               	btfsc	3969,7,c	;volatile
  2865   001220  D002               	goto	l2253
  2866   001222  0E2F               	movlw	47
  2867   001224  0012               	return	
  2868   001226                     l2253:
  2869                           
  2870                           ;Laboratorio4.c: 260: else{;Laboratorio4.c: 261: LATB=0b11110111;
  2871   001226  0EF7               	movlw	247
  2872   001228  6E8A               	movwf	138,c	;volatile
  2873                           
  2874                           ;Laboratorio4.c: 262: if(RB4==0) return 'C';
  2875   00122A  B881               	btfsc	3969,4,c	;volatile
  2876   00122C  D002               	goto	l275
  2877   00122E  0E43               	movlw	67
  2878   001230  0012               	return	
  2879   001232                     l275:
  2880                           
  2881                           ;Laboratorio4.c: 263: else if(RB5==0) return '0';
  2882   001232  BA81               	btfsc	3969,5,c	;volatile
  2883   001234  D002               	goto	l277
  2884   001236  0E30               	movlw	48
  2885   001238  0012               	return	
  2886   00123A                     l277:
  2887                           
  2888                           ;Laboratorio4.c: 264: else if(RB6==0) return '=';
  2889   00123A  BC81               	btfsc	3969,6,c	;volatile
  2890   00123C  D002               	goto	l279
  2891   00123E  0E3D               	movlw	61
  2892   001240  0012               	return	
  2893   001242                     l279:
  2894                           
  2895                           ;Laboratorio4.c: 265: else if(RB7==0) return 'x';
  2896   001242  BE81               	btfsc	3969,7,c	;volatile
  2897   001244  D002               	goto	l276
  2898   001246  0E78               	movlw	120
  2899   001248  0012               	return	
  2900   00124A                     l276:
  2901                           
  2902                           ;Laboratorio4.c: 266: };Laboratorio4.c: 267: };Laboratorio4.c: 268: };Laboratorio4.c: 26
      +                          9: return ' ';
  2903   00124A  0E20               	movlw	32
  2904   00124C  0012               	return		;funcret
  2905   00124E                     __end_of_LeerTeclado:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _InicializaLCD *****************
  2909 ;; Defined at:
  2910 ;;		line 72 in file "LibLCDXC8.h"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 8
  2931 ;; This function calls:
  2932 ;;		_BorraLCD
  2933 ;;		_EnviaDato
  2934 ;;		_HabilitaLCD
  2935 ;;		_RetardoLCD
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text12
  2942   00124E                     __ptext12:
  2943                           	callstack 0
  2944   00124E                     _InicializaLCD:
  2945                           	callstack 22
  2946                           
  2947                           ;LibLCDXC8.h: 74: LATE0=0;
  2948                           
  2949                           ;incstack = 0
  2950   00124E  908D               	bcf	3981,0,c	;volatile
  2951                           
  2952                           ;LibLCDXC8.h: 75: if(interfaz==4)
  2953   001250  0E04               	movlw	4
  2954   001252  1842               	xorwf	_interfaz^0,w,c
  2955   001254  A4D8               	btfss	status,2,c
  2956   001256  D004               	goto	l2055
  2957                           
  2958                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2959   001258  508C               	movf	140,w,c	;volatile
  2960   00125A  0B0F               	andlw	15
  2961   00125C  0930               	iorlw	48
  2962   00125E  D001               	goto	L6
  2963   001260                     l2055:
  2964                           
  2965                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  2966   001260  0E3F               	movlw	63
  2967   001262                     L6:
  2968   001262  6E8C               	movwf	140,c	;volatile
  2969                           
  2970                           ;LibLCDXC8.h: 79: HabilitaLCD();
  2971   001264  EC54  F00C         	call	_HabilitaLCD	;wreg free
  2972                           
  2973                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  2974   001268  0E01               	movlw	1
  2975   00126A  EC90  F00A         	call	_RetardoLCD
  2976                           
  2977                           ;LibLCDXC8.h: 81: if(interfaz==4)
  2978   00126E  0E04               	movlw	4
  2979   001270  1842               	xorwf	_interfaz^0,w,c
  2980   001272  A4D8               	btfss	status,2,c
  2981   001274  D004               	goto	l2065
  2982                           
  2983                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2984   001276  508C               	movf	140,w,c	;volatile
  2985   001278  0B0F               	andlw	15
  2986   00127A  0930               	iorlw	48
  2987   00127C  D001               	goto	L7
  2988   00127E                     l2065:
  2989                           
  2990                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  2991   00127E  0E3F               	movlw	63
  2992   001280                     L7:
  2993   001280  6E8C               	movwf	140,c	;volatile
  2994                           
  2995                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2996   001282  EC54  F00C         	call	_HabilitaLCD	;wreg free
  2997                           
  2998                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  2999   001286  0E03               	movlw	3
  3000   001288  EC90  F00A         	call	_RetardoLCD
  3001                           
  3002                           ;LibLCDXC8.h: 87: if(interfaz==4)
  3003   00128C  0E04               	movlw	4
  3004   00128E  1842               	xorwf	_interfaz^0,w,c
  3005   001290  A4D8               	btfss	status,2,c
  3006   001292  D004               	goto	l2075
  3007                           
  3008                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  3009   001294  508C               	movf	140,w,c	;volatile
  3010   001296  0B0F               	andlw	15
  3011   001298  0930               	iorlw	48
  3012   00129A  D001               	goto	L8
  3013   00129C                     l2075:
  3014                           
  3015                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  3016   00129C  0E3F               	movlw	63
  3017   00129E                     L8:
  3018   00129E  6E8C               	movwf	140,c	;volatile
  3019                           
  3020                           ;LibLCDXC8.h: 91: HabilitaLCD();
  3021   0012A0  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3022                           
  3023                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  3024   0012A4  0E04               	movlw	4
  3025   0012A6  EC90  F00A         	call	_RetardoLCD
  3026                           
  3027                           ;LibLCDXC8.h: 93: if(interfaz==4){
  3028   0012AA  0E04               	movlw	4
  3029   0012AC  1842               	xorwf	_interfaz^0,w,c
  3030   0012AE  A4D8               	btfss	status,2,c
  3031   0012B0  D011               	goto	l2095
  3032                           
  3033                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  3034   0012B2  508C               	movf	140,w,c	;volatile
  3035   0012B4  0B0F               	andlw	15
  3036   0012B6  0920               	iorlw	32
  3037   0012B8  6E8C               	movwf	140,c	;volatile
  3038                           
  3039                           ;LibLCDXC8.h: 95: HabilitaLCD();
  3040   0012BA  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3041                           
  3042                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  3043   0012BE  0E04               	movlw	4
  3044   0012C0  EC90  F00A         	call	_RetardoLCD
  3045                           
  3046                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  3047   0012C4  0E2F               	movlw	47
  3048   0012C6  EC5D  F00B         	call	_EnviaDato
  3049                           
  3050                           ;LibLCDXC8.h: 98: HabilitaLCD();
  3051   0012CA  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3052                           
  3053                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  3054   0012CE  0E04               	movlw	4
  3055   0012D0  EC90  F00A         	call	_RetardoLCD
  3056   0012D4                     l2095:
  3057                           
  3058                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  3059   0012D4  EC40  F00C         	call	_BorraLCD	;wreg free
  3060                           
  3061                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  3062   0012D8  0E0F               	movlw	15
  3063   0012DA  EC5D  F00B         	call	_EnviaDato
  3064                           
  3065                           ;LibLCDXC8.h: 103: HabilitaLCD();
  3066   0012DE  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3067                           
  3068                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  3069   0012E2  0E04               	movlw	4
  3070   0012E4  EC90  F00A         	call	_RetardoLCD
  3071   0012E8  0012               	return		;funcret
  3072   0012EA                     __end_of_InicializaLCD:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _BorraLCD *****************
  3076 ;; Defined at:
  3077 ;;		line 113 in file "LibLCDXC8.h"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 7
  3098 ;; This function calls:
  3099 ;;		_EnviaDato
  3100 ;;		_HabilitaLCD
  3101 ;;		_RetardoLCD
  3102 ;; This function is called by:
  3103 ;;		_InicializaLCD
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text13
  3109   001880                     __ptext13:
  3110                           	callstack 0
  3111   001880                     _BorraLCD:
  3112                           	callstack 22
  3113                           
  3114                           ;LibLCDXC8.h: 115: LATE0=0;
  3115                           
  3116                           ;incstack = 0
  3117   001880  908D               	bcf	3981,0,c	;volatile
  3118                           
  3119                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3120   001882  0E01               	movlw	1
  3121   001884  EC5D  F00B         	call	_EnviaDato
  3122                           
  3123                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3124   001888  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3125                           
  3126                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3127   00188C  0E02               	movlw	2
  3128   00188E  EC90  F00A         	call	_RetardoLCD
  3129   001892  0012               	return		;funcret
  3130   001894                     __end_of_BorraLCD:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _DireccionaLCD *****************
  3134 ;; Defined at:
  3135 ;;		line 257 in file "LibLCDXC8.h"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  a               1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  a               1   17[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3152 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        1 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 7
  3156 ;; This function calls:
  3157 ;;		_EnviaDato
  3158 ;;		_HabilitaLCD
  3159 ;;		_RetardoLCD
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text14
  3166   001854                     __ptext14:
  3167                           	callstack 0
  3168   001854                     _DireccionaLCD:
  3169                           	callstack 23
  3170                           
  3171                           ;incstack = 0
  3172                           ;DireccionaLCD@a stored from wreg
  3173   001854  6E12               	movwf	DireccionaLCD@a^0,c
  3174                           
  3175                           ;LibLCDXC8.h: 260: LATE0=0;
  3176   001856  908D               	bcf	3981,0,c	;volatile
  3177                           
  3178                           ;LibLCDXC8.h: 261: EnviaDato(a);
  3179   001858  5012               	movf	DireccionaLCD@a^0,w,c
  3180   00185A  EC5D  F00B         	call	_EnviaDato
  3181                           
  3182                           ;LibLCDXC8.h: 262: HabilitaLCD();
  3183   00185E  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3184                           
  3185                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  3186   001862  0E04               	movlw	4
  3187   001864  EC90  F00A         	call	_RetardoLCD
  3188   001868  0012               	return		;funcret
  3189   00186A                     __end_of_DireccionaLCD:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function _EnviaDato *****************
  3193 ;; Defined at:
  3194 ;;		line 60 in file "LibLCDXC8.h"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  a               1    wreg     unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  a               1   16[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3211 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        2 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 6
  3215 ;; This function calls:
  3216 ;;		_HabilitaLCD
  3217 ;;		_RetardoLCD
  3218 ;; This function is called by:
  3219 ;;		_InicializaLCD
  3220 ;;		_BorraLCD
  3221 ;;		_EscribeLCD_c
  3222 ;;		_DireccionaLCD
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text15
  3227   0016BA                     __ptext15:
  3228                           	callstack 0
  3229   0016BA                     _EnviaDato:
  3230                           	callstack 22
  3231                           
  3232                           ;incstack = 0
  3233                           ;EnviaDato@a stored from wreg
  3234   0016BA  6E11               	movwf	EnviaDato@a^0,c
  3235                           
  3236                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3237   0016BC  0E04               	movlw	4
  3238   0016BE  1842               	xorwf	_interfaz^0,w,c
  3239   0016C0  A4D8               	btfss	status,2,c
  3240   0016C2  D017               	goto	l1993
  3241                           
  3242                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3243   0016C4  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3244   0016C8  0EF0               	movlw	240
  3245   0016CA  1610               	andwf	??_EnviaDato^0,f,c
  3246   0016CC  508C               	movf	140,w,c	;volatile
  3247   0016CE  0B0F               	andlw	15
  3248   0016D0  1010               	iorwf	??_EnviaDato^0,w,c
  3249   0016D2  6E8C               	movwf	140,c	;volatile
  3250                           
  3251                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3252   0016D4  EC54  F00C         	call	_HabilitaLCD	;wreg free
  3253                           
  3254                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3255   0016D8  0E01               	movlw	1
  3256   0016DA  EC90  F00A         	call	_RetardoLCD
  3257                           
  3258                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3259   0016DE  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3260   0016E2  3A10               	swapf	??_EnviaDato^0,f,c
  3261   0016E4  0EF0               	movlw	240
  3262   0016E6  1610               	andwf	??_EnviaDato^0,f,c
  3263   0016E8  508C               	movf	140,w,c	;volatile
  3264   0016EA  0B0F               	andlw	15
  3265   0016EC  1010               	iorwf	??_EnviaDato^0,w,c
  3266   0016EE  6E8C               	movwf	140,c	;volatile
  3267                           
  3268                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  3269   0016F0  0012               	return	
  3270   0016F2                     l1993:
  3271   0016F2  0E08               	movlw	8
  3272   0016F4  1842               	xorwf	_interfaz^0,w,c
  3273   0016F6  A4D8               	btfss	status,2,c
  3274   0016F8  0012               	return	
  3275                           
  3276                           ;LibLCDXC8.h: 69: LATD=a;
  3277   0016FA  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3278   0016FE  0012               	return		;funcret
  3279   001700                     __end_of_EnviaDato:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function _RetardoLCD *****************
  3283 ;; Defined at:
  3284 ;;		line 293 in file "LibLCDXC8.h"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  a               1    wreg     unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  a               1   14[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0
  3299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3300 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3301 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3302 ;;Total ram usage:        2 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 5
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_EnviaDato
  3309 ;;		_InicializaLCD
  3310 ;;		_BorraLCD
  3311 ;;		_EscribeLCD_c
  3312 ;;		_DireccionaLCD
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text16
  3317   001520                     __ptext16:
  3318                           	callstack 0
  3319   001520                     _RetardoLCD:
  3320                           	callstack 23
  3321                           
  3322                           ;incstack = 0
  3323                           ;RetardoLCD@a stored from wreg
  3324   001520  6E0F               	movwf	RetardoLCD@a^0,c
  3325                           
  3326                           ;LibLCDXC8.h: 294: switch(a){
  3327   001522  D01B               	goto	l1961
  3328   001524                     l1951:
  3329   001524  0E05               	movlw	5
  3330   001526  6E0E               	movwf	??_RetardoLCD^0,c
  3331   001528  0EDE               	movlw	222
  3332   00152A                     u3757:
  3333   00152A  2EE8               	decfsz	wreg,f,c
  3334   00152C  D7FE               	bra	u3757
  3335   00152E  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3336   001530  D7FC               	bra	u3757
  3337                           
  3338                           ;LibLCDXC8.h: 297: break;
  3339   001532  0012               	return	
  3340   001534                     l1953:
  3341   001534  0E53               	movlw	83
  3342   001536                     u3767:
  3343   001536  2EE8               	decfsz	wreg,f,c
  3344   001538  D7FE               	bra	u3767
  3345   00153A  F000               	nop	
  3346                           
  3347                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3348   00153C  0E35               	movlw	53
  3349   00153E                     u3777:
  3350   00153E  2EE8               	decfsz	wreg,f,c
  3351   001540  D7FE               	bra	u3777
  3352   001542  F000               	nop	
  3353                           
  3354                           ;LibLCDXC8.h: 301: break;
  3355   001544  0012               	return	
  3356   001546                     l1955:
  3357   001546  0E08               	movlw	8
  3358   001548                     u3787:
  3359   001548  2EE8               	decfsz	wreg,f,c
  3360   00154A  D7FE               	bra	u3787
  3361   00154C  F000               	nop	
  3362                           
  3363                           ;LibLCDXC8.h: 304: break;
  3364   00154E  0012               	return	
  3365   001550                     l1957:
  3366   001550  0E03               	movlw	3
  3367   001552                     u3797:
  3368   001552  2EE8               	decfsz	wreg,f,c
  3369   001554  D7FE               	bra	u3797
  3370   001556  F000               	nop	
  3371                           
  3372                           ;LibLCDXC8.h: 307: break;
  3373   001558  0012               	return	
  3374   00155A                     l1961:
  3375   00155A  500F               	movf	RetardoLCD@a^0,w,c
  3376                           
  3377                           ; Switch size 1, requested type "simple"
  3378                           ; Number of cases is 4, Range of values is 1 to 4
  3379                           ; switch strategies available:
  3380                           ; Name         Instructions Cycles
  3381                           ; simple_byte           13     7 (average)
  3382                           ;	Chosen strategy is simple_byte
  3383   00155C  0A01               	xorlw	1	; case 1
  3384   00155E  B4D8               	btfsc	status,2,c
  3385   001560  D7E1               	goto	l1951
  3386   001562  0A03               	xorlw	3	; case 2
  3387   001564  B4D8               	btfsc	status,2,c
  3388   001566  D7E6               	goto	l1953
  3389   001568  0A01               	xorlw	1	; case 3
  3390   00156A  B4D8               	btfsc	status,2,c
  3391   00156C  D7EC               	goto	l1955
  3392   00156E  0A07               	xorlw	7	; case 4
  3393   001570  A4D8               	btfss	status,2,c
  3394   001572  0012               	return	
  3395   001574  D7ED               	goto	l1957
  3396   001576                     __end_of_RetardoLCD:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _HabilitaLCD *****************
  3400 ;; Defined at:
  3401 ;;		line 106 in file "LibLCDXC8.h"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 5
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_EnviaDato
  3426 ;;		_InicializaLCD
  3427 ;;		_BorraLCD
  3428 ;;		_EscribeLCD_c
  3429 ;;		_DireccionaLCD
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text17
  3434   0018A8                     __ptext17:
  3435                           	callstack 0
  3436   0018A8                     _HabilitaLCD:
  3437                           	callstack 23
  3438                           
  3439                           ;LibLCDXC8.h: 108: LATE1=1;
  3440                           
  3441                           ;incstack = 0
  3442   0018A8  828D               	bsf	3981,1,c	;volatile
  3443                           
  3444                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3445   0018AA  0E03               	movlw	3
  3446   0018AC                     u3807:
  3447   0018AC  2EE8               	decfsz	wreg,f,c
  3448   0018AE  D7FE               	bra	u3807
  3449   0018B0  F000               	nop	
  3450                           
  3451                           ;LibLCDXC8.h: 111: LATE1=0;
  3452   0018B2  928D               	bcf	3981,1,c	;volatile
  3453   0018B4  0012               	return		;funcret
  3454   0018B6                     __end_of_HabilitaLCD:
  3455                           	callstack 0
  3456                           
  3457 ;; *************** function _ColorRGB *****************
  3458 ;; Defined at:
  3459 ;;		line 272 in file "Laboratorio4.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3475 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3476 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3477 ;;Total ram usage:        2 bytes
  3478 ;; Hardware stack levels used: 1
  3479 ;; Hardware stack levels required when called: 5
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text18
  3488   0013EA                     __ptext18:
  3489                           	callstack 0
  3490   0013EA                     _ColorRGB:
  3491                           	callstack 25
  3492                           
  3493                           ;Laboratorio4.c: 273: if(color==8) color = 0;
  3494                           
  3495                           ;incstack = 0
  3496   0013EA  0E08               	movlw	8
  3497   0013EC  1831               	xorwf	_color^0,w,c
  3498   0013EE  1032               	iorwf	(_color+1)^0,w,c
  3499   0013F0  A4D8               	btfss	status,2,c
  3500   0013F2  D014               	goto	l2305
  3501   0013F4  0E00               	movlw	0
  3502   0013F6  6E32               	movwf	(_color+1)^0,c
  3503   0013F8  0E00               	movlw	0
  3504   0013FA  6E31               	movwf	_color^0,c
  3505   0013FC  D00F               	goto	l2305
  3506   0013FE                     l2287:
  3507                           
  3508                           ;Laboratorio4.c: 276: LATC = 0b00000000;
  3509   0013FE  0E00               	movlw	0
  3510   001400  D00B               	goto	L14
  3511   001402                     l2289:
  3512                           
  3513                           ;Laboratorio4.c: 279: LATC = 0b00000101;
  3514   001402  0E05               	movlw	5
  3515   001404  D009               	goto	L14
  3516   001406                     l2291:
  3517                           
  3518                           ;Laboratorio4.c: 282: LATC = 0b00000110;
  3519   001406  0E06               	movlw	6
  3520   001408  D007               	goto	L14
  3521   00140A                     l2293:
  3522                           
  3523                           ;Laboratorio4.c: 285: LATC = 0b00000011;
  3524   00140A  0E03               	movlw	3
  3525   00140C  D005               	goto	L14
  3526   00140E                     l2295:
  3527                           
  3528                           ;Laboratorio4.c: 288: LATC = 0b00000010;
  3529   00140E  0E02               	movlw	2
  3530   001410  D003               	goto	L14
  3531   001412                     l2299:
  3532                           
  3533                           ;Laboratorio4.c: 294: LATC = 0b00000100;
  3534   001412  0E04               	movlw	4
  3535   001414  D001               	goto	L14
  3536   001416                     l2301:
  3537                           
  3538                           ;Laboratorio4.c: 297: LATC = 0b00000111;
  3539   001416  0E07               	movlw	7
  3540   001418                     L14:
  3541   001418  6E8B               	movwf	139,c	;volatile
  3542                           
  3543                           ;Laboratorio4.c: 298: break;
  3544   00141A  D021               	goto	l2307
  3545   00141C                     l2305:
  3546   00141C  C031  F00E         	movff	_color,??_ColorRGB
  3547   001420  C032  F00F         	movff	_color+1,??_ColorRGB+1
  3548                           
  3549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3550                           ; Switch size 1, requested type "simple"
  3551                           ; Number of cases is 1, Range of values is 0 to 0
  3552                           ; switch strategies available:
  3553                           ; Name         Instructions Cycles
  3554                           ; simple_byte            4     3 (average)
  3555                           ;	Chosen strategy is simple_byte
  3556   001424  500F               	movf	(??_ColorRGB+1)^0,w,c
  3557   001426  0A00               	xorlw	0	; case 0
  3558   001428  A4D8               	btfss	status,2,c
  3559   00142A  D019               	goto	l2307
  3560                           
  3561                           ; Switch size 1, requested type "simple"
  3562                           ; Number of cases is 8, Range of values is 0 to 7
  3563                           ; switch strategies available:
  3564                           ; Name         Instructions Cycles
  3565                           ; simple_byte           25    13 (average)
  3566                           ;	Chosen strategy is simple_byte
  3567   00142C  500E               	movf	??_ColorRGB^0,w,c
  3568   00142E  0A00               	xorlw	0	; case 0
  3569   001430  B4D8               	btfsc	status,2,c
  3570   001432  D7E5               	goto	l2287
  3571   001434  0A01               	xorlw	1	; case 1
  3572   001436  B4D8               	btfsc	status,2,c
  3573   001438  D7E4               	goto	l2289
  3574   00143A  0A03               	xorlw	3	; case 2
  3575   00143C  B4D8               	btfsc	status,2,c
  3576   00143E  D7E3               	goto	l2291
  3577   001440  0A01               	xorlw	1	; case 3
  3578   001442  B4D8               	btfsc	status,2,c
  3579   001444  D7E2               	goto	l2293
  3580   001446  0A07               	xorlw	7	; case 4
  3581   001448  B4D8               	btfsc	status,2,c
  3582   00144A  D7E1               	goto	l2295
  3583   00144C  0A01               	xorlw	1	; case 5
  3584   00144E  B4D8               	btfsc	status,2,c
  3585   001450  D7DA               	goto	l2291
  3586   001452  0A03               	xorlw	3	; case 6
  3587   001454  B4D8               	btfsc	status,2,c
  3588   001456  D7DD               	goto	l2299
  3589   001458  0A01               	xorlw	1	; case 7
  3590   00145A  B4D8               	btfsc	status,2,c
  3591   00145C  D7DC               	goto	l2301
  3592   00145E                     l2307:
  3593                           
  3594                           ;Laboratorio4.c: 302: color += 1;
  3595   00145E  4A31               	infsnz	_color^0,f,c
  3596   001460  2A32               	incf	(_color+1)^0,f,c
  3597   001462  0012               	return		;funcret
  3598   001464                     __end_of_ColorRGB:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _ISR *****************
  3602 ;; Defined at:
  3603 ;;		line 305 in file "Laboratorio4.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3619 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3620 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3621 ;;Total ram usage:        4 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 4
  3624 ;; This function calls:
  3625 ;;		i2_BorraLCD
  3626 ;;		i2_MensajeLCD_Word
  3627 ;; This function is called by:
  3628 ;;		Interrupt level 2
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	intcode
  3633   000008                     __pintcode:
  3634                           	callstack 0
  3635   000008                     _ISR:
  3636                           	callstack 22
  3637                           
  3638                           ;incstack = 0
  3639   000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3640   00000A  EDB6  F009         	call	int_func,f	;refresh shadow registers
  3641                           
  3642                           	psect	intcode_body
  3643   00136C                     __pintcode_body:
  3644                           	callstack 22
  3645   00136C                     int_func:
  3646                           	callstack 22
  3647   00136C  0006               	pop		; remove dummy address from shadow register refresh
  3648   00136E  CFF6 F00A          	movff	tblptrl,??_ISR
  3649   001372  CFF7 F00B          	movff	tblptrh,??_ISR+1
  3650   001376  CFF8 F00C          	movff	tblptru,??_ISR+2
  3651   00137A  CFF5 F00D          	movff	tablat,??_ISR+3
  3652                           
  3653                           ;Laboratorio4.c: 306: if(TMR0IF==1){
  3654   00137E  A4F2               	btfss	4082,2,c	;volatile
  3655   001380  D019               	goto	i2l2817
  3656                           
  3657                           ;Laboratorio4.c: 307: if(!verificador) contador = contador +1;
  3658   001382  502D               	movf	_verificador^0,w,c
  3659   001384  102E               	iorwf	(_verificador+1)^0,w,c
  3660   001386  A4D8               	btfss	status,2,c
  3661   001388  D007               	goto	i2l2811
  3662   00138A  0E01               	movlw	1
  3663   00138C  242F               	addwf	_contador^0,w,c
  3664   00138E  6E2F               	movwf	_contador^0,c
  3665   001390  0E00               	movlw	0
  3666   001392  2030               	addwfc	(_contador+1)^0,w,c
  3667   001394  6E30               	movwf	(_contador+1)^0,c
  3668   001396  D004               	goto	i2l2813
  3669   001398                     i2l2811:
  3670                           
  3671                           ;Laboratorio4.c: 308: else contador = 0;
  3672   001398  0E00               	movlw	0
  3673   00139A  6E30               	movwf	(_contador+1)^0,c
  3674   00139C  0E00               	movlw	0
  3675   00139E  6E2F               	movwf	_contador^0,c
  3676   0013A0                     i2l2813:
  3677                           
  3678                           ;Laboratorio4.c: 309: TMR0IF=0;
  3679   0013A0  94F2               	bcf	4082,2,c	;volatile
  3680                           
  3681                           ;Laboratorio4.c: 310: LATE2 = !LATE2;
  3682   0013A2  B48D               	btfsc	3981,2,c	;volatile
  3683   0013A4  D002               	goto	i2u285_40
  3684   0013A6  848D               	bsf	3981,2,c	;volatile
  3685   0013A8  D001               	goto	i2u286_45
  3686   0013AA                     i2u285_40:
  3687   0013AA  948D               	bcf	3981,2,c	;volatile
  3688   0013AC                     i2u286_45:
  3689                           
  3690                           ;Laboratorio4.c: 311: TMR0 = 49911;
  3691   0013AC  0EC2               	movlw	194
  3692   0013AE  6ED7               	movwf	215,c	;volatile
  3693   0013B0  0EF7               	movlw	247
  3694   0013B2  6ED6               	movwf	214,c	;volatile
  3695   0013B4                     i2l2817:
  3696                           
  3697                           ;Laboratorio4.c: 314: };Laboratorio4.c: 316: if(contador == 20){
  3698   0013B4  0E14               	movlw	20
  3699   0013B6  182F               	xorwf	_contador^0,w,c
  3700   0013B8  1030               	iorwf	(_contador+1)^0,w,c
  3701   0013BA  A4D8               	btfss	status,2,c
  3702   0013BC  D00C               	goto	i2l309
  3703                           
  3704                           ;Laboratorio4.c: 317: if(!verificador){
  3705   0013BE  502D               	movf	_verificador^0,w,c
  3706   0013C0  102E               	iorwf	(_verificador+1)^0,w,c
  3707   0013C2  A4D8               	btfss	status,2,c
  3708   0013C4  D008               	goto	i2l309
  3709                           
  3710                           ;Laboratorio4.c: 318: BorraLCD();
  3711   0013C6  EC4A  F00C         	call	i2_BorraLCD	;wreg free
  3712                           
  3713                           ;Laboratorio4.c: 319: MensajeLCD_Word("En Reposo");
  3714   0013CA  0E1D               	movlw	low STR_8
  3715   0013CC  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3716   0013CE  EC36  F00B         	call	i2_MensajeLCD_Word	;wreg free
  3717   0013D2  0003               	sleep		;# 
  3718   0013D4                     i2l306:
  3719   0013D4  D7FF               	goto	i2l306
  3720   0013D6                     i2l309:
  3721   0013D6  C00D  FFF5         	movff	??_ISR+3,tablat
  3722   0013DA  C00C  FFF8         	movff	??_ISR+2,tblptru
  3723   0013DE  C00B  FFF7         	movff	??_ISR+1,tblptrh
  3724   0013E2  C00A  FFF6         	movff	??_ISR,tblptrl
  3725   0013E6  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3726   0013E8  0011               	retfie		f
  3727   0013EA                     __end_of_ISR:
  3728                           	callstack 0
  3729                           
  3730 ;; *************** function i2_MensajeLCD_Word *****************
  3731 ;; Defined at:
  3732 ;;		line 245 in file "LibLCDXC8.h"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  a               1    5[COMRAM] PTR unsigned char 
  3735 ;;		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(17), 
  3736 ;;		 -> STR_4(17), STR_3(11), STR_2(5), STR_1(8), 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  i               2    7[COMRAM] int 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3748 ;;      Params:         1       0       0       0       0       0       0       0       0
  3749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3750 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3751 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3752 ;;Total ram usage:        4 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 3
  3755 ;; This function calls:
  3756 ;;		i2_EscribeLCD_c
  3757 ;; This function is called by:
  3758 ;;		_ISR
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text20
  3763   00166C                     __ptext20:
  3764                           	callstack 0
  3765   00166C                     i2_MensajeLCD_Word:
  3766                           	callstack 22
  3767                           
  3768                           ;LibLCDXC8.h: 249: for(int i = 0; i<16; i++){
  3769                           
  3770                           ;incstack = 0
  3771   00166C  0E00               	movlw	0
  3772   00166E  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  3773   001670  0E00               	movlw	0
  3774   001672  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  3775   001674                     i2l2419:
  3776                           
  3777                           ;LibLCDXC8.h: 250: if(a[i] == (0)){
  3778   001674  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3779   001676  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3780   001678  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3781   00167A  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3782   00167E                     	if	1	;There is more than 1 active tblptr byte
  3783   00167E  0E08               	movlw	high __smallconst
  3784   001680  6EF7               	movwf	tblptrh,c
  3785   001682                     	endif
  3786   001682                     	if	0	;tblptru may be non-zero
  3787   001682                     	endif
  3788   001682                     	if	0	;tblptru may be non-zero
  3789   001682                     	endif
  3790   001682  0008               	tblrd		*
  3791   001684  50F5               	movf	tablat,w,c
  3792   001686  0900               	iorlw	0
  3793   001688  B4D8               	btfsc	status,2,c
  3794   00168A  0012               	return	
  3795                           
  3796                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 253: EscribeLCD_c(a[i]);
  3797   00168C  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  3798   00168E  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  3799   001690  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  3800   001692  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  3801   001696                     	if	1	;There is more than 1 active tblptr byte
  3802   001696  0E08               	movlw	high __smallconst
  3803   001698  6EF7               	movwf	tblptrh,c
  3804   00169A                     	endif
  3805   00169A                     	if	0	;tblptru may be non-zero
  3806   00169A                     	endif
  3807   00169A                     	if	0	;tblptru may be non-zero
  3808   00169A                     	endif
  3809   00169A  0008               	tblrd		*
  3810   00169C  50F5               	movf	tablat,w,c
  3811   00169E  EC35  F00C         	call	i2_EscribeLCD_c
  3812   0016A2  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  3813   0016A4  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  3814   0016A6  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  3815   0016A8  D7E5               	goto	i2l2419
  3816   0016AA  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  3817   0016AC  E105               	bnz	i2u202_40
  3818   0016AE  0E10               	movlw	16
  3819   0016B0  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  3820   0016B2  B0D8               	btfsc	status,0,c
  3821   0016B4  0012               	return	
  3822   0016B6  D7DE               	goto	i2l2419
  3823   0016B8                     i2u202_40:
  3824   0016B8  0012               	return		;funcret
  3825   0016BA                     __end_ofi2_MensajeLCD_Word:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function i2_EscribeLCD_c *****************
  3829 ;; Defined at:
  3830 ;;		line 146 in file "LibLCDXC8.h"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  a               1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  a               1    4[COMRAM] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        1 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 2
  3851 ;; This function calls:
  3852 ;;		i2_EnviaDato
  3853 ;;		i2_HabilitaLCD
  3854 ;;		i2_RetardoLCD
  3855 ;; This function is called by:
  3856 ;;		i2_MensajeLCD_Word
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text21
  3861   00186A                     __ptext21:
  3862                           	callstack 0
  3863   00186A                     i2_EscribeLCD_c:
  3864                           	callstack 22
  3865                           
  3866                           ;incstack = 0
  3867                           ;i2EscribeLCD_c@a stored from wreg
  3868   00186A  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3869                           
  3870                           ;LibLCDXC8.h: 150: LATE0=1;
  3871   00186C  808D               	bsf	3981,0,c	;volatile
  3872                           
  3873                           ;LibLCDXC8.h: 151: EnviaDato(a);
  3874   00186E  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3875   001870  EC80  F00B         	call	i2_EnviaDato
  3876                           
  3877                           ;LibLCDXC8.h: 152: HabilitaLCD();
  3878   001874  EC5B  F00C         	call	i2_HabilitaLCD	;wreg free
  3879                           
  3880                           ;LibLCDXC8.h: 153: RetardoLCD(4);
  3881   001878  0E04               	movlw	4
  3882   00187A  ECBB  F00A         	call	i2_RetardoLCD
  3883   00187E  0012               	return		;funcret
  3884   001880                     __end_ofi2_EscribeLCD_c:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function i2_BorraLCD *****************
  3888 ;; Defined at:
  3889 ;;		line 113 in file "LibLCDXC8.h"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 2
  3910 ;; This function calls:
  3911 ;;		i2_EnviaDato
  3912 ;;		i2_HabilitaLCD
  3913 ;;		i2_RetardoLCD
  3914 ;; This function is called by:
  3915 ;;		_ISR
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text22
  3920   001894                     __ptext22:
  3921                           	callstack 0
  3922   001894                     i2_BorraLCD:
  3923                           	callstack 23
  3924                           
  3925                           ;LibLCDXC8.h: 115: LATE0=0;
  3926                           
  3927                           ;incstack = 0
  3928   001894  908D               	bcf	3981,0,c	;volatile
  3929                           
  3930                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  3931   001896  0E01               	movlw	1
  3932   001898  EC80  F00B         	call	i2_EnviaDato
  3933                           
  3934                           ;LibLCDXC8.h: 117: HabilitaLCD();
  3935   00189C  EC5B  F00C         	call	i2_HabilitaLCD	;wreg free
  3936                           
  3937                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  3938   0018A0  0E02               	movlw	2
  3939   0018A2  ECBB  F00A         	call	i2_RetardoLCD
  3940   0018A6  0012               	return		;funcret
  3941   0018A8                     __end_ofi2_BorraLCD:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function i2_EnviaDato *****************
  3945 ;; Defined at:
  3946 ;;		line 60 in file "LibLCDXC8.h"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  a               1    wreg     unsigned char 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  a               1    3[COMRAM] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0
  3961 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3963 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3964 ;;Total ram usage:        2 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 1
  3967 ;; This function calls:
  3968 ;;		i2_HabilitaLCD
  3969 ;;		i2_RetardoLCD
  3970 ;; This function is called by:
  3971 ;;		i2_BorraLCD
  3972 ;;		i2_EscribeLCD_c
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text23
  3977   001700                     __ptext23:
  3978                           	callstack 0
  3979   001700                     i2_EnviaDato:
  3980                           	callstack 22
  3981                           
  3982                           ;incstack = 0
  3983                           ;i2EnviaDato@a stored from wreg
  3984   001700  6E04               	movwf	i2EnviaDato@a^0,c
  3985                           
  3986                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3987   001702  0E04               	movlw	4
  3988   001704  1842               	xorwf	_interfaz^0,w,c
  3989   001706  A4D8               	btfss	status,2,c
  3990   001708  D017               	goto	i2l2007
  3991                           
  3992                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3993   00170A  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3994   00170E  0EF0               	movlw	240
  3995   001710  1603               	andwf	??i2_EnviaDato^0,f,c
  3996   001712  508C               	movf	140,w,c	;volatile
  3997   001714  0B0F               	andlw	15
  3998   001716  1003               	iorwf	??i2_EnviaDato^0,w,c
  3999   001718  6E8C               	movwf	140,c	;volatile
  4000                           
  4001                           ;LibLCDXC8.h: 63: HabilitaLCD();
  4002   00171A  EC5B  F00C         	call	i2_HabilitaLCD	;wreg free
  4003                           
  4004                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  4005   00171E  0E01               	movlw	1
  4006   001720  ECBB  F00A         	call	i2_RetardoLCD
  4007                           
  4008                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  4009   001724  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4010   001728  3A03               	swapf	??i2_EnviaDato^0,f,c
  4011   00172A  0EF0               	movlw	240
  4012   00172C  1603               	andwf	??i2_EnviaDato^0,f,c
  4013   00172E  508C               	movf	140,w,c	;volatile
  4014   001730  0B0F               	andlw	15
  4015   001732  1003               	iorwf	??i2_EnviaDato^0,w,c
  4016   001734  6E8C               	movwf	140,c	;volatile
  4017                           
  4018                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  4019   001736  0012               	return	
  4020   001738                     i2l2007:
  4021   001738  0E08               	movlw	8
  4022   00173A  1842               	xorwf	_interfaz^0,w,c
  4023   00173C  A4D8               	btfss	status,2,c
  4024   00173E  0012               	return	
  4025                           
  4026                           ;LibLCDXC8.h: 69: LATD=a;
  4027   001740  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4028   001744  0012               	return		;funcret
  4029   001746                     __end_ofi2_EnviaDato:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function i2_RetardoLCD *****************
  4033 ;; Defined at:
  4034 ;;		line 293 in file "LibLCDXC8.h"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  a               1    wreg     unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  a               1    1[COMRAM] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0
  4049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4051 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4052 ;;Total ram usage:        2 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		i2_EnviaDato
  4058 ;;		i2_BorraLCD
  4059 ;;		i2_EscribeLCD_c
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text24
  4064   001576                     __ptext24:
  4065                           	callstack 0
  4066   001576                     i2_RetardoLCD:
  4067                           	callstack 23
  4068                           
  4069                           ;incstack = 0
  4070                           ;i2RetardoLCD@a stored from wreg
  4071   001576  6E02               	movwf	i2RetardoLCD@a^0,c
  4072                           
  4073                           ;LibLCDXC8.h: 294: switch(a){
  4074   001578  D01B               	goto	i2l1981
  4075   00157A                     i2l1971:
  4076   00157A  0E05               	movlw	5
  4077   00157C  6E01               	movwf	??i2_RetardoLCD^0,c
  4078   00157E  0EDE               	movlw	222
  4079   001580                     i2u381_47:
  4080   001580  2EE8               	decfsz	wreg,f,c
  4081   001582  D7FE               	bra	i2u381_47
  4082   001584  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4083   001586  D7FC               	bra	i2u381_47
  4084                           
  4085                           ;LibLCDXC8.h: 297: break;
  4086   001588  0012               	return	
  4087   00158A                     i2l1973:
  4088   00158A  0E53               	movlw	83
  4089   00158C                     i2u382_47:
  4090   00158C  2EE8               	decfsz	wreg,f,c
  4091   00158E  D7FE               	bra	i2u382_47
  4092   001590  F000               	nop	
  4093                           
  4094                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4095   001592  0E35               	movlw	53
  4096   001594                     i2u383_47:
  4097   001594  2EE8               	decfsz	wreg,f,c
  4098   001596  D7FE               	bra	i2u383_47
  4099   001598  F000               	nop	
  4100                           
  4101                           ;LibLCDXC8.h: 301: break;
  4102   00159A  0012               	return	
  4103   00159C                     i2l1975:
  4104   00159C  0E08               	movlw	8
  4105   00159E                     i2u384_47:
  4106   00159E  2EE8               	decfsz	wreg,f,c
  4107   0015A0  D7FE               	bra	i2u384_47
  4108   0015A2  F000               	nop	
  4109                           
  4110                           ;LibLCDXC8.h: 304: break;
  4111   0015A4  0012               	return	
  4112   0015A6                     i2l1977:
  4113   0015A6  0E03               	movlw	3
  4114   0015A8                     i2u385_47:
  4115   0015A8  2EE8               	decfsz	wreg,f,c
  4116   0015AA  D7FE               	bra	i2u385_47
  4117   0015AC  F000               	nop	
  4118                           
  4119                           ;LibLCDXC8.h: 307: break;
  4120   0015AE  0012               	return	
  4121   0015B0                     i2l1981:
  4122   0015B0  5002               	movf	i2RetardoLCD@a^0,w,c
  4123                           
  4124                           ; Switch size 1, requested type "simple"
  4125                           ; Number of cases is 4, Range of values is 1 to 4
  4126                           ; switch strategies available:
  4127                           ; Name         Instructions Cycles
  4128                           ; simple_byte           13     7 (average)
  4129                           ;	Chosen strategy is simple_byte
  4130   0015B2  0A01               	xorlw	1	; case 1
  4131   0015B4  B4D8               	btfsc	status,2,c
  4132   0015B6  D7E1               	goto	i2l1971
  4133   0015B8  0A03               	xorlw	3	; case 2
  4134   0015BA  B4D8               	btfsc	status,2,c
  4135   0015BC  D7E6               	goto	i2l1973
  4136   0015BE  0A01               	xorlw	1	; case 3
  4137   0015C0  B4D8               	btfsc	status,2,c
  4138   0015C2  D7EC               	goto	i2l1975
  4139   0015C4  0A07               	xorlw	7	; case 4
  4140   0015C6  A4D8               	btfss	status,2,c
  4141   0015C8  0012               	return	
  4142   0015CA  D7ED               	goto	i2l1977
  4143   0015CC                     __end_ofi2_RetardoLCD:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function i2_HabilitaLCD *****************
  4147 ;; Defined at:
  4148 ;;		line 106 in file "LibLCDXC8.h"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		i2_EnviaDato
  4172 ;;		i2_BorraLCD
  4173 ;;		i2_EscribeLCD_c
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text25
  4178   0018B6                     __ptext25:
  4179                           	callstack 0
  4180   0018B6                     i2_HabilitaLCD:
  4181                           	callstack 23
  4182                           
  4183                           ;LibLCDXC8.h: 108: LATE1=1;
  4184                           
  4185                           ;incstack = 0
  4186   0018B6  828D               	bsf	3981,1,c	;volatile
  4187                           
  4188                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4189   0018B8  0E03               	movlw	3
  4190   0018BA                     i2u386_47:
  4191   0018BA  2EE8               	decfsz	wreg,f,c
  4192   0018BC  D7FE               	bra	i2u386_47
  4193   0018BE  F000               	nop	
  4194                           
  4195                           ;LibLCDXC8.h: 111: LATE1=0;
  4196   0018C0  928D               	bcf	3981,1,c	;volatile
  4197   0018C2  0012               	return		;funcret
  4198   0018C4                     __end_ofi2_HabilitaLCD:
  4199                           	callstack 0
  4200                           
  4201                           	psect	rparam
  4202   000000                     
  4203                           	psect	temp
  4204   00004B                     btemp:
  4205                           	callstack 0
  4206   00004B                     	ds	1
  4207   000000                     int$flags	set	btemp
  4208   000000                     wtemp8	set	btemp+1
  4209   000000                     ttemp5	set	btemp+1
  4210   000000                     ttemp6	set	btemp+4
  4211   000000                     ttemp7	set	btemp+8
  4212                           
  4213                           	psect	idloc
  4214                           
  4215                           ;Config register IDLOC0 @ 0x200000
  4216                           ;	unspecified, using default values
  4217   200000                     	org	2097152
  4218   200000  FF                 	db	255
  4219                           
  4220                           ;Config register IDLOC1 @ 0x200001
  4221                           ;	unspecified, using default values
  4222   200001                     	org	2097153
  4223   200001  FF                 	db	255
  4224                           
  4225                           ;Config register IDLOC2 @ 0x200002
  4226                           ;	unspecified, using default values
  4227   200002                     	org	2097154
  4228   200002  FF                 	db	255
  4229                           
  4230                           ;Config register IDLOC3 @ 0x200003
  4231                           ;	unspecified, using default values
  4232   200003                     	org	2097155
  4233   200003  FF                 	db	255
  4234                           
  4235                           ;Config register IDLOC4 @ 0x200004
  4236                           ;	unspecified, using default values
  4237   200004                     	org	2097156
  4238   200004  FF                 	db	255
  4239                           
  4240                           ;Config register IDLOC5 @ 0x200005
  4241                           ;	unspecified, using default values
  4242   200005                     	org	2097157
  4243   200005  FF                 	db	255
  4244                           
  4245                           ;Config register IDLOC6 @ 0x200006
  4246                           ;	unspecified, using default values
  4247   200006                     	org	2097158
  4248   200006  FF                 	db	255
  4249                           
  4250                           ;Config register IDLOC7 @ 0x200007
  4251                           ;	unspecified, using default values
  4252   200007                     	org	2097159
  4253   200007  FF                 	db	255
  4254                           
  4255                           	psect	config
  4256                           
  4257                           ;Config register CONFIG1L @ 0x300000
  4258                           ;	unspecified, using default values
  4259                           ;	PLL Prescaler Selection bits
  4260                           ;	PLLDIV = 0x0, unprogrammed default
  4261                           ;	System Clock Postscaler Selection bits
  4262                           ;	CPUDIV = 0x0, unprogrammed default
  4263                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4264                           ;	USBDIV = 0x0, unprogrammed default
  4265   300000                     	org	3145728
  4266   300000  00                 	db	0
  4267                           
  4268                           ;Config register CONFIG1H @ 0x300001
  4269                           ;	Oscillator Selection bits
  4270                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4271                           ;	Fail-Safe Clock Monitor Enable bit
  4272                           ;	FCMEN = 0x0, unprogrammed default
  4273                           ;	Internal/External Oscillator Switchover bit
  4274                           ;	IESO = 0x0, unprogrammed default
  4275   300001                     	org	3145729
  4276   300001  09                 	db	9
  4277                           
  4278                           ;Config register CONFIG2L @ 0x300002
  4279                           ;	unspecified, using default values
  4280                           ;	Power-up Timer Enable bit
  4281                           ;	PWRT = 0x1, unprogrammed default
  4282                           ;	Brown-out Reset Enable bits
  4283                           ;	BOR = 0x3, unprogrammed default
  4284                           ;	Brown-out Reset Voltage bits
  4285                           ;	BORV = 0x3, unprogrammed default
  4286                           ;	USB Voltage Regulator Enable bit
  4287                           ;	VREGEN = 0x0, unprogrammed default
  4288   300002                     	org	3145730
  4289   300002  1F                 	db	31
  4290                           
  4291                           ;Config register CONFIG2H @ 0x300003
  4292                           ;	Watchdog Timer Enable bit
  4293                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4294                           ;	Watchdog Timer Postscale Select bits
  4295                           ;	WDTPS = 0xF, unprogrammed default
  4296   300003                     	org	3145731
  4297   300003  1E                 	db	30
  4298                           
  4299                           ; Padding undefined space
  4300   300004                     	org	3145732
  4301   300004  FF                 	db	255
  4302                           
  4303                           ;Config register CONFIG3H @ 0x300005
  4304                           ;	CCP2 MUX bit
  4305                           ;	CCP2MX = 0x1, unprogrammed default
  4306                           ;	PORTB A/D Enable bit
  4307                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4308                           ;	Low-Power Timer 1 Oscillator Enable bit
  4309                           ;	LPT1OSC = 0x0, unprogrammed default
  4310                           ;	MCLR Pin Enable bit
  4311                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4312   300005                     	org	3145733
  4313   300005  81                 	db	129
  4314                           
  4315                           ;Config register CONFIG4L @ 0x300006
  4316                           ;	Stack Full/Underflow Reset Enable bit
  4317                           ;	STVREN = 0x1, unprogrammed default
  4318                           ;	Single-Supply ICSP Enable bit
  4319                           ;	LVP = OFF, Single-Supply ICSP disabled
  4320                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4321                           ;	ICPRT = 0x0, unprogrammed default
  4322                           ;	Extended Instruction Set Enable bit
  4323                           ;	XINST = 0x0, unprogrammed default
  4324                           ;	Background Debugger Enable bit
  4325                           ;	DEBUG = 0x1, unprogrammed default
  4326   300006                     	org	3145734
  4327   300006  81                 	db	129
  4328                           
  4329                           ; Padding undefined space
  4330   300007                     	org	3145735
  4331   300007  FF                 	db	255
  4332                           
  4333                           ;Config register CONFIG5L @ 0x300008
  4334                           ;	unspecified, using default values
  4335                           ;	Code Protection bit
  4336                           ;	CP0 = 0x1, unprogrammed default
  4337                           ;	Code Protection bit
  4338                           ;	CP1 = 0x1, unprogrammed default
  4339                           ;	Code Protection bit
  4340                           ;	CP2 = 0x1, unprogrammed default
  4341                           ;	Code Protection bit
  4342                           ;	CP3 = 0x1, unprogrammed default
  4343   300008                     	org	3145736
  4344   300008  0F                 	db	15
  4345                           
  4346                           ;Config register CONFIG5H @ 0x300009
  4347                           ;	unspecified, using default values
  4348                           ;	Boot Block Code Protection bit
  4349                           ;	CPB = 0x1, unprogrammed default
  4350                           ;	Data EEPROM Code Protection bit
  4351                           ;	CPD = 0x1, unprogrammed default
  4352   300009                     	org	3145737
  4353   300009  C0                 	db	192
  4354                           
  4355                           ;Config register CONFIG6L @ 0x30000A
  4356                           ;	unspecified, using default values
  4357                           ;	Write Protection bit
  4358                           ;	WRT0 = 0x1, unprogrammed default
  4359                           ;	Write Protection bit
  4360                           ;	WRT1 = 0x1, unprogrammed default
  4361                           ;	Write Protection bit
  4362                           ;	WRT2 = 0x1, unprogrammed default
  4363                           ;	Write Protection bit
  4364                           ;	WRT3 = 0x1, unprogrammed default
  4365   30000A                     	org	3145738
  4366   30000A  0F                 	db	15
  4367                           
  4368                           ;Config register CONFIG6H @ 0x30000B
  4369                           ;	unspecified, using default values
  4370                           ;	Configuration Register Write Protection bit
  4371                           ;	WRTC = 0x1, unprogrammed default
  4372                           ;	Boot Block Write Protection bit
  4373                           ;	WRTB = 0x1, unprogrammed default
  4374                           ;	Data EEPROM Write Protection bit
  4375                           ;	WRTD = 0x1, unprogrammed default
  4376   30000B                     	org	3145739
  4377   30000B  E0                 	db	224
  4378                           
  4379                           ;Config register CONFIG7L @ 0x30000C
  4380                           ;	unspecified, using default values
  4381                           ;	Table Read Protection bit
  4382                           ;	EBTR0 = 0x1, unprogrammed default
  4383                           ;	Table Read Protection bit
  4384                           ;	EBTR1 = 0x1, unprogrammed default
  4385                           ;	Table Read Protection bit
  4386                           ;	EBTR2 = 0x1, unprogrammed default
  4387                           ;	Table Read Protection bit
  4388                           ;	EBTR3 = 0x1, unprogrammed default
  4389   30000C                     	org	3145740
  4390   30000C  0F                 	db	15
  4391                           
  4392                           ;Config register CONFIG7H @ 0x30000D
  4393                           ;	unspecified, using default values
  4394                           ;	Boot Block Table Read Protection bit
  4395                           ;	EBTRB = 0x1, unprogrammed default
  4396   30000D                     	org	3145741
  4397   30000D  40                 	db	64
  4398                           tosu	equ	0xFFF
  4399                           tosh	equ	0xFFE
  4400                           tosl	equ	0xFFD
  4401                           stkptr	equ	0xFFC
  4402                           pclatu	equ	0xFFB
  4403                           pclath	equ	0xFFA
  4404                           pcl	equ	0xFF9
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           prodh	equ	0xFF4
  4410                           prodl	equ	0xFF3
  4411                           indf0	equ	0xFEF
  4412                           postinc0	equ	0xFEE
  4413                           postdec0	equ	0xFED
  4414                           preinc0	equ	0xFEC
  4415                           plusw0	equ	0xFEB
  4416                           fsr0h	equ	0xFEA
  4417                           fsr0l	equ	0xFE9
  4418                           wreg	equ	0xFE8
  4419                           indf1	equ	0xFE7
  4420                           postinc1	equ	0xFE6
  4421                           postdec1	equ	0xFE5
  4422                           preinc1	equ	0xFE4
  4423                           plusw1	equ	0xFE3
  4424                           fsr1h	equ	0xFE2
  4425                           fsr1l	equ	0xFE1
  4426                           bsr	equ	0xFE0
  4427                           indf2	equ	0xFDF
  4428                           postinc2	equ	0xFDE
  4429                           postdec2	equ	0xFDD
  4430                           preinc2	equ	0xFDC
  4431                           plusw2	equ	0xFDB
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    0
    Data        12
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[10]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[11]), STR_2(CODE[5]), STR_1(CODE[8]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _main->___lwdiv
    ___lwdiv->___wmul
    _NuevoCaracter->_EscribeLCD_c
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    6476
                                             26 COMRAM    10    10      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                      _NuevoCaracter
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1890
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             18 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           1     1      0      22
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     848
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      88
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      22
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     402
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   ___lldiv
   ___llmod
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         7      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      29        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 19 14:22:43 2023

                        _i 0033                          _m 003B                          _r 0025  
                       _PD 007E82                         _RI 007E84                         _TO 007E83  
                       _n1 0037                         _n2 0035                 EnviaDato@a 0011  
                       _op 0041        ___wmul@multiplicand 0010              ??_LeerTeclado 000E  
                      l210 0DA0              _InicializaLCD 124E                        l246 1156  
                      l271 121E                        l183 0B64                        l257 11B2  
                      l249 115E                        l275 1232                        l267 120E  
                      l259 11BA                        l339 135A                        l276 124A  
                      l277 123A                        l269 1216                        l279 1242  
                      l720 14B8                        l801 177E                        l791 1614  
                      _GIE 007F97                        _RB4 007C0C                        _RB5 007C0D  
                      _RB6 007C0E                        _RB7 007C0F                        _RC6 007C16  
                      _ISR 0008                        _n1c 0040                        _n2c 003F  
                      wreg 000FE8                       ?_ISR 0001           ??i2_EscribeLCD_c 0005  
                     l2123 1626                       l2301 1416                       l2055 1260  
                     l3103 0D46                       l3111 0D62                       l2305 141C  
                     l2065 127E                       l2225 1202                       l2217 11E2  
                     l2209 11C2                       l2321 14DA                       l2401 1774  
                     l3113 0D8A                       l3041 0B5E                       l2307 145E  
                     l2075 129C                       l2171 1166                       l3123 0E38  
                     l3107 0D50                       l3051 0BC6                       l3043 0B6C  
                     l2253 1226                       l2325 14EE                       l3213 1110  
                     l3117 0D9A                       l3045 0B84                       l3029 0B2E  
                     l2095 12D4                       l2335 130C                       l3207 1102  
                     l3135 0EAE                       l3127 0E4C                       l3143 0EDC  
                     l3063 0C4A                       l3055 0BE4                       l3047 0BBA  
                     l3215 111A                       l2337 1318                       l3209 1108  
                     l3161 0F5A                       l3081 0C90                       l3217 1120  
                     l2291 1406                       l2187 11A6                       l2179 1186  
                     l2347 134C                       l2363 14AA                       l2355 1476  
                     l3091 0CEE                       l3083 0C9E                       l2293 140A  
                     l2357 1482                       l2373 15E2                       l3181 0FD2  
                     l3173 0FB2                       l3165 0F76                       l3157 0F3E  
                     l3077 0C76                       l3069 0C5E                       l2295 140E  
                     l2287 13FE                       l2375 15EA                       l3191 101C  
                     l3087 0CE0                       l2289 1402                       l2385 160A  
                     l2393 1754                       l3185 0FE0                       l2299 1412  
                     l2395 175C                       l3099 0D10                       l1951 1524  
                     l3199 10B2                       l1953 1534                       l1961 155A  
                     l1955 1546                       l1957 1550                       l2837 179E  
                     l2935 09AC                       l2871 0894                       l1993 16F2  
                     l2877 08BC                       l2969 0A32                       l2899 0926  
                     l2997 0AA8                       STR_1 0827                       STR_2 0839  
                     STR_3 0812                       STR_4 0801                       STR_5 0801  
                     STR_6 0834                       STR_7 082F                       STR_8 081D  
                     _LATB 000F8A                       _LATC 000F8B                       u3040 09FC  
                     _LATD 000F8C                       u1630 116E                       u1550 166A  
                     u1720 11CA                       u1640 117A                       u1632 1170  
                     u1730 11D6                       u1722 11CC                       u1642 117C  
                     u1732 11D8                       u1660 118E                       u1900 131C  
                     u1750 11EA                       u1670 119A                       u1662 1190  
                     u1590 1142                       u3510 0E4A                       u1760 11F6  
                     u1752 11EC                       u1672 119C                       u3440 0C7E  
                     u1762 11F8                       u1930 1486                       u3610 0F86  
                     u3620 0F98                       u3630 0FAA                       u3550 0EEC  
                     u2910 089C                       u1960 15EE                       u3560 0EFE  
                     u2920 08A8                       u2912 089E                       u3570 0F10  
                     u2922 08AA                       u3707 08C6                       u3717 090A  
                     u1990 1760                       u3807 18AC                       u3727 09A2  
                     u3737 1126                       u2890 17C2                       u2970 09C4  
                     u3747 1836                       u3757 152A                       u3767 1536  
                     u3777 153E                       u3787 1548                       u3797 1552  
                     _RBPU 007F8F                       _TMR0 000FD6             ??_EscribeLCD_c 0012  
                     _cara 0043                       _flag 0039                       _main 0840  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 004B                       prodh 000FF4  
                     prodl 000FF3                       start 000E               ___param_bank 000000  
                    ??_ISR 000A             ?_InicializaLCD 0001                      ?_main 0001  
               _ComandoLCD 1824              EscribeLCD_c@a 0012            __end_of___lldiv 136C  
                    _T0CON 000FD5            __end_of___llmod 14CA                      _LATE0 007C68  
                    _LATE1 007C69                      _LATE2 007C6A            __end_of___lwdiv 161E  
          __end_of___lwmod 1788                      i2l306 13D4                      i2l309 13D6  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96        ___lmul@multiplicand 0012                      _Tecla 003A  
      __end_of_LeerTeclado 124E                      _color 0031                ?i2_BorraLCD 0001  
                    main@i 0021                      main@j 0023                      main@k 001F  
           NuevoCaracter@c 0013             NuevoCaracter@i 0015                      tablat 000FF5  
              _HabilitaLCD 18A8                      ttemp5 004C                      ttemp6 004F  
                    ttemp7 0053                      status 000FD8                      wtemp8 004C  
         __end_of_BorraLCD 1894           __end_of_ColorRGB 1464            __initialization 17C4  
             __end_of_main 1134                     ??_main 001B              __activetblptr 000002  
                   _ADCON1 000FC1      __end_of_NuevoCaracter 17C4           ___llmod@dividend 000E  
           DireccionaLCD@a 0012                     i2l2007 1738                     i2l2419 1674  
                   i2l2811 1398                     i2l2813 13A0                     i2l2817 13B4  
                   i2l1971 157A                     i2l1973 158A                     i2l1981 15B0  
                   i2l1975 159C                     i2l1977 15A6                     _OSCCON 000FD3  
                   _TMR0IE 007F95                     _TMR0IF 007F92                     _TMR0ON 007EAF  
    __end_of_DireccionaLCD 186A                 _RetardoLCD 1520                     ___lmul 14CA  
                   ___wmul 17FE                  ??___lldiv 0016                  ??___llmod 0016  
                ??___lwdiv 0018                  ??___lwmod 0012            ??_InicializaLCD 0012  
                   clear_0 17EA                     isa$std 000001       __end_of_EscribeLCD_c 1854  
              ?_ComandoLCD 0001                _LeerTeclado 1134               ?i2_EnviaDato 0001  
             __pdataCOMRAM 003F               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8      __end_ofi2_HabilitaLCD 18C4  
               __accesstop 0060    __end_of__initialization 17F0              ___rparam_used 000001  
           __pcstackCOMRAM 0001          __end_of_EnviaDato 1700          i2_MensajeLCD_Word 166C  
       ?i2_MensajeLCD_Word 0006                  ?_BorraLCD 0001                  ?_ColorRGB 0001  
      ??i2_MensajeLCD_Word 0007                ?_RetardoLCD 0001                RetardoLCD@a 000F  
           ComandoLCD@data 000E                    ?___lmul 000E                    ?___wmul 000E  
           ___lmul@product 0016  __end_ofi2_MensajeLCD_Word 16BA               ??i2_BorraLCD 0005  
               ??_BorraLCD 0012                 ??_ColorRGB 000E          ??_MensajeLCD_Word 0014  
             ?_HabilitaLCD 0001                    __Hparam 0000                    __Lparam 0000  
                  ___lldiv 12EA                    ___llmod 1464                    ___lwdiv 15CC  
                  ___lwmod 1746               __psmallconst 0800         __end_ofi2_BorraLCD 18A8  
                  __pcinit 17C4                    __ramtop 0800                    __ptext0 0840  
                  __ptext1 17FE                    __ptext2 1746                    __ptext3 15CC  
                  __ptext4 14CA                    __ptext5 1464                    __ptext6 12EA  
                  __ptext7 1788                    __ptext8 1824                    __ptext9 161E  
           __pintcode_body 136C       end_of_initialization 17F0              __Lmediumconst 0000  
                  int_func 136C               _EscribeLCD_c 183E            ___lldiv@divisor 0012  
          ___lldiv@counter 001A                    postdec1 000FE5                    postinc0 000FEE  
             ??_ComandoLCD 000E               ?_LeerTeclado 0001            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001         __end_of_ComandoLCD 183E             __end_of___lmul 1520  
           __end_of___wmul 1824              __pidataCOMRAM 18C4      __end_of_InicializaLCD 12EA  
                _EnviaDato 16BA        start_initialization 17C4                __end_of_ISR 13EA  
           ??i2_RetardoLCD 0001               ??_RetardoLCD 000E            ___llmod@divisor 0012  
          ___llmod@counter 0016                   ??___lmul 0016                   ??___wmul 0012  
          _MensajeLCD_Word 161E                 ?_EnviaDato 0001                __pbssCOMRAM 0025  
       __end_of_RetardoLCD 1576           MensajeLCD_Word@a 0013           MensajeLCD_Word@i 0015  
            _NuevoCaracter 1788              _DireccionaLCD 1854             i2_EscribeLCD_c 186A  
         ___lwdiv@dividend 0014                  __pintcode 0008                   ?___lldiv 000E  
                 ?___llmod 000E                   ?___lwdiv 0014                   ?___lwmod 000E  
              __smallconst 0800           ___lwdiv@quotient 0018             ?_NuevoCaracter 0013  
           ___wmul@product 0012              i2_HabilitaLCD 18B6             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 1880                   i2u202_40 16B8                   i2u285_40 13AA  
                 i2u381_47 1580                   i2u286_45 13AC                   i2u382_47 158C  
                 i2u383_47 1594                   i2u384_47 159E                   i2u385_47 15A8  
                 i2u386_47 18BA    __end_of_MensajeLCD_Word 166C          ___wmul@multiplier 000E  
            ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 15CC                ??_EnviaDato 0010  
                 _BorraLCD 1880                   _ColorRGB 13EA          ___lmul@multiplier 000E  
                copy_data0 17D8             ?i2_HabilitaLCD 0001            ?i2_EscribeLCD_c 0001  
                 __Hrparam 0000                   __Lrparam 0000               i2EnviaDato@a 0004  
          ??_NuevoCaracter 0014            ___lwdiv@divisor 0016            ___lwdiv@counter 001A  
                 __ptext10 183E                   __ptext11 1134                   __ptext20 166C  
                 __ptext12 124E                   __ptext21 186A                   __ptext13 1880  
                 __ptext22 1894                   __ptext14 1854                   __ptext23 1700  
                 __ptext15 16BA                   __ptext24 1576                   __ptext16 1520  
                 __ptext25 18B6                   __ptext17 18A8                   __ptext18 13EA  
      __end_ofi2_EnviaDato 1746                   _contador 002F            ??_DireccionaLCD 0012  
                 _interfaz 0042                   _partdecl 0029                   isa$xinst 000000  
         ?_MensajeLCD_Word 0013                   int$flags 004B          NuevoCaracter@addr 0014  
          ??i2_HabilitaLCD 0001                   intlevel2 0000              ??_HabilitaLCD 000E  
         ___lwmod@dividend 000E           ___lldiv@dividend 000E              i2RetardoLCD@a 0002  
              i2_EnviaDato 1700           ___lldiv@quotient 0016            ___lwmod@divisor 0010  
          ___lwmod@counter 0012                 i2_BorraLCD 1894         i2MensajeLCD_Word@a 0006  
       i2MensajeLCD_Word@i 0008              ?_EscribeLCD_c 0001                _verificador 002D  
             i2_RetardoLCD 1576        __end_of_HabilitaLCD 18B6  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 23:02:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  0000'                    __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75  0000' 20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78  0001' 20                 	db	32
    79                           
    80                           ;initializer for _op
    81  0002' 20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84  0003' 08                 	db	8
    85  0000                     _LATC	set	3979
    86  0000                     _TRISC	set	3988
    87  0000                     _LATC7	set	31839
    88  0000                     _LATE2	set	31850
    89  0000                     _RB7	set	31759
    90  0000                     _RB6	set	31758
    91  0000                     _RB5	set	31757
    92  0000                     _TMR0ON	set	32431
    93  0000                     _GIE	set	32663
    94  0000                     _TMR0IE	set	32661
    95  0000                     _LATE1	set	31849
    96  0000                     _LATB	set	3978
    97  0000                     _LATD	set	3980
    98  0000                     _RB4	set	31756
    99  0000                     _TRISB	set	3987
   100  0000                     _TRISD	set	3989
   101  0000                     _ADCON1	set	4033
   102  0000                     _LATE0	set	31848
   103  0000                     _T0CON	set	4053
   104  0000                     _RBPU	set	32655
   105  0000                     _TRISE	set	3990
   106  0000                     _TMR0IF	set	32658
   107  0000                     _TMR0	set	4054
   108                           
   109                           	psect	smallconst
   110  0000'                    __psmallconst:
   111                           	callstack 0
   112  0000' 00                 	db	0
   113  0001'                    STR_2:
   114  0001' 20                 	db	32
   115  0002' 20                 	db	32
   116  0003' 20                 	db	32
   117  0004' 20                 	db	32
   118  0005' 20                 	db	32
   119  0006' 20                 	db	32
   120  0007' 20                 	db	32
   121  0008' 20                 	db	32
   122  0009' 20                 	db	32
   123  000A' 20                 	db	32
   124  000B' 20                 	db	32
   125  000C' 20                 	db	32
   126  000D' 20                 	db	32
   127  000E' 20                 	db	32
   128  000F' 20                 	db	32
   129  0010' 20                 	db	32
   130  0011' 00                 	db	0
   131  0012'                    STR_1:
   132  0012' 48                 	db	72	;'H'
   133  0013' 6F                 	db	111	;'o'
   134  0014' 6C                 	db	108	;'l'
   135  0015' 61                 	db	97	;'a'
   136  0016' 20                 	db	32
   137  0017' 6D                 	db	109	;'m'
   138  0018' 75                 	db	117	;'u'
   139  0019' 6E                 	db	110	;'n'
   140  001A' 64                 	db	100	;'d'
   141  001B' 6F                 	db	111	;'o'
   142  001C' 00                 	db	0
   143  001D' 00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  0000'                    __pcinit:
   149                           	callstack 0
   150  0000'                    start_initialization:
   151                           	callstack 0
   152  0000'                    __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (4 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  0000' 0E00'              	movlw	low __pidataCOMRAM
   158  0002' 6EF6               	movwf	tblptrl,c
   159  0004' 0E00'              	movlw	high __pidataCOMRAM
   160  0006' 6EF7               	movwf	tblptrh,c
   161  0008' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   162  000A' 6EF8               	movwf	tblptru,c
   163  000C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   164  0010' EE10 F004          	lfsr	1,4
   165  0014'                    copy_data0:
   166  0014' 0009               	tblrd		*+
   167  0016' CFF5 FFEE          	movff	tablat,postinc0
   168  001A' 50E5               	movf	postdec1,w,c
   169  001C' 50E1               	movf	fsr1l,w,c
   170  001E' E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (23 bytes)
   173  0020' EE00' F000'        	lfsr	0,__pbssCOMRAM
   174  0024' 0E17               	movlw	23
   175  0026'                    clear_0:
   176  0026' 6AEE               	clrf	postinc0,c
   177  0028' 06E8               	decf	wreg,f,c
   178  002A' E1FD               	bnz	clear_0
   179  002C'                    end_of_initialization:
   180                           	callstack 0
   181  002C'                    __end_of__initialization:
   182                           	callstack 0
   183  002C' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  002E' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  0030' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   186  0032' 6EF8               	movwf	tblptru,c
   187  0034' 0100               	movlb	0
   188  0036' EF00' F000'        	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  0000'                    __pbssCOMRAM:
   192                           	callstack 0
   193  0000'                    _r:
   194                           	callstack 0
   195  0000'                    	ds	4
   196  0004'                    _partdecl:
   197                           	callstack 0
   198  0004'                    	ds	4
   199  0008'                    _contador:
   200                           	callstack 0
   201  0008'                    	ds	2
   202  000A'                    _color:
   203                           	callstack 0
   204  000A'                    	ds	2
   205  000C'                    _i:
   206                           	callstack 0
   207  000C'                    	ds	2
   208  000E'                    _n2:
   209                           	callstack 0
   210  000E'                    	ds	2
   211  0010'                    _n1:
   212                           	callstack 0
   213  0010'                    	ds	2
   214  0012'                    _Tecla:
   215                           	callstack 0
   216  0012'                    	ds	1
   217  0013'                    _m:
   218                           	callstack 0
   219  0013'                    	ds	4
   220                           
   221                           	psect	dataCOMRAM
   222  0000'                    __pdataCOMRAM:
   223                           	callstack 0
   224  0000'                    _n2c:
   225                           	callstack 0
   226  0000'                    	ds	1
   227  0001'                    _n1c:
   228                           	callstack 0
   229  0001'                    	ds	1
   230  0002'                    _op:
   231                           	callstack 0
   232  0002'                    	ds	1
   233  0003'                    _interfaz:
   234                           	callstack 0
   235  0003'                    	ds	1
   236                           
   237                           	psect	cstackCOMRAM
   238  0000'                    __pcstackCOMRAM:
   239                           	callstack 0
   240  0000'                    ??_RetardoLCD:
   241  0000'                    ??_ColorRGB:
   242  0000'                    ?___wmul:
   243                           	callstack 0
   244  0000'                    ?___lwmod:
   245                           	callstack 0
   246  0000'                    ?___lmul:
   247                           	callstack 0
   248  0000'                    ___wmul@multiplier:
   249                           	callstack 0
   250  0000'                    ___lwmod@dividend:
   251                           	callstack 0
   252  0000'                    ___lmul@multiplier:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0x0
   256  0000'                    	ds	1
   257  0001'                    RetardoLCD@a:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x1
   261  0001'                    	ds	1
   262  0002'                    EnviaDato@a:
   263                           	callstack 0
   264  0002'                    ___wmul@multiplicand:
   265                           	callstack 0
   266  0002'                    ___lwmod@divisor:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x2
   270  0002'                    	ds	1
   271  0003'                    EscribeLCD_c@a:
   272                           	callstack 0
   273  0003'                    DireccionaLCD@a:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x3
   277  0003'                    	ds	1
   278  0004'                    MensajeLCD_Word@a:
   279                           	callstack 0
   280  0004'                    ___lwmod@counter:
   281                           	callstack 0
   282  0004'                    ___wmul@product:
   283                           	callstack 0
   284  0004'                    ___lmul@multiplicand:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x4
   288  0004'                    	ds	1
   289  0005'                    ??_MensajeLCD_Word:
   290                           
   291                           ; 1 bytes @ 0x5
   292  0005'                    	ds	1
   293  0006'                    ?___lwdiv:
   294                           	callstack 0
   295  0006'                    MensajeLCD_Word@i:
   296                           	callstack 0
   297  0006'                    ___lwdiv@dividend:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x6
   301  0006'                    	ds	2
   302  0008'                    ___lwdiv@divisor:
   303                           	callstack 0
   304  0008'                    ___lmul@product:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x8
   308  0008'                    	ds	2
   309  000A'                    ___lwdiv@quotient:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0xA
   313  000A'                    	ds	2
   314  000C'                    ___lwdiv@counter:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xC
   318  000C'                    	ds	1
   319  000D'                    ??_main:
   320                           
   321                           ; 1 bytes @ 0xD
   322  000D'                    	ds	4
   323  0011'                    main@i:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x11
   327  0011'                    	ds	2
   328                           
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 23 in file "Laboratorio4.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  i               2   17[COMRAM] int 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         2       0       0       0       0       0       0       0       0
   350 ;;      Temps:          4       0       0       0       0       0       0       0       0
   351 ;;      Totals:         6       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        6 bytes
   353 ;; Hardware stack levels required when called: 5
   354 ;; This function calls:
   355 ;;		_BorraLCD
   356 ;;		_ColorRGB
   357 ;;		_DireccionaLCD
   358 ;;		_EscribeLCD_c
   359 ;;		_InicializaLCD
   360 ;;		_LeerTeclado
   361 ;;		_MensajeLCD_Word
   362 ;;		___lmul
   363 ;;		___lwdiv
   364 ;;		___lwmod
   365 ;;		___wmul
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372  0000'                    __ptext0:
   373                           	callstack 0
   374  0000'                    _main:
   375                           	callstack 26
   376                           
   377                           ;Laboratorio4.c: 24: ADCON1=15;
   378                           
   379                           ;incstack = 0
   380  0000' 0E0F               	movlw	15
   381  0002' 6EC1               	movwf	193,c	;volatile
   382                           
   383                           ;Laboratorio4.c: 25: TRISD=0;
   384  0004' 0E00               	movlw	0
   385  0006' 6E95               	movwf	149,c	;volatile
   386                           
   387                           ;Laboratorio4.c: 26: TRISB=0b11110000;
   388  0008' 0EF0               	movlw	240
   389  000A' 6E93               	movwf	147,c	;volatile
   390                           
   391                           ;Laboratorio4.c: 27: TRISE=0;
   392  000C' 0E00               	movlw	0
   393  000E' 6E96               	movwf	150,c	;volatile
   394                           
   395                           ;Laboratorio4.c: 28: TRISC=0;
   396  0010' 0E00               	movlw	0
   397  0012' 6E94               	movwf	148,c	;volatile
   398                           
   399                           ;Laboratorio4.c: 29: RBPU=0;
   400  0014' 9EF1               	bcf	4081,7,c	;volatile
   401                           
   402                           ;Laboratorio4.c: 30: InicializaLCD();
   403  0016' EC00' F000'        	call	_InicializaLCD	;wreg free
   404                           
   405                           ;Laboratorio4.c: 32: T0CON=0b10000011;
   406  001A' 0E83               	movlw	131
   407  001C' 6ED5               	movwf	213,c	;volatile
   408                           
   409                           ;Laboratorio4.c: 33: TMR0IF=0;
   410  001E' 94F2               	bcf	4082,2,c	;volatile
   411                           
   412                           ;Laboratorio4.c: 34: TMR0=49911;
   413  0020' 0EC2               	movlw	194
   414  0022' 6ED7               	movwf	215,c	;volatile
   415  0024' 0EF7               	movlw	247
   416  0026' 6ED6               	movwf	214,c	;volatile
   417                           
   418                           ;Laboratorio4.c: 35: TMR0IE=1;
   419  0028' 8AF2               	bsf	4082,5,c	;volatile
   420                           
   421                           ;Laboratorio4.c: 36: GIE=1;
   422  002A' 8EF2               	bsf	4082,7,c	;volatile
   423                           
   424                           ;Laboratorio4.c: 37: TMR0ON=1;
   425  002C' 8ED5               	bsf	4053,7,c	;volatile
   426                           
   427                           ;Laboratorio4.c: 39: BorraLCD();
   428  002E' EC00' F000'        	call	_BorraLCD	;wreg free
   429                           
   430                           ;Laboratorio4.c: 40: MensajeLCD_Word("Hola mundo");
   431  0032' 0E00'              	movlw	low STR_1
   432  0034' 6E00'              	movwf	MensajeLCD_Word@a^0,c
   433  0036' EC00' F000'        	call	_MensajeLCD_Word	;wreg free
   434                           
   435                           ;Laboratorio4.c: 41: _delay((unsigned long)((2000)*(1000000/4000.0)));
   436  003A' 0E03               	movlw	3
   437  003C' 6E00'              	movwf	(??_main+1)^0,c
   438  003E' 0E8A               	movlw	138
   439  0040' 6E00'              	movwf	??_main^0,c
   440  0042' 0E56               	movlw	86
   441  0044'                    u1487:
   442  0044' 2EE8               	decfsz	wreg,f,c
   443  0046' D7FE               	bra	u1487
   444  0048' 2E00'              	decfsz	??_main^0,f,c
   445  004A' D7FC               	bra	u1487
   446  004C' 2E00'              	decfsz	(??_main+1)^0,f,c
   447  004E' D7FA               	bra	u1487
   448                           
   449                           ;Laboratorio4.c: 42: BorraLCD();
   450  0050' EC00' F000'        	call	_BorraLCD	;wreg free
   451  0054'                    l1663:
   452                           
   453                           ;Laboratorio4.c: 44: LATB=0B00000000;
   454  0054' 0E00               	movlw	0
   455  0056' 6E8A               	movwf	138,c	;volatile
   456                           
   457                           ;Laboratorio4.c: 45: Tecla = LeerTeclado();
   458  0058' EC00' F000'        	call	_LeerTeclado	;wreg free
   459  005C' 6E00'              	movwf	_Tecla^0,c
   460                           
   461                           ;Laboratorio4.c: 46: ColorRGB();
   462  005E' EC00' F000'        	call	_ColorRGB	;wreg free
   463                           
   464                           ;Laboratorio4.c: 47: if(Tecla=='C'){
   465  0062' 0E43               	movlw	67
   466  0064' 1800'              	xorwf	_Tecla^0,w,c
   467  0066' A4D8               	btfss	status,2,c
   468  0068' D02B               	goto	l1695
   469                           
   470                           ;Laboratorio4.c: 48: DireccionaLCD(0xC0);
   471  006A' 0EC0               	movlw	192
   472  006C' EC00' F000'        	call	_DireccionaLCD
   473                           
   474                           ;Laboratorio4.c: 50: op = ' ';
   475  0070' 0E20               	movlw	32
   476  0072' 6E00'              	movwf	_op^0,c
   477                           
   478                           ;Laboratorio4.c: 51: n1c = ' ';
   479  0074' 0E20               	movlw	32
   480  0076' 6E00'              	movwf	_n1c^0,c
   481                           
   482                           ;Laboratorio4.c: 52: n2c = ' ';
   483  0078' 0E20               	movlw	32
   484  007A' 6E00'              	movwf	_n2c^0,c
   485                           
   486                           ;Laboratorio4.c: 53: n1 = 0;
   487  007C' 0E00               	movlw	0
   488  007E' 6E00'              	movwf	(_n1+1)^0,c
   489  0080' 0E00               	movlw	0
   490  0082' 6E00'              	movwf	_n1^0,c
   491                           
   492                           ;Laboratorio4.c: 54: n2 = 0;
   493  0084' 0E00               	movlw	0
   494  0086' 6E00'              	movwf	(_n2+1)^0,c
   495  0088' 0E00               	movlw	0
   496  008A' 6E00'              	movwf	_n2^0,c
   497                           
   498                           ;Laboratorio4.c: 55: i = 0;
   499  008C' 0E00               	movlw	0
   500  008E' 6E00'              	movwf	(_i+1)^0,c
   501  0090' 0E00               	movlw	0
   502  0092' 6E00'              	movwf	_i^0,c
   503                           
   504                           ;Laboratorio4.c: 56: partdecl = 0;
   505  0094' 0E00               	movlw	0
   506  0096' 6E00'              	movwf	_partdecl^0,c
   507  0098' 0E00               	movlw	0
   508  009A' 6E00'              	movwf	(_partdecl+1)^0,c
   509  009C' 0E00               	movlw	0
   510  009E' 6E00'              	movwf	(_partdecl+2)^0,c
   511  00A0' 0E00               	movlw	0
   512  00A2' 6E00'              	movwf	(_partdecl+3)^0,c
   513                           
   514                           ;Laboratorio4.c: 57: DireccionaLCD(0x80);
   515  00A4' 0E80               	movlw	128
   516  00A6' EC00' F000'        	call	_DireccionaLCD
   517                           
   518                           ;Laboratorio4.c: 58: MensajeLCD_Word("                ");
   519  00AA' 0E00'              	movlw	low STR_2
   520  00AC' 6E00'              	movwf	MensajeLCD_Word@a^0,c
   521  00AE' EC00' F000'        	call	_MensajeLCD_Word	;wreg free
   522                           
   523                           ;Laboratorio4.c: 59: DireccionaLCD(0xC0);
   524  00B2' 0EC0               	movlw	192
   525  00B4' EC00' F000'        	call	_DireccionaLCD
   526                           
   527                           ;Laboratorio4.c: 60: DireccionaLCD(0x80);
   528  00B8' 0E80               	movlw	128
   529  00BA' EC00' F000'        	call	_DireccionaLCD
   530                           
   531                           ;Laboratorio4.c: 61: }else{
   532  00BE' D7CA               	goto	l1663
   533  00C0'                    l1695:
   534                           
   535                           ;Laboratorio4.c: 62: if(n1c==' '|n2c==' '|op==' '){
   536  00C0' 0E20               	movlw	32
   537  00C2' 1800'              	xorwf	_n1c^0,w,c
   538  00C4' B4D8               	btfsc	status,2,c
   539  00C6' D008               	goto	u1000
   540  00C8' 0E20               	movlw	32
   541  00CA' 1800'              	xorwf	_n2c^0,w,c
   542  00CC' B4D8               	btfsc	status,2,c
   543  00CE' D004               	goto	u1000
   544  00D0' 0E20               	movlw	32
   545  00D2' 1800'              	xorwf	_op^0,w,c
   546  00D4' A4D8               	btfss	status,2,c
   547  00D6' D083               	goto	l1763
   548  00D8'                    u1000:
   549                           
   550                           ;Laboratorio4.c: 63: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   551  00D8' 0E20               	movlw	32
   552  00DA' 1800'              	xorwf	_op^0,w,c
   553  00DC' A4D8               	btfss	status,2,c
   554  00DE' D021               	goto	l1719
   555  00E0' 0E2B               	movlw	43
   556  00E2' 1800'              	xorwf	_Tecla^0,w,c
   557  00E4' B4D8               	btfsc	status,2,c
   558  00E6' D00C               	goto	u1050
   559  00E8' 0E2D               	movlw	45
   560  00EA' 1800'              	xorwf	_Tecla^0,w,c
   561  00EC' B4D8               	btfsc	status,2,c
   562  00EE' D008               	goto	u1050
   563  00F0' 0E2F               	movlw	47
   564  00F2' 1800'              	xorwf	_Tecla^0,w,c
   565  00F4' B4D8               	btfsc	status,2,c
   566  00F6' D004               	goto	u1050
   567  00F8' 0E78               	movlw	120
   568  00FA' 1800'              	xorwf	_Tecla^0,w,c
   569  00FC' A4D8               	btfss	status,2,c
   570  00FE' D011               	goto	l1719
   571  0100'                    u1050:
   572  0100' 0E20               	movlw	32
   573  0102' 1800'              	xorwf	_n1c^0,w,c
   574  0104' B4D8               	btfsc	status,2,c
   575  0106' D00D               	goto	l1719
   576  0108' 0E20               	movlw	32
   577  010A' 1800'              	xorwf	_n2c^0,w,c
   578  010C' A4D8               	btfss	status,2,c
   579  010E' D009               	goto	l1719
   580                           
   581                           ;Laboratorio4.c: 64: DireccionaLCD(0x81);
   582  0110' 0E81               	movlw	129
   583  0112' EC00' F000'        	call	_DireccionaLCD
   584                           
   585                           ;Laboratorio4.c: 65: EscribeLCD_c(Tecla);
   586  0116' 5000'              	movf	_Tecla^0,w,c
   587  0118' EC00' F000'        	call	_EscribeLCD_c
   588                           
   589                           ;Laboratorio4.c: 66: op = Tecla;
   590  011C' C012' F002'        	movff	_Tecla,_op
   591                           
   592                           ;Laboratorio4.c: 67: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   593  0120' D22E               	goto	l1871
   594  0122'                    l1719:
   595  0122' 0E20               	movlw	32
   596  0124' 1800'              	xorwf	_n1c^0,w,c
   597  0126' A4D8               	btfss	status,2,c
   598  0128' D027               	goto	l1739
   599  012A' 0E2B               	movlw	43
   600  012C' 1800'              	xorwf	_Tecla^0,w,c
   601  012E' A4D8               	btfss	status,2,c
   602  0130' D014               	goto	u1140
   603  0132' 0E2D               	movlw	45
   604  0134' 1800'              	xorwf	_Tecla^0,w,c
   605  0136' A4D8               	btfss	status,2,c
   606  0138' D010               	goto	u1140
   607  013A' 0E2F               	movlw	47
   608  013C' 1800'              	xorwf	_Tecla^0,w,c
   609  013E' A4D8               	btfss	status,2,c
   610  0140' D00C               	goto	u1140
   611  0142' 0E78               	movlw	120
   612  0144' 1800'              	xorwf	_Tecla^0,w,c
   613  0146' A4D8               	btfss	status,2,c
   614  0148' D008               	goto	u1140
   615  014A' 0E3D               	movlw	61
   616  014C' 1800'              	xorwf	_Tecla^0,w,c
   617  014E' A4D8               	btfss	status,2,c
   618  0150' D004               	goto	u1140
   619  0152' 0E43               	movlw	67
   620  0154' 1800'              	xorwf	_Tecla^0,w,c
   621  0156' B4D8               	btfsc	status,2,c
   622  0158' D00F               	goto	l1739
   623  015A'                    u1140:
   624                           
   625                           ;Laboratorio4.c: 68: DireccionaLCD(0x80);
   626  015A' 0E80               	movlw	128
   627  015C' EC00' F000'        	call	_DireccionaLCD
   628                           
   629                           ;Laboratorio4.c: 69: EscribeLCD_c(Tecla);
   630  0160' 5000'              	movf	_Tecla^0,w,c
   631  0162' EC00' F000'        	call	_EscribeLCD_c
   632                           
   633                           ;Laboratorio4.c: 70: n1c=Tecla;
   634  0166' C012' F001'        	movff	_Tecla,_n1c
   635                           
   636                           ;Laboratorio4.c: 71: n1 = Tecla-'0';
   637  016A' 0ED0               	movlw	208
   638  016C' 2400'              	addwf	_Tecla^0,w,c
   639  016E' 6E00'              	movwf	_n1^0,c
   640  0170' 6A00'              	clrf	(_n1+1)^0,c
   641  0172' 0EFF               	movlw	255
   642  0174' 2200'              	addwfc	(_n1+1)^0,f,c
   643                           
   644                           ;Laboratorio4.c: 72: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   645  0176' D203               	goto	l1871
   646  0178'                    l1739:
   647  0178' 0E20               	movlw	32
   648  017A' 1800'              	xorwf	_n2c^0,w,c
   649  017C' A4D8               	btfss	status,2,c
   650  017E' D1FF               	goto	l1871
   651  0180' 0E20               	movlw	32
   652  0182' 1800'              	xorwf	_op^0,w,c
   653  0184' B4D8               	btfsc	status,2,c
   654  0186' D1FB               	goto	l1871
   655  0188' 0E20               	movlw	32
   656  018A' 1800'              	xorwf	_n1c^0,w,c
   657  018C' B4D8               	btfsc	status,2,c
   658  018E' D1F7               	goto	l1871
   659  0190' 0E2B               	movlw	43
   660  0192' 1800'              	xorwf	_Tecla^0,w,c
   661  0194' A4D8               	btfss	status,2,c
   662  0196' D014               	goto	u1230
   663  0198' 0E2D               	movlw	45
   664  019A' 1800'              	xorwf	_Tecla^0,w,c
   665  019C' A4D8               	btfss	status,2,c
   666  019E' D010               	goto	u1230
   667  01A0' 0E2F               	movlw	47
   668  01A2' 1800'              	xorwf	_Tecla^0,w,c
   669  01A4' A4D8               	btfss	status,2,c
   670  01A6' D00C               	goto	u1230
   671  01A8' 0E78               	movlw	120
   672  01AA' 1800'              	xorwf	_Tecla^0,w,c
   673  01AC' A4D8               	btfss	status,2,c
   674  01AE' D008               	goto	u1230
   675  01B0' 0E3D               	movlw	61
   676  01B2' 1800'              	xorwf	_Tecla^0,w,c
   677  01B4' A4D8               	btfss	status,2,c
   678  01B6' D004               	goto	u1230
   679  01B8' 0E43               	movlw	67
   680  01BA' 1800'              	xorwf	_Tecla^0,w,c
   681  01BC' B4D8               	btfsc	status,2,c
   682  01BE' D1DF               	goto	l1871
   683  01C0'                    u1230:
   684                           
   685                           ;Laboratorio4.c: 73: DireccionaLCD(0x82);
   686  01C0' 0E82               	movlw	130
   687  01C2' EC00' F000'        	call	_DireccionaLCD
   688                           
   689                           ;Laboratorio4.c: 74: EscribeLCD_c(Tecla);
   690  01C6' 5000'              	movf	_Tecla^0,w,c
   691  01C8' EC00' F000'        	call	_EscribeLCD_c
   692                           
   693                           ;Laboratorio4.c: 75: n2c=Tecla;
   694  01CC' C012' F000'        	movff	_Tecla,_n2c
   695                           
   696                           ;Laboratorio4.c: 76: n2 = Tecla-'0';
   697  01D0' 0ED0               	movlw	208
   698  01D2' 2400'              	addwf	_Tecla^0,w,c
   699  01D4' 6E00'              	movwf	_n2^0,c
   700  01D6' 6A00'              	clrf	(_n2+1)^0,c
   701  01D8' 0EFF               	movlw	255
   702  01DA' 2200'              	addwfc	(_n2+1)^0,f,c
   703                           
   704                           ;Laboratorio4.c: 77: };Laboratorio4.c: 78: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   705  01DC' D1D0               	goto	l1871
   706  01DE'                    l1763:
   707  01DE' 0E3D               	movlw	61
   708  01E0' 1800'              	xorwf	_Tecla^0,w,c
   709  01E2' A4D8               	btfss	status,2,c
   710  01E4' D1C9               	goto	l1869
   711  01E6' 0E20               	movlw	32
   712  01E8' 1800'              	xorwf	_n2c^0,w,c
   713  01EA' B4D8               	btfsc	status,2,c
   714  01EC' D1C5               	goto	l1869
   715  01EE' 0E20               	movlw	32
   716  01F0' 1800'              	xorwf	_op^0,w,c
   717  01F2' B4D8               	btfsc	status,2,c
   718  01F4' D1C1               	goto	l1869
   719  01F6' 0E20               	movlw	32
   720  01F8' 1800'              	xorwf	_n1c^0,w,c
   721  01FA' B4D8               	btfsc	status,2,c
   722  01FC' D1BD               	goto	l1869
   723                           
   724                           ;Laboratorio4.c: 79: DireccionaLCD(0x83);
   725  01FE' 0E83               	movlw	131
   726  0200' EC00' F000'        	call	_DireccionaLCD
   727                           
   728                           ;Laboratorio4.c: 80: EscribeLCD_c('=');
   729  0204' 0E3D               	movlw	61
   730  0206' EC00' F000'        	call	_EscribeLCD_c
   731                           
   732                           ;Laboratorio4.c: 81: switch(op){
   733  020A' D093               	goto	l1811
   734  020C'                    l1773:
   735                           
   736                           ;Laboratorio4.c: 83: r = n1 + n2;
   737  020C' 5000'              	movf	_n2^0,w,c
   738  020E' 2400'              	addwf	_n1^0,w,c
   739  0210' 6E00'              	movwf	??_main^0,c
   740  0212' 5000'              	movf	(_n2+1)^0,w,c
   741  0214' 2000'              	addwfc	(_n1+1)^0,w,c
   742  0216' 6E00'              	movwf	(??_main+1)^0,c
   743  0218' C00D' F000'        	movff	??_main,_r
   744  021C' C00E' F001'        	movff	??_main+1,_r+1
   745  0220' 6A00'              	clrf	(_r+2)^0,c
   746  0222' 6A00'              	clrf	(_r+3)^0,c
   747  0224'                    l1775:
   748                           
   749                           ;Laboratorio4.c: 84: partdecl = r*100;
   750  0224' C000' F000'        	movff	_r,___lmul@multiplier
   751  0228' C001' F001'        	movff	_r+1,___lmul@multiplier+1
   752  022C' C002' F002'        	movff	_r+2,___lmul@multiplier+2
   753  0230' C003' F003'        	movff	_r+3,___lmul@multiplier+3
   754  0234' 0E64               	movlw	100
   755  0236' 6E00'              	movwf	___lmul@multiplicand^0,c
   756  0238' 0E00               	movlw	0
   757  023A' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
   758  023C' 0E00               	movlw	0
   759  023E' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
   760  0240' 0E00               	movlw	0
   761  0242' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
   762  0244' EC00' F000'        	call	___lmul	;wreg free
   763  0248' C000' F004'        	movff	?___lmul,_partdecl
   764  024C' C001' F005'        	movff	?___lmul+1,_partdecl+1
   765  0250' C002' F006'        	movff	?___lmul+2,_partdecl+2
   766  0254' C003' F007'        	movff	?___lmul+3,_partdecl+3
   767                           
   768                           ;Laboratorio4.c: 85: break;
   769  0258' D07A               	goto	l1813
   770  025A'                    l1777:
   771                           
   772                           ;Laboratorio4.c: 87: r = n1 - n2;
   773  025A' 5000'              	movf	_n2^0,w,c
   774  025C' 5C00'              	subwf	_n1^0,w,c
   775  025E' 6E00'              	movwf	??_main^0,c
   776  0260' 5000'              	movf	(_n2+1)^0,w,c
   777  0262' 5800'              	subwfb	(_n1+1)^0,w,c
   778  0264' D7D8               	goto	L1
   779  0266'                    l1781:
   780                           
   781                           ;Laboratorio4.c: 91: r = n1*n2;
   782  0266' C010' F000'        	movff	_n1,___wmul@multiplier
   783  026A' C011' F001'        	movff	_n1+1,___wmul@multiplier+1
   784  026E' C00E' F002'        	movff	_n2,___wmul@multiplicand
   785  0272' C00F' F003'        	movff	_n2+1,___wmul@multiplicand+1
   786  0276' EC00' F000'        	call	___wmul	;wreg free
   787  027A' C000' F000'        	movff	?___wmul,_r
   788  027E' C001' F001'        	movff	?___wmul+1,_r+1
   789  0282' D7CE               	goto	L2
   790  0284'                    l1785:
   791                           
   792                           ;Laboratorio4.c: 95: if(n2!=0){
   793  0284' 5000'              	movf	_n2^0,w,c
   794  0286' 1000'              	iorwf	(_n2+1)^0,w,c
   795  0288' B4D8               	btfsc	status,2,c
   796  028A' D02F               	goto	l1793
   797                           
   798                           ;Laboratorio4.c: 96: if(n1!=0){
   799  028C' 5000'              	movf	_n1^0,w,c
   800  028E' 1000'              	iorwf	(_n1+1)^0,w,c
   801  0290' B4D8               	btfsc	status,2,c
   802  0292' D05D               	goto	l1813
   803                           
   804                           ;Laboratorio4.c: 97: r = n1/n2;
   805  0294' C010' F006'        	movff	_n1,___lwdiv@dividend
   806  0298' C011' F007'        	movff	_n1+1,___lwdiv@dividend+1
   807  029C' C00E' F008'        	movff	_n2,___lwdiv@divisor
   808  02A0' C00F' F009'        	movff	_n2+1,___lwdiv@divisor+1
   809  02A4' EC00' F000'        	call	___lwdiv	;wreg free
   810  02A8' C006' F000'        	movff	?___lwdiv,_r
   811  02AC' C007' F001'        	movff	?___lwdiv+1,_r+1
   812  02B0' 6A00'              	clrf	(_r+2)^0,c
   813  02B2' 6A00'              	clrf	(_r+3)^0,c
   814                           
   815                           ;Laboratorio4.c: 98: partdecl = (n1*100)/n2;
   816  02B4' C010' F000'        	movff	_n1,___wmul@multiplier
   817  02B8' C011' F001'        	movff	_n1+1,___wmul@multiplier+1
   818  02BC' 0E00               	movlw	0
   819  02BE' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
   820  02C0' 0E64               	movlw	100
   821  02C2' 6E00'              	movwf	___wmul@multiplicand^0,c
   822  02C4' EC00' F000'        	call	___wmul	;wreg free
   823  02C8' C000' F006'        	movff	?___wmul,___lwdiv@dividend
   824  02CC' C001' F007'        	movff	?___wmul+1,___lwdiv@dividend+1
   825  02D0' C00E' F008'        	movff	_n2,___lwdiv@divisor
   826  02D4' C00F' F009'        	movff	_n2+1,___lwdiv@divisor+1
   827  02D8' EC00' F000'        	call	___lwdiv	;wreg free
   828  02DC' C006' F004'        	movff	?___lwdiv,_partdecl
   829  02E0' C007' F005'        	movff	?___lwdiv+1,_partdecl+1
   830  02E4' 6A00'              	clrf	(_partdecl+2)^0,c
   831  02E6' 6A00'              	clrf	(_partdecl+3)^0,c
   832  02E8' D032               	goto	l1813
   833  02EA'                    l1793:
   834                           
   835                           ;Laboratorio4.c: 101: if(n1 != 0 & n2 == 0) r = 1000;
   836  02EA' 5000'              	movf	_n1^0,w,c
   837  02EC' 1000'              	iorwf	(_n1+1)^0,w,c
   838  02EE' B4D8               	btfsc	status,2,c
   839  02F0' D006               	goto	l1799
   840  02F2' 5000'              	movf	_n2^0,w,c
   841  02F4' 1000'              	iorwf	(_n2+1)^0,w,c
   842  02F6' A4D8               	btfss	status,2,c
   843  02F8' D002               	goto	l1799
   844  02FA' 0EE8               	movlw	232
   845  02FC' D009               	goto	L3
   846  02FE'                    l1799:
   847                           
   848                           ;Laboratorio4.c: 102: else if(n1 == 0 & n2 == 0) r = 1001;
   849  02FE' 5000'              	movf	_n1^0,w,c
   850  0300' 1000'              	iorwf	(_n1+1)^0,w,c
   851  0302' A4D8               	btfss	status,2,c
   852  0304' D78F               	goto	l1775
   853  0306' 5000'              	movf	_n2^0,w,c
   854  0308' 1000'              	iorwf	(_n2+1)^0,w,c
   855  030A' A4D8               	btfss	status,2,c
   856  030C' D78B               	goto	l1775
   857  030E' 0EE9               	movlw	233
   858  0310'                    L3:
   859  0310' 6E00'              	movwf	_r^0,c
   860  0312' 0E03               	movlw	3
   861  0314' 6E00'              	movwf	(_r+1)^0,c
   862  0316' 0E00               	movlw	0
   863  0318' 6E00'              	movwf	(_r+2)^0,c
   864  031A' 0E00               	movlw	0
   865  031C' 6E00'              	movwf	(_r+3)^0,c
   866  031E' D782               	goto	l1775
   867  0320'                    l1807:
   868                           
   869                           ;Laboratorio4.c: 107: r = 0;
   870  0320' 0E00               	movlw	0
   871  0322' 6E00'              	movwf	_r^0,c
   872  0324' 0E00               	movlw	0
   873  0326' 6E00'              	movwf	(_r+1)^0,c
   874  0328' 0E00               	movlw	0
   875  032A' 6E00'              	movwf	(_r+2)^0,c
   876  032C' 0E00               	movlw	0
   877  032E' 6E00'              	movwf	(_r+3)^0,c
   878                           
   879                           ;Laboratorio4.c: 108: break;
   880  0330' D00E               	goto	l1813
   881  0332'                    l1811:
   882  0332' 5000'              	movf	_op^0,w,c
   883                           
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 4, Range of values is 43 to 120
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte           13     7 (average)
   889                           ;	Chosen strategy is simple_byte
   890  0334' 0A2B               	xorlw	43	; case 43
   891  0336' B4D8               	btfsc	status,2,c
   892  0338' D769               	goto	l1773
   893  033A' 0A06               	xorlw	6	; case 45
   894  033C' B4D8               	btfsc	status,2,c
   895  033E' D78D               	goto	l1777
   896  0340' 0A02               	xorlw	2	; case 47
   897  0342' B4D8               	btfsc	status,2,c
   898  0344' D79F               	goto	l1785
   899  0346' 0A57               	xorlw	87	; case 120
   900  0348' B4D8               	btfsc	status,2,c
   901  034A' D78D               	goto	l1781
   902  034C' D7E9               	goto	l1807
   903  034E'                    l1813:
   904                           
   905                           ;Laboratorio4.c: 110: DireccionaLCD(0x84);
   906  034E' 0E84               	movlw	132
   907  0350' EC00' F000'        	call	_DireccionaLCD
   908                           
   909                           ;Laboratorio4.c: 111: if ((partdecl-(r*100))!= 0){
   910  0354' C000' F000'        	movff	_r,___lmul@multiplier
   911  0358' C001' F001'        	movff	_r+1,___lmul@multiplier+1
   912  035C' C002' F002'        	movff	_r+2,___lmul@multiplier+2
   913  0360' C003' F003'        	movff	_r+3,___lmul@multiplier+3
   914  0364' 0E9C               	movlw	156
   915  0366' 6E00'              	movwf	___lmul@multiplicand^0,c
   916  0368' 0EFF               	movlw	255
   917  036A' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
   918  036C' 0EFF               	movlw	255
   919  036E' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
   920  0370' 0EFF               	movlw	255
   921  0372' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
   922  0374' EC00' F000'        	call	___lmul	;wreg free
   923  0378' 5000'              	movf	_partdecl^0,w,c
   924  037A' 2400'              	addwf	?___lmul^0,w,c
   925  037C' 6E00'              	movwf	??_main^0,c
   926  037E' 5000'              	movf	(_partdecl+1)^0,w,c
   927  0380' 2000'              	addwfc	(?___lmul+1)^0,w,c
   928  0382' 6E00'              	movwf	(??_main+1)^0,c
   929  0384' 5000'              	movf	(_partdecl+2)^0,w,c
   930  0386' 2000'              	addwfc	(?___lmul+2)^0,w,c
   931  0388' 6E00'              	movwf	(??_main+2)^0,c
   932  038A' 5000'              	movf	(_partdecl+3)^0,w,c
   933  038C' 2000'              	addwfc	(?___lmul+3)^0,w,c
   934  038E' 6E00'              	movwf	(??_main+3)^0,c
   935  0390' 5000'              	movf	??_main^0,w,c
   936  0392' 1000'              	iorwf	(??_main+1)^0,w,c
   937  0394' 1000'              	iorwf	(??_main+2)^0,w,c
   938  0396' 1000'              	iorwf	(??_main+3)^0,w,c
   939  0398' B4D8               	btfsc	status,2,c
   940  039A' D056               	goto	l1837
   941                           
   942                           ;Laboratorio4.c: 112: for (int i = 0; i < 3; i++) {
   943  039C' 0E00               	movlw	0
   944  039E' 6E00'              	movwf	(main@i+1)^0,c
   945  03A0' 0E00               	movlw	0
   946  03A2' 6E00'              	movwf	main@i^0,c
   947  03A4'                    l1817:
   948  03A4' BE00'              	btfsc	(main@i+1)^0,7,c
   949  03A6' D008               	goto	l1821
   950  03A8' 5000'              	movf	(main@i+1)^0,w,c
   951  03AA' E105               	bnz	u1350
   952  03AC' 0E03               	movlw	3
   953  03AE' 5C00'              	subwf	main@i^0,w,c
   954  03B0' B0D8               	btfsc	status,0,c
   955  03B2' D0E5               	goto	l1871
   956  03B4' D001               	goto	l1821
   957  03B6'                    u1350:
   958  03B6' D0E3               	goto	l1871
   959  03B8'                    l1821:
   960                           
   961                           ;Laboratorio4.c: 113: r = n1 / n2;
   962  03B8' C010' F006'        	movff	_n1,___lwdiv@dividend
   963  03BC' C011' F007'        	movff	_n1+1,___lwdiv@dividend+1
   964  03C0' C00E' F008'        	movff	_n2,___lwdiv@divisor
   965  03C4' C00F' F009'        	movff	_n2+1,___lwdiv@divisor+1
   966  03C8' EC00' F000'        	call	___lwdiv	;wreg free
   967  03CC' C006' F000'        	movff	?___lwdiv,_r
   968  03D0' C007' F001'        	movff	?___lwdiv+1,_r+1
   969  03D4' 6A00'              	clrf	(_r+2)^0,c
   970  03D6' 6A00'              	clrf	(_r+3)^0,c
   971                           
   972                           ;Laboratorio4.c: 114: m = n1 % n2;
   973  03D8' C010' F000'        	movff	_n1,___lwmod@dividend
   974  03DC' C011' F001'        	movff	_n1+1,___lwmod@dividend+1
   975  03E0' C00E' F002'        	movff	_n2,___lwmod@divisor
   976  03E4' C00F' F003'        	movff	_n2+1,___lwmod@divisor+1
   977  03E8' EC00' F000'        	call	___lwmod	;wreg free
   978  03EC' C000' F013'        	movff	?___lwmod,_m
   979  03F0' C001' F014'        	movff	?___lwmod+1,_m+1
   980  03F4' 6A00'              	clrf	(_m+2)^0,c
   981  03F6' 6A00'              	clrf	(_m+3)^0,c
   982                           
   983                           ;Laboratorio4.c: 115: EscribeLCD_c(r+'0');
   984  03F8' 5000'              	movf	_r^0,w,c
   985  03FA' 0F30               	addlw	48
   986  03FC' EC00' F000'        	call	_EscribeLCD_c
   987                           
   988                           ;Laboratorio4.c: 116: if(i == 0 && m != 0) {
   989  0400' 5000'              	movf	main@i^0,w,c
   990  0402' 1000'              	iorwf	(main@i+1)^0,w,c
   991  0404' A4D8               	btfss	status,2,c
   992  0406' D009               	goto	l1829
   993  0408' 5000'              	movf	_m^0,w,c
   994  040A' 1000'              	iorwf	(_m+1)^0,w,c
   995  040C' 1000'              	iorwf	(_m+2)^0,w,c
   996  040E' 1000'              	iorwf	(_m+3)^0,w,c
   997  0410' B4D8               	btfsc	status,2,c
   998  0412' D003               	goto	l1829
   999                           
  1000                           ;Laboratorio4.c: 117: EscribeLCD_c(',');
  1001  0414' 0E2C               	movlw	44
  1002  0416' EC00' F000'        	call	_EscribeLCD_c
  1003  041A'                    l1829:
  1004                           
  1005                           ;Laboratorio4.c: 118: };Laboratorio4.c: 120: if (m != 0) {
  1006  041A' 5000'              	movf	_m^0,w,c
  1007  041C' 1000'              	iorwf	(_m+1)^0,w,c
  1008  041E' 1000'              	iorwf	(_m+2)^0,w,c
  1009  0420' 1000'              	iorwf	(_m+3)^0,w,c
  1010  0422' B4D8               	btfsc	status,2,c
  1011  0424' D0AC               	goto	l1871
  1012                           
  1013                           ;Laboratorio4.c: 121: n1 = m * 10;
  1014  0426' C013' F000'        	movff	_m,___wmul@multiplier
  1015  042A' C014' F001'        	movff	_m+1,___wmul@multiplier+1
  1016  042E' 0E00               	movlw	0
  1017  0430' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  1018  0432' 0E0A               	movlw	10
  1019  0434' 6E00'              	movwf	___wmul@multiplicand^0,c
  1020  0436' EC00' F000'        	call	___wmul	;wreg free
  1021  043A' C000' F010'        	movff	?___wmul,_n1
  1022  043E' C001' F011'        	movff	?___wmul+1,_n1+1
  1023                           
  1024                           ;Laboratorio4.c: 122: } else {
  1025  0442' 4A00'              	infsnz	main@i^0,f,c
  1026  0444' 2A00'              	incf	(main@i+1)^0,f,c
  1027  0446' D7AE               	goto	l1817
  1028  0448'                    l1837:
  1029  0448' 5000'              	movf	(_r+3)^0,w,c
  1030  044A' 1000'              	iorwf	(_r+2)^0,w,c
  1031  044C' 1000'              	iorwf	(_r+1)^0,w,c
  1032  044E' E104               	bnz	u1390
  1033  0450' 0E52               	movlw	82
  1034  0452' 5C00'              	subwf	_r^0,w,c
  1035  0454' A0D8               	btfss	status,0,c
  1036  0456' D025               	goto	l1849
  1037  0458'                    u1390:
  1038  0458' 0EE8               	movlw	232
  1039  045A' 1800'              	xorwf	_r^0,w,c
  1040  045C' E106               	bnz	u1400
  1041  045E' 0E03               	movlw	3
  1042  0460' 1800'              	xorwf	(_r+1)^0,w,c
  1043  0462' 1000'              	iorwf	(_r+2)^0,w,c
  1044  0464' 1000'              	iorwf	(_r+3)^0,w,c
  1045  0466' B4D8               	btfsc	status,2,c
  1046  0468' D01C               	goto	l1849
  1047  046A'                    u1400:
  1048  046A' 0EE9               	movlw	233
  1049  046C' 1800'              	xorwf	_r^0,w,c
  1050  046E' E106               	bnz	u1410
  1051  0470' 0E03               	movlw	3
  1052  0472' 1800'              	xorwf	(_r+1)^0,w,c
  1053  0474' 1000'              	iorwf	(_r+2)^0,w,c
  1054  0476' 1000'              	iorwf	(_r+3)^0,w,c
  1055  0478' B4D8               	btfsc	status,2,c
  1056  047A' D013               	goto	l1849
  1057  047C'                    u1410:
  1058                           
  1059                           ;Laboratorio4.c: 128: EscribeLCD_c('-');
  1060  047C' 0E2D               	movlw	45
  1061  047E' EC00' F000'        	call	_EscribeLCD_c
  1062                           
  1063                           ;Laboratorio4.c: 129: DireccionaLCD(0x85);
  1064  0482' 0E85               	movlw	133
  1065  0484' EC00' F000'        	call	_DireccionaLCD
  1066                           
  1067                           ;Laboratorio4.c: 130: r = ~r+1;
  1068  0488' 1E00'              	comf	(_r+3)^0,f,c
  1069  048A' 1E00'              	comf	(_r+2)^0,f,c
  1070  048C' 1E00'              	comf	(_r+1)^0,f,c
  1071  048E' 6C00'              	negf	_r^0,c
  1072  0490' 0E00               	movlw	0
  1073  0492' 2200'              	addwfc	(_r+1)^0,f,c
  1074  0494' 2200'              	addwfc	(_r+2)^0,f,c
  1075  0496' 2200'              	addwfc	(_r+3)^0,f,c
  1076                           
  1077                           ;Laboratorio4.c: 131: EscribeLCD_c(r+'0');
  1078  0498' 5000'              	movf	_r^0,w,c
  1079  049A' 0F30               	addlw	48
  1080  049C' EC00' F000'        	call	_EscribeLCD_c
  1081                           
  1082                           ;Laboratorio4.c: 132: }else{
  1083  04A0' D06E               	goto	l1871
  1084  04A2'                    l1849:
  1085                           
  1086                           ;Laboratorio4.c: 133: if(r>0xA & r!=1000 & r !=1001){
  1087  04A2' 5000'              	movf	(_r+3)^0,w,c
  1088  04A4' 1000'              	iorwf	(_r+2)^0,w,c
  1089  04A6' 1000'              	iorwf	(_r+1)^0,w,c
  1090  04A8' E104               	bnz	u1420
  1091  04AA' 0E0B               	movlw	11
  1092  04AC' 5C00'              	subwf	_r^0,w,c
  1093  04AE' A0D8               	btfss	status,0,c
  1094  04B0' D038               	goto	l1859
  1095  04B2'                    u1420:
  1096  04B2' 0EE8               	movlw	232
  1097  04B4' 1800'              	xorwf	_r^0,w,c
  1098  04B6' E106               	bnz	u1430
  1099  04B8' 0E03               	movlw	3
  1100  04BA' 1800'              	xorwf	(_r+1)^0,w,c
  1101  04BC' 1000'              	iorwf	(_r+2)^0,w,c
  1102  04BE' 1000'              	iorwf	(_r+3)^0,w,c
  1103  04C0' B4D8               	btfsc	status,2,c
  1104  04C2' D02F               	goto	l1859
  1105  04C4'                    u1430:
  1106  04C4' 0EE9               	movlw	233
  1107  04C6' 1800'              	xorwf	_r^0,w,c
  1108  04C8' E106               	bnz	u1440
  1109  04CA' 0E03               	movlw	3
  1110  04CC' 1800'              	xorwf	(_r+1)^0,w,c
  1111  04CE' 1000'              	iorwf	(_r+2)^0,w,c
  1112  04D0' 1000'              	iorwf	(_r+3)^0,w,c
  1113  04D2' B4D8               	btfsc	status,2,c
  1114  04D4' D026               	goto	l1859
  1115  04D6'                    u1440:
  1116  04D6'                    l1855:
  1117                           
  1118                           ;Laboratorio4.c: 135: i = i+1;
  1119  04D6' 0E01               	movlw	1
  1120  04D8' 2400'              	addwf	_i^0,w,c
  1121  04DA' 6E00'              	movwf	_i^0,c
  1122  04DC' 0E00               	movlw	0
  1123  04DE' 2000'              	addwfc	(_i+1)^0,w,c
  1124  04E0' 6E00'              	movwf	(_i+1)^0,c
  1125                           
  1126                           ;Laboratorio4.c: 136: r = r - 10;
  1127  04E2' 0EF6               	movlw	246
  1128  04E4' 2400'              	addwf	_r^0,w,c
  1129  04E6' 6E00'              	movwf	_r^0,c
  1130  04E8' 0EFF               	movlw	255
  1131  04EA' 2000'              	addwfc	(_r+1)^0,w,c
  1132  04EC' 6E00'              	movwf	(_r+1)^0,c
  1133  04EE' 0EFF               	movlw	255
  1134  04F0' 2000'              	addwfc	(_r+2)^0,w,c
  1135  04F2' 6E00'              	movwf	(_r+2)^0,c
  1136  04F4' 0EFF               	movlw	255
  1137  04F6' 2000'              	addwfc	(_r+3)^0,w,c
  1138  04F8' 6E00'              	movwf	(_r+3)^0,c
  1139                           
  1140                           ;Laboratorio4.c: 137: }while(r>0xA);
  1141  04FA' 5000'              	movf	(_r+3)^0,w,c
  1142  04FC' 1000'              	iorwf	(_r+2)^0,w,c
  1143  04FE' 1000'              	iorwf	(_r+1)^0,w,c
  1144  0500' E1EA               	bnz	l1855
  1145  0502' 0E0B               	movlw	11
  1146  0504' 5C00'              	subwf	_r^0,w,c
  1147  0506' B0D8               	btfsc	status,0,c
  1148  0508' D7E6               	goto	u1440
  1149                           
  1150                           ;Laboratorio4.c: 138: EscribeLCD_c(i+'0');
  1151  050A' 5000'              	movf	_i^0,w,c
  1152  050C' 0F30               	addlw	48
  1153  050E' EC00' F000'        	call	_EscribeLCD_c
  1154                           
  1155                           ;Laboratorio4.c: 139: DireccionaLCD(0x85);
  1156  0512' 0E85               	movlw	133
  1157  0514' EC00' F000'        	call	_DireccionaLCD
  1158                           
  1159                           ;Laboratorio4.c: 140: EscribeLCD_c(r+'0');
  1160  0518' 5000'              	movf	_r^0,w,c
  1161  051A' 0F30               	addlw	48
  1162  051C' EC00' F000'        	call	_EscribeLCD_c
  1163                           
  1164                           ;Laboratorio4.c: 141: }else{
  1165  0520' D02E               	goto	l1871
  1166  0522'                    l1859:
  1167                           
  1168                           ;Laboratorio4.c: 142: if(r==1000){
  1169  0522' 0EE8               	movlw	232
  1170  0524' 1800'              	xorwf	_r^0,w,c
  1171  0526' E110               	bnz	l1863
  1172  0528' 0E03               	movlw	3
  1173  052A' 1800'              	xorwf	(_r+1)^0,w,c
  1174  052C' 1000'              	iorwf	(_r+2)^0,w,c
  1175  052E' 1000'              	iorwf	(_r+3)^0,w,c
  1176  0530' A4D8               	btfss	status,2,c
  1177  0532' D00A               	goto	l1863
  1178                           
  1179                           ;Laboratorio4.c: 143: EscribeLCD_c('I');
  1180  0534' 0E49               	movlw	73
  1181  0536' EC00' F000'        	call	_EscribeLCD_c
  1182                           
  1183                           ;Laboratorio4.c: 144: EscribeLCD_c('N');
  1184  053A' 0E4E               	movlw	78
  1185  053C' EC00' F000'        	call	_EscribeLCD_c
  1186                           
  1187                           ;Laboratorio4.c: 145: EscribeLCD_c('F');
  1188  0540' 0E46               	movlw	70
  1189  0542' EC00' F000'        	call	_EscribeLCD_c
  1190                           
  1191                           ;Laboratorio4.c: 146: }else{
  1192  0546' D01B               	goto	l1871
  1193  0548'                    l1863:
  1194                           
  1195                           ;Laboratorio4.c: 147: if(r==1001){
  1196  0548' 0EE9               	movlw	233
  1197  054A' 1800'              	xorwf	_r^0,w,c
  1198  054C' E110               	bnz	l1867
  1199  054E' 0E03               	movlw	3
  1200  0550' 1800'              	xorwf	(_r+1)^0,w,c
  1201  0552' 1000'              	iorwf	(_r+2)^0,w,c
  1202  0554' 1000'              	iorwf	(_r+3)^0,w,c
  1203  0556' A4D8               	btfss	status,2,c
  1204  0558' D00A               	goto	l1867
  1205                           
  1206                           ;Laboratorio4.c: 148: EscribeLCD_c('I');
  1207  055A' 0E49               	movlw	73
  1208  055C' EC00' F000'        	call	_EscribeLCD_c
  1209                           
  1210                           ;Laboratorio4.c: 149: EscribeLCD_c('N');
  1211  0560' 0E4E               	movlw	78
  1212  0562' EC00' F000'        	call	_EscribeLCD_c
  1213                           
  1214                           ;Laboratorio4.c: 150: EscribeLCD_c('D');
  1215  0566' 0E44               	movlw	68
  1216  0568' EC00' F000'        	call	_EscribeLCD_c
  1217                           
  1218                           ;Laboratorio4.c: 151: }else{
  1219  056C' D008               	goto	l1871
  1220  056E'                    l1867:
  1221                           
  1222                           ;Laboratorio4.c: 152: EscribeLCD_c(r+'0');
  1223  056E' 5000'              	movf	_r^0,w,c
  1224  0570' 0F30               	addlw	48
  1225  0572' EC00' F000'        	call	_EscribeLCD_c
  1226  0576' D003               	goto	l1871
  1227  0578'                    l1869:
  1228                           
  1229                           ;Laboratorio4.c: 158: EscribeLCD_c('W');
  1230  0578' 0E57               	movlw	87
  1231  057A' EC00' F000'        	call	_EscribeLCD_c
  1232  057E'                    l1871:
  1233                           
  1234                           ;Laboratorio4.c: 159: };Laboratorio4.c: 160: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1235  057E' 0EE4               	movlw	228
  1236  0580' 6E00'              	movwf	??_main^0,c
  1237  0582' 0E44               	movlw	68
  1238  0584'                    u1497:
  1239  0584' 2EE8               	decfsz	wreg,f,c
  1240  0586' D7FE               	bra	u1497
  1241  0588' 2E00'              	decfsz	??_main^0,f,c
  1242  058A' D7FC               	bra	u1497
  1243  058C' D000               	nop2	
  1244  058E' D562               	goto	l1663
  1245  0590'                    __end_of_main:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function ___wmul *****************
  1249 ;; Defined at:
  1250 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  multiplier      2    0[COMRAM] unsigned int 
  1253 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  product         2    4[COMRAM] unsigned int 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    0[COMRAM] unsigned int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, prodl, prodh
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1265 ;;      Params:         4       0       0       0       0       0       0       0       0
  1266 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1268 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:        6 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text1
  1280  0000'                    __ptext1:
  1281                           	callstack 0
  1282  0000'                    ___wmul:
  1283                           	callstack 29
  1284                           
  1285                           ;incstack = 0
  1286  0000' 5000'              	movf	___wmul@multiplier^0,w,c
  1287  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
  1288  0004' CFF3 F004'         	movff	prodl,___wmul@product
  1289  0008' CFF4 F005'         	movff	prodh,___wmul@product+1
  1290  000C' 5000'              	movf	___wmul@multiplier^0,w,c
  1291  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  1292  0010' 50F3               	movf	243,w,c
  1293  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
  1294  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  1295  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
  1296  0018' 50F3               	movf	243,w,c
  1297  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
  1298  001C' C004' F000'        	movff	___wmul@product,?___wmul
  1299  0020' C005' F001'        	movff	___wmul@product+1,?___wmul+1
  1300  0024' 0012               	return		;funcret
  1301  0026'                    __end_of___wmul:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function ___lwmod *****************
  1305 ;; Defined at:
  1306 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  dividend        2    0[COMRAM] unsigned int 
  1309 ;;  divisor         2    2[COMRAM] unsigned int 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  counter         1    4[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  2    0[COMRAM] unsigned int 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1321 ;;      Params:         4       0       0       0       0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1324 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1325 ;;Total ram usage:        5 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text2
  1336  0000'                    __ptext2:
  1337                           	callstack 0
  1338  0000'                    ___lwmod:
  1339                           	callstack 29
  1340                           
  1341                           ;incstack = 0
  1342  0000' 5000'              	movf	___lwmod@divisor^0,w,c
  1343  0002' 1000'              	iorwf	(___lwmod@divisor+1)^0,w,c
  1344  0004' B4D8               	btfsc	status,2,c
  1345  0006' D018               	goto	l743
  1346  0008' 0E01               	movlw	1
  1347  000A' 6E00'              	movwf	___lwmod@counter^0,c
  1348  000C' D004               	goto	l1627
  1349  000E'                    l1625:
  1350  000E' 90D8               	bcf	status,0,c
  1351  0010' 3600'              	rlcf	___lwmod@divisor^0,f,c
  1352  0012' 3600'              	rlcf	(___lwmod@divisor+1)^0,f,c
  1353  0014' 2A00'              	incf	___lwmod@counter^0,f,c
  1354  0016'                    l1627:
  1355  0016' AE00'              	btfss	(___lwmod@divisor+1)^0,7,c
  1356  0018' D7FA               	goto	l1625
  1357  001A'                    u950:
  1358  001A' 5000'              	movf	___lwmod@divisor^0,w,c
  1359  001C' 5C00'              	subwf	___lwmod@dividend^0,w,c
  1360  001E' 5000'              	movf	(___lwmod@divisor+1)^0,w,c
  1361  0020' 5800'              	subwfb	(___lwmod@dividend+1)^0,w,c
  1362  0022' A0D8               	btfss	status,0,c
  1363  0024' D004               	goto	l1633
  1364  0026' 5000'              	movf	___lwmod@divisor^0,w,c
  1365  0028' 5E00'              	subwf	___lwmod@dividend^0,f,c
  1366  002A' 5000'              	movf	(___lwmod@divisor+1)^0,w,c
  1367  002C' 5A00'              	subwfb	(___lwmod@dividend+1)^0,f,c
  1368  002E'                    l1633:
  1369  002E' 90D8               	bcf	status,0,c
  1370  0030' 3200'              	rrcf	(___lwmod@divisor+1)^0,f,c
  1371  0032' 3200'              	rrcf	___lwmod@divisor^0,f,c
  1372  0034' 2E00'              	decfsz	___lwmod@counter^0,f,c
  1373  0036' D7F1               	goto	u950
  1374  0038'                    l743:
  1375  0038' C000' F000'        	movff	___lwmod@dividend,?___lwmod
  1376  003C' C001' F001'        	movff	___lwmod@dividend+1,?___lwmod+1
  1377  0040' 0012               	return		;funcret
  1378  0042'                    __end_of___lwmod:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function ___lwdiv *****************
  1382 ;; Defined at:
  1383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  dividend        2    6[COMRAM] unsigned int 
  1386 ;;  divisor         2    8[COMRAM] unsigned int 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  quotient        2   10[COMRAM] unsigned int 
  1389 ;;  counter         1   12[COMRAM] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2    6[COMRAM] unsigned int 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1399 ;;      Params:         4       0       0       0       0       0       0       0       0
  1400 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1402 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1403 ;;Total ram usage:        7 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text3
  1414  0000'                    __ptext3:
  1415                           	callstack 0
  1416  0000'                    ___lwdiv:
  1417                           	callstack 29
  1418                           
  1419                           ;incstack = 0
  1420  0000' 0E00               	movlw	0
  1421  0002' 6E00'              	movwf	(___lwdiv@quotient+1)^0,c
  1422  0004' 0E00               	movlw	0
  1423  0006' 6E00'              	movwf	___lwdiv@quotient^0,c
  1424  0008' 5000'              	movf	___lwdiv@divisor^0,w,c
  1425  000A' 1000'              	iorwf	(___lwdiv@divisor+1)^0,w,c
  1426  000C' B4D8               	btfsc	status,2,c
  1427  000E' D01C               	goto	l733
  1428  0010' 0E01               	movlw	1
  1429  0012' 6E00'              	movwf	___lwdiv@counter^0,c
  1430  0014' D004               	goto	l1607
  1431  0016'                    l1605:
  1432  0016' 90D8               	bcf	status,0,c
  1433  0018' 3600'              	rlcf	___lwdiv@divisor^0,f,c
  1434  001A' 3600'              	rlcf	(___lwdiv@divisor+1)^0,f,c
  1435  001C' 2A00'              	incf	___lwdiv@counter^0,f,c
  1436  001E'                    l1607:
  1437  001E' AE00'              	btfss	(___lwdiv@divisor+1)^0,7,c
  1438  0020' D7FA               	goto	l1605
  1439  0022'                    u920:
  1440  0022' 90D8               	bcf	status,0,c
  1441  0024' 3600'              	rlcf	___lwdiv@quotient^0,f,c
  1442  0026' 3600'              	rlcf	(___lwdiv@quotient+1)^0,f,c
  1443  0028' 5000'              	movf	___lwdiv@divisor^0,w,c
  1444  002A' 5C00'              	subwf	___lwdiv@dividend^0,w,c
  1445  002C' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  1446  002E' 5800'              	subwfb	(___lwdiv@dividend+1)^0,w,c
  1447  0030' A0D8               	btfss	status,0,c
  1448  0032' D005               	goto	l1617
  1449  0034' 5000'              	movf	___lwdiv@divisor^0,w,c
  1450  0036' 5E00'              	subwf	___lwdiv@dividend^0,f,c
  1451  0038' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  1452  003A' 5A00'              	subwfb	(___lwdiv@dividend+1)^0,f,c
  1453  003C' 8000'              	bsf	___lwdiv@quotient^0,0,c
  1454  003E'                    l1617:
  1455  003E' 90D8               	bcf	status,0,c
  1456  0040' 3200'              	rrcf	(___lwdiv@divisor+1)^0,f,c
  1457  0042' 3200'              	rrcf	___lwdiv@divisor^0,f,c
  1458  0044' 2E00'              	decfsz	___lwdiv@counter^0,f,c
  1459  0046' D7ED               	goto	u920
  1460  0048'                    l733:
  1461  0048' C00A' F006'        	movff	___lwdiv@quotient,?___lwdiv
  1462  004C' C00B' F007'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  1463  0050' 0012               	return		;funcret
  1464  0052'                    __end_of___lwdiv:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function ___lmul *****************
  1468 ;; Defined at:
  1469 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  multiplier      4    0[COMRAM] unsigned long 
  1472 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  product         4    8[COMRAM] unsigned long 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  4    0[COMRAM] unsigned long 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         8       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:       12 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text4
  1499  0000'                    __ptext4:
  1500                           	callstack 0
  1501  0000'                    ___lmul:
  1502                           	callstack 29
  1503                           
  1504                           ;incstack = 0
  1505  0000' 0E00               	movlw	0
  1506  0002' 6E00'              	movwf	___lmul@product^0,c
  1507  0004' 0E00               	movlw	0
  1508  0006' 6E00'              	movwf	(___lmul@product+1)^0,c
  1509  0008' 0E00               	movlw	0
  1510  000A' 6E00'              	movwf	(___lmul@product+2)^0,c
  1511  000C' 0E00               	movlw	0
  1512  000E' 6E00'              	movwf	(___lmul@product+3)^0,c
  1513  0010'                    l1591:
  1514  0010' A000'              	btfss	___lmul@multiplier^0,0,c
  1515  0012' D008               	goto	l1595
  1516  0014' 5000'              	movf	___lmul@multiplicand^0,w,c
  1517  0016' 2600'              	addwf	___lmul@product^0,f,c
  1518  0018' 5000'              	movf	(___lmul@multiplicand+1)^0,w,c
  1519  001A' 2200'              	addwfc	(___lmul@product+1)^0,f,c
  1520  001C' 5000'              	movf	(___lmul@multiplicand+2)^0,w,c
  1521  001E' 2200'              	addwfc	(___lmul@product+2)^0,f,c
  1522  0020' 5000'              	movf	(___lmul@multiplicand+3)^0,w,c
  1523  0022' 2200'              	addwfc	(___lmul@product+3)^0,f,c
  1524  0024'                    l1595:
  1525  0024' 90D8               	bcf	status,0,c
  1526  0026' 3600'              	rlcf	___lmul@multiplicand^0,f,c
  1527  0028' 3600'              	rlcf	(___lmul@multiplicand+1)^0,f,c
  1528  002A' 3600'              	rlcf	(___lmul@multiplicand+2)^0,f,c
  1529  002C' 3600'              	rlcf	(___lmul@multiplicand+3)^0,f,c
  1530  002E' 90D8               	bcf	status,0,c
  1531  0030' 3200'              	rrcf	(___lmul@multiplier+3)^0,f,c
  1532  0032' 3200'              	rrcf	(___lmul@multiplier+2)^0,f,c
  1533  0034' 3200'              	rrcf	(___lmul@multiplier+1)^0,f,c
  1534  0036' 3200'              	rrcf	___lmul@multiplier^0,f,c
  1535  0038' 5000'              	movf	___lmul@multiplier^0,w,c
  1536  003A' 1000'              	iorwf	(___lmul@multiplier+1)^0,w,c
  1537  003C' 1000'              	iorwf	(___lmul@multiplier+2)^0,w,c
  1538  003E' 1000'              	iorwf	(___lmul@multiplier+3)^0,w,c
  1539  0040' A4D8               	btfss	status,2,c
  1540  0042' D7E6               	goto	l1591
  1541  0044' C008' F000'        	movff	___lmul@product,?___lmul
  1542  0048' C009' F001'        	movff	___lmul@product+1,?___lmul+1
  1543  004C' C00A' F002'        	movff	___lmul@product+2,?___lmul+2
  1544  0050' C00B' F003'        	movff	___lmul@product+3,?___lmul+3
  1545  0054' 0012               	return		;funcret
  1546  0056'                    __end_of___lmul:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _MensajeLCD_Word *****************
  1550 ;; Defined at:
  1551 ;;		line 239 in file "LibLCDXC8.h"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  a               1    4[COMRAM] PTR unsigned char 
  1554 ;;		 -> STR_2(17), STR_1(11), 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  i               2    6[COMRAM] int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1566 ;;      Params:         1       0       0       0       0       0       0       0       0
  1567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1568 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1569 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1570 ;;Total ram usage:        4 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 4
  1573 ;; This function calls:
  1574 ;;		_EscribeLCD_c
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text5
  1581  0000'                    __ptext5:
  1582                           	callstack 0
  1583  0000'                    _MensajeLCD_Word:
  1584                           	callstack 26
  1585                           
  1586                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1587                           
  1588                           ;incstack = 0
  1589  0000' 0E00               	movlw	0
  1590  0002' 6E00'              	movwf	(MensajeLCD_Word@i+1)^0,c
  1591  0004' 0E00               	movlw	0
  1592  0006' 6E00'              	movwf	MensajeLCD_Word@i^0,c
  1593  0008'                    l1577:
  1594                           
  1595                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1596  0008' 5000'              	movf	MensajeLCD_Word@a^0,w,c
  1597  000A' 2400'              	addwf	MensajeLCD_Word@i^0,w,c
  1598  000C' 6E00'              	movwf	??_MensajeLCD_Word^0,c
  1599  000E' C005' FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1600  0012'                    	if	1	;There is more than 1 active tblptr byte
  1601  0012' 0E00'              	movlw	high __smallconst
  1602  0014' 6EF7               	movwf	tblptrh,c
  1603  0016'                    	endif
  1604  0016'                    	if	0	;tblptru may be non-zero
  1605  0016'                    	endif
  1606  0016'                    	if	0	;tblptru may be non-zero
  1607  0016'                    	endif
  1608  0016' 0008               	tblrd		*
  1609  0018' 50F5               	movf	tablat,w,c
  1610  001A' EC00' F000'        	call	_EscribeLCD_c
  1611  001E' 4A00'              	infsnz	MensajeLCD_Word@i^0,f,c
  1612  0020' 2A00'              	incf	(MensajeLCD_Word@i+1)^0,f,c
  1613  0022' BE00'              	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1614  0024' D7F1               	goto	l1577
  1615  0026' 5000'              	movf	(MensajeLCD_Word@i+1)^0,w,c
  1616  0028' E105               	bnz	u880
  1617  002A' 0E10               	movlw	16
  1618  002C' 5C00'              	subwf	MensajeLCD_Word@i^0,w,c
  1619  002E' B0D8               	btfsc	status,0,c
  1620  0030' 0012               	return	
  1621  0032' D7EA               	goto	l1577
  1622  0034'                    u880:
  1623  0034' 0012               	return		;funcret
  1624  0036'                    __end_of_MensajeLCD_Word:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _EscribeLCD_c *****************
  1628 ;; Defined at:
  1629 ;;		line 140 in file "LibLCDXC8.h"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  a               1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  a               1    3[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        1 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 3
  1650 ;; This function calls:
  1651 ;;		_EnviaDato
  1652 ;;		_HabilitaLCD
  1653 ;;		_RetardoLCD
  1654 ;; This function is called by:
  1655 ;;		_MensajeLCD_Word
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text6
  1661  0000'                    __ptext6:
  1662                           	callstack 0
  1663  0000'                    _EscribeLCD_c:
  1664                           	callstack 26
  1665                           
  1666                           ;incstack = 0
  1667                           ;EscribeLCD_c@a stored from wreg
  1668  0000' 6E00'              	movwf	EscribeLCD_c@a^0,c
  1669                           
  1670                           ;LibLCDXC8.h: 144: LATE0=1;
  1671  0002' 808D               	bsf	3981,0,c	;volatile
  1672                           
  1673                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1674  0004' 5000'              	movf	EscribeLCD_c@a^0,w,c
  1675  0006' EC00' F000'        	call	_EnviaDato
  1676                           
  1677                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1678  000A' EC00' F000'        	call	_HabilitaLCD	;wreg free
  1679                           
  1680                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1681  000E' 0E04               	movlw	4
  1682  0010' EC00' F000'        	call	_RetardoLCD
  1683  0014' 0012               	return		;funcret
  1684  0016'                    __end_of_EscribeLCD_c:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _LeerTeclado *****************
  1688 ;; Defined at:
  1689 ;;		line 166 in file "Laboratorio4.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text7
  1718  0000'                    __ptext7:
  1719                           	callstack 0
  1720  0000'                    _LeerTeclado:
  1721                           	callstack 29
  1722                           
  1723                           ;Laboratorio4.c: 167: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1724                           
  1725                           ;incstack = 0
  1726  0000' B881               	btfsc	3969,4,c	;volatile
  1727  0002' AA81               	btfss	3969,5,c	;volatile
  1728  0004' D004               	goto	u50
  1729  0006' AC81               	btfss	3969,6,c	;volatile
  1730  0008' D002               	goto	u50
  1731  000A' BE81               	btfsc	3969,7,c	;volatile
  1732  000C' D7F9               	goto	__ptext7
  1733  000E'                    u50:
  1734                           
  1735                           ;Laboratorio4.c: 168: LATB=0b11111110;
  1736  000E' 0EFE               	movlw	254
  1737  0010' 6E8A               	movwf	138,c	;volatile
  1738                           
  1739                           ;Laboratorio4.c: 169: if(RB4==0) return '1';
  1740  0012' B881               	btfsc	3969,4,c	;volatile
  1741  0014' D002               	goto	l198
  1742  0016' 0E31               	movlw	49
  1743  0018' 0012               	return	
  1744  001A'                    l198:
  1745                           
  1746                           ;Laboratorio4.c: 170: else if(RB5==0) return '2';
  1747  001A' BA81               	btfsc	3969,5,c	;volatile
  1748  001C' D002               	goto	l201
  1749  001E' 0E32               	movlw	50
  1750  0020' 0012               	return	
  1751  0022'                    l201:
  1752                           
  1753                           ;Laboratorio4.c: 171: else if(RB6==0) return '3';
  1754  0022' BC81               	btfsc	3969,6,c	;volatile
  1755  0024' D002               	goto	l203
  1756  0026' 0E33               	movlw	51
  1757  0028' 0012               	return	
  1758  002A'                    l203:
  1759                           
  1760                           ;Laboratorio4.c: 172: else if(RB7==0) return '+';
  1761  002A' BE81               	btfsc	3969,7,c	;volatile
  1762  002C' D002               	goto	l1145
  1763  002E' 0E2B               	movlw	43
  1764  0030' 0012               	return	
  1765  0032'                    l1145:
  1766                           
  1767                           ;Laboratorio4.c: 173: else{;Laboratorio4.c: 174: LATB=0b11111101;
  1768  0032' 0EFD               	movlw	253
  1769  0034' 6E8A               	movwf	138,c	;volatile
  1770                           
  1771                           ;Laboratorio4.c: 175: if(RB4==0) return '4';
  1772  0036' B881               	btfsc	3969,4,c	;volatile
  1773  0038' D002               	goto	l207
  1774  003A' 0E34               	movlw	52
  1775  003C' 0012               	return	
  1776  003E'                    l207:
  1777                           
  1778                           ;Laboratorio4.c: 176: else if(RB5==0) return '5';
  1779  003E' BA81               	btfsc	3969,5,c	;volatile
  1780  0040' D002               	goto	l209
  1781  0042' 0E35               	movlw	53
  1782  0044' 0012               	return	
  1783  0046'                    l209:
  1784                           
  1785                           ;Laboratorio4.c: 177: else if(RB6==0) return '6';
  1786  0046' BC81               	btfsc	3969,6,c	;volatile
  1787  0048' D002               	goto	l211
  1788  004A' 0E36               	movlw	54
  1789  004C' 0012               	return	
  1790  004E'                    l211:
  1791                           
  1792                           ;Laboratorio4.c: 178: else if(RB7==0) return '-';
  1793  004E' BE81               	btfsc	3969,7,c	;volatile
  1794  0050' D002               	goto	l1173
  1795  0052' 0E2D               	movlw	45
  1796  0054' 0012               	return	
  1797  0056'                    l1173:
  1798                           
  1799                           ;Laboratorio4.c: 179: else{;Laboratorio4.c: 180: LATB=0b11111011;
  1800  0056' 0EFB               	movlw	251
  1801  0058' 6E8A               	movwf	138,c	;volatile
  1802                           
  1803                           ;Laboratorio4.c: 181: if(RB4==0) return '7';
  1804  005A' B881               	btfsc	3969,4,c	;volatile
  1805  005C' D002               	goto	l215
  1806  005E' 0E37               	movlw	55
  1807  0060' 0012               	return	
  1808  0062'                    l215:
  1809                           
  1810                           ;Laboratorio4.c: 182: else if(RB5==0) return '8';
  1811  0062' BA81               	btfsc	3969,5,c	;volatile
  1812  0064' D002               	goto	l217
  1813  0066' 0E38               	movlw	56
  1814  0068' 0012               	return	
  1815  006A'                    l217:
  1816                           
  1817                           ;Laboratorio4.c: 183: else if(RB6==0) return '9';
  1818  006A' BC81               	btfsc	3969,6,c	;volatile
  1819  006C' D002               	goto	l219
  1820  006E' 0E39               	movlw	57
  1821  0070' 0012               	return	
  1822  0072'                    l219:
  1823                           
  1824                           ;Laboratorio4.c: 184: else if(RB7==0) return '/';
  1825  0072' BE81               	btfsc	3969,7,c	;volatile
  1826  0074' D002               	goto	l1201
  1827  0076' 0E2F               	movlw	47
  1828  0078' 0012               	return	
  1829  007A'                    l1201:
  1830                           
  1831                           ;Laboratorio4.c: 185: else{;Laboratorio4.c: 186: LATB=0b11110111;
  1832  007A' 0EF7               	movlw	247
  1833  007C' 6E8A               	movwf	138,c	;volatile
  1834                           
  1835                           ;Laboratorio4.c: 187: if(RB4==0) return 'C';
  1836  007E' B881               	btfsc	3969,4,c	;volatile
  1837  0080' D002               	goto	l223
  1838  0082' 0E43               	movlw	67
  1839  0084' 0012               	return	
  1840  0086'                    l223:
  1841                           
  1842                           ;Laboratorio4.c: 188: else if(RB5==0) return '0';
  1843  0086' BA81               	btfsc	3969,5,c	;volatile
  1844  0088' D002               	goto	l225
  1845  008A' 0E30               	movlw	48
  1846  008C' 0012               	return	
  1847  008E'                    l225:
  1848                           
  1849                           ;Laboratorio4.c: 189: else if(RB6==0) return '=';
  1850  008E' BC81               	btfsc	3969,6,c	;volatile
  1851  0090' D002               	goto	l227
  1852  0092' 0E3D               	movlw	61
  1853  0094' 0012               	return	
  1854  0096'                    l227:
  1855                           
  1856                           ;Laboratorio4.c: 190: else if(RB7==0) return 'x';
  1857  0096' BE81               	btfsc	3969,7,c	;volatile
  1858  0098' D002               	goto	l224
  1859  009A' 0E78               	movlw	120
  1860  009C' 0012               	return	
  1861  009E'                    l224:
  1862                           
  1863                           ;Laboratorio4.c: 191: };Laboratorio4.c: 192: };Laboratorio4.c: 193: };Laboratorio4.c: 19
      +                          4: return '?';
  1864  009E' 0E3F               	movlw	63
  1865  00A0' 0012               	return		;funcret
  1866  00A2'                    __end_of_LeerTeclado:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _InicializaLCD *****************
  1870 ;; Defined at:
  1871 ;;		line 71 in file "LibLCDXC8.h"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 4
  1892 ;; This function calls:
  1893 ;;		_BorraLCD
  1894 ;;		_EnviaDato
  1895 ;;		_HabilitaLCD
  1896 ;;		_RetardoLCD
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text8
  1903  0000'                    __ptext8:
  1904                           	callstack 0
  1905  0000'                    _InicializaLCD:
  1906                           	callstack 26
  1907                           
  1908                           ;LibLCDXC8.h: 73: LATE0=0;
  1909                           
  1910                           ;incstack = 0
  1911  0000' 908D               	bcf	3981,0,c	;volatile
  1912                           
  1913                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1914                           
  1915                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1916  0002' 0E3F               	movlw	63
  1917  0004' 6E8C               	movwf	140,c	;volatile
  1918                           
  1919                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1920  0006' EC00' F000'        	call	_HabilitaLCD	;wreg free
  1921                           
  1922                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1923  000A' 0E01               	movlw	1
  1924  000C' EC00' F000'        	call	_RetardoLCD
  1925                           
  1926                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1927                           
  1928                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1929  0010' 0E3F               	movlw	63
  1930  0012' 6E8C               	movwf	140,c	;volatile
  1931                           
  1932                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1933  0014' EC00' F000'        	call	_HabilitaLCD	;wreg free
  1934                           
  1935                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1936  0018' 0E03               	movlw	3
  1937  001A' EC00' F000'        	call	_RetardoLCD
  1938                           
  1939                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1940                           
  1941                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1942  001E' 0E3F               	movlw	63
  1943  0020' 6E8C               	movwf	140,c	;volatile
  1944                           
  1945                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1946  0022' EC00' F000'        	call	_HabilitaLCD	;wreg free
  1947                           
  1948                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1949  0026' 0E04               	movlw	4
  1950  0028' EC00' F000'        	call	_RetardoLCD
  1951                           
  1952                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1953                           
  1954                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1955  002C' EC00' F000'        	call	_BorraLCD	;wreg free
  1956                           
  1957                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1958  0030' 0E0F               	movlw	15
  1959  0032' EC00' F000'        	call	_EnviaDato
  1960                           
  1961                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1962  0036' EC00' F000'        	call	_HabilitaLCD	;wreg free
  1963                           
  1964                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1965  003A' 0E04               	movlw	4
  1966  003C' EC00' F000'        	call	_RetardoLCD
  1967  0040' 0012               	return		;funcret
  1968  0042'                    __end_of_InicializaLCD:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _BorraLCD *****************
  1972 ;; Defined at:
  1973 ;;		line 112 in file "LibLCDXC8.h"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 3
  1994 ;; This function calls:
  1995 ;;		_EnviaDato
  1996 ;;		_HabilitaLCD
  1997 ;;		_RetardoLCD
  1998 ;; This function is called by:
  1999 ;;		_InicializaLCD
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text9
  2005  0000'                    __ptext9:
  2006                           	callstack 0
  2007  0000'                    _BorraLCD:
  2008                           	callstack 26
  2009                           
  2010                           ;LibLCDXC8.h: 114: LATE0=0;
  2011                           
  2012                           ;incstack = 0
  2013  0000' 908D               	bcf	3981,0,c	;volatile
  2014                           
  2015                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2016  0002' 0E01               	movlw	1
  2017  0004' EC00' F000'        	call	_EnviaDato
  2018                           
  2019                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2020  0008' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2021                           
  2022                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2023  000C' 0E02               	movlw	2
  2024  000E' EC00' F000'        	call	_RetardoLCD
  2025  0012' 0012               	return		;funcret
  2026  0014'                    __end_of_BorraLCD:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _DireccionaLCD *****************
  2030 ;; Defined at:
  2031 ;;		line 250 in file "LibLCDXC8.h"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  a               1    wreg     unsigned char 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  a               1    3[COMRAM] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         0       0       0       0       0       0       0       0       0
  2046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2049 ;;Total ram usage:        1 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 3
  2052 ;; This function calls:
  2053 ;;		_EnviaDato
  2054 ;;		_HabilitaLCD
  2055 ;;		_RetardoLCD
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text10
  2062  0000'                    __ptext10:
  2063                           	callstack 0
  2064  0000'                    _DireccionaLCD:
  2065                           	callstack 27
  2066                           
  2067                           ;incstack = 0
  2068                           ;DireccionaLCD@a stored from wreg
  2069  0000' 6E00'              	movwf	DireccionaLCD@a^0,c
  2070                           
  2071                           ;LibLCDXC8.h: 253: LATE0=0;
  2072  0002' 908D               	bcf	3981,0,c	;volatile
  2073                           
  2074                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2075  0004' 5000'              	movf	DireccionaLCD@a^0,w,c
  2076  0006' EC00' F000'        	call	_EnviaDato
  2077                           
  2078                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2079  000A' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2080                           
  2081                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2082  000E' 0E04               	movlw	4
  2083  0010' EC00' F000'        	call	_RetardoLCD
  2084  0014' 0012               	return		;funcret
  2085  0016'                    __end_of_DireccionaLCD:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _EnviaDato *****************
  2089 ;; Defined at:
  2090 ;;		line 59 in file "LibLCDXC8.h"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  a               1    wreg     unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  a               1    2[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         0       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        1 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 2
  2111 ;; This function calls:
  2112 ;;		_HabilitaLCD
  2113 ;;		_RetardoLCD
  2114 ;; This function is called by:
  2115 ;;		_InicializaLCD
  2116 ;;		_BorraLCD
  2117 ;;		_EscribeLCD_c
  2118 ;;		_DireccionaLCD
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text11
  2123  0000'                    __ptext11:
  2124                           	callstack 0
  2125  0000'                    _EnviaDato:
  2126                           	callstack 26
  2127                           
  2128                           ;incstack = 0
  2129                           ;EnviaDato@a stored from wreg
  2130  0000' 6E00'              	movwf	EnviaDato@a^0,c
  2131                           
  2132                           ;LibLCDXC8.h: 68: LATD=a;
  2133                           
  2134                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2135  0002' C002' FF8C         	movff	EnviaDato@a,3980	;volatile
  2136  0006' 0012               	return		;funcret
  2137  0008'                    __end_of_EnviaDato:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _RetardoLCD *****************
  2141 ;; Defined at:
  2142 ;;		line 286 in file "LibLCDXC8.h"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  a               1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  a               1    1[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_EnviaDato
  2167 ;;		_InicializaLCD
  2168 ;;		_BorraLCD
  2169 ;;		_EscribeLCD_c
  2170 ;;		_DireccionaLCD
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text12
  2175  0000'                    __ptext12:
  2176                           	callstack 0
  2177  0000'                    _RetardoLCD:
  2178                           	callstack 27
  2179                           
  2180                           ;incstack = 0
  2181                           ;RetardoLCD@a stored from wreg
  2182  0000' 6E00'              	movwf	RetardoLCD@a^0,c
  2183                           
  2184                           ;LibLCDXC8.h: 287: switch(a){
  2185  0002' D01B               	goto	l1017
  2186  0004'                    l1007:
  2187  0004' 0E05               	movlw	5
  2188  0006' 6E00'              	movwf	??_RetardoLCD^0,c
  2189  0008' 0EDE               	movlw	222
  2190  000A'                    u1507:
  2191  000A' 2EE8               	decfsz	wreg,f,c
  2192  000C' D7FE               	bra	u1507
  2193  000E' 2E00'              	decfsz	??_RetardoLCD^0,f,c
  2194  0010' D7FC               	bra	u1507
  2195                           
  2196                           ;LibLCDXC8.h: 290: break;
  2197  0012' 0012               	return	
  2198  0014'                    l1009:
  2199  0014' 0E53               	movlw	83
  2200  0016'                    u1517:
  2201  0016' 2EE8               	decfsz	wreg,f,c
  2202  0018' D7FE               	bra	u1517
  2203  001A' F000               	nop	
  2204                           
  2205                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2206  001C' 0E35               	movlw	53
  2207  001E'                    u1527:
  2208  001E' 2EE8               	decfsz	wreg,f,c
  2209  0020' D7FE               	bra	u1527
  2210  0022' F000               	nop	
  2211                           
  2212                           ;LibLCDXC8.h: 294: break;
  2213  0024' 0012               	return	
  2214  0026'                    l1011:
  2215  0026' 0E08               	movlw	8
  2216  0028'                    u1537:
  2217  0028' 2EE8               	decfsz	wreg,f,c
  2218  002A' D7FE               	bra	u1537
  2219  002C' F000               	nop	
  2220                           
  2221                           ;LibLCDXC8.h: 297: break;
  2222  002E' 0012               	return	
  2223  0030'                    l1013:
  2224  0030' 0E03               	movlw	3
  2225  0032'                    u1547:
  2226  0032' 2EE8               	decfsz	wreg,f,c
  2227  0034' D7FE               	bra	u1547
  2228  0036' F000               	nop	
  2229                           
  2230                           ;LibLCDXC8.h: 300: break;
  2231  0038' 0012               	return	
  2232  003A'                    l1017:
  2233  003A' 5000'              	movf	RetardoLCD@a^0,w,c
  2234                           
  2235                           ; Switch size 1, requested type "simple"
  2236                           ; Number of cases is 4, Range of values is 1 to 4
  2237                           ; switch strategies available:
  2238                           ; Name         Instructions Cycles
  2239                           ; simple_byte           13     7 (average)
  2240                           ;	Chosen strategy is simple_byte
  2241  003C' 0A01               	xorlw	1	; case 1
  2242  003E' B4D8               	btfsc	status,2,c
  2243  0040' D7E1               	goto	l1007
  2244  0042' 0A03               	xorlw	3	; case 2
  2245  0044' B4D8               	btfsc	status,2,c
  2246  0046' D7E6               	goto	l1009
  2247  0048' 0A01               	xorlw	1	; case 3
  2248  004A' B4D8               	btfsc	status,2,c
  2249  004C' D7EC               	goto	l1011
  2250  004E' 0A07               	xorlw	7	; case 4
  2251  0050' A4D8               	btfss	status,2,c
  2252  0052' 0012               	return	
  2253  0054' D7ED               	goto	l1013
  2254  0056'                    __end_of_RetardoLCD:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _HabilitaLCD *****************
  2258 ;; Defined at:
  2259 ;;		line 105 in file "LibLCDXC8.h"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_EnviaDato
  2284 ;;		_InicializaLCD
  2285 ;;		_BorraLCD
  2286 ;;		_EscribeLCD_c
  2287 ;;		_DireccionaLCD
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text13
  2292  0000'                    __ptext13:
  2293                           	callstack 0
  2294  0000'                    _HabilitaLCD:
  2295                           	callstack 27
  2296                           
  2297                           ;LibLCDXC8.h: 107: LATE1=1;
  2298                           
  2299                           ;incstack = 0
  2300  0000' 828D               	bsf	3981,1,c	;volatile
  2301                           
  2302                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2303  0002' 0E03               	movlw	3
  2304  0004'                    u1557:
  2305  0004' 2EE8               	decfsz	wreg,f,c
  2306  0006' D7FE               	bra	u1557
  2307  0008' F000               	nop	
  2308                           
  2309                           ;LibLCDXC8.h: 110: LATE1=0;
  2310  000A' 928D               	bcf	3981,1,c	;volatile
  2311  000C' 0012               	return		;funcret
  2312  000E'                    __end_of_HabilitaLCD:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _ColorRGB *****************
  2316 ;; Defined at:
  2317 ;;		line 197 in file "Laboratorio4.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        2 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text14
  2346  0000'                    __ptext14:
  2347                           	callstack 0
  2348  0000'                    _ColorRGB:
  2349                           	callstack 29
  2350                           
  2351                           ;Laboratorio4.c: 198: if(color==8) color = 0;
  2352                           
  2353                           ;incstack = 0
  2354  0000' 0E08               	movlw	8
  2355  0002' 1800'              	xorwf	_color^0,w,c
  2356  0004' 1000'              	iorwf	(_color+1)^0,w,c
  2357  0006' A4D8               	btfss	status,2,c
  2358  0008' D014               	goto	l1253
  2359  000A' 0E00               	movlw	0
  2360  000C' 6E00'              	movwf	(_color+1)^0,c
  2361  000E' 0E00               	movlw	0
  2362  0010' 6E00'              	movwf	_color^0,c
  2363  0012' D00F               	goto	l1253
  2364  0014'                    l1235:
  2365                           
  2366                           ;Laboratorio4.c: 201: LATC = 0b00000000;
  2367  0014' 0E00               	movlw	0
  2368  0016' D00B               	goto	L9
  2369  0018'                    l1237:
  2370                           
  2371                           ;Laboratorio4.c: 204: LATC = 0b00000101;
  2372  0018' 0E05               	movlw	5
  2373  001A' D009               	goto	L9
  2374  001C'                    l1239:
  2375                           
  2376                           ;Laboratorio4.c: 207: LATC = 0b00000110;
  2377  001C' 0E06               	movlw	6
  2378  001E' D007               	goto	L9
  2379  0020'                    l1241:
  2380                           
  2381                           ;Laboratorio4.c: 210: LATC = 0b00000011;
  2382  0020' 0E03               	movlw	3
  2383  0022' D005               	goto	L9
  2384  0024'                    l1243:
  2385                           
  2386                           ;Laboratorio4.c: 213: LATC = 0b00000010;
  2387  0024' 0E02               	movlw	2
  2388  0026' D003               	goto	L9
  2389  0028'                    l1247:
  2390                           
  2391                           ;Laboratorio4.c: 219: LATC = 0b00000100;
  2392  0028' 0E04               	movlw	4
  2393  002A' D001               	goto	L9
  2394  002C'                    l1249:
  2395                           
  2396                           ;Laboratorio4.c: 222: LATC = 0b00000111;
  2397  002C' 0E07               	movlw	7
  2398  002E'                    L9:
  2399  002E' 6E8B               	movwf	139,c	;volatile
  2400                           
  2401                           ;Laboratorio4.c: 223: break;
  2402  0030' D021               	goto	l1255
  2403  0032'                    l1253:
  2404  0032' C00A' F000'        	movff	_color,??_ColorRGB
  2405  0036' C00B' F001'        	movff	_color+1,??_ColorRGB+1
  2406                           
  2407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2408                           ; Switch size 1, requested type "simple"
  2409                           ; Number of cases is 1, Range of values is 0 to 0
  2410                           ; switch strategies available:
  2411                           ; Name         Instructions Cycles
  2412                           ; simple_byte            4     3 (average)
  2413                           ;	Chosen strategy is simple_byte
  2414  003A' 5000'              	movf	(??_ColorRGB+1)^0,w,c
  2415  003C' 0A00               	xorlw	0	; case 0
  2416  003E' A4D8               	btfss	status,2,c
  2417  0040' D019               	goto	l1255
  2418                           
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 8, Range of values is 0 to 7
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte           25    13 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425  0042' 5000'              	movf	??_ColorRGB^0,w,c
  2426  0044' 0A00               	xorlw	0	; case 0
  2427  0046' B4D8               	btfsc	status,2,c
  2428  0048' D7E5               	goto	l1235
  2429  004A' 0A01               	xorlw	1	; case 1
  2430  004C' B4D8               	btfsc	status,2,c
  2431  004E' D7E4               	goto	l1237
  2432  0050' 0A03               	xorlw	3	; case 2
  2433  0052' B4D8               	btfsc	status,2,c
  2434  0054' D7E3               	goto	l1239
  2435  0056' 0A01               	xorlw	1	; case 3
  2436  0058' B4D8               	btfsc	status,2,c
  2437  005A' D7E2               	goto	l1241
  2438  005C' 0A07               	xorlw	7	; case 4
  2439  005E' B4D8               	btfsc	status,2,c
  2440  0060' D7E1               	goto	l1243
  2441  0062' 0A01               	xorlw	1	; case 5
  2442  0064' B4D8               	btfsc	status,2,c
  2443  0066' D7DA               	goto	l1239
  2444  0068' 0A03               	xorlw	3	; case 6
  2445  006A' B4D8               	btfsc	status,2,c
  2446  006C' D7DD               	goto	l1247
  2447  006E' 0A01               	xorlw	1	; case 7
  2448  0070' B4D8               	btfsc	status,2,c
  2449  0072' D7DC               	goto	l1249
  2450  0074'                    l1255:
  2451                           
  2452                           ;Laboratorio4.c: 227: color += 1;
  2453  0074' 4A00'              	infsnz	_color^0,f,c
  2454  0076' 2A00'              	incf	(_color+1)^0,f,c
  2455  0078' 0012               	return		;funcret
  2456  007A'                    __end_of_ColorRGB:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _ISR *****************
  2460 ;; Defined at:
  2461 ;;		line 230 in file "Laboratorio4.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		Interrupt level 2
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	intcode
  2489  0000'                    __pintcode:
  2490                           	callstack 0
  2491  0000'                    _ISR:
  2492                           	callstack 26
  2493                           
  2494                           ;incstack = 0
  2495  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2496  0002' ED00' F000'        	call	int_func,f	;refresh shadow registers
  2497                           
  2498                           	psect	intcode_body
  2499  0000'                    __pintcode_body:
  2500                           	callstack 26
  2501  0000'                    int_func:
  2502                           	callstack 26
  2503  0000' 0006               	pop		; remove dummy address from shadow register refresh
  2504                           
  2505                           ;Laboratorio4.c: 231: if(TMR0IF==1){
  2506  0002' A4F2               	btfss	4082,2,c	;volatile
  2507  0004' D010               	goto	i2l1561
  2508                           
  2509                           ;Laboratorio4.c: 232: contador = contador +1;
  2510  0006' 0E01               	movlw	1
  2511  0008' 2400'              	addwf	_contador^0,w,c
  2512  000A' 6E00'              	movwf	_contador^0,c
  2513  000C' 0E00               	movlw	0
  2514  000E' 2000'              	addwfc	(_contador+1)^0,w,c
  2515  0010' 6E00'              	movwf	(_contador+1)^0,c
  2516                           
  2517                           ;Laboratorio4.c: 233: TMR0IF=0;
  2518  0012' 94F2               	bcf	4082,2,c	;volatile
  2519                           
  2520                           ;Laboratorio4.c: 234: LATE2 = !LATE2;
  2521  0014' B48D               	btfsc	3981,2,c	;volatile
  2522  0016' D002               	goto	i2u83_40
  2523  0018' 848D               	bsf	3981,2,c	;volatile
  2524  001A' D001               	goto	i2u84_45
  2525  001C'                    i2u83_40:
  2526  001C' 948D               	bcf	3981,2,c	;volatile
  2527  001E'                    i2u84_45:
  2528                           
  2529                           ;Laboratorio4.c: 235: TMR0 = 49911;
  2530  001E' 0EC2               	movlw	194
  2531  0020' 6ED7               	movwf	215,c	;volatile
  2532  0022' 0EF7               	movlw	247
  2533  0024' 6ED6               	movwf	214,c	;volatile
  2534  0026'                    i2l1561:
  2535                           
  2536                           ;Laboratorio4.c: 236: };Laboratorio4.c: 238: if(contador == 10){
  2537  0026' 0E0A               	movlw	10
  2538  0028' 1800'              	xorwf	_contador^0,w,c
  2539  002A' 1000'              	iorwf	(_contador+1)^0,w,c
  2540  002C' A4D8               	btfss	status,2,c
  2541  002E' D009               	goto	i2l251
  2542                           
  2543                           ;Laboratorio4.c: 239: LATC7 = !LATC7;
  2544  0030' BE8B               	btfsc	3979,7,c	;volatile
  2545  0032' D002               	goto	i2u86_40
  2546  0034' 8E8B               	bsf	3979,7,c	;volatile
  2547  0036' D001               	goto	i2u87_45
  2548  0038'                    i2u86_40:
  2549  0038' 9E8B               	bcf	3979,7,c	;volatile
  2550  003A'                    i2u87_45:
  2551                           
  2552                           ;Laboratorio4.c: 240: contador = 0;
  2553  003A' 0E00               	movlw	0
  2554  003C' 6E00'              	movwf	(_contador+1)^0,c
  2555  003E' 0E00               	movlw	0
  2556  0040' 6E00'              	movwf	_contador^0,c
  2557  0042'                    i2l251:
  2558  0042' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2559  0044' 0011               	retfie		f
  2560  0046'                    __end_of_ISR:
  2561                           	callstack 0
  2562                           
  2563                           	psect	rparam
  2564  0000                     
  2565                           	psect	temp
  2566  0000'                    btemp:
  2567                           	callstack 0
  2568  0000'                    	ds	1
  2569  0000                     int$flags	set	btemp
  2570  0000                     wtemp8	set	btemp+1
  2571  0000                     ttemp5	set	btemp+1
  2572  0000                     ttemp6	set	btemp+4
  2573  0000                     ttemp7	set	btemp+8
  2574                           
  2575                           	psect	idloc
  2576                           
  2577                           ;Config register IDLOC0 @ 0x200000
  2578                           ;	unspecified, using default values
  2579  200000                     	org	2097152
  2580  200000  FF                 	db	255
  2581                           
  2582                           ;Config register IDLOC1 @ 0x200001
  2583                           ;	unspecified, using default values
  2584  200001                     	org	2097153
  2585  200001  FF                 	db	255
  2586                           
  2587                           ;Config register IDLOC2 @ 0x200002
  2588                           ;	unspecified, using default values
  2589  200002                     	org	2097154
  2590  200002  FF                 	db	255
  2591                           
  2592                           ;Config register IDLOC3 @ 0x200003
  2593                           ;	unspecified, using default values
  2594  200003                     	org	2097155
  2595  200003  FF                 	db	255
  2596                           
  2597                           ;Config register IDLOC4 @ 0x200004
  2598                           ;	unspecified, using default values
  2599  200004                     	org	2097156
  2600  200004  FF                 	db	255
  2601                           
  2602                           ;Config register IDLOC5 @ 0x200005
  2603                           ;	unspecified, using default values
  2604  200005                     	org	2097157
  2605  200005  FF                 	db	255
  2606                           
  2607                           ;Config register IDLOC6 @ 0x200006
  2608                           ;	unspecified, using default values
  2609  200006                     	org	2097158
  2610  200006  FF                 	db	255
  2611                           
  2612                           ;Config register IDLOC7 @ 0x200007
  2613                           ;	unspecified, using default values
  2614  200007                     	org	2097159
  2615  200007  FF                 	db	255
  2616                           
  2617                           	psect	config
  2618                           
  2619                           ;Config register CONFIG1L @ 0x300000
  2620                           ;	unspecified, using default values
  2621                           ;	PLL Prescaler Selection bits
  2622                           ;	PLLDIV = 0x0, unprogrammed default
  2623                           ;	System Clock Postscaler Selection bits
  2624                           ;	CPUDIV = 0x0, unprogrammed default
  2625                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2626                           ;	USBDIV = 0x0, unprogrammed default
  2627  300000                     	org	3145728
  2628  300000  00                 	db	0
  2629                           
  2630                           ;Config register CONFIG1H @ 0x300001
  2631                           ;	Oscillator Selection bits
  2632                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2633                           ;	Fail-Safe Clock Monitor Enable bit
  2634                           ;	FCMEN = 0x0, unprogrammed default
  2635                           ;	Internal/External Oscillator Switchover bit
  2636                           ;	IESO = 0x0, unprogrammed default
  2637  300001                     	org	3145729
  2638  300001  09                 	db	9
  2639                           
  2640                           ;Config register CONFIG2L @ 0x300002
  2641                           ;	unspecified, using default values
  2642                           ;	Power-up Timer Enable bit
  2643                           ;	PWRT = 0x1, unprogrammed default
  2644                           ;	Brown-out Reset Enable bits
  2645                           ;	BOR = 0x3, unprogrammed default
  2646                           ;	Brown-out Reset Voltage bits
  2647                           ;	BORV = 0x3, unprogrammed default
  2648                           ;	USB Voltage Regulator Enable bit
  2649                           ;	VREGEN = 0x0, unprogrammed default
  2650  300002                     	org	3145730
  2651  300002  1F                 	db	31
  2652                           
  2653                           ;Config register CONFIG2H @ 0x300003
  2654                           ;	Watchdog Timer Enable bit
  2655                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2656                           ;	Watchdog Timer Postscale Select bits
  2657                           ;	WDTPS = 0xF, unprogrammed default
  2658  300003                     	org	3145731
  2659  300003  1E                 	db	30
  2660                           
  2661                           ; Padding undefined space
  2662  300004                     	org	3145732
  2663  300004  FF                 	db	255
  2664                           
  2665                           ;Config register CONFIG3H @ 0x300005
  2666                           ;	unspecified, using default values
  2667                           ;	CCP2 MUX bit
  2668                           ;	CCP2MX = 0x1, unprogrammed default
  2669                           ;	PORTB A/D Enable bit
  2670                           ;	PBADEN = 0x1, unprogrammed default
  2671                           ;	Low-Power Timer 1 Oscillator Enable bit
  2672                           ;	LPT1OSC = 0x0, unprogrammed default
  2673                           ;	MCLR Pin Enable bit
  2674                           ;	MCLRE = 0x1, unprogrammed default
  2675  300005                     	org	3145733
  2676  300005  83                 	db	131
  2677                           
  2678                           ;Config register CONFIG4L @ 0x300006
  2679                           ;	unspecified, using default values
  2680                           ;	Stack Full/Underflow Reset Enable bit
  2681                           ;	STVREN = 0x1, unprogrammed default
  2682                           ;	Single-Supply ICSP Enable bit
  2683                           ;	LVP = 0x1, unprogrammed default
  2684                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2685                           ;	ICPRT = 0x0, unprogrammed default
  2686                           ;	Extended Instruction Set Enable bit
  2687                           ;	XINST = 0x0, unprogrammed default
  2688                           ;	Background Debugger Enable bit
  2689                           ;	DEBUG = 0x1, unprogrammed default
  2690  300006                     	org	3145734
  2691  300006  85                 	db	133
  2692                           
  2693                           ; Padding undefined space
  2694  300007                     	org	3145735
  2695  300007  FF                 	db	255
  2696                           
  2697                           ;Config register CONFIG5L @ 0x300008
  2698                           ;	unspecified, using default values
  2699                           ;	Code Protection bit
  2700                           ;	CP0 = 0x1, unprogrammed default
  2701                           ;	Code Protection bit
  2702                           ;	CP1 = 0x1, unprogrammed default
  2703                           ;	Code Protection bit
  2704                           ;	CP2 = 0x1, unprogrammed default
  2705                           ;	Code Protection bit
  2706                           ;	CP3 = 0x1, unprogrammed default
  2707  300008                     	org	3145736
  2708  300008  0F                 	db	15
  2709                           
  2710                           ;Config register CONFIG5H @ 0x300009
  2711                           ;	unspecified, using default values
  2712                           ;	Boot Block Code Protection bit
  2713                           ;	CPB = 0x1, unprogrammed default
  2714                           ;	Data EEPROM Code Protection bit
  2715                           ;	CPD = 0x1, unprogrammed default
  2716  300009                     	org	3145737
  2717  300009  C0                 	db	192
  2718                           
  2719                           ;Config register CONFIG6L @ 0x30000A
  2720                           ;	unspecified, using default values
  2721                           ;	Write Protection bit
  2722                           ;	WRT0 = 0x1, unprogrammed default
  2723                           ;	Write Protection bit
  2724                           ;	WRT1 = 0x1, unprogrammed default
  2725                           ;	Write Protection bit
  2726                           ;	WRT2 = 0x1, unprogrammed default
  2727                           ;	Write Protection bit
  2728                           ;	WRT3 = 0x1, unprogrammed default
  2729  30000A                     	org	3145738
  2730  30000A  0F                 	db	15
  2731                           
  2732                           ;Config register CONFIG6H @ 0x30000B
  2733                           ;	unspecified, using default values
  2734                           ;	Configuration Register Write Protection bit
  2735                           ;	WRTC = 0x1, unprogrammed default
  2736                           ;	Boot Block Write Protection bit
  2737                           ;	WRTB = 0x1, unprogrammed default
  2738                           ;	Data EEPROM Write Protection bit
  2739                           ;	WRTD = 0x1, unprogrammed default
  2740  30000B                     	org	3145739
  2741  30000B  E0                 	db	224
  2742                           
  2743                           ;Config register CONFIG7L @ 0x30000C
  2744                           ;	unspecified, using default values
  2745                           ;	Table Read Protection bit
  2746                           ;	EBTR0 = 0x1, unprogrammed default
  2747                           ;	Table Read Protection bit
  2748                           ;	EBTR1 = 0x1, unprogrammed default
  2749                           ;	Table Read Protection bit
  2750                           ;	EBTR2 = 0x1, unprogrammed default
  2751                           ;	Table Read Protection bit
  2752                           ;	EBTR3 = 0x1, unprogrammed default
  2753  30000C                     	org	3145740
  2754  30000C  0F                 	db	15
  2755                           
  2756                           ;Config register CONFIG7H @ 0x30000D
  2757                           ;	unspecified, using default values
  2758                           ;	Boot Block Table Read Protection bit
  2759                           ;	EBTRB = 0x1, unprogrammed default
  2760  30000D                     	org	3145741
  2761  30000D  40                 	db	64
  2762                           tosu	equ	0xFFF
  2763                           tosh	equ	0xFFE
  2764                           tosl	equ	0xFFD
  2765                           stkptr	equ	0xFFC
  2766                           pclatu	equ	0xFFB
  2767                           pclath	equ	0xFFA
  2768                           pcl	equ	0xFF9
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           indf0	equ	0xFEF
  2776                           postinc0	equ	0xFEE
  2777                           postdec0	equ	0xFED
  2778                           preinc0	equ	0xFEC
  2779                           plusw0	equ	0xFEB
  2780                           fsr0h	equ	0xFEA
  2781                           fsr0l	equ	0xFE9
  2782                           wreg	equ	0xFE8
  2783                           indf1	equ	0xFE7
  2784                           postinc1	equ	0xFE6
  2785                           postdec1	equ	0xFE5
  2786                           preinc1	equ	0xFE4
  2787                           plusw1	equ	0xFE3
  2788                           fsr1h	equ	0xFE2
  2789                           fsr1l	equ	0xFE1
  2790                           bsr	equ	0xFE0
  2791                           indf2	equ	0xFDF
  2792                           postinc2	equ	0xFDE
  2793                           postdec2	equ	0xFDD
  2794                           preinc2	equ	0xFDC
  2795                           plusw2	equ	0xFDB
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      2E       1       48.9%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      26        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhll       13      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      27        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 23:02:10 2023

                      _i 00000C                        _m 000013                        _r 000000  
                     u50 00000E                       _n1 000010                       _n2 00000E  
             EnviaDato@a 000002                       _op 000002      ___wmul@multiplicand 000002  
          ??_LeerTeclado 000000                      l201 000022                      l211 00004E  
                    l203 00002A            _InicializaLCD 000000                      l223 000086  
                    l215 000062                      l207 00003E                      l224 00009E  
                    l225 00008E                      l217 00006A                      l209 000046  
                    l227 000096                      l219 000072                      l198 00001A  
                    l733 000048                      l743 000038                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _ISR 000000                      u920 000022  
                    u950 00001A                      u880 000034                      _n1c 000001  
                    _n2c 000000                      wreg 000FE8                     ?_ISR 000000  
                   l1011 000026                     l1013 000030                     l1007 000004  
                   l1009 000014                     l1017 00003A                     l1201 00007A  
                   l1241 000020                     l1145 000032                     l1243 000024  
                   l1235 000014                     l1237 000018                     l1253 000032  
                   l1173 000056                     l1247 000028                     l1239 00001C  
                   l1255 000074                     l1249 00002C                     l1605 000016  
                   l1607 00001E                     l1617 00003E                     l1633 00002E  
                   l1625 00000E                     l1627 000016                     l1811 000332  
                   l1821 0003B8                     l1813 00034E                     l1591 000010  
                   l1807 000320                     l1719 000122                     l1663 000054  
                   l1577 000008                     l1817 0003A4                     l1595 000024  
                   l1739 000178                     l1763 0001DE                     l1829 00041A  
                   l1837 000448                     l1781 000266                     l1773 00020C  
                   l1863 000548                     l1855 0004D6                     l1775 000224  
                   l1871 00057E                     l1695 0000C0                     l1849 0004A2  
                   l1793 0002EA                     l1785 000284                     l1777 00025A  
                   l1867 00056E                     l1859 000522                     l1869 000578  
                   l1799 0002FE                     STR_1 000012                     STR_2 000001  
                   u1000 0000D8                     u1050 000100                     u1140 00015A  
                   u1230 0001C0                     u1400 00046A                     u1410 00047C  
                   u1420 0004B2                     u1430 0004C4                     u1350 0003B6  
                   _LATB 000F8A                     _LATC 000F8B                     u1440 0004D6  
                   _LATD 000F8C                     u1507 00000A                     u1517 000016  
                   u1390 000458                     u1527 00001E                     u1537 000028  
                   u1547 000032                     u1557 000004                     u1487 000044  
                   u1497 000584                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 000003                     _main 000000                     fsr1l 000FE1  
                   btemp 000000                     prodh 000FF4                     prodl 000FF3  
                   start 000000*            ___param_bank 000000                    ??_ISR 000000  
         ?_InicializaLCD 000000                    ?_main 000000            EscribeLCD_c@a 000003  
                  _T0CON 000FD5                    _LATE0 007C68                    _LATE1 007C69  
                  _LATE2 007C6A                    _LATC7 007C5F          __end_of___lwdiv 000052  
        __end_of___lwmod 000042                    i2l251 000042                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 000004                    _Tecla 000012      __end_of_LeerTeclado 0000A2  
                  _color 00000A                    main@i 000011                    tablat 000FF5  
            _HabilitaLCD 000000                    ttemp5 000001                    ttemp6 000004  
                  ttemp7 000008                    status 000FD8                    wtemp8 000001  
       __end_of_BorraLCD 000014         __end_of_ColorRGB 00007A          __initialization 000000  
           __end_of_main 000590                   ??_main 00000D            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 000003                   i2l1561 000026  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
  __end_of_DireccionaLCD 000016               _RetardoLCD 000000                   ___lmul 000000  
                 ___wmul 000000                ??___lwdiv 00000A                ??___lwmod 000004  
        ??_InicializaLCD 000003                   clear_0 000026                   isa$std 000001  
   __end_of_EscribeLCD_c 000016              _LeerTeclado 000000             __pdataCOMRAM 000000  
           __mediumconst 000000*                  tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 000000* __end_of__initialization 00002C  
          ___rparam_used 000001           __pcstackCOMRAM 000000        __end_of_EnviaDato 000008  
              ?_BorraLCD 000000                ?_ColorRGB 000000              ?_RetardoLCD 000000  
            RetardoLCD@a 000001                  ?___lmul 000000                  ?___wmul 000000  
         ___lmul@product 000008                  i2u83_40 00001C                  i2u84_45 00001E  
                i2u86_40 000038                  i2u87_45 00003A               ??_BorraLCD 000003  
             ??_ColorRGB 000000        ??_MensajeLCD_Word 000005             ?_HabilitaLCD 000000  
                __Hparam 000000                  __Lparam 000000                  ___lwdiv 000000  
                ___lwmod 000000             __psmallconst 000000                  __pcinit 000000  
                __ramtop 000000*                 __ptext0 000000                  __ptext1 000000  
                __ptext2 000000                  __ptext3 000000                  __ptext4 000000  
                __ptext5 000000                  __ptext6 000000                  __ptext7 000000  
                __ptext8 000000                  __ptext9 000000           __pintcode_body 000000  
   end_of_initialization 00002C            __Lmediumconst 000000*                 int_func 000000  
           _EscribeLCD_c 000000                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 000000           __end_of___lmul 000056           __end_of___wmul 000026  
          __pidataCOMRAM 000000    __end_of_InicializaLCD 000042                _EnviaDato 000000  
    start_initialization 000000              __end_of_ISR 000046             ??_RetardoLCD 000000  
               ??___lmul 000008                 ??___wmul 000004          _MensajeLCD_Word 000000  
             ?_EnviaDato 000000              __pbssCOMRAM 000000       __end_of_RetardoLCD 000056  
       MensajeLCD_Word@a 000004         MensajeLCD_Word@i 000006            _DireccionaLCD 000000  
       ___lwdiv@dividend 000006                __pintcode 000000                 ?___lwdiv 000006  
               ?___lwmod 000000              __smallconst 000000*        ___lwdiv@quotient 00000A  
         ___wmul@product 000004           ?_DireccionaLCD 000000  __end_of_MensajeLCD_Word 000036  
      ___wmul@multiplier 000000              ??_EnviaDato 000002                 _BorraLCD 000000  
               _ColorRGB 000000        ___lmul@multiplier 000000                copy_data0 000014  
               __Hrparam 000000*                __Lrparam 000000*         ___lwdiv@divisor 000008  
        ___lwdiv@counter 00000C                 __ptext10 000000                 __ptext11 000000  
               __ptext12 000000                 __ptext13 000000                 __ptext14 000000  
               _contador 000008          ??_DireccionaLCD 000003                 _interfaz 000003  
               _partdecl 000004                 isa$xinst 000000         ?_MensajeLCD_Word 000004  
               int$flags 000000                 intlevel2 000000*           ??_HabilitaLCD 000000  
       ___lwmod@dividend 000000          ___lwmod@divisor 000002          ___lwmod@counter 000004  
          ?_EscribeLCD_c 000000      __end_of_HabilitaLCD 00000E  

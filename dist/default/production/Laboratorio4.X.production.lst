

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 12 23:25:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.40
    29                           ; Generated 04/07/2022 GMT
    30                           ; 
    31                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   000E0C                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _n2c
    69   000E0C  20                 	db	32
    70                           
    71                           ;initializer for _n1c
    72   000E0D  20                 	db	32
    73                           
    74                           ;initializer for _op
    75   000E0E  20                 	db	32
    76                           
    77                           ;initializer for _interfaz
    78   000E0F  08                 	db	8
    79   000000                     _RB7	set	31759
    80   000000                     _RB6	set	31758
    81   000000                     _RB5	set	31757
    82   000000                     _LATE1	set	31849
    83   000000                     _LATB	set	3978
    84   000000                     _LATD	set	3980
    85   000000                     _RB4	set	31756
    86   000000                     _TRISB	set	3987
    87   000000                     _TRISD	set	3989
    88   000000                     _ADCON1	set	4033
    89   000000                     _LATE0	set	31848
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92                           
    93                           	psect	smallconst
    94   000800                     __psmallconst:
    95                           	callstack 0
    96   000800  00                 	db	0
    97   000801                     STR_2:
    98   000801  20                 	db	32
    99   000802  20                 	db	32
   100   000803  20                 	db	32
   101   000804  20                 	db	32
   102   000805  20                 	db	32
   103   000806  20                 	db	32
   104   000807  20                 	db	32
   105   000808  20                 	db	32
   106   000809  20                 	db	32
   107   00080A  20                 	db	32
   108   00080B  20                 	db	32
   109   00080C  20                 	db	32
   110   00080D  20                 	db	32
   111   00080E  20                 	db	32
   112   00080F  20                 	db	32
   113   000810  20                 	db	32
   114   000811  00                 	db	0
   115   000812                     STR_1:
   116   000812  48                 	db	72	;'H'
   117   000813  6F                 	db	111	;'o'
   118   000814  6C                 	db	108	;'l'
   119   000815  61                 	db	97	;'a'
   120   000816  20                 	db	32
   121   000817  6D                 	db	109	;'m'
   122   000818  75                 	db	117	;'u'
   123   000819  6E                 	db	110	;'n'
   124   00081A  64                 	db	100	;'d'
   125   00081B  6F                 	db	111	;'o'
   126   00081C  00                 	db	0
   127   00081D  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   000D5A                     __pcinit:
   133                           	callstack 0
   134   000D5A                     start_initialization:
   135                           	callstack 0
   136   000D5A                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (4 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141   000D5A  0E0C               	movlw	low __pidataCOMRAM
   142   000D5C  6EF6               	movwf	tblptrl,c
   143   000D5E  0E0E               	movlw	high __pidataCOMRAM
   144   000D60  6EF7               	movwf	tblptrh,c
   145   000D62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146   000D64  6EF8               	movwf	tblptru,c
   147   000D66  EE00  F016         	lfsr	0,__pdataCOMRAM
   148   000D6A  EE10 F004          	lfsr	1,4
   149   000D6E                     copy_data0:
   150   000D6E  0009               	tblrd		*+
   151   000D70  CFF5 FFEE          	movff	tablat,postinc0
   152   000D74  50E5               	movf	postdec1,w,c
   153   000D76  50E1               	movf	fsr1l,w,c
   154   000D78  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (11 bytes)
   157   000D7A  EE00  F001         	lfsr	0,__pbssCOMRAM
   158   000D7E  0E0B               	movlw	11
   159   000D80                     clear_0:
   160   000D80  6AEE               	clrf	postinc0,c
   161   000D82  06E8               	decf	wreg,f,c
   162   000D84  E1FD               	bnz	clear_0
   163   000D86                     end_of_initialization:
   164                           	callstack 0
   165   000D86                     __end_of__initialization:
   166                           	callstack 0
   167   000D86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   000D88  6EF8               	movwf	tblptru,c
   169   000D8A  0100               	movlb	0
   170   000D8C  EF0F  F004         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   000001                     __pbssCOMRAM:
   174                           	callstack 0
   175   000001                     _r:
   176                           	callstack 0
   177   000001                     	ds	4
   178   000005                     _i:
   179                           	callstack 0
   180   000005                     	ds	2
   181   000007                     _n2:
   182                           	callstack 0
   183   000007                     	ds	2
   184   000009                     _n1:
   185                           	callstack 0
   186   000009                     	ds	2
   187   00000B                     _Tecla:
   188                           	callstack 0
   189   00000B                     	ds	1
   190                           
   191                           	psect	dataCOMRAM
   192   000016                     __pdataCOMRAM:
   193                           	callstack 0
   194   000016                     _n2c:
   195                           	callstack 0
   196   000016                     	ds	1
   197   000017                     _n1c:
   198                           	callstack 0
   199   000017                     	ds	1
   200   000018                     _op:
   201                           	callstack 0
   202   000018                     	ds	1
   203   000019                     _interfaz:
   204                           	callstack 0
   205   000019                     	ds	1
   206                           
   207                           	psect	cstackCOMRAM
   208   00000C                     __pcstackCOMRAM:
   209                           	callstack 0
   210   00000C                     ??_RetardoLCD:
   211   00000C                     ?___wmul:
   212                           	callstack 0
   213   00000C                     ?___lwdiv:
   214                           	callstack 0
   215   00000C                     ___wmul@multiplier:
   216                           	callstack 0
   217   00000C                     ___lwdiv@dividend:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221   00000C                     	ds	1
   222   00000D                     RetardoLCD@a:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x1
   226   00000D                     	ds	1
   227   00000E                     EnviaDato@a:
   228                           	callstack 0
   229   00000E                     ___wmul@multiplicand:
   230                           	callstack 0
   231   00000E                     ___lwdiv@divisor:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x2
   235   00000E                     	ds	1
   236   00000F                     EscribeLCD_c@a:
   237                           	callstack 0
   238   00000F                     DireccionaLCD@a:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x3
   242   00000F                     	ds	1
   243   000010                     MensajeLCD_Word@a:
   244                           	callstack 0
   245   000010                     ___wmul@product:
   246                           	callstack 0
   247   000010                     ___lwdiv@quotient:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x4
   251   000010                     	ds	1
   252   000011                     ??_MensajeLCD_Word:
   253                           
   254                           ; 1 bytes @ 0x5
   255   000011                     	ds	1
   256   000012                     ___lwdiv@counter:
   257                           	callstack 0
   258   000012                     MensajeLCD_Word@i:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x6
   262   000012                     	ds	2
   263   000014                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x8
   266   000014                     	ds	2
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 17 in file "Laboratorio4.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         0       0       0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called: 4
   293 ;; This function calls:
   294 ;;		_BorraLCD
   295 ;;		_DireccionaLCD
   296 ;;		_EscribeLCD_c
   297 ;;		_InicializaLCD
   298 ;;		_LeerTeclado
   299 ;;		_MensajeLCD_Word
   300 ;;		___lwdiv
   301 ;;		___wmul
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308   00081E                     __ptext0:
   309                           	callstack 0
   310   00081E                     _main:
   311                           	callstack 27
   312                           
   313                           ;Laboratorio4.c: 18: ADCON1=15;
   314                           
   315                           ;incstack = 0
   316   00081E  0E0F               	movlw	15
   317   000820  6EC1               	movwf	193,c	;volatile
   318                           
   319                           ;Laboratorio4.c: 19: TRISD=0;
   320   000822  0E00               	movlw	0
   321   000824  6E95               	movwf	149,c	;volatile
   322                           
   323                           ;Laboratorio4.c: 20: TRISB=0b11110000;
   324   000826  0EF0               	movlw	240
   325   000828  6E93               	movwf	147,c	;volatile
   326                           
   327                           ;Laboratorio4.c: 21: TRISE=0;
   328   00082A  0E00               	movlw	0
   329   00082C  6E96               	movwf	150,c	;volatile
   330                           
   331                           ;Laboratorio4.c: 22: RBPU=0;
   332   00082E  9EF1               	bcf	4081,7,c	;volatile
   333                           
   334                           ;Laboratorio4.c: 23: InicializaLCD();
   335   000830  EC8C  F006         	call	_InicializaLCD	;wreg free
   336                           
   337                           ;Laboratorio4.c: 24: BorraLCD();
   338   000834  ECF1  F006         	call	_BorraLCD	;wreg free
   339                           
   340                           ;Laboratorio4.c: 25: MensajeLCD_Word("Hola mundo");
   341   000838  0E12               	movlw	low STR_1
   342   00083A  6E10               	movwf	MensajeLCD_Word@a^0,c
   343   00083C  EC65  F006         	call	_MensajeLCD_Word	;wreg free
   344                           
   345                           ;Laboratorio4.c: 26: _delay((unsigned long)((2000)*(1000000/4000.0)));
   346   000840  0E03               	movlw	3
   347   000842  6E15               	movwf	(??_main+1)^0,c
   348   000844  0E8A               	movlw	138
   349   000846  6E14               	movwf	??_main^0,c
   350   000848  0E56               	movlw	86
   351   00084A                     u917:
   352   00084A  2EE8               	decfsz	wreg,f,c
   353   00084C  D7FE               	bra	u917
   354   00084E  2E14               	decfsz	??_main^0,f,c
   355   000850  D7FC               	bra	u917
   356   000852  2E15               	decfsz	(??_main+1)^0,f,c
   357   000854  D7FA               	bra	u917
   358                           
   359                           ;Laboratorio4.c: 27: BorraLCD();
   360   000856  ECF1  F006         	call	_BorraLCD	;wreg free
   361   00085A                     l1421:
   362                           
   363                           ;Laboratorio4.c: 29: LATB=0B00000000;
   364   00085A  0E00               	movlw	0
   365   00085C  6E8A               	movwf	138,c	;volatile
   366                           
   367                           ;Laboratorio4.c: 30: Tecla = LeerTeclado();
   368   00085E  ECC0  F005         	call	_LeerTeclado	;wreg free
   369   000862  6E0B               	movwf	_Tecla^0,c
   370                           
   371                           ;Laboratorio4.c: 31: if(Tecla=='C'){
   372   000864  0E43               	movlw	67
   373   000866  180B               	xorwf	_Tecla^0,w,c
   374   000868  A4D8               	btfss	status,2,c
   375   00086A  D01D               	goto	l1435
   376                           
   377                           ;Laboratorio4.c: 32: op = ' ';
   378   00086C  0E20               	movlw	32
   379   00086E  6E18               	movwf	_op^0,c
   380                           
   381                           ;Laboratorio4.c: 33: n1c = ' ';
   382   000870  0E20               	movlw	32
   383   000872  6E17               	movwf	_n1c^0,c
   384                           
   385                           ;Laboratorio4.c: 34: n2c = ' ';
   386   000874  0E20               	movlw	32
   387   000876  6E16               	movwf	_n2c^0,c
   388                           
   389                           ;Laboratorio4.c: 35: n1 = 0;
   390   000878  0E00               	movlw	0
   391   00087A  6E0A               	movwf	(_n1+1)^0,c
   392   00087C  0E00               	movlw	0
   393   00087E  6E09               	movwf	_n1^0,c
   394                           
   395                           ;Laboratorio4.c: 36: n2 = 0;
   396   000880  0E00               	movlw	0
   397   000882  6E08               	movwf	(_n2+1)^0,c
   398   000884  0E00               	movlw	0
   399   000886  6E07               	movwf	_n2^0,c
   400                           
   401                           ;Laboratorio4.c: 37: i = 0;
   402   000888  0E00               	movlw	0
   403   00088A  6E06               	movwf	(_i+1)^0,c
   404   00088C  0E00               	movlw	0
   405   00088E  6E05               	movwf	_i^0,c
   406                           
   407                           ;Laboratorio4.c: 38: DireccionaLCD(0x80);
   408   000890  0E80               	movlw	128
   409   000892  ECE6  F006         	call	_DireccionaLCD
   410                           
   411                           ;Laboratorio4.c: 39: MensajeLCD_Word("                ");
   412   000896  0E01               	movlw	low STR_2
   413   000898  6E10               	movwf	MensajeLCD_Word@a^0,c
   414   00089A  EC65  F006         	call	_MensajeLCD_Word	;wreg free
   415                           
   416                           ;Laboratorio4.c: 40: DireccionaLCD(0x80);
   417   00089E  0E80               	movlw	128
   418   0008A0  ECE6  F006         	call	_DireccionaLCD
   419                           
   420                           ;Laboratorio4.c: 41: }else{
   421   0008A4  D7DA               	goto	l1421
   422   0008A6                     l1435:
   423                           
   424                           ;Laboratorio4.c: 42: if(n1c==' '|n2c==' '|op==' '){
   425   0008A6  0E20               	movlw	32
   426   0008A8  1817               	xorwf	_n1c^0,w,c
   427   0008AA  B4D8               	btfsc	status,2,c
   428   0008AC  D008               	goto	u640
   429   0008AE  0E20               	movlw	32
   430   0008B0  1816               	xorwf	_n2c^0,w,c
   431   0008B2  B4D8               	btfsc	status,2,c
   432   0008B4  D004               	goto	u640
   433   0008B6  0E20               	movlw	32
   434   0008B8  1818               	xorwf	_op^0,w,c
   435   0008BA  A4D8               	btfss	status,2,c
   436   0008BC  D047               	goto	l1473
   437   0008BE                     u640:
   438                           
   439                           ;Laboratorio4.c: 43: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x')){
   440   0008BE  0E20               	movlw	32
   441   0008C0  1818               	xorwf	_op^0,w,c
   442   0008C2  A4D8               	btfss	status,2,c
   443   0008C4  D019               	goto	l1455
   444   0008C6  0E2B               	movlw	43
   445   0008C8  180B               	xorwf	_Tecla^0,w,c
   446   0008CA  B4D8               	btfsc	status,2,c
   447   0008CC  D00C               	goto	u690
   448   0008CE  0E2D               	movlw	45
   449   0008D0  180B               	xorwf	_Tecla^0,w,c
   450   0008D2  B4D8               	btfsc	status,2,c
   451   0008D4  D008               	goto	u690
   452   0008D6  0E2F               	movlw	47
   453   0008D8  180B               	xorwf	_Tecla^0,w,c
   454   0008DA  B4D8               	btfsc	status,2,c
   455   0008DC  D004               	goto	u690
   456   0008DE  0E78               	movlw	120
   457   0008E0  180B               	xorwf	_Tecla^0,w,c
   458   0008E2  A4D8               	btfss	status,2,c
   459   0008E4  D009               	goto	l1455
   460   0008E6                     u690:
   461                           
   462                           ;Laboratorio4.c: 44: DireccionaLCD(0x81);
   463   0008E6  0E81               	movlw	129
   464   0008E8  ECE6  F006         	call	_DireccionaLCD
   465                           
   466                           ;Laboratorio4.c: 45: EscribeLCD_c(Tecla);
   467   0008EC  500B               	movf	_Tecla^0,w,c
   468   0008EE  ECDB  F006         	call	_EscribeLCD_c
   469                           
   470                           ;Laboratorio4.c: 46: op = Tecla;
   471   0008F2  C00B  F018         	movff	_Tecla,_op
   472                           
   473                           ;Laboratorio4.c: 47: }else{
   474   0008F6  D13B               	goto	l1551
   475   0008F8                     l1455:
   476                           
   477                           ;Laboratorio4.c: 48: if(n1c==' '){
   478   0008F8  0E20               	movlw	32
   479   0008FA  1817               	xorwf	_n1c^0,w,c
   480   0008FC  A4D8               	btfss	status,2,c
   481   0008FE  D00F               	goto	l1463
   482                           
   483                           ;Laboratorio4.c: 49: DireccionaLCD(0x80);
   484   000900  0E80               	movlw	128
   485   000902  ECE6  F006         	call	_DireccionaLCD
   486                           
   487                           ;Laboratorio4.c: 50: EscribeLCD_c(Tecla);
   488   000906  500B               	movf	_Tecla^0,w,c
   489   000908  ECDB  F006         	call	_EscribeLCD_c
   490                           
   491                           ;Laboratorio4.c: 51: n1c=Tecla;
   492   00090C  C00B  F017         	movff	_Tecla,_n1c
   493                           
   494                           ;Laboratorio4.c: 52: n1 = Tecla-'0';
   495   000910  0ED0               	movlw	208
   496   000912  240B               	addwf	_Tecla^0,w,c
   497   000914  6E09               	movwf	_n1^0,c
   498   000916  6A0A               	clrf	(_n1+1)^0,c
   499   000918  0EFF               	movlw	255
   500   00091A  220A               	addwfc	(_n1+1)^0,f,c
   501                           
   502                           ;Laboratorio4.c: 53: }else{
   503   00091C  D128               	goto	l1551
   504   00091E                     l1463:
   505                           
   506                           ;Laboratorio4.c: 54: if(n2c==' ' & op!=' '){
   507   00091E  0E20               	movlw	32
   508   000920  1816               	xorwf	_n2c^0,w,c
   509   000922  A4D8               	btfss	status,2,c
   510   000924  D124               	goto	l1551
   511   000926  0E20               	movlw	32
   512   000928  1818               	xorwf	_op^0,w,c
   513   00092A  B4D8               	btfsc	status,2,c
   514   00092C  D120               	goto	l1551
   515                           
   516                           ;Laboratorio4.c: 55: DireccionaLCD(0x82);
   517   00092E  0E82               	movlw	130
   518   000930  ECE6  F006         	call	_DireccionaLCD
   519                           
   520                           ;Laboratorio4.c: 56: EscribeLCD_c(Tecla);
   521   000934  500B               	movf	_Tecla^0,w,c
   522   000936  ECDB  F006         	call	_EscribeLCD_c
   523                           
   524                           ;Laboratorio4.c: 57: n2c=Tecla;
   525   00093A  C00B  F016         	movff	_Tecla,_n2c
   526                           
   527                           ;Laboratorio4.c: 58: n2 = Tecla-'0';
   528   00093E  0ED0               	movlw	208
   529   000940  240B               	addwf	_Tecla^0,w,c
   530   000942  6E07               	movwf	_n2^0,c
   531   000944  6A08               	clrf	(_n2+1)^0,c
   532   000946  0EFF               	movlw	255
   533   000948  2208               	addwfc	(_n2+1)^0,f,c
   534   00094A  D111               	goto	l1551
   535   00094C                     l1473:
   536                           
   537                           ;Laboratorio4.c: 64: if(Tecla=='='){
   538   00094C  0E3D               	movlw	61
   539   00094E  180B               	xorwf	_Tecla^0,w,c
   540   000950  A4D8               	btfss	status,2,c
   541   000952  D10D               	goto	l1551
   542                           
   543                           ;Laboratorio4.c: 65: if(n1c!=' ' & n2c!=' ' & op!=' '){
   544   000954  0E20               	movlw	32
   545   000956  1817               	xorwf	_n1c^0,w,c
   546   000958  B4D8               	btfsc	status,2,c
   547   00095A  D109               	goto	l1551
   548   00095C  0E20               	movlw	32
   549   00095E  1816               	xorwf	_n2c^0,w,c
   550   000960  B4D8               	btfsc	status,2,c
   551   000962  D105               	goto	l1551
   552   000964  0E20               	movlw	32
   553   000966  1818               	xorwf	_op^0,w,c
   554   000968  B4D8               	btfsc	status,2,c
   555   00096A  D101               	goto	l1551
   556                           
   557                           ;Laboratorio4.c: 66: DireccionaLCD(0x83);
   558   00096C  0E83               	movlw	131
   559   00096E  ECE6  F006         	call	_DireccionaLCD
   560                           
   561                           ;Laboratorio4.c: 67: EscribeLCD_c('=');
   562   000972  0E3D               	movlw	61
   563   000974  ECDB  F006         	call	_EscribeLCD_c
   564                           
   565                           ;Laboratorio4.c: 68: switch(op){
   566   000978  D058               	goto	l1511
   567   00097A                     l1483:
   568   00097A  5007               	movf	_n2^0,w,c
   569   00097C  2409               	addwf	_n1^0,w,c
   570   00097E  6E14               	movwf	??_main^0,c
   571   000980  5008               	movf	(_n2+1)^0,w,c
   572   000982  200A               	addwfc	(_n1+1)^0,w,c
   573   000984  D005               	goto	L1
   574   000986                     l1485:
   575   000986  5007               	movf	_n2^0,w,c
   576   000988  5C09               	subwf	_n1^0,w,c
   577   00098A  6E14               	movwf	??_main^0,c
   578   00098C  5008               	movf	(_n2+1)^0,w,c
   579   00098E  580A               	subwfb	(_n1+1)^0,w,c
   580   000990                     L1:
   581   000990  6E15               	movwf	(??_main+1)^0,c
   582   000992  C014  F001         	movff	??_main,_r
   583   000996  C015  F002         	movff	??_main+1,_r+1
   584   00099A  D025               	goto	L3
   585   00099C                     l1487:
   586   00099C  C009  F00C         	movff	_n1,___wmul@multiplier
   587   0009A0  C00A  F00D         	movff	_n1+1,___wmul@multiplier+1
   588   0009A4  C007  F00E         	movff	_n2,___wmul@multiplicand
   589   0009A8  C008  F00F         	movff	_n2+1,___wmul@multiplicand+1
   590   0009AC  ECC8  F006         	call	___wmul	;wreg free
   591   0009B0  C00C  F001         	movff	?___wmul,_r
   592   0009B4  C00D  F002         	movff	?___wmul+1,_r+1
   593   0009B8  D016               	goto	L3
   594   0009BA                     l1489:
   595                           
   596                           ;Laboratorio4.c: 76: if(n2!=0){
   597   0009BA  5007               	movf	_n2^0,w,c
   598   0009BC  1008               	iorwf	(_n2+1)^0,w,c
   599   0009BE  B4D8               	btfsc	status,2,c
   600   0009C0  D015               	goto	l1495
   601                           
   602                           ;Laboratorio4.c: 77: if(n1!=0){
   603   0009C2  5009               	movf	_n1^0,w,c
   604   0009C4  100A               	iorwf	(_n1+1)^0,w,c
   605   0009C6  B4D8               	btfsc	status,2,c
   606   0009C8  D03E               	goto	l1513
   607                           
   608                           ;Laboratorio4.c: 78: r = n1/n2;
   609   0009CA  C009  F00C         	movff	_n1,___lwdiv@dividend
   610   0009CE  C00A  F00D         	movff	_n1+1,___lwdiv@dividend+1
   611   0009D2  C007  F00E         	movff	_n2,___lwdiv@divisor
   612   0009D6  C008  F00F         	movff	_n2+1,___lwdiv@divisor+1
   613   0009DA  EC3C  F006         	call	___lwdiv	;wreg free
   614   0009DE  C00C  F001         	movff	?___lwdiv,_r
   615   0009E2  C00D  F002         	movff	?___lwdiv+1,_r+1
   616   0009E6                     L3:
   617   0009E6  6A03               	clrf	(_r+2)^0,c
   618   0009E8  6A04               	clrf	(_r+3)^0,c
   619   0009EA  D02D               	goto	l1513
   620   0009EC                     l1495:
   621                           
   622                           ;Laboratorio4.c: 81: if(n1 != 0 & n2 == 0) r = 1000;
   623   0009EC  5009               	movf	_n1^0,w,c
   624   0009EE  100A               	iorwf	(_n1+1)^0,w,c
   625   0009F0  B4D8               	btfsc	status,2,c
   626   0009F2  D006               	goto	l1501
   627   0009F4  5007               	movf	_n2^0,w,c
   628   0009F6  1008               	iorwf	(_n2+1)^0,w,c
   629   0009F8  A4D8               	btfss	status,2,c
   630   0009FA  D002               	goto	l1501
   631   0009FC  0EE8               	movlw	232
   632   0009FE  D009               	goto	L4
   633   000A00                     l1501:
   634                           
   635                           ;Laboratorio4.c: 82: else if(n1 == 0 & n2 == 0) r = 1001;
   636   000A00  5009               	movf	_n1^0,w,c
   637   000A02  100A               	iorwf	(_n1+1)^0,w,c
   638   000A04  A4D8               	btfss	status,2,c
   639   000A06  D01F               	goto	l1513
   640   000A08  5007               	movf	_n2^0,w,c
   641   000A0A  1008               	iorwf	(_n2+1)^0,w,c
   642   000A0C  A4D8               	btfss	status,2,c
   643   000A0E  D01B               	goto	l1513
   644   000A10  0EE9               	movlw	233
   645   000A12                     L4:
   646   000A12  6E01               	movwf	_r^0,c
   647   000A14  0E03               	movlw	3
   648   000A16  D003               	goto	L5
   649   000A18                     l1507:
   650                           
   651                           ;Laboratorio4.c: 86: r = 0;
   652   000A18  0E00               	movlw	0
   653   000A1A  6E01               	movwf	_r^0,c
   654   000A1C  0E00               	movlw	0
   655   000A1E                     L5:
   656   000A1E  6E02               	movwf	(_r+1)^0,c
   657   000A20  0E00               	movlw	0
   658   000A22  6E03               	movwf	(_r+2)^0,c
   659   000A24  0E00               	movlw	0
   660   000A26  6E04               	movwf	(_r+3)^0,c
   661                           
   662                           ;Laboratorio4.c: 87: break;
   663   000A28  D00E               	goto	l1513
   664   000A2A                     l1511:
   665   000A2A  5018               	movf	_op^0,w,c
   666                           
   667                           ; Switch size 1, requested type "simple"
   668                           ; Number of cases is 4, Range of values is 43 to 120
   669                           ; switch strategies available:
   670                           ; Name         Instructions Cycles
   671                           ; simple_byte           13     7 (average)
   672                           ;	Chosen strategy is simple_byte
   673   000A2C  0A2B               	xorlw	43	; case 43
   674   000A2E  B4D8               	btfsc	status,2,c
   675   000A30  D7A4               	goto	l1483
   676   000A32  0A06               	xorlw	6	; case 45
   677   000A34  B4D8               	btfsc	status,2,c
   678   000A36  D7A7               	goto	l1485
   679   000A38  0A02               	xorlw	2	; case 47
   680   000A3A  B4D8               	btfsc	status,2,c
   681   000A3C  D7BE               	goto	l1489
   682   000A3E  0A57               	xorlw	87	; case 120
   683   000A40  B4D8               	btfsc	status,2,c
   684   000A42  D7AC               	goto	l1487
   685   000A44  D7E9               	goto	l1507
   686   000A46                     l1513:
   687                           
   688                           ;Laboratorio4.c: 89: DireccionaLCD(0x84);
   689   000A46  0E84               	movlw	132
   690   000A48  ECE6  F006         	call	_DireccionaLCD
   691                           
   692                           ;Laboratorio4.c: 90: if(r>0x51 & r!=1000 & r !=1001){
   693   000A4C  5004               	movf	(_r+3)^0,w,c
   694   000A4E  1003               	iorwf	(_r+2)^0,w,c
   695   000A50  1002               	iorwf	(_r+1)^0,w,c
   696   000A52  E104               	bnz	u830
   697   000A54  0E52               	movlw	82
   698   000A56  5C01               	subwf	_r^0,w,c
   699   000A58  A0D8               	btfss	status,0,c
   700   000A5A  D025               	goto	l1527
   701   000A5C                     u830:
   702   000A5C  0EE8               	movlw	232
   703   000A5E  1801               	xorwf	_r^0,w,c
   704   000A60  E106               	bnz	u840
   705   000A62  0E03               	movlw	3
   706   000A64  1802               	xorwf	(_r+1)^0,w,c
   707   000A66  1003               	iorwf	(_r+2)^0,w,c
   708   000A68  1004               	iorwf	(_r+3)^0,w,c
   709   000A6A  B4D8               	btfsc	status,2,c
   710   000A6C  D01C               	goto	l1527
   711   000A6E                     u840:
   712   000A6E  0EE9               	movlw	233
   713   000A70  1801               	xorwf	_r^0,w,c
   714   000A72  E106               	bnz	u850
   715   000A74  0E03               	movlw	3
   716   000A76  1802               	xorwf	(_r+1)^0,w,c
   717   000A78  1003               	iorwf	(_r+2)^0,w,c
   718   000A7A  1004               	iorwf	(_r+3)^0,w,c
   719   000A7C  B4D8               	btfsc	status,2,c
   720   000A7E  D013               	goto	l1527
   721   000A80                     u850:
   722                           
   723                           ;Laboratorio4.c: 91: EscribeLCD_c('-');
   724   000A80  0E2D               	movlw	45
   725   000A82  ECDB  F006         	call	_EscribeLCD_c
   726                           
   727                           ;Laboratorio4.c: 92: DireccionaLCD(0x85);
   728   000A86  0E85               	movlw	133
   729   000A88  ECE6  F006         	call	_DireccionaLCD
   730                           
   731                           ;Laboratorio4.c: 93: r = ~r+1;
   732   000A8C  1E04               	comf	(_r+3)^0,f,c
   733   000A8E  1E03               	comf	(_r+2)^0,f,c
   734   000A90  1E02               	comf	(_r+1)^0,f,c
   735   000A92  6C01               	negf	_r^0,c
   736   000A94  0E00               	movlw	0
   737   000A96  2202               	addwfc	(_r+1)^0,f,c
   738   000A98  2203               	addwfc	(_r+2)^0,f,c
   739   000A9A  2204               	addwfc	(_r+3)^0,f,c
   740                           
   741                           ;Laboratorio4.c: 94: EscribeLCD_c(r+'0');
   742   000A9C  5001               	movf	_r^0,w,c
   743   000A9E  0F30               	addlw	48
   744   000AA0  ECDB  F006         	call	_EscribeLCD_c
   745                           
   746                           ;Laboratorio4.c: 95: }else{
   747   000AA4  D064               	goto	l1551
   748   000AA6                     l1527:
   749                           
   750                           ;Laboratorio4.c: 96: if(r>0xA & r!=1000 & r !=1001){
   751   000AA6  5004               	movf	(_r+3)^0,w,c
   752   000AA8  1003               	iorwf	(_r+2)^0,w,c
   753   000AAA  1002               	iorwf	(_r+1)^0,w,c
   754   000AAC  E104               	bnz	u860
   755   000AAE  0E0B               	movlw	11
   756   000AB0  5C01               	subwf	_r^0,w,c
   757   000AB2  A0D8               	btfss	status,0,c
   758   000AB4  D038               	goto	l1537
   759   000AB6                     u860:
   760   000AB6  0EE8               	movlw	232
   761   000AB8  1801               	xorwf	_r^0,w,c
   762   000ABA  E106               	bnz	u870
   763   000ABC  0E03               	movlw	3
   764   000ABE  1802               	xorwf	(_r+1)^0,w,c
   765   000AC0  1003               	iorwf	(_r+2)^0,w,c
   766   000AC2  1004               	iorwf	(_r+3)^0,w,c
   767   000AC4  B4D8               	btfsc	status,2,c
   768   000AC6  D02F               	goto	l1537
   769   000AC8                     u870:
   770   000AC8  0EE9               	movlw	233
   771   000ACA  1801               	xorwf	_r^0,w,c
   772   000ACC  E106               	bnz	u880
   773   000ACE  0E03               	movlw	3
   774   000AD0  1802               	xorwf	(_r+1)^0,w,c
   775   000AD2  1003               	iorwf	(_r+2)^0,w,c
   776   000AD4  1004               	iorwf	(_r+3)^0,w,c
   777   000AD6  B4D8               	btfsc	status,2,c
   778   000AD8  D026               	goto	l1537
   779   000ADA                     u880:
   780   000ADA                     l1533:
   781                           
   782                           ;Laboratorio4.c: 98: i = i+1;
   783   000ADA  0E01               	movlw	1
   784   000ADC  2405               	addwf	_i^0,w,c
   785   000ADE  6E05               	movwf	_i^0,c
   786   000AE0  0E00               	movlw	0
   787   000AE2  2006               	addwfc	(_i+1)^0,w,c
   788   000AE4  6E06               	movwf	(_i+1)^0,c
   789                           
   790                           ;Laboratorio4.c: 99: r = r - 10;
   791   000AE6  0EF6               	movlw	246
   792   000AE8  2401               	addwf	_r^0,w,c
   793   000AEA  6E01               	movwf	_r^0,c
   794   000AEC  0EFF               	movlw	255
   795   000AEE  2002               	addwfc	(_r+1)^0,w,c
   796   000AF0  6E02               	movwf	(_r+1)^0,c
   797   000AF2  0EFF               	movlw	255
   798   000AF4  2003               	addwfc	(_r+2)^0,w,c
   799   000AF6  6E03               	movwf	(_r+2)^0,c
   800   000AF8  0EFF               	movlw	255
   801   000AFA  2004               	addwfc	(_r+3)^0,w,c
   802   000AFC  6E04               	movwf	(_r+3)^0,c
   803                           
   804                           ;Laboratorio4.c: 100: }while(r>0xA);
   805   000AFE  5004               	movf	(_r+3)^0,w,c
   806   000B00  1003               	iorwf	(_r+2)^0,w,c
   807   000B02  1002               	iorwf	(_r+1)^0,w,c
   808   000B04  E1EA               	bnz	l1533
   809   000B06  0E0B               	movlw	11
   810   000B08  5C01               	subwf	_r^0,w,c
   811   000B0A  B0D8               	btfsc	status,0,c
   812   000B0C  D7E6               	goto	u880
   813                           
   814                           ;Laboratorio4.c: 101: EscribeLCD_c(i+'0');
   815   000B0E  5005               	movf	_i^0,w,c
   816   000B10  0F30               	addlw	48
   817   000B12  ECDB  F006         	call	_EscribeLCD_c
   818                           
   819                           ;Laboratorio4.c: 102: DireccionaLCD(0x85);
   820   000B16  0E85               	movlw	133
   821   000B18  ECE6  F006         	call	_DireccionaLCD
   822                           
   823                           ;Laboratorio4.c: 103: EscribeLCD_c(r+'0');
   824   000B1C  5001               	movf	_r^0,w,c
   825   000B1E  0F30               	addlw	48
   826   000B20  ECDB  F006         	call	_EscribeLCD_c
   827                           
   828                           ;Laboratorio4.c: 104: }else{
   829   000B24  D024               	goto	l1551
   830   000B26                     l1537:
   831                           
   832                           ;Laboratorio4.c: 105: if(r==1000){
   833   000B26  0EE8               	movlw	232
   834   000B28  1801               	xorwf	_r^0,w,c
   835   000B2A  E110               	bnz	l1541
   836   000B2C  0E03               	movlw	3
   837   000B2E  1802               	xorwf	(_r+1)^0,w,c
   838   000B30  1003               	iorwf	(_r+2)^0,w,c
   839   000B32  1004               	iorwf	(_r+3)^0,w,c
   840   000B34  A4D8               	btfss	status,2,c
   841   000B36  D00A               	goto	l1541
   842                           
   843                           ;Laboratorio4.c: 106: EscribeLCD_c('I');
   844   000B38  0E49               	movlw	73
   845   000B3A  ECDB  F006         	call	_EscribeLCD_c
   846                           
   847                           ;Laboratorio4.c: 107: EscribeLCD_c('N');
   848   000B3E  0E4E               	movlw	78
   849   000B40  ECDB  F006         	call	_EscribeLCD_c
   850                           
   851                           ;Laboratorio4.c: 108: EscribeLCD_c('F');
   852   000B44  0E46               	movlw	70
   853   000B46  ECDB  F006         	call	_EscribeLCD_c
   854                           
   855                           ;Laboratorio4.c: 109: }else{
   856   000B4A  D011               	goto	l1551
   857   000B4C                     l1541:
   858                           
   859                           ;Laboratorio4.c: 110: if(r=1001){
   860   000B4C  0EE9               	movlw	233
   861   000B4E  6E01               	movwf	_r^0,c
   862   000B50  0E03               	movlw	3
   863   000B52  6E02               	movwf	(_r+1)^0,c
   864   000B54  0E00               	movlw	0
   865   000B56  6E03               	movwf	(_r+2)^0,c
   866   000B58  0E00               	movlw	0
   867   000B5A  6E04               	movwf	(_r+3)^0,c
   868                           
   869                           ;Laboratorio4.c: 111: EscribeLCD_c('I');
   870   000B5C  0E49               	movlw	73
   871   000B5E  ECDB  F006         	call	_EscribeLCD_c
   872                           
   873                           ;Laboratorio4.c: 112: EscribeLCD_c('N');
   874   000B62  0E4E               	movlw	78
   875   000B64  ECDB  F006         	call	_EscribeLCD_c
   876                           
   877                           ;Laboratorio4.c: 113: EscribeLCD_c('D');
   878   000B68  0E44               	movlw	68
   879   000B6A  ECDB  F006         	call	_EscribeLCD_c
   880   000B6E                     l1551:
   881                           
   882                           ;Laboratorio4.c: 116: };Laboratorio4.c: 117: };Laboratorio4.c: 118: };Laboratorio4.c: 11
      +                          9: };Laboratorio4.c: 120: };Laboratorio4.c: 121: };Laboratorio4.c: 122: };Laboratorio4.c
      +                          : 123: _delay((unsigned long)((700)*(1000000/4000.0)));
   883   000B6E  0EE4               	movlw	228
   884   000B70  6E14               	movwf	??_main^0,c
   885   000B72  0E44               	movlw	68
   886   000B74                     u927:
   887   000B74  2EE8               	decfsz	wreg,f,c
   888   000B76  D7FE               	bra	u927
   889   000B78  2E14               	decfsz	??_main^0,f,c
   890   000B7A  D7FC               	bra	u927
   891   000B7C  D000               	nop2	
   892   000B7E  D66D               	goto	l1421
   893   000B80                     __end_of_main:
   894                           	callstack 0
   895                           
   896 ;; *************** function ___wmul *****************
   897 ;; Defined at:
   898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  multiplier      2    0[COMRAM] unsigned int 
   901 ;;  multiplicand    2    2[COMRAM] unsigned int 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  product         2    4[COMRAM] unsigned int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2    0[COMRAM] unsigned int 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, prodl, prodh
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         4       0       0       0       0       0       0       0       0
   914 ;;      Locals:         2       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         6       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        6 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text1
   927   000D90                     __ptext1:
   928                           	callstack 0
   929   000D90                     ___wmul:
   930                           	callstack 30
   931                           
   932                           ;incstack = 0
   933   000D90  500C               	movf	___wmul@multiplier^0,w,c
   934   000D92  020E               	mulwf	___wmul@multiplicand^0,c
   935   000D94  CFF3 F010          	movff	prodl,___wmul@product
   936   000D98  CFF4 F011          	movff	prodh,___wmul@product+1
   937   000D9C  500C               	movf	___wmul@multiplier^0,w,c
   938   000D9E  020F               	mulwf	(___wmul@multiplicand+1)^0,c
   939   000DA0  50F3               	movf	243,w,c
   940   000DA2  2611               	addwf	(___wmul@product+1)^0,f,c
   941   000DA4  500D               	movf	(___wmul@multiplier+1)^0,w,c
   942   000DA6  020E               	mulwf	___wmul@multiplicand^0,c
   943   000DA8  50F3               	movf	243,w,c
   944   000DAA  2611               	addwf	(___wmul@product+1)^0,f,c
   945   000DAC  C010  F00C         	movff	___wmul@product,?___wmul
   946   000DB0  C011  F00D         	movff	___wmul@product+1,?___wmul+1
   947   000DB4  0012               	return		;funcret
   948   000DB6                     __end_of___wmul:
   949                           	callstack 0
   950                           
   951 ;; *************** function ___lwdiv *****************
   952 ;; Defined at:
   953 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  dividend        2    0[COMRAM] unsigned int 
   956 ;;  divisor         2    2[COMRAM] unsigned int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  quotient        2    4[COMRAM] unsigned int 
   959 ;;  counter         1    6[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  2    0[COMRAM] unsigned int 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         4       0       0       0       0       0       0       0       0
   970 ;;      Locals:         3       0       0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0
   972 ;;      Totals:         7       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        7 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text2
   983   000C78                     __ptext2:
   984                           	callstack 0
   985   000C78                     ___lwdiv:
   986                           	callstack 30
   987                           
   988                           ;incstack = 0
   989   000C78  0E00               	movlw	0
   990   000C7A  6E11               	movwf	(___lwdiv@quotient+1)^0,c
   991   000C7C  0E00               	movlw	0
   992   000C7E  6E10               	movwf	___lwdiv@quotient^0,c
   993   000C80  500E               	movf	___lwdiv@divisor^0,w,c
   994   000C82  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
   995   000C84  B4D8               	btfsc	status,2,c
   996   000C86  D01C               	goto	l691
   997   000C88  0E01               	movlw	1
   998   000C8A  6E12               	movwf	___lwdiv@counter^0,c
   999   000C8C  D004               	goto	l1393
  1000   000C8E                     l1391:
  1001   000C8E  90D8               	bcf	status,0,c
  1002   000C90  360E               	rlcf	___lwdiv@divisor^0,f,c
  1003   000C92  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1004   000C94  2A12               	incf	___lwdiv@counter^0,f,c
  1005   000C96                     l1393:
  1006   000C96  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  1007   000C98  D7FA               	goto	l1391
  1008   000C9A                     u590:
  1009   000C9A  90D8               	bcf	status,0,c
  1010   000C9C  3610               	rlcf	___lwdiv@quotient^0,f,c
  1011   000C9E  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1012   000CA0  500E               	movf	___lwdiv@divisor^0,w,c
  1013   000CA2  5C0C               	subwf	___lwdiv@dividend^0,w,c
  1014   000CA4  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  1015   000CA6  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1016   000CA8  A0D8               	btfss	status,0,c
  1017   000CAA  D005               	goto	l1403
  1018   000CAC  500E               	movf	___lwdiv@divisor^0,w,c
  1019   000CAE  5E0C               	subwf	___lwdiv@dividend^0,f,c
  1020   000CB0  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  1021   000CB2  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1022   000CB4  8010               	bsf	___lwdiv@quotient^0,0,c
  1023   000CB6                     l1403:
  1024   000CB6  90D8               	bcf	status,0,c
  1025   000CB8  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1026   000CBA  320E               	rrcf	___lwdiv@divisor^0,f,c
  1027   000CBC  2E12               	decfsz	___lwdiv@counter^0,f,c
  1028   000CBE  D7ED               	goto	u590
  1029   000CC0                     l691:
  1030   000CC0  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  1031   000CC4  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1032   000CC8  0012               	return		;funcret
  1033   000CCA                     __end_of___lwdiv:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _MensajeLCD_Word *****************
  1037 ;; Defined at:
  1038 ;;		line 241 in file "LibLCDXC8.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  a               1    4[COMRAM] PTR unsigned char 
  1041 ;;		 -> STR_2(17), STR_1(11), 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  i               2    6[COMRAM] int 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1053 ;;      Params:         1       0       0       0       0       0       0       0       0
  1054 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1055 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1056 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1057 ;;Total ram usage:        4 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 3
  1060 ;; This function calls:
  1061 ;;		_EscribeLCD_c
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068   000CCA                     __ptext3:
  1069                           	callstack 0
  1070   000CCA                     _MensajeLCD_Word:
  1071                           	callstack 27
  1072                           
  1073                           ;LibLCDXC8.h: 245: for(int i = 0; i<16; i++){
  1074                           
  1075                           ;incstack = 0
  1076   000CCA  0E00               	movlw	0
  1077   000CCC  6E13               	movwf	(MensajeLCD_Word@i+1)^0,c
  1078   000CCE  0E00               	movlw	0
  1079   000CD0  6E12               	movwf	MensajeLCD_Word@i^0,c
  1080   000CD2                     l1371:
  1081                           
  1082                           ;LibLCDXC8.h: 246: if(a[i]!=0){
  1083   000CD2  5010               	movf	MensajeLCD_Word@a^0,w,c
  1084   000CD4  2412               	addwf	MensajeLCD_Word@i^0,w,c
  1085   000CD6  6E11               	movwf	??_MensajeLCD_Word^0,c
  1086   000CD8  C011  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1087   000CDC                     	if	1	;There is more than 1 active tblptr byte
  1088   000CDC  0E08               	movlw	high __smallconst
  1089   000CDE  6EF7               	movwf	tblptrh,c
  1090   000CE0                     	endif
  1091   000CE0                     	if	0	;tblptru may be non-zero
  1092   000CE0                     	endif
  1093   000CE0                     	if	0	;tblptru may be non-zero
  1094   000CE0                     	endif
  1095   000CE0  0008               	tblrd		*
  1096   000CE2  50F5               	movf	tablat,w,c
  1097   000CE4  0900               	iorlw	0
  1098   000CE6  B4D8               	btfsc	status,2,c
  1099   000CE8  D00B               	goto	l1375
  1100                           
  1101                           ;LibLCDXC8.h: 247: EscribeLCD_c(a[i]);
  1102   000CEA  5010               	movf	MensajeLCD_Word@a^0,w,c
  1103   000CEC  2412               	addwf	MensajeLCD_Word@i^0,w,c
  1104   000CEE  6E11               	movwf	??_MensajeLCD_Word^0,c
  1105   000CF0  C011  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1106   000CF4                     	if	1	;There is more than 1 active tblptr byte
  1107   000CF4  0E08               	movlw	high __smallconst
  1108   000CF6  6EF7               	movwf	tblptrh,c
  1109   000CF8                     	endif
  1110   000CF8                     	if	0	;tblptru may be non-zero
  1111   000CF8                     	endif
  1112   000CF8                     	if	0	;tblptru may be non-zero
  1113   000CF8                     	endif
  1114   000CF8  0008               	tblrd		*
  1115   000CFA  50F5               	movf	tablat,w,c
  1116   000CFC  ECDB  F006         	call	_EscribeLCD_c
  1117   000D00                     l1375:
  1118   000D00  4A12               	infsnz	MensajeLCD_Word@i^0,f,c
  1119   000D02  2A13               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1120   000D04  BE13               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1121   000D06  D7E5               	goto	l1371
  1122   000D08  5013               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1123   000D0A  E105               	bnz	u570
  1124   000D0C  0E10               	movlw	16
  1125   000D0E  5C12               	subwf	MensajeLCD_Word@i^0,w,c
  1126   000D10  B0D8               	btfsc	status,0,c
  1127   000D12  0012               	return	
  1128   000D14  D7DE               	goto	l1371
  1129   000D16                     u570:
  1130   000D16  0012               	return		;funcret
  1131   000D18                     __end_of_MensajeLCD_Word:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _EscribeLCD_c *****************
  1135 ;; Defined at:
  1136 ;;		line 140 in file "LibLCDXC8.h"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  a               1    wreg     unsigned char 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  a               1    3[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1153 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1154 ;;Total ram usage:        1 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 2
  1157 ;; This function calls:
  1158 ;;		_EnviaDato
  1159 ;;		_HabilitaLCD
  1160 ;;		_RetardoLCD
  1161 ;; This function is called by:
  1162 ;;		_MensajeLCD_Word
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text4
  1168   000DB6                     __ptext4:
  1169                           	callstack 0
  1170   000DB6                     _EscribeLCD_c:
  1171                           	callstack 27
  1172                           
  1173                           ;incstack = 0
  1174                           ;EscribeLCD_c@a stored from wreg
  1175   000DB6  6E0F               	movwf	EscribeLCD_c@a^0,c
  1176                           
  1177                           ;LibLCDXC8.h: 144: LATE0=1;
  1178   000DB8  808D               	bsf	3981,0,c	;volatile
  1179                           
  1180                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1181   000DBA  500F               	movf	EscribeLCD_c@a^0,w,c
  1182   000DBC  EC02  F007         	call	_EnviaDato
  1183                           
  1184                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1185   000DC0  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1186                           
  1187                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1188   000DC4  0E04               	movlw	4
  1189   000DC6  EC11  F006         	call	_RetardoLCD
  1190   000DCA  0012               	return		;funcret
  1191   000DCC                     __end_of_EscribeLCD_c:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _LeerTeclado *****************
  1195 ;; Defined at:
  1196 ;;		line 127 in file "Laboratorio4.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      unsigned char 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text5
  1224   000B80                     __ptext5:
  1225                           	callstack 0
  1226   000B80                     _LeerTeclado:
  1227                           	callstack 30
  1228                           
  1229                           ;Laboratorio4.c: 128: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1230                           
  1231                           ;incstack = 0
  1232   000B80  B881               	btfsc	3969,4,c	;volatile
  1233   000B82  AA81               	btfss	3969,5,c	;volatile
  1234   000B84  D004               	goto	u60
  1235   000B86  AC81               	btfss	3969,6,c	;volatile
  1236   000B88  D002               	goto	u60
  1237   000B8A  BE81               	btfsc	3969,7,c	;volatile
  1238   000B8C  D7F9               	goto	__ptext5
  1239   000B8E                     u60:
  1240                           
  1241                           ;Laboratorio4.c: 129: LATB=0b11111110;
  1242   000B8E  0EFE               	movlw	254
  1243   000B90  6E8A               	movwf	138,c	;volatile
  1244                           
  1245                           ;Laboratorio4.c: 130: if(RB4==0) return '1';
  1246   000B92  B881               	btfsc	3969,4,c	;volatile
  1247   000B94  D002               	goto	l178
  1248   000B96  0E31               	movlw	49
  1249   000B98  0012               	return	
  1250   000B9A                     l178:
  1251                           
  1252                           ;Laboratorio4.c: 131: else if(RB5==0) return '2';
  1253   000B9A  BA81               	btfsc	3969,5,c	;volatile
  1254   000B9C  D002               	goto	l181
  1255   000B9E  0E32               	movlw	50
  1256   000BA0  0012               	return	
  1257   000BA2                     l181:
  1258                           
  1259                           ;Laboratorio4.c: 132: else if(RB6==0) return '3';
  1260   000BA2  BC81               	btfsc	3969,6,c	;volatile
  1261   000BA4  D002               	goto	l183
  1262   000BA6  0E33               	movlw	51
  1263   000BA8  0012               	return	
  1264   000BAA                     l183:
  1265                           
  1266                           ;Laboratorio4.c: 133: else if(RB7==0) return '+';
  1267   000BAA  BE81               	btfsc	3969,7,c	;volatile
  1268   000BAC  D002               	goto	l1105
  1269   000BAE  0E2B               	movlw	43
  1270   000BB0  0012               	return	
  1271   000BB2                     l1105:
  1272                           
  1273                           ;Laboratorio4.c: 134: else{;Laboratorio4.c: 135: LATB=0b11111101;
  1274   000BB2  0EFD               	movlw	253
  1275   000BB4  6E8A               	movwf	138,c	;volatile
  1276                           
  1277                           ;Laboratorio4.c: 136: if(RB4==0) return '4';
  1278   000BB6  B881               	btfsc	3969,4,c	;volatile
  1279   000BB8  D002               	goto	l187
  1280   000BBA  0E34               	movlw	52
  1281   000BBC  0012               	return	
  1282   000BBE                     l187:
  1283                           
  1284                           ;Laboratorio4.c: 137: else if(RB5==0) return '5';
  1285   000BBE  BA81               	btfsc	3969,5,c	;volatile
  1286   000BC0  D002               	goto	l189
  1287   000BC2  0E35               	movlw	53
  1288   000BC4  0012               	return	
  1289   000BC6                     l189:
  1290                           
  1291                           ;Laboratorio4.c: 138: else if(RB6==0) return '6';
  1292   000BC6  BC81               	btfsc	3969,6,c	;volatile
  1293   000BC8  D002               	goto	l191
  1294   000BCA  0E36               	movlw	54
  1295   000BCC  0012               	return	
  1296   000BCE                     l191:
  1297                           
  1298                           ;Laboratorio4.c: 139: else if(RB7==0) return '-';
  1299   000BCE  BE81               	btfsc	3969,7,c	;volatile
  1300   000BD0  D002               	goto	l1133
  1301   000BD2  0E2D               	movlw	45
  1302   000BD4  0012               	return	
  1303   000BD6                     l1133:
  1304                           
  1305                           ;Laboratorio4.c: 140: else{;Laboratorio4.c: 141: LATB=0b11111011;
  1306   000BD6  0EFB               	movlw	251
  1307   000BD8  6E8A               	movwf	138,c	;volatile
  1308                           
  1309                           ;Laboratorio4.c: 142: if(RB4==0) return '7';
  1310   000BDA  B881               	btfsc	3969,4,c	;volatile
  1311   000BDC  D002               	goto	l195
  1312   000BDE  0E37               	movlw	55
  1313   000BE0  0012               	return	
  1314   000BE2                     l195:
  1315                           
  1316                           ;Laboratorio4.c: 143: else if(RB5==0) return '8';
  1317   000BE2  BA81               	btfsc	3969,5,c	;volatile
  1318   000BE4  D002               	goto	l197
  1319   000BE6  0E38               	movlw	56
  1320   000BE8  0012               	return	
  1321   000BEA                     l197:
  1322                           
  1323                           ;Laboratorio4.c: 144: else if(RB6==0) return '9';
  1324   000BEA  BC81               	btfsc	3969,6,c	;volatile
  1325   000BEC  D002               	goto	l199
  1326   000BEE  0E39               	movlw	57
  1327   000BF0  0012               	return	
  1328   000BF2                     l199:
  1329                           
  1330                           ;Laboratorio4.c: 145: else if(RB7==0) return '/';
  1331   000BF2  BE81               	btfsc	3969,7,c	;volatile
  1332   000BF4  D002               	goto	l1161
  1333   000BF6  0E2F               	movlw	47
  1334   000BF8  0012               	return	
  1335   000BFA                     l1161:
  1336                           
  1337                           ;Laboratorio4.c: 146: else{;Laboratorio4.c: 147: LATB=0b11110111;
  1338   000BFA  0EF7               	movlw	247
  1339   000BFC  6E8A               	movwf	138,c	;volatile
  1340                           
  1341                           ;Laboratorio4.c: 148: if(RB4==0) return 'C';
  1342   000BFE  B881               	btfsc	3969,4,c	;volatile
  1343   000C00  D002               	goto	l203
  1344   000C02  0E43               	movlw	67
  1345   000C04  0012               	return	
  1346   000C06                     l203:
  1347                           
  1348                           ;Laboratorio4.c: 149: else if(RB5==0) return '0';
  1349   000C06  BA81               	btfsc	3969,5,c	;volatile
  1350   000C08  D002               	goto	l205
  1351   000C0A  0E30               	movlw	48
  1352   000C0C  0012               	return	
  1353   000C0E                     l205:
  1354                           
  1355                           ;Laboratorio4.c: 150: else if(RB6==0) return '=';
  1356   000C0E  BC81               	btfsc	3969,6,c	;volatile
  1357   000C10  D002               	goto	l207
  1358   000C12  0E3D               	movlw	61
  1359   000C14  0012               	return	
  1360   000C16                     l207:
  1361                           
  1362                           ;Laboratorio4.c: 151: else if(RB7==0) return 'x';
  1363   000C16  BE81               	btfsc	3969,7,c	;volatile
  1364   000C18  D002               	goto	l204
  1365   000C1A  0E78               	movlw	120
  1366   000C1C  0012               	return	
  1367   000C1E                     l204:
  1368                           
  1369                           ;Laboratorio4.c: 152: }}};Laboratorio4.c: 153: return '?';
  1370   000C1E  0E3F               	movlw	63
  1371   000C20  0012               	return		;funcret
  1372   000C22                     __end_of_LeerTeclado:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _InicializaLCD *****************
  1376 ;; Defined at:
  1377 ;;		line 71 in file "LibLCDXC8.h"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 3
  1398 ;; This function calls:
  1399 ;;		_BorraLCD
  1400 ;;		_EnviaDato
  1401 ;;		_HabilitaLCD
  1402 ;;		_RetardoLCD
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text6
  1409   000D18                     __ptext6:
  1410                           	callstack 0
  1411   000D18                     _InicializaLCD:
  1412                           	callstack 27
  1413                           
  1414                           ;LibLCDXC8.h: 73: LATE0=0;
  1415                           
  1416                           ;incstack = 0
  1417   000D18  908D               	bcf	3981,0,c	;volatile
  1418                           
  1419                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1420                           
  1421                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1422   000D1A  0E3F               	movlw	63
  1423   000D1C  6E8C               	movwf	140,c	;volatile
  1424                           
  1425                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1426   000D1E  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1427                           
  1428                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1429   000D22  0E01               	movlw	1
  1430   000D24  EC11  F006         	call	_RetardoLCD
  1431                           
  1432                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1433                           
  1434                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1435   000D28  0E3F               	movlw	63
  1436   000D2A  6E8C               	movwf	140,c	;volatile
  1437                           
  1438                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1439   000D2C  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1440                           
  1441                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1442   000D30  0E03               	movlw	3
  1443   000D32  EC11  F006         	call	_RetardoLCD
  1444                           
  1445                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1446                           
  1447                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1448   000D36  0E3F               	movlw	63
  1449   000D38  6E8C               	movwf	140,c	;volatile
  1450                           
  1451                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1452   000D3A  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1453                           
  1454                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1455   000D3E  0E04               	movlw	4
  1456   000D40  EC11  F006         	call	_RetardoLCD
  1457                           
  1458                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1459                           
  1460                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1461   000D44  ECF1  F006         	call	_BorraLCD	;wreg free
  1462                           
  1463                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1464   000D48  0E0F               	movlw	15
  1465   000D4A  EC02  F007         	call	_EnviaDato
  1466                           
  1467                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1468   000D4E  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1469                           
  1470                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1471   000D52  0E04               	movlw	4
  1472   000D54  EC11  F006         	call	_RetardoLCD
  1473   000D58  0012               	return		;funcret
  1474   000D5A                     __end_of_InicializaLCD:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _BorraLCD *****************
  1478 ;; Defined at:
  1479 ;;		line 112 in file "LibLCDXC8.h"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 2
  1500 ;; This function calls:
  1501 ;;		_EnviaDato
  1502 ;;		_HabilitaLCD
  1503 ;;		_RetardoLCD
  1504 ;; This function is called by:
  1505 ;;		_InicializaLCD
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text7
  1511   000DE2                     __ptext7:
  1512                           	callstack 0
  1513   000DE2                     _BorraLCD:
  1514                           	callstack 27
  1515                           
  1516                           ;LibLCDXC8.h: 114: LATE0=0;
  1517                           
  1518                           ;incstack = 0
  1519   000DE2  908D               	bcf	3981,0,c	;volatile
  1520                           
  1521                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1522   000DE4  0E01               	movlw	1
  1523   000DE6  EC02  F007         	call	_EnviaDato
  1524                           
  1525                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1526   000DEA  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1527                           
  1528                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1529   000DEE  0E02               	movlw	2
  1530   000DF0  EC11  F006         	call	_RetardoLCD
  1531   000DF4  0012               	return		;funcret
  1532   000DF6                     __end_of_BorraLCD:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _DireccionaLCD *****************
  1536 ;; Defined at:
  1537 ;;		line 252 in file "LibLCDXC8.h"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  a               1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  a               1    3[COMRAM] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1554 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 2
  1558 ;; This function calls:
  1559 ;;		_EnviaDato
  1560 ;;		_HabilitaLCD
  1561 ;;		_RetardoLCD
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text8
  1568   000DCC                     __ptext8:
  1569                           	callstack 0
  1570   000DCC                     _DireccionaLCD:
  1571                           	callstack 28
  1572                           
  1573                           ;incstack = 0
  1574                           ;DireccionaLCD@a stored from wreg
  1575   000DCC  6E0F               	movwf	DireccionaLCD@a^0,c
  1576                           
  1577                           ;LibLCDXC8.h: 255: LATE0=0;
  1578   000DCE  908D               	bcf	3981,0,c	;volatile
  1579                           
  1580                           ;LibLCDXC8.h: 256: EnviaDato(a);
  1581   000DD0  500F               	movf	DireccionaLCD@a^0,w,c
  1582   000DD2  EC02  F007         	call	_EnviaDato
  1583                           
  1584                           ;LibLCDXC8.h: 257: HabilitaLCD();
  1585   000DD6  ECFB  F006         	call	_HabilitaLCD	;wreg free
  1586                           
  1587                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  1588   000DDA  0E04               	movlw	4
  1589   000DDC  EC11  F006         	call	_RetardoLCD
  1590   000DE0  0012               	return		;funcret
  1591   000DE2                     __end_of_DireccionaLCD:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _EnviaDato *****************
  1595 ;; Defined at:
  1596 ;;		line 59 in file "LibLCDXC8.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  a               1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  a               1    2[COMRAM] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0
  1611 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1613 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1614 ;;Total ram usage:        1 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 1
  1617 ;; This function calls:
  1618 ;;		_HabilitaLCD
  1619 ;;		_RetardoLCD
  1620 ;; This function is called by:
  1621 ;;		_InicializaLCD
  1622 ;;		_BorraLCD
  1623 ;;		_EscribeLCD_c
  1624 ;;		_DireccionaLCD
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text9
  1629   000E04                     __ptext9:
  1630                           	callstack 0
  1631   000E04                     _EnviaDato:
  1632                           	callstack 27
  1633                           
  1634                           ;incstack = 0
  1635                           ;EnviaDato@a stored from wreg
  1636   000E04  6E0E               	movwf	EnviaDato@a^0,c
  1637                           
  1638                           ;LibLCDXC8.h: 68: LATD=a;
  1639                           
  1640                           ;LibLCDXC8.h: 60: if(interfaz==4){
  1641   000E06  C00E  FF8C         	movff	EnviaDato@a,3980	;volatile
  1642   000E0A  0012               	return		;funcret
  1643   000E0C                     __end_of_EnviaDato:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _RetardoLCD *****************
  1647 ;; Defined at:
  1648 ;;		line 288 in file "LibLCDXC8.h"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  a               1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  a               1    1[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1664 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1665 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1666 ;;Total ram usage:        2 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_EnviaDato
  1672 ;;		_InicializaLCD
  1673 ;;		_BorraLCD
  1674 ;;		_EscribeLCD_c
  1675 ;;		_DireccionaLCD
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text10
  1680   000C22                     __ptext10:
  1681                           	callstack 0
  1682   000C22                     _RetardoLCD:
  1683                           	callstack 28
  1684                           
  1685                           ;incstack = 0
  1686                           ;RetardoLCD@a stored from wreg
  1687   000C22  6E0D               	movwf	RetardoLCD@a^0,c
  1688                           
  1689                           ;LibLCDXC8.h: 289: switch(a){
  1690   000C24  D01B               	goto	l975
  1691   000C26                     l965:
  1692   000C26  0E05               	movlw	5
  1693   000C28  6E0C               	movwf	??_RetardoLCD^0,c
  1694   000C2A  0EDE               	movlw	222
  1695   000C2C                     u937:
  1696   000C2C  2EE8               	decfsz	wreg,f,c
  1697   000C2E  D7FE               	bra	u937
  1698   000C30  2E0C               	decfsz	??_RetardoLCD^0,f,c
  1699   000C32  D7FC               	bra	u937
  1700                           
  1701                           ;LibLCDXC8.h: 292: break;
  1702   000C34  0012               	return	
  1703   000C36                     l967:
  1704   000C36  0E53               	movlw	83
  1705   000C38                     u947:
  1706   000C38  2EE8               	decfsz	wreg,f,c
  1707   000C3A  D7FE               	bra	u947
  1708   000C3C  F000               	nop	
  1709                           
  1710                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1711   000C3E  0E35               	movlw	53
  1712   000C40                     u957:
  1713   000C40  2EE8               	decfsz	wreg,f,c
  1714   000C42  D7FE               	bra	u957
  1715   000C44  F000               	nop	
  1716                           
  1717                           ;LibLCDXC8.h: 296: break;
  1718   000C46  0012               	return	
  1719   000C48                     l969:
  1720   000C48  0E08               	movlw	8
  1721   000C4A                     u967:
  1722   000C4A  2EE8               	decfsz	wreg,f,c
  1723   000C4C  D7FE               	bra	u967
  1724   000C4E  F000               	nop	
  1725                           
  1726                           ;LibLCDXC8.h: 299: break;
  1727   000C50  0012               	return	
  1728   000C52                     l971:
  1729   000C52  0E03               	movlw	3
  1730   000C54                     u977:
  1731   000C54  2EE8               	decfsz	wreg,f,c
  1732   000C56  D7FE               	bra	u977
  1733   000C58  F000               	nop	
  1734                           
  1735                           ;LibLCDXC8.h: 302: break;
  1736   000C5A  0012               	return	
  1737   000C5C                     l975:
  1738   000C5C  500D               	movf	RetardoLCD@a^0,w,c
  1739                           
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 4, Range of values is 1 to 4
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           13     7 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   000C5E  0A01               	xorlw	1	; case 1
  1747   000C60  B4D8               	btfsc	status,2,c
  1748   000C62  D7E1               	goto	l965
  1749   000C64  0A03               	xorlw	3	; case 2
  1750   000C66  B4D8               	btfsc	status,2,c
  1751   000C68  D7E6               	goto	l967
  1752   000C6A  0A01               	xorlw	1	; case 3
  1753   000C6C  B4D8               	btfsc	status,2,c
  1754   000C6E  D7EC               	goto	l969
  1755   000C70  0A07               	xorlw	7	; case 4
  1756   000C72  A4D8               	btfss	status,2,c
  1757   000C74  0012               	return	
  1758   000C76  D7ED               	goto	l971
  1759   000C78                     __end_of_RetardoLCD:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _HabilitaLCD *****************
  1763 ;; Defined at:
  1764 ;;		line 105 in file "LibLCDXC8.h"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_EnviaDato
  1788 ;;		_InicializaLCD
  1789 ;;		_BorraLCD
  1790 ;;		_EscribeLCD_c
  1791 ;;		_DireccionaLCD
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text11
  1796   000DF6                     __ptext11:
  1797                           	callstack 0
  1798   000DF6                     _HabilitaLCD:
  1799                           	callstack 28
  1800                           
  1801                           ;LibLCDXC8.h: 107: LATE1=1;
  1802                           
  1803                           ;incstack = 0
  1804   000DF6  828D               	bsf	3981,1,c	;volatile
  1805                           
  1806                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1807   000DF8  0E03               	movlw	3
  1808   000DFA                     u987:
  1809   000DFA  2EE8               	decfsz	wreg,f,c
  1810   000DFC  D7FE               	bra	u987
  1811   000DFE  F000               	nop	
  1812                           
  1813                           ;LibLCDXC8.h: 110: LATE1=0;
  1814   000E00  928D               	bcf	3981,1,c	;volatile
  1815   000E02  0012               	return		;funcret
  1816   000E04                     __end_of_HabilitaLCD:
  1817                           	callstack 0
  1818                           
  1819                           	psect	rparam
  1820   000000                     
  1821                           	psect	idloc
  1822                           
  1823                           ;Config register IDLOC0 @ 0x200000
  1824                           ;	unspecified, using default values
  1825   200000                     	org	2097152
  1826   200000  FF                 	db	255
  1827                           
  1828                           ;Config register IDLOC1 @ 0x200001
  1829                           ;	unspecified, using default values
  1830   200001                     	org	2097153
  1831   200001  FF                 	db	255
  1832                           
  1833                           ;Config register IDLOC2 @ 0x200002
  1834                           ;	unspecified, using default values
  1835   200002                     	org	2097154
  1836   200002  FF                 	db	255
  1837                           
  1838                           ;Config register IDLOC3 @ 0x200003
  1839                           ;	unspecified, using default values
  1840   200003                     	org	2097155
  1841   200003  FF                 	db	255
  1842                           
  1843                           ;Config register IDLOC4 @ 0x200004
  1844                           ;	unspecified, using default values
  1845   200004                     	org	2097156
  1846   200004  FF                 	db	255
  1847                           
  1848                           ;Config register IDLOC5 @ 0x200005
  1849                           ;	unspecified, using default values
  1850   200005                     	org	2097157
  1851   200005  FF                 	db	255
  1852                           
  1853                           ;Config register IDLOC6 @ 0x200006
  1854                           ;	unspecified, using default values
  1855   200006                     	org	2097158
  1856   200006  FF                 	db	255
  1857                           
  1858                           ;Config register IDLOC7 @ 0x200007
  1859                           ;	unspecified, using default values
  1860   200007                     	org	2097159
  1861   200007  FF                 	db	255
  1862                           
  1863                           	psect	config
  1864                           
  1865                           ;Config register CONFIG1L @ 0x300000
  1866                           ;	unspecified, using default values
  1867                           ;	PLL Prescaler Selection bits
  1868                           ;	PLLDIV = 0x0, unprogrammed default
  1869                           ;	System Clock Postscaler Selection bits
  1870                           ;	CPUDIV = 0x0, unprogrammed default
  1871                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1872                           ;	USBDIV = 0x0, unprogrammed default
  1873   300000                     	org	3145728
  1874   300000  00                 	db	0
  1875                           
  1876                           ;Config register CONFIG1H @ 0x300001
  1877                           ;	Oscillator Selection bits
  1878                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1879                           ;	Fail-Safe Clock Monitor Enable bit
  1880                           ;	FCMEN = 0x0, unprogrammed default
  1881                           ;	Internal/External Oscillator Switchover bit
  1882                           ;	IESO = 0x0, unprogrammed default
  1883   300001                     	org	3145729
  1884   300001  09                 	db	9
  1885                           
  1886                           ;Config register CONFIG2L @ 0x300002
  1887                           ;	unspecified, using default values
  1888                           ;	Power-up Timer Enable bit
  1889                           ;	PWRT = 0x1, unprogrammed default
  1890                           ;	Brown-out Reset Enable bits
  1891                           ;	BOR = 0x3, unprogrammed default
  1892                           ;	Brown-out Reset Voltage bits
  1893                           ;	BORV = 0x3, unprogrammed default
  1894                           ;	USB Voltage Regulator Enable bit
  1895                           ;	VREGEN = 0x0, unprogrammed default
  1896   300002                     	org	3145730
  1897   300002  1F                 	db	31
  1898                           
  1899                           ;Config register CONFIG2H @ 0x300003
  1900                           ;	Watchdog Timer Enable bit
  1901                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1902                           ;	Watchdog Timer Postscale Select bits
  1903                           ;	WDTPS = 0xF, unprogrammed default
  1904   300003                     	org	3145731
  1905   300003  1E                 	db	30
  1906                           
  1907                           ; Padding undefined space
  1908   300004                     	org	3145732
  1909   300004  FF                 	db	255
  1910                           
  1911                           ;Config register CONFIG3H @ 0x300005
  1912                           ;	unspecified, using default values
  1913                           ;	CCP2 MUX bit
  1914                           ;	CCP2MX = 0x1, unprogrammed default
  1915                           ;	PORTB A/D Enable bit
  1916                           ;	PBADEN = 0x1, unprogrammed default
  1917                           ;	Low-Power Timer 1 Oscillator Enable bit
  1918                           ;	LPT1OSC = 0x0, unprogrammed default
  1919                           ;	MCLR Pin Enable bit
  1920                           ;	MCLRE = 0x1, unprogrammed default
  1921   300005                     	org	3145733
  1922   300005  83                 	db	131
  1923                           
  1924                           ;Config register CONFIG4L @ 0x300006
  1925                           ;	unspecified, using default values
  1926                           ;	Stack Full/Underflow Reset Enable bit
  1927                           ;	STVREN = 0x1, unprogrammed default
  1928                           ;	Single-Supply ICSP Enable bit
  1929                           ;	LVP = 0x1, unprogrammed default
  1930                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1931                           ;	ICPRT = 0x0, unprogrammed default
  1932                           ;	Extended Instruction Set Enable bit
  1933                           ;	XINST = 0x0, unprogrammed default
  1934                           ;	Background Debugger Enable bit
  1935                           ;	DEBUG = 0x1, unprogrammed default
  1936   300006                     	org	3145734
  1937   300006  85                 	db	133
  1938                           
  1939                           ; Padding undefined space
  1940   300007                     	org	3145735
  1941   300007  FF                 	db	255
  1942                           
  1943                           ;Config register CONFIG5L @ 0x300008
  1944                           ;	unspecified, using default values
  1945                           ;	Code Protection bit
  1946                           ;	CP0 = 0x1, unprogrammed default
  1947                           ;	Code Protection bit
  1948                           ;	CP1 = 0x1, unprogrammed default
  1949                           ;	Code Protection bit
  1950                           ;	CP2 = 0x1, unprogrammed default
  1951                           ;	Code Protection bit
  1952                           ;	CP3 = 0x1, unprogrammed default
  1953   300008                     	org	3145736
  1954   300008  0F                 	db	15
  1955                           
  1956                           ;Config register CONFIG5H @ 0x300009
  1957                           ;	unspecified, using default values
  1958                           ;	Boot Block Code Protection bit
  1959                           ;	CPB = 0x1, unprogrammed default
  1960                           ;	Data EEPROM Code Protection bit
  1961                           ;	CPD = 0x1, unprogrammed default
  1962   300009                     	org	3145737
  1963   300009  C0                 	db	192
  1964                           
  1965                           ;Config register CONFIG6L @ 0x30000A
  1966                           ;	unspecified, using default values
  1967                           ;	Write Protection bit
  1968                           ;	WRT0 = 0x1, unprogrammed default
  1969                           ;	Write Protection bit
  1970                           ;	WRT1 = 0x1, unprogrammed default
  1971                           ;	Write Protection bit
  1972                           ;	WRT2 = 0x1, unprogrammed default
  1973                           ;	Write Protection bit
  1974                           ;	WRT3 = 0x1, unprogrammed default
  1975   30000A                     	org	3145738
  1976   30000A  0F                 	db	15
  1977                           
  1978                           ;Config register CONFIG6H @ 0x30000B
  1979                           ;	unspecified, using default values
  1980                           ;	Configuration Register Write Protection bit
  1981                           ;	WRTC = 0x1, unprogrammed default
  1982                           ;	Boot Block Write Protection bit
  1983                           ;	WRTB = 0x1, unprogrammed default
  1984                           ;	Data EEPROM Write Protection bit
  1985                           ;	WRTD = 0x1, unprogrammed default
  1986   30000B                     	org	3145739
  1987   30000B  E0                 	db	224
  1988                           
  1989                           ;Config register CONFIG7L @ 0x30000C
  1990                           ;	unspecified, using default values
  1991                           ;	Table Read Protection bit
  1992                           ;	EBTR0 = 0x1, unprogrammed default
  1993                           ;	Table Read Protection bit
  1994                           ;	EBTR1 = 0x1, unprogrammed default
  1995                           ;	Table Read Protection bit
  1996                           ;	EBTR2 = 0x1, unprogrammed default
  1997                           ;	Table Read Protection bit
  1998                           ;	EBTR3 = 0x1, unprogrammed default
  1999   30000C                     	org	3145740
  2000   30000C  0F                 	db	15
  2001                           
  2002                           ;Config register CONFIG7H @ 0x30000D
  2003                           ;	unspecified, using default values
  2004                           ;	Boot Block Table Read Protection bit
  2005                           ;	EBTRB = 0x1, unprogrammed default
  2006   30000D                     	org	3145741
  2007   30000D  40                 	db	64
  2008                           tosu	equ	0xFFF
  2009                           tosh	equ	0xFFE
  2010                           tosl	equ	0xFFD
  2011                           stkptr	equ	0xFFC
  2012                           pclatu	equ	0xFFB
  2013                           pclath	equ	0xFFA
  2014                           pcl	equ	0xFF9
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           indf0	equ	0xFEF
  2022                           postinc0	equ	0xFEE
  2023                           postdec0	equ	0xFED
  2024                           preinc0	equ	0xFEC
  2025                           plusw0	equ	0xFEB
  2026                           fsr0h	equ	0xFEA
  2027                           fsr0l	equ	0xFE9
  2028                           wreg	equ	0xFE8
  2029                           indf1	equ	0xFE7
  2030                           postinc1	equ	0xFE6
  2031                           postdec1	equ	0xFE5
  2032                           preinc1	equ	0xFE4
  2033                           plusw1	equ	0xFE3
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           bsr	equ	0xFE0
  2037                           indf2	equ	0xFDF
  2038                           postinc2	equ	0xFDE
  2039                           postdec2	equ	0xFDD
  2040                           preinc2	equ	0xFDC
  2041                           plusw2	equ	0xFDB
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2666
                                              8 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lwdiv
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      19       1       26.3%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      28        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 12 23:25:46 2023

                      _i 0005                        _r 0001                       u60 0B8E  
                     _n1 0009                       _n2 0007               EnviaDato@a 000E  
                     _op 0018      ___wmul@multiplicand 000E            ??_LeerTeclado 000C  
                    l203 0C06                      l204 0C1E                      l205 0C0E  
          _InicializaLCD 0D18                      l207 0C16                      l181 0BA2  
                    l191 0BCE                      l183 0BAA                      l178 0B9A  
                    l195 0BE2                      l187 0BBE                      l197 0BEA  
                    l189 0BC6                      l199 0BF2                      l691 0CC0  
                    l971 0C52                      l965 0C26                      l967 0C36  
                    l975 0C5C                      l969 0C48                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RB7 007C0F  
                    u640 08BE                      u570 0D16                      u590 0C9A  
                    u830 0A5C                      u840 0A6E                      u850 0A80  
                    u690 08E6                      u860 0AB6                      u917 084A  
                    u870 0AC8                      u927 0B74                      u880 0ADA  
                    u937 0C2C                      u947 0C38                      u957 0C40  
                    u967 0C4A                      u977 0C54                      u987 0DFA  
                    _n1c 0017                      _n2c 0016                      wreg 000FE8  
                   l1105 0BB2                     l1133 0BD6                     l1161 0BFA  
                   l1403 0CB6                     l1501 0A00                     l1421 085A  
                   l1511 0A2A                     l1513 0A46                     l1371 0CD2  
                   l1507 0A18                     l1435 08A6                     l1541 0B4C  
                   l1533 0ADA                     l1375 0D00                     l1391 0C8E  
                   l1527 0AA6                     l1463 091E                     l1551 0B6E  
                   l1455 08F8                     l1393 0C96                     l1537 0B26  
                   l1473 094C                     l1483 097A                     l1485 0986  
                   l1495 09EC                     l1487 099C                     l1489 09BA  
                   STR_1 0812                     STR_2 0801                     _LATB 000F8A  
                   _LATD 000F8C                     _RBPU 007F8F           ??_EscribeLCD_c 000F  
                   _main 081E                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 000C                    ?_main 000C            EscribeLCD_c@a 000F  
                  _LATE0 007C68                    _LATE1 007C69          __end_of___lwdiv 0CCA  
                  _TRISB 000F93                    _TRISD 000F95                    _TRISE 000F96  
                  _Tecla 000B      __end_of_LeerTeclado 0C22                    tablat 000FF5  
            _HabilitaLCD 0DF6                    status 000FD8         __end_of_BorraLCD 0DF6  
        __initialization 0D5A             __end_of_main 0B80                   ??_main 0014  
          __activetblptr 000002                   _ADCON1 000FC1           DireccionaLCD@a 000F  
  __end_of_DireccionaLCD 0DE2               _RetardoLCD 0C22                   ___wmul 0D90  
              ??___lwdiv 0010          ??_InicializaLCD 000F                   clear_0 0D80  
                 isa$std 000001     __end_of_EscribeLCD_c 0DCC              _LeerTeclado 0B80  
           __pdataCOMRAM 0016             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0D86            ___rparam_used 000001           __pcstackCOMRAM 000C  
      __end_of_EnviaDato 0E0C                ?_BorraLCD 000C              ?_RetardoLCD 000C  
            RetardoLCD@a 000D                  ?___wmul 000C               ??_BorraLCD 000F  
      ??_MensajeLCD_Word 0011             ?_HabilitaLCD 000C                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0C78             __psmallconst 0800  
                __pcinit 0D5A                  __ramtop 0800                  __ptext0 081E  
                __ptext1 0D90                  __ptext2 0C78                  __ptext3 0CCA  
                __ptext4 0DB6                  __ptext5 0B80                  __ptext6 0D18  
                __ptext7 0DE2                  __ptext8 0DCC                  __ptext9 0E04  
   end_of_initialization 0D86            __Lmediumconst 0000             _EscribeLCD_c 0DB6  
                postdec1 000FE5                  postinc0 000FEE             ?_LeerTeclado 000C  
         __end_of___wmul 0DB6            __pidataCOMRAM 0E0C    __end_of_InicializaLCD 0D5A  
              _EnviaDato 0E04      start_initialization 0D5A             ??_RetardoLCD 000C  
               ??___wmul 0010          _MensajeLCD_Word 0CCA               ?_EnviaDato 000C  
            __pbssCOMRAM 0001       __end_of_RetardoLCD 0C78         MensajeLCD_Word@a 0010  
       MensajeLCD_Word@i 0012            _DireccionaLCD 0DCC         ___lwdiv@dividend 000C  
               ?___lwdiv 000C              __smallconst 0800         ___lwdiv@quotient 0010  
         ___wmul@product 0010           ?_DireccionaLCD 000C  __end_of_MensajeLCD_Word 0D18  
      ___wmul@multiplier 000C              ??_EnviaDato 000E                 _BorraLCD 0DE2  
              copy_data0 0D6E                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 000E          ___lwdiv@counter 0012                 __ptext10 0C22  
               __ptext11 0DF6          ??_DireccionaLCD 000F                 _interfaz 0019  
               isa$xinst 000000         ?_MensajeLCD_Word 0010            ??_HabilitaLCD 000C  
          ?_EscribeLCD_c 000C      __end_of_HabilitaLCD 0E04  

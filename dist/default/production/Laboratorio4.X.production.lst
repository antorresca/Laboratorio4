

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 17 07:58:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   0011A6                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _n2c
    75   0011A6  20                 	db	32
    76                           
    77                           ;initializer for _n1c
    78   0011A7  20                 	db	32
    79                           
    80                           ;initializer for _op
    81   0011A8  20                 	db	32
    82                           
    83                           ;initializer for _interfaz
    84   0011A9  08                 	db	8
    85   000000                     _LATC	set	3979
    86   000000                     _TRISC	set	3988
    87   000000                     _LATC7	set	31839
    88   000000                     _LATE2	set	31850
    89   000000                     _RB7	set	31759
    90   000000                     _RB6	set	31758
    91   000000                     _RB5	set	31757
    92   000000                     _TMR0ON	set	32431
    93   000000                     _GIE	set	32663
    94   000000                     _TMR0IE	set	32661
    95   000000                     _LATE1	set	31849
    96   000000                     _LATB	set	3978
    97   000000                     _LATD	set	3980
    98   000000                     _RB4	set	31756
    99   000000                     _TRISB	set	3987
   100   000000                     _TRISD	set	3989
   101   000000                     _ADCON1	set	4033
   102   000000                     _LATE0	set	31848
   103   000000                     _OSCCON	set	4051
   104   000000                     _T0CON	set	4053
   105   000000                     _RBPU	set	32655
   106   000000                     _TRISE	set	3990
   107   000000                     _TMR0IF	set	32658
   108   000000                     _TMR0	set	4054
   109                           
   110                           	psect	smallconst
   111   000800                     __psmallconst:
   112                           	callstack 0
   113   000800  00                 	db	0
   114   000801                     STR_2:
   115   000801  20                 	db	32
   116   000802  20                 	db	32
   117   000803  20                 	db	32
   118   000804  20                 	db	32
   119   000805  20                 	db	32
   120   000806  20                 	db	32
   121   000807  20                 	db	32
   122   000808  20                 	db	32
   123   000809  20                 	db	32
   124   00080A  20                 	db	32
   125   00080B  20                 	db	32
   126   00080C  20                 	db	32
   127   00080D  20                 	db	32
   128   00080E  20                 	db	32
   129   00080F  20                 	db	32
   130   000810  20                 	db	32
   131   000811  00                 	db	0
   132   000812                     STR_1:
   133   000812  48                 	db	72	;'H'
   134   000813  6F                 	db	111	;'o'
   135   000814  6C                 	db	108	;'l'
   136   000815  61                 	db	97	;'a'
   137   000816  20                 	db	32
   138   000817  6D                 	db	109	;'m'
   139   000818  75                 	db	117	;'u'
   140   000819  6E                 	db	110	;'n'
   141   00081A  64                 	db	100	;'d'
   142   00081B  6F                 	db	111	;'o'
   143   00081C  00                 	db	0
   144   00081D  00                 	db	0	; dummy byte at the end
   145   000000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   0010BA                     __pcinit:
   150                           	callstack 0
   151   0010BA                     start_initialization:
   152                           	callstack 0
   153   0010BA                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (4 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158   0010BA  0EA6               	movlw	low __pidataCOMRAM
   159   0010BC  6EF6               	movwf	tblptrl,c
   160   0010BE  0E11               	movlw	high __pidataCOMRAM
   161   0010C0  6EF7               	movwf	tblptrh,c
   162   0010C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163   0010C4  6EF8               	movwf	tblptru,c
   164   0010C6  EE00  F02D         	lfsr	0,__pdataCOMRAM
   165   0010CA  EE10 F004          	lfsr	1,4
   166   0010CE                     copy_data0:
   167   0010CE  0009               	tblrd		*+
   168   0010D0  CFF5 FFEE          	movff	tablat,postinc0
   169   0010D4  50E5               	movf	postdec1,w,c
   170   0010D6  50E1               	movf	fsr1l,w,c
   171   0010D8  E1FA               	bnz	copy_data0
   172                           
   173                           ; Clear objects allocated to COMRAM (25 bytes)
   174   0010DA  EE00  F001         	lfsr	0,__pbssCOMRAM
   175   0010DE  0E19               	movlw	25
   176   0010E0                     clear_0:
   177   0010E0  6AEE               	clrf	postinc0,c
   178   0010E2  06E8               	decf	wreg,f,c
   179   0010E4  E1FD               	bnz	clear_0
   180   0010E6                     end_of_initialization:
   181                           	callstack 0
   182   0010E6                     __end_of__initialization:
   183                           	callstack 0
   184   0010E6  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185   0010E8  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186   0010EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187   0010EC  6EF8               	movwf	tblptru,c
   188   0010EE  0100               	movlb	0
   189   0010F0  EF0F  F004         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMRAM
   192   000001                     __pbssCOMRAM:
   193                           	callstack 0
   194   000001                     _r:
   195                           	callstack 0
   196   000001                     	ds	4
   197   000005                     _partdecl:
   198                           	callstack 0
   199   000005                     	ds	4
   200   000009                     _verificador:
   201                           	callstack 0
   202   000009                     	ds	2
   203   00000B                     _contador:
   204                           	callstack 0
   205   00000B                     	ds	2
   206   00000D                     _color:
   207                           	callstack 0
   208   00000D                     	ds	2
   209   00000F                     _i:
   210                           	callstack 0
   211   00000F                     	ds	2
   212   000011                     _n2:
   213                           	callstack 0
   214   000011                     	ds	2
   215   000013                     _n1:
   216                           	callstack 0
   217   000013                     	ds	2
   218   000015                     _Tecla:
   219                           	callstack 0
   220   000015                     	ds	1
   221   000016                     _m:
   222                           	callstack 0
   223   000016                     	ds	4
   224                           
   225                           	psect	dataCOMRAM
   226   00002D                     __pdataCOMRAM:
   227                           	callstack 0
   228   00002D                     _n2c:
   229                           	callstack 0
   230   00002D                     	ds	1
   231   00002E                     _n1c:
   232                           	callstack 0
   233   00002E                     	ds	1
   234   00002F                     _op:
   235                           	callstack 0
   236   00002F                     	ds	1
   237   000030                     _interfaz:
   238                           	callstack 0
   239   000030                     	ds	1
   240                           
   241                           	psect	cstackCOMRAM
   242   00001A                     __pcstackCOMRAM:
   243                           	callstack 0
   244   00001A                     ??_RetardoLCD:
   245   00001A                     ??_ColorRGB:
   246   00001A                     ?___wmul:
   247                           	callstack 0
   248   00001A                     ?___lwmod:
   249                           	callstack 0
   250   00001A                     ?___lmul:
   251                           	callstack 0
   252   00001A                     ___wmul@multiplier:
   253                           	callstack 0
   254   00001A                     ___lwmod@dividend:
   255                           	callstack 0
   256   00001A                     ___lmul@multiplier:
   257                           	callstack 0
   258                           
   259                           ; 4 bytes @ 0x0
   260   00001A                     	ds	1
   261   00001B                     RetardoLCD@a:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x1
   265   00001B                     	ds	1
   266   00001C                     EnviaDato@a:
   267                           	callstack 0
   268   00001C                     ___wmul@multiplicand:
   269                           	callstack 0
   270   00001C                     ___lwmod@divisor:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274   00001C                     	ds	1
   275   00001D                     EscribeLCD_c@a:
   276                           	callstack 0
   277   00001D                     DireccionaLCD@a:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x3
   281   00001D                     	ds	1
   282   00001E                     MensajeLCD_Word@a:
   283                           	callstack 0
   284   00001E                     ___lwmod@counter:
   285                           	callstack 0
   286   00001E                     ___wmul@product:
   287                           	callstack 0
   288   00001E                     ___lmul@multiplicand:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x4
   292   00001E                     	ds	1
   293   00001F                     ??_MensajeLCD_Word:
   294                           
   295                           ; 1 bytes @ 0x5
   296   00001F                     	ds	1
   297   000020                     ?___lwdiv:
   298                           	callstack 0
   299   000020                     MensajeLCD_Word@i:
   300                           	callstack 0
   301   000020                     ___lwdiv@dividend:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x6
   305   000020                     	ds	2
   306   000022                     ___lwdiv@divisor:
   307                           	callstack 0
   308   000022                     ___lmul@product:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x8
   312   000022                     	ds	2
   313   000024                     ___lwdiv@quotient:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xA
   317   000024                     	ds	2
   318   000026                     ___lwdiv@counter:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0xC
   322   000026                     	ds	1
   323   000027                     ??_main:
   324                           
   325                           ; 1 bytes @ 0xD
   326   000027                     	ds	4
   327   00002B                     main@i:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x11
   331   00002B                     	ds	2
   332                           
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 24 in file "Laboratorio4.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  i               2   17[COMRAM] int 
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   352 ;;      Params:         0       0       0       0       0       0       0       0       0
   353 ;;      Locals:         2       0       0       0       0       0       0       0       0
   354 ;;      Temps:          4       0       0       0       0       0       0       0       0
   355 ;;      Totals:         6       0       0       0       0       0       0       0       0
   356 ;;Total ram usage:        6 bytes
   357 ;; Hardware stack levels required when called: 5
   358 ;; This function calls:
   359 ;;		_BorraLCD
   360 ;;		_ColorRGB
   361 ;;		_DireccionaLCD
   362 ;;		_EscribeLCD_c
   363 ;;		_InicializaLCD
   364 ;;		_LeerTeclado
   365 ;;		_MensajeLCD_Word
   366 ;;		___lmul
   367 ;;		___lwdiv
   368 ;;		___lwmod
   369 ;;		___wmul
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text0
   376   00081E                     __ptext0:
   377                           	callstack 0
   378   00081E                     _main:
   379                           	callstack 26
   380                           
   381                           ;Laboratorio4.c: 25: ADCON1=15;
   382                           
   383                           ;incstack = 0
   384   00081E  0E0F               	movlw	15
   385   000820  6EC1               	movwf	193,c	;volatile
   386                           
   387                           ;Laboratorio4.c: 26: TRISD=0;
   388   000822  0E00               	movlw	0
   389   000824  6E95               	movwf	149,c	;volatile
   390                           
   391                           ;Laboratorio4.c: 27: TRISB=0b11110000;
   392   000826  0EF0               	movlw	240
   393   000828  6E93               	movwf	147,c	;volatile
   394                           
   395                           ;Laboratorio4.c: 28: TRISE=0;
   396   00082A  0E00               	movlw	0
   397   00082C  6E96               	movwf	150,c	;volatile
   398                           
   399                           ;Laboratorio4.c: 29: TRISC=0;
   400   00082E  0E00               	movlw	0
   401   000830  6E94               	movwf	148,c	;volatile
   402                           
   403                           ;Laboratorio4.c: 30: RBPU=0;
   404   000832  9EF1               	bcf	4081,7,c	;volatile
   405                           
   406                           ;Laboratorio4.c: 31: InicializaLCD();
   407   000834  EC3C  F008         	call	_InicializaLCD	;wreg free
   408                           
   409                           ;Laboratorio4.c: 33: T0CON=0b10000011;
   410   000838  0E83               	movlw	131
   411   00083A  6ED5               	movwf	213,c	;volatile
   412                           
   413                           ;Laboratorio4.c: 34: TMR0IF=0;
   414   00083C  94F2               	bcf	4082,2,c	;volatile
   415                           
   416                           ;Laboratorio4.c: 35: TMR0=49911;
   417   00083E  0EC2               	movlw	194
   418   000840  6ED7               	movwf	215,c	;volatile
   419   000842  0EF7               	movlw	247
   420   000844  6ED6               	movwf	214,c	;volatile
   421                           
   422                           ;Laboratorio4.c: 36: TMR0IE=1;
   423   000846  8AF2               	bsf	4082,5,c	;volatile
   424                           
   425                           ;Laboratorio4.c: 37: GIE=1;
   426   000848  8EF2               	bsf	4082,7,c	;volatile
   427                           
   428                           ;Laboratorio4.c: 38: TMR0ON=1;
   429   00084A  8ED5               	bsf	4053,7,c	;volatile
   430                           
   431                           ;Laboratorio4.c: 41: OSCCON = 0b11000100;
   432   00084C  0EC4               	movlw	196
   433   00084E  6ED3               	movwf	211,c	;volatile
   434                           
   435                           ;Laboratorio4.c: 43: BorraLCD();
   436   000850  ECBE  F008         	call	_BorraLCD	;wreg free
   437                           
   438                           ;Laboratorio4.c: 44: MensajeLCD_Word("Hola mundo");
   439   000854  0E12               	movlw	low STR_1
   440   000856  6E1E               	movwf	MensajeLCD_Word@a^0,c
   441   000858  EC7A  F008         	call	_MensajeLCD_Word	;wreg free
   442                           
   443                           ;Laboratorio4.c: 45: _delay((unsigned long)((2000)*(1000000/4000.0)));
   444   00085C  0E03               	movlw	3
   445   00085E  6E28               	movwf	(??_main+1)^0,c
   446   000860  0E8A               	movlw	138
   447   000862  6E27               	movwf	??_main^0,c
   448   000864  0E56               	movlw	86
   449   000866                     u1507:
   450   000866  2EE8               	decfsz	wreg,f,c
   451   000868  D7FE               	bra	u1507
   452   00086A  2E27               	decfsz	??_main^0,f,c
   453   00086C  D7FC               	bra	u1507
   454   00086E  2E28               	decfsz	(??_main+1)^0,f,c
   455   000870  D7FA               	bra	u1507
   456                           
   457                           ;Laboratorio4.c: 46: BorraLCD();
   458   000872  ECBE  F008         	call	_BorraLCD	;wreg free
   459   000876                     l1674:
   460                           
   461                           ;Laboratorio4.c: 48: LATB=0B00000000;
   462   000876  0E00               	movlw	0
   463   000878  6E8A               	movwf	138,c	;volatile
   464                           
   465                           ;Laboratorio4.c: 49: verificador = 0;
   466   00087A  0E00               	movlw	0
   467   00087C  6E0A               	movwf	(_verificador+1)^0,c
   468   00087E  0E00               	movlw	0
   469   000880  6E09               	movwf	_verificador^0,c
   470                           
   471                           ;Laboratorio4.c: 50: Tecla = LeerTeclado();
   472   000882  ECDD  F006         	call	_LeerTeclado	;wreg free
   473   000886  6E15               	movwf	_Tecla^0,c
   474                           
   475                           ;Laboratorio4.c: 51: ColorRGB();
   476   000888  EC32  F007         	call	_ColorRGB	;wreg free
   477                           
   478                           ;Laboratorio4.c: 52: if(Tecla=='C'){
   479   00088C  0E43               	movlw	67
   480   00088E  1815               	xorwf	_Tecla^0,w,c
   481   000890  A4D8               	btfss	status,2,c
   482   000892  D02B               	goto	l1708
   483                           
   484                           ;Laboratorio4.c: 53: DireccionaLCD(0xC0);
   485   000894  0EC0               	movlw	192
   486   000896  ECB3  F008         	call	_DireccionaLCD
   487                           
   488                           ;Laboratorio4.c: 55: op = ' ';
   489   00089A  0E20               	movlw	32
   490   00089C  6E2F               	movwf	_op^0,c
   491                           
   492                           ;Laboratorio4.c: 56: n1c = ' ';
   493   00089E  0E20               	movlw	32
   494   0008A0  6E2E               	movwf	_n1c^0,c
   495                           
   496                           ;Laboratorio4.c: 57: n2c = ' ';
   497   0008A2  0E20               	movlw	32
   498   0008A4  6E2D               	movwf	_n2c^0,c
   499                           
   500                           ;Laboratorio4.c: 58: n1 = 0;
   501   0008A6  0E00               	movlw	0
   502   0008A8  6E14               	movwf	(_n1+1)^0,c
   503   0008AA  0E00               	movlw	0
   504   0008AC  6E13               	movwf	_n1^0,c
   505                           
   506                           ;Laboratorio4.c: 59: n2 = 0;
   507   0008AE  0E00               	movlw	0
   508   0008B0  6E12               	movwf	(_n2+1)^0,c
   509   0008B2  0E00               	movlw	0
   510   0008B4  6E11               	movwf	_n2^0,c
   511                           
   512                           ;Laboratorio4.c: 60: i = 0;
   513   0008B6  0E00               	movlw	0
   514   0008B8  6E10               	movwf	(_i+1)^0,c
   515   0008BA  0E00               	movlw	0
   516   0008BC  6E0F               	movwf	_i^0,c
   517                           
   518                           ;Laboratorio4.c: 61: partdecl = 0;
   519   0008BE  0E00               	movlw	0
   520   0008C0  6E05               	movwf	_partdecl^0,c
   521   0008C2  0E00               	movlw	0
   522   0008C4  6E06               	movwf	(_partdecl+1)^0,c
   523   0008C6  0E00               	movlw	0
   524   0008C8  6E07               	movwf	(_partdecl+2)^0,c
   525   0008CA  0E00               	movlw	0
   526   0008CC  6E08               	movwf	(_partdecl+3)^0,c
   527                           
   528                           ;Laboratorio4.c: 62: DireccionaLCD(0x80);
   529   0008CE  0E80               	movlw	128
   530   0008D0  ECB3  F008         	call	_DireccionaLCD
   531                           
   532                           ;Laboratorio4.c: 63: MensajeLCD_Word("                ");
   533   0008D4  0E01               	movlw	low STR_2
   534   0008D6  6E1E               	movwf	MensajeLCD_Word@a^0,c
   535   0008D8  EC7A  F008         	call	_MensajeLCD_Word	;wreg free
   536                           
   537                           ;Laboratorio4.c: 64: DireccionaLCD(0xC0);
   538   0008DC  0EC0               	movlw	192
   539   0008DE  ECB3  F008         	call	_DireccionaLCD
   540                           
   541                           ;Laboratorio4.c: 65: DireccionaLCD(0x80);
   542   0008E2  0E80               	movlw	128
   543   0008E4  ECB3  F008         	call	_DireccionaLCD
   544                           
   545                           ;Laboratorio4.c: 66: }else{
   546   0008E8  D7C6               	goto	l1674
   547   0008EA                     l1708:
   548                           
   549                           ;Laboratorio4.c: 67: if(n1c==' '|n2c==' '|op==' '){
   550   0008EA  0E20               	movlw	32
   551   0008EC  182E               	xorwf	_n1c^0,w,c
   552   0008EE  B4D8               	btfsc	status,2,c
   553   0008F0  D008               	goto	u1020
   554   0008F2  0E20               	movlw	32
   555   0008F4  182D               	xorwf	_n2c^0,w,c
   556   0008F6  B4D8               	btfsc	status,2,c
   557   0008F8  D004               	goto	u1020
   558   0008FA  0E20               	movlw	32
   559   0008FC  182F               	xorwf	_op^0,w,c
   560   0008FE  A4D8               	btfss	status,2,c
   561   000900  D083               	goto	l1776
   562   000902                     u1020:
   563                           
   564                           ;Laboratorio4.c: 68: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x') & n1c !=
      +                           ' ' & n2c ==' '){
   565   000902  0E20               	movlw	32
   566   000904  182F               	xorwf	_op^0,w,c
   567   000906  A4D8               	btfss	status,2,c
   568   000908  D021               	goto	l1732
   569   00090A  0E2B               	movlw	43
   570   00090C  1815               	xorwf	_Tecla^0,w,c
   571   00090E  B4D8               	btfsc	status,2,c
   572   000910  D00C               	goto	u1070
   573   000912  0E2D               	movlw	45
   574   000914  1815               	xorwf	_Tecla^0,w,c
   575   000916  B4D8               	btfsc	status,2,c
   576   000918  D008               	goto	u1070
   577   00091A  0E2F               	movlw	47
   578   00091C  1815               	xorwf	_Tecla^0,w,c
   579   00091E  B4D8               	btfsc	status,2,c
   580   000920  D004               	goto	u1070
   581   000922  0E78               	movlw	120
   582   000924  1815               	xorwf	_Tecla^0,w,c
   583   000926  A4D8               	btfss	status,2,c
   584   000928  D011               	goto	l1732
   585   00092A                     u1070:
   586   00092A  0E20               	movlw	32
   587   00092C  182E               	xorwf	_n1c^0,w,c
   588   00092E  B4D8               	btfsc	status,2,c
   589   000930  D00D               	goto	l1732
   590   000932  0E20               	movlw	32
   591   000934  182D               	xorwf	_n2c^0,w,c
   592   000936  A4D8               	btfss	status,2,c
   593   000938  D009               	goto	l1732
   594                           
   595                           ;Laboratorio4.c: 69: DireccionaLCD(0x81);
   596   00093A  0E81               	movlw	129
   597   00093C  ECB3  F008         	call	_DireccionaLCD
   598                           
   599                           ;Laboratorio4.c: 70: EscribeLCD_c(Tecla);
   600   000940  5015               	movf	_Tecla^0,w,c
   601   000942  ECA8  F008         	call	_EscribeLCD_c
   602                           
   603                           ;Laboratorio4.c: 71: op = Tecla;
   604   000946  C015  F02F         	movff	_Tecla,_op
   605                           
   606                           ;Laboratorio4.c: 72: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|
      +                          Tecla!='='|Tecla!='C')){
   607   00094A  D22E               	goto	l1884
   608   00094C                     l1732:
   609   00094C  0E20               	movlw	32
   610   00094E  182E               	xorwf	_n1c^0,w,c
   611   000950  A4D8               	btfss	status,2,c
   612   000952  D027               	goto	l1752
   613   000954  0E2B               	movlw	43
   614   000956  1815               	xorwf	_Tecla^0,w,c
   615   000958  A4D8               	btfss	status,2,c
   616   00095A  D014               	goto	u1160
   617   00095C  0E2D               	movlw	45
   618   00095E  1815               	xorwf	_Tecla^0,w,c
   619   000960  A4D8               	btfss	status,2,c
   620   000962  D010               	goto	u1160
   621   000964  0E2F               	movlw	47
   622   000966  1815               	xorwf	_Tecla^0,w,c
   623   000968  A4D8               	btfss	status,2,c
   624   00096A  D00C               	goto	u1160
   625   00096C  0E78               	movlw	120
   626   00096E  1815               	xorwf	_Tecla^0,w,c
   627   000970  A4D8               	btfss	status,2,c
   628   000972  D008               	goto	u1160
   629   000974  0E3D               	movlw	61
   630   000976  1815               	xorwf	_Tecla^0,w,c
   631   000978  A4D8               	btfss	status,2,c
   632   00097A  D004               	goto	u1160
   633   00097C  0E43               	movlw	67
   634   00097E  1815               	xorwf	_Tecla^0,w,c
   635   000980  B4D8               	btfsc	status,2,c
   636   000982  D00F               	goto	l1752
   637   000984                     u1160:
   638                           
   639                           ;Laboratorio4.c: 73: DireccionaLCD(0x80);
   640   000984  0E80               	movlw	128
   641   000986  ECB3  F008         	call	_DireccionaLCD
   642                           
   643                           ;Laboratorio4.c: 74: EscribeLCD_c(Tecla);
   644   00098A  5015               	movf	_Tecla^0,w,c
   645   00098C  ECA8  F008         	call	_EscribeLCD_c
   646                           
   647                           ;Laboratorio4.c: 75: n1c=Tecla;
   648   000990  C015  F02E         	movff	_Tecla,_n1c
   649                           
   650                           ;Laboratorio4.c: 76: n1 = Tecla-'0';
   651   000994  0ED0               	movlw	208
   652   000996  2415               	addwf	_Tecla^0,w,c
   653   000998  6E13               	movwf	_n1^0,c
   654   00099A  6A14               	clrf	(_n1+1)^0,c
   655   00099C  0EFF               	movlw	255
   656   00099E  2214               	addwfc	(_n1+1)^0,f,c
   657                           
   658                           ;Laboratorio4.c: 77: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|T
      +                          ecla!='/'|Tecla!='x'|Tecla!='='|Tecla!='C')){
   659   0009A0  D203               	goto	l1884
   660   0009A2                     l1752:
   661   0009A2  0E20               	movlw	32
   662   0009A4  182D               	xorwf	_n2c^0,w,c
   663   0009A6  A4D8               	btfss	status,2,c
   664   0009A8  D1FF               	goto	l1884
   665   0009AA  0E20               	movlw	32
   666   0009AC  182F               	xorwf	_op^0,w,c
   667   0009AE  B4D8               	btfsc	status,2,c
   668   0009B0  D1FB               	goto	l1884
   669   0009B2  0E20               	movlw	32
   670   0009B4  182E               	xorwf	_n1c^0,w,c
   671   0009B6  B4D8               	btfsc	status,2,c
   672   0009B8  D1F7               	goto	l1884
   673   0009BA  0E2B               	movlw	43
   674   0009BC  1815               	xorwf	_Tecla^0,w,c
   675   0009BE  A4D8               	btfss	status,2,c
   676   0009C0  D014               	goto	u1250
   677   0009C2  0E2D               	movlw	45
   678   0009C4  1815               	xorwf	_Tecla^0,w,c
   679   0009C6  A4D8               	btfss	status,2,c
   680   0009C8  D010               	goto	u1250
   681   0009CA  0E2F               	movlw	47
   682   0009CC  1815               	xorwf	_Tecla^0,w,c
   683   0009CE  A4D8               	btfss	status,2,c
   684   0009D0  D00C               	goto	u1250
   685   0009D2  0E78               	movlw	120
   686   0009D4  1815               	xorwf	_Tecla^0,w,c
   687   0009D6  A4D8               	btfss	status,2,c
   688   0009D8  D008               	goto	u1250
   689   0009DA  0E3D               	movlw	61
   690   0009DC  1815               	xorwf	_Tecla^0,w,c
   691   0009DE  A4D8               	btfss	status,2,c
   692   0009E0  D004               	goto	u1250
   693   0009E2  0E43               	movlw	67
   694   0009E4  1815               	xorwf	_Tecla^0,w,c
   695   0009E6  B4D8               	btfsc	status,2,c
   696   0009E8  D1DF               	goto	l1884
   697   0009EA                     u1250:
   698                           
   699                           ;Laboratorio4.c: 78: DireccionaLCD(0x82);
   700   0009EA  0E82               	movlw	130
   701   0009EC  ECB3  F008         	call	_DireccionaLCD
   702                           
   703                           ;Laboratorio4.c: 79: EscribeLCD_c(Tecla);
   704   0009F0  5015               	movf	_Tecla^0,w,c
   705   0009F2  ECA8  F008         	call	_EscribeLCD_c
   706                           
   707                           ;Laboratorio4.c: 80: n2c=Tecla;
   708   0009F6  C015  F02D         	movff	_Tecla,_n2c
   709                           
   710                           ;Laboratorio4.c: 81: n2 = Tecla-'0';
   711   0009FA  0ED0               	movlw	208
   712   0009FC  2415               	addwf	_Tecla^0,w,c
   713   0009FE  6E11               	movwf	_n2^0,c
   714   000A00  6A12               	clrf	(_n2+1)^0,c
   715   000A02  0EFF               	movlw	255
   716   000A04  2212               	addwfc	(_n2+1)^0,f,c
   717                           
   718                           ;Laboratorio4.c: 82: };Laboratorio4.c: 83: }else if(Tecla=='=' & n2c!=' ' & op!=' ' & n1
      +                          c != ' '){
   719   000A06  D1D0               	goto	l1884
   720   000A08                     l1776:
   721   000A08  0E3D               	movlw	61
   722   000A0A  1815               	xorwf	_Tecla^0,w,c
   723   000A0C  A4D8               	btfss	status,2,c
   724   000A0E  D1C9               	goto	l1882
   725   000A10  0E20               	movlw	32
   726   000A12  182D               	xorwf	_n2c^0,w,c
   727   000A14  B4D8               	btfsc	status,2,c
   728   000A16  D1C5               	goto	l1882
   729   000A18  0E20               	movlw	32
   730   000A1A  182F               	xorwf	_op^0,w,c
   731   000A1C  B4D8               	btfsc	status,2,c
   732   000A1E  D1C1               	goto	l1882
   733   000A20  0E20               	movlw	32
   734   000A22  182E               	xorwf	_n1c^0,w,c
   735   000A24  B4D8               	btfsc	status,2,c
   736   000A26  D1BD               	goto	l1882
   737                           
   738                           ;Laboratorio4.c: 84: DireccionaLCD(0x83);
   739   000A28  0E83               	movlw	131
   740   000A2A  ECB3  F008         	call	_DireccionaLCD
   741                           
   742                           ;Laboratorio4.c: 85: EscribeLCD_c('=');
   743   000A2E  0E3D               	movlw	61
   744   000A30  ECA8  F008         	call	_EscribeLCD_c
   745                           
   746                           ;Laboratorio4.c: 86: switch(op){
   747   000A34  D093               	goto	l1824
   748   000A36                     l1786:
   749                           
   750                           ;Laboratorio4.c: 88: r = n1 + n2;
   751   000A36  5011               	movf	_n2^0,w,c
   752   000A38  2413               	addwf	_n1^0,w,c
   753   000A3A  6E27               	movwf	??_main^0,c
   754   000A3C  5012               	movf	(_n2+1)^0,w,c
   755   000A3E  2014               	addwfc	(_n1+1)^0,w,c
   756   000A40  6E28               	movwf	(??_main+1)^0,c
   757   000A42  C027  F001         	movff	??_main,_r
   758   000A46  C028  F002         	movff	??_main+1,_r+1
   759   000A4A  6A03               	clrf	(_r+2)^0,c
   760   000A4C  6A04               	clrf	(_r+3)^0,c
   761   000A4E                     l1788:
   762                           
   763                           ;Laboratorio4.c: 89: partdecl = r*100;
   764   000A4E  C001  F01A         	movff	_r,___lmul@multiplier
   765   000A52  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   766   000A56  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   767   000A5A  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   768   000A5E  0E64               	movlw	100
   769   000A60  6E1E               	movwf	___lmul@multiplicand^0,c
   770   000A62  0E00               	movlw	0
   771   000A64  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   772   000A66  0E00               	movlw	0
   773   000A68  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   774   000A6A  0E00               	movlw	0
   775   000A6C  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   776   000A6E  EC9C  F007         	call	___lmul	;wreg free
   777   000A72  C01A  F005         	movff	?___lmul,_partdecl
   778   000A76  C01B  F006         	movff	?___lmul+1,_partdecl+1
   779   000A7A  C01C  F007         	movff	?___lmul+2,_partdecl+2
   780   000A7E  C01D  F008         	movff	?___lmul+3,_partdecl+3
   781                           
   782                           ;Laboratorio4.c: 90: break;
   783   000A82  D07A               	goto	l1826
   784   000A84                     l1790:
   785                           
   786                           ;Laboratorio4.c: 92: r = n1 - n2;
   787   000A84  5011               	movf	_n2^0,w,c
   788   000A86  5C13               	subwf	_n1^0,w,c
   789   000A88  6E27               	movwf	??_main^0,c
   790   000A8A  5012               	movf	(_n2+1)^0,w,c
   791   000A8C  5814               	subwfb	(_n1+1)^0,w,c
   792   000A8E  D7D8               	goto	L1
   793   000A90                     l1794:
   794                           
   795                           ;Laboratorio4.c: 96: r = n1*n2;
   796   000A90  C013  F01A         	movff	_n1,___wmul@multiplier
   797   000A94  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   798   000A98  C011  F01C         	movff	_n2,___wmul@multiplicand
   799   000A9C  C012  F01D         	movff	_n2+1,___wmul@multiplicand+1
   800   000AA0  EC95  F008         	call	___wmul	;wreg free
   801   000AA4  C01A  F001         	movff	?___wmul,_r
   802   000AA8  C01B  F002         	movff	?___wmul+1,_r+1
   803   000AAC  D7CE               	goto	L2
   804   000AAE                     l1798:
   805                           
   806                           ;Laboratorio4.c: 100: if(n2!=0){
   807   000AAE  5011               	movf	_n2^0,w,c
   808   000AB0  1012               	iorwf	(_n2+1)^0,w,c
   809   000AB2  B4D8               	btfsc	status,2,c
   810   000AB4  D02F               	goto	l1806
   811                           
   812                           ;Laboratorio4.c: 101: if(n1!=0){
   813   000AB6  5013               	movf	_n1^0,w,c
   814   000AB8  1014               	iorwf	(_n1+1)^0,w,c
   815   000ABA  B4D8               	btfsc	status,2,c
   816   000ABC  D05D               	goto	l1826
   817                           
   818                           ;Laboratorio4.c: 102: r = n1/n2;
   819   000ABE  C013  F020         	movff	_n1,___lwdiv@dividend
   820   000AC2  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
   821   000AC6  C011  F022         	movff	_n2,___lwdiv@divisor
   822   000ACA  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   823   000ACE  ECF2  F007         	call	___lwdiv	;wreg free
   824   000AD2  C020  F001         	movff	?___lwdiv,_r
   825   000AD6  C021  F002         	movff	?___lwdiv+1,_r+1
   826   000ADA  6A03               	clrf	(_r+2)^0,c
   827   000ADC  6A04               	clrf	(_r+3)^0,c
   828                           
   829                           ;Laboratorio4.c: 103: partdecl = (n1*100)/n2;
   830   000ADE  C013  F01A         	movff	_n1,___wmul@multiplier
   831   000AE2  C014  F01B         	movff	_n1+1,___wmul@multiplier+1
   832   000AE6  0E00               	movlw	0
   833   000AE8  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
   834   000AEA  0E64               	movlw	100
   835   000AEC  6E1C               	movwf	___wmul@multiplicand^0,c
   836   000AEE  EC95  F008         	call	___wmul	;wreg free
   837   000AF2  C01A  F020         	movff	?___wmul,___lwdiv@dividend
   838   000AF6  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
   839   000AFA  C011  F022         	movff	_n2,___lwdiv@divisor
   840   000AFE  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   841   000B02  ECF2  F007         	call	___lwdiv	;wreg free
   842   000B06  C020  F005         	movff	?___lwdiv,_partdecl
   843   000B0A  C021  F006         	movff	?___lwdiv+1,_partdecl+1
   844   000B0E  6A07               	clrf	(_partdecl+2)^0,c
   845   000B10  6A08               	clrf	(_partdecl+3)^0,c
   846   000B12  D032               	goto	l1826
   847   000B14                     l1806:
   848                           
   849                           ;Laboratorio4.c: 106: if(n1 != 0 & n2 == 0) r = 1000;
   850   000B14  5013               	movf	_n1^0,w,c
   851   000B16  1014               	iorwf	(_n1+1)^0,w,c
   852   000B18  B4D8               	btfsc	status,2,c
   853   000B1A  D006               	goto	l1812
   854   000B1C  5011               	movf	_n2^0,w,c
   855   000B1E  1012               	iorwf	(_n2+1)^0,w,c
   856   000B20  A4D8               	btfss	status,2,c
   857   000B22  D002               	goto	l1812
   858   000B24  0EE8               	movlw	232
   859   000B26  D009               	goto	L3
   860   000B28                     l1812:
   861                           
   862                           ;Laboratorio4.c: 107: else if(n1 == 0 & n2 == 0) r = 1001;
   863   000B28  5013               	movf	_n1^0,w,c
   864   000B2A  1014               	iorwf	(_n1+1)^0,w,c
   865   000B2C  A4D8               	btfss	status,2,c
   866   000B2E  D78F               	goto	l1788
   867   000B30  5011               	movf	_n2^0,w,c
   868   000B32  1012               	iorwf	(_n2+1)^0,w,c
   869   000B34  A4D8               	btfss	status,2,c
   870   000B36  D78B               	goto	l1788
   871   000B38  0EE9               	movlw	233
   872   000B3A                     L3:
   873   000B3A  6E01               	movwf	_r^0,c
   874   000B3C  0E03               	movlw	3
   875   000B3E  6E02               	movwf	(_r+1)^0,c
   876   000B40  0E00               	movlw	0
   877   000B42  6E03               	movwf	(_r+2)^0,c
   878   000B44  0E00               	movlw	0
   879   000B46  6E04               	movwf	(_r+3)^0,c
   880   000B48  D782               	goto	l1788
   881   000B4A                     l1820:
   882                           
   883                           ;Laboratorio4.c: 112: r = 0;
   884   000B4A  0E00               	movlw	0
   885   000B4C  6E01               	movwf	_r^0,c
   886   000B4E  0E00               	movlw	0
   887   000B50  6E02               	movwf	(_r+1)^0,c
   888   000B52  0E00               	movlw	0
   889   000B54  6E03               	movwf	(_r+2)^0,c
   890   000B56  0E00               	movlw	0
   891   000B58  6E04               	movwf	(_r+3)^0,c
   892                           
   893                           ;Laboratorio4.c: 113: break;
   894   000B5A  D00E               	goto	l1826
   895   000B5C                     l1824:
   896   000B5C  502F               	movf	_op^0,w,c
   897                           
   898                           ; Switch size 1, requested type "simple"
   899                           ; Number of cases is 4, Range of values is 43 to 120
   900                           ; switch strategies available:
   901                           ; Name         Instructions Cycles
   902                           ; simple_byte           13     7 (average)
   903                           ;	Chosen strategy is simple_byte
   904   000B5E  0A2B               	xorlw	43	; case 43
   905   000B60  B4D8               	btfsc	status,2,c
   906   000B62  D769               	goto	l1786
   907   000B64  0A06               	xorlw	6	; case 45
   908   000B66  B4D8               	btfsc	status,2,c
   909   000B68  D78D               	goto	l1790
   910   000B6A  0A02               	xorlw	2	; case 47
   911   000B6C  B4D8               	btfsc	status,2,c
   912   000B6E  D79F               	goto	l1798
   913   000B70  0A57               	xorlw	87	; case 120
   914   000B72  B4D8               	btfsc	status,2,c
   915   000B74  D78D               	goto	l1794
   916   000B76  D7E9               	goto	l1820
   917   000B78                     l1826:
   918                           
   919                           ;Laboratorio4.c: 115: DireccionaLCD(0x84);
   920   000B78  0E84               	movlw	132
   921   000B7A  ECB3  F008         	call	_DireccionaLCD
   922                           
   923                           ;Laboratorio4.c: 116: if ((partdecl-(r*100))!= 0){
   924   000B7E  C001  F01A         	movff	_r,___lmul@multiplier
   925   000B82  C002  F01B         	movff	_r+1,___lmul@multiplier+1
   926   000B86  C003  F01C         	movff	_r+2,___lmul@multiplier+2
   927   000B8A  C004  F01D         	movff	_r+3,___lmul@multiplier+3
   928   000B8E  0E9C               	movlw	156
   929   000B90  6E1E               	movwf	___lmul@multiplicand^0,c
   930   000B92  0EFF               	movlw	255
   931   000B94  6E1F               	movwf	(___lmul@multiplicand+1)^0,c
   932   000B96  0EFF               	movlw	255
   933   000B98  6E20               	movwf	(___lmul@multiplicand+2)^0,c
   934   000B9A  0EFF               	movlw	255
   935   000B9C  6E21               	movwf	(___lmul@multiplicand+3)^0,c
   936   000B9E  EC9C  F007         	call	___lmul	;wreg free
   937   000BA2  5005               	movf	_partdecl^0,w,c
   938   000BA4  241A               	addwf	?___lmul^0,w,c
   939   000BA6  6E27               	movwf	??_main^0,c
   940   000BA8  5006               	movf	(_partdecl+1)^0,w,c
   941   000BAA  201B               	addwfc	(?___lmul+1)^0,w,c
   942   000BAC  6E28               	movwf	(??_main+1)^0,c
   943   000BAE  5007               	movf	(_partdecl+2)^0,w,c
   944   000BB0  201C               	addwfc	(?___lmul+2)^0,w,c
   945   000BB2  6E29               	movwf	(??_main+2)^0,c
   946   000BB4  5008               	movf	(_partdecl+3)^0,w,c
   947   000BB6  201D               	addwfc	(?___lmul+3)^0,w,c
   948   000BB8  6E2A               	movwf	(??_main+3)^0,c
   949   000BBA  5027               	movf	??_main^0,w,c
   950   000BBC  1028               	iorwf	(??_main+1)^0,w,c
   951   000BBE  1029               	iorwf	(??_main+2)^0,w,c
   952   000BC0  102A               	iorwf	(??_main+3)^0,w,c
   953   000BC2  B4D8               	btfsc	status,2,c
   954   000BC4  D056               	goto	l1850
   955                           
   956                           ;Laboratorio4.c: 117: for (int i = 0; i < 3; i++) {
   957   000BC6  0E00               	movlw	0
   958   000BC8  6E2C               	movwf	(main@i+1)^0,c
   959   000BCA  0E00               	movlw	0
   960   000BCC  6E2B               	movwf	main@i^0,c
   961   000BCE                     l1830:
   962   000BCE  BE2C               	btfsc	(main@i+1)^0,7,c
   963   000BD0  D008               	goto	l1834
   964   000BD2  502C               	movf	(main@i+1)^0,w,c
   965   000BD4  E105               	bnz	u1370
   966   000BD6  0E03               	movlw	3
   967   000BD8  5C2B               	subwf	main@i^0,w,c
   968   000BDA  B0D8               	btfsc	status,0,c
   969   000BDC  D0E5               	goto	l1884
   970   000BDE  D001               	goto	l1834
   971   000BE0                     u1370:
   972   000BE0  D0E3               	goto	l1884
   973   000BE2                     l1834:
   974                           
   975                           ;Laboratorio4.c: 118: r = n1 / n2;
   976   000BE2  C013  F020         	movff	_n1,___lwdiv@dividend
   977   000BE6  C014  F021         	movff	_n1+1,___lwdiv@dividend+1
   978   000BEA  C011  F022         	movff	_n2,___lwdiv@divisor
   979   000BEE  C012  F023         	movff	_n2+1,___lwdiv@divisor+1
   980   000BF2  ECF2  F007         	call	___lwdiv	;wreg free
   981   000BF6  C020  F001         	movff	?___lwdiv,_r
   982   000BFA  C021  F002         	movff	?___lwdiv+1,_r+1
   983   000BFE  6A03               	clrf	(_r+2)^0,c
   984   000C00  6A04               	clrf	(_r+3)^0,c
   985                           
   986                           ;Laboratorio4.c: 119: m = n1 % n2;
   987   000C02  C013  F01A         	movff	_n1,___lwmod@dividend
   988   000C06  C014  F01B         	movff	_n1+1,___lwmod@dividend+1
   989   000C0A  C011  F01C         	movff	_n2,___lwmod@divisor
   990   000C0E  C012  F01D         	movff	_n2+1,___lwmod@divisor+1
   991   000C12  EC1B  F008         	call	___lwmod	;wreg free
   992   000C16  C01A  F016         	movff	?___lwmod,_m
   993   000C1A  C01B  F017         	movff	?___lwmod+1,_m+1
   994   000C1E  6A18               	clrf	(_m+2)^0,c
   995   000C20  6A19               	clrf	(_m+3)^0,c
   996                           
   997                           ;Laboratorio4.c: 120: EscribeLCD_c(r+'0');
   998   000C22  5001               	movf	_r^0,w,c
   999   000C24  0F30               	addlw	48
  1000   000C26  ECA8  F008         	call	_EscribeLCD_c
  1001                           
  1002                           ;Laboratorio4.c: 121: if(i == 0 && m != 0) {
  1003   000C2A  502B               	movf	main@i^0,w,c
  1004   000C2C  102C               	iorwf	(main@i+1)^0,w,c
  1005   000C2E  A4D8               	btfss	status,2,c
  1006   000C30  D009               	goto	l1842
  1007   000C32  5016               	movf	_m^0,w,c
  1008   000C34  1017               	iorwf	(_m+1)^0,w,c
  1009   000C36  1018               	iorwf	(_m+2)^0,w,c
  1010   000C38  1019               	iorwf	(_m+3)^0,w,c
  1011   000C3A  B4D8               	btfsc	status,2,c
  1012   000C3C  D003               	goto	l1842
  1013                           
  1014                           ;Laboratorio4.c: 122: EscribeLCD_c(',');
  1015   000C3E  0E2C               	movlw	44
  1016   000C40  ECA8  F008         	call	_EscribeLCD_c
  1017   000C44                     l1842:
  1018                           
  1019                           ;Laboratorio4.c: 123: };Laboratorio4.c: 125: if (m != 0) {
  1020   000C44  5016               	movf	_m^0,w,c
  1021   000C46  1017               	iorwf	(_m+1)^0,w,c
  1022   000C48  1018               	iorwf	(_m+2)^0,w,c
  1023   000C4A  1019               	iorwf	(_m+3)^0,w,c
  1024   000C4C  B4D8               	btfsc	status,2,c
  1025   000C4E  D0AC               	goto	l1884
  1026                           
  1027                           ;Laboratorio4.c: 126: n1 = m * 10;
  1028   000C50  C016  F01A         	movff	_m,___wmul@multiplier
  1029   000C54  C017  F01B         	movff	_m+1,___wmul@multiplier+1
  1030   000C58  0E00               	movlw	0
  1031   000C5A  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1032   000C5C  0E0A               	movlw	10
  1033   000C5E  6E1C               	movwf	___wmul@multiplicand^0,c
  1034   000C60  EC95  F008         	call	___wmul	;wreg free
  1035   000C64  C01A  F013         	movff	?___wmul,_n1
  1036   000C68  C01B  F014         	movff	?___wmul+1,_n1+1
  1037                           
  1038                           ;Laboratorio4.c: 127: } else {
  1039   000C6C  4A2B               	infsnz	main@i^0,f,c
  1040   000C6E  2A2C               	incf	(main@i+1)^0,f,c
  1041   000C70  D7AE               	goto	l1830
  1042   000C72                     l1850:
  1043   000C72  5004               	movf	(_r+3)^0,w,c
  1044   000C74  1003               	iorwf	(_r+2)^0,w,c
  1045   000C76  1002               	iorwf	(_r+1)^0,w,c
  1046   000C78  E104               	bnz	u1410
  1047   000C7A  0E52               	movlw	82
  1048   000C7C  5C01               	subwf	_r^0,w,c
  1049   000C7E  A0D8               	btfss	status,0,c
  1050   000C80  D025               	goto	l1862
  1051   000C82                     u1410:
  1052   000C82  0EE8               	movlw	232
  1053   000C84  1801               	xorwf	_r^0,w,c
  1054   000C86  E106               	bnz	u1420
  1055   000C88  0E03               	movlw	3
  1056   000C8A  1802               	xorwf	(_r+1)^0,w,c
  1057   000C8C  1003               	iorwf	(_r+2)^0,w,c
  1058   000C8E  1004               	iorwf	(_r+3)^0,w,c
  1059   000C90  B4D8               	btfsc	status,2,c
  1060   000C92  D01C               	goto	l1862
  1061   000C94                     u1420:
  1062   000C94  0EE9               	movlw	233
  1063   000C96  1801               	xorwf	_r^0,w,c
  1064   000C98  E106               	bnz	u1430
  1065   000C9A  0E03               	movlw	3
  1066   000C9C  1802               	xorwf	(_r+1)^0,w,c
  1067   000C9E  1003               	iorwf	(_r+2)^0,w,c
  1068   000CA0  1004               	iorwf	(_r+3)^0,w,c
  1069   000CA2  B4D8               	btfsc	status,2,c
  1070   000CA4  D013               	goto	l1862
  1071   000CA6                     u1430:
  1072                           
  1073                           ;Laboratorio4.c: 133: EscribeLCD_c('-');
  1074   000CA6  0E2D               	movlw	45
  1075   000CA8  ECA8  F008         	call	_EscribeLCD_c
  1076                           
  1077                           ;Laboratorio4.c: 134: DireccionaLCD(0x85);
  1078   000CAC  0E85               	movlw	133
  1079   000CAE  ECB3  F008         	call	_DireccionaLCD
  1080                           
  1081                           ;Laboratorio4.c: 135: r = ~r+1;
  1082   000CB2  1E04               	comf	(_r+3)^0,f,c
  1083   000CB4  1E03               	comf	(_r+2)^0,f,c
  1084   000CB6  1E02               	comf	(_r+1)^0,f,c
  1085   000CB8  6C01               	negf	_r^0,c
  1086   000CBA  0E00               	movlw	0
  1087   000CBC  2202               	addwfc	(_r+1)^0,f,c
  1088   000CBE  2203               	addwfc	(_r+2)^0,f,c
  1089   000CC0  2204               	addwfc	(_r+3)^0,f,c
  1090                           
  1091                           ;Laboratorio4.c: 136: EscribeLCD_c(r+'0');
  1092   000CC2  5001               	movf	_r^0,w,c
  1093   000CC4  0F30               	addlw	48
  1094   000CC6  ECA8  F008         	call	_EscribeLCD_c
  1095                           
  1096                           ;Laboratorio4.c: 137: }else{
  1097   000CCA  D06E               	goto	l1884
  1098   000CCC                     l1862:
  1099                           
  1100                           ;Laboratorio4.c: 138: if(r>0xA & r!=1000 & r !=1001){
  1101   000CCC  5004               	movf	(_r+3)^0,w,c
  1102   000CCE  1003               	iorwf	(_r+2)^0,w,c
  1103   000CD0  1002               	iorwf	(_r+1)^0,w,c
  1104   000CD2  E104               	bnz	u1440
  1105   000CD4  0E0B               	movlw	11
  1106   000CD6  5C01               	subwf	_r^0,w,c
  1107   000CD8  A0D8               	btfss	status,0,c
  1108   000CDA  D038               	goto	l1872
  1109   000CDC                     u1440:
  1110   000CDC  0EE8               	movlw	232
  1111   000CDE  1801               	xorwf	_r^0,w,c
  1112   000CE0  E106               	bnz	u1450
  1113   000CE2  0E03               	movlw	3
  1114   000CE4  1802               	xorwf	(_r+1)^0,w,c
  1115   000CE6  1003               	iorwf	(_r+2)^0,w,c
  1116   000CE8  1004               	iorwf	(_r+3)^0,w,c
  1117   000CEA  B4D8               	btfsc	status,2,c
  1118   000CEC  D02F               	goto	l1872
  1119   000CEE                     u1450:
  1120   000CEE  0EE9               	movlw	233
  1121   000CF0  1801               	xorwf	_r^0,w,c
  1122   000CF2  E106               	bnz	u1460
  1123   000CF4  0E03               	movlw	3
  1124   000CF6  1802               	xorwf	(_r+1)^0,w,c
  1125   000CF8  1003               	iorwf	(_r+2)^0,w,c
  1126   000CFA  1004               	iorwf	(_r+3)^0,w,c
  1127   000CFC  B4D8               	btfsc	status,2,c
  1128   000CFE  D026               	goto	l1872
  1129   000D00                     u1460:
  1130   000D00                     l1868:
  1131                           
  1132                           ;Laboratorio4.c: 140: i = i+1;
  1133   000D00  0E01               	movlw	1
  1134   000D02  240F               	addwf	_i^0,w,c
  1135   000D04  6E0F               	movwf	_i^0,c
  1136   000D06  0E00               	movlw	0
  1137   000D08  2010               	addwfc	(_i+1)^0,w,c
  1138   000D0A  6E10               	movwf	(_i+1)^0,c
  1139                           
  1140                           ;Laboratorio4.c: 141: r = r - 10;
  1141   000D0C  0EF6               	movlw	246
  1142   000D0E  2401               	addwf	_r^0,w,c
  1143   000D10  6E01               	movwf	_r^0,c
  1144   000D12  0EFF               	movlw	255
  1145   000D14  2002               	addwfc	(_r+1)^0,w,c
  1146   000D16  6E02               	movwf	(_r+1)^0,c
  1147   000D18  0EFF               	movlw	255
  1148   000D1A  2003               	addwfc	(_r+2)^0,w,c
  1149   000D1C  6E03               	movwf	(_r+2)^0,c
  1150   000D1E  0EFF               	movlw	255
  1151   000D20  2004               	addwfc	(_r+3)^0,w,c
  1152   000D22  6E04               	movwf	(_r+3)^0,c
  1153                           
  1154                           ;Laboratorio4.c: 142: }while(r>0xA);
  1155   000D24  5004               	movf	(_r+3)^0,w,c
  1156   000D26  1003               	iorwf	(_r+2)^0,w,c
  1157   000D28  1002               	iorwf	(_r+1)^0,w,c
  1158   000D2A  E1EA               	bnz	l1868
  1159   000D2C  0E0B               	movlw	11
  1160   000D2E  5C01               	subwf	_r^0,w,c
  1161   000D30  B0D8               	btfsc	status,0,c
  1162   000D32  D7E6               	goto	u1460
  1163                           
  1164                           ;Laboratorio4.c: 143: EscribeLCD_c(i+'0');
  1165   000D34  500F               	movf	_i^0,w,c
  1166   000D36  0F30               	addlw	48
  1167   000D38  ECA8  F008         	call	_EscribeLCD_c
  1168                           
  1169                           ;Laboratorio4.c: 144: DireccionaLCD(0x85);
  1170   000D3C  0E85               	movlw	133
  1171   000D3E  ECB3  F008         	call	_DireccionaLCD
  1172                           
  1173                           ;Laboratorio4.c: 145: EscribeLCD_c(r+'0');
  1174   000D42  5001               	movf	_r^0,w,c
  1175   000D44  0F30               	addlw	48
  1176   000D46  ECA8  F008         	call	_EscribeLCD_c
  1177                           
  1178                           ;Laboratorio4.c: 146: }else{
  1179   000D4A  D02E               	goto	l1884
  1180   000D4C                     l1872:
  1181                           
  1182                           ;Laboratorio4.c: 147: if(r==1000){
  1183   000D4C  0EE8               	movlw	232
  1184   000D4E  1801               	xorwf	_r^0,w,c
  1185   000D50  E110               	bnz	l1876
  1186   000D52  0E03               	movlw	3
  1187   000D54  1802               	xorwf	(_r+1)^0,w,c
  1188   000D56  1003               	iorwf	(_r+2)^0,w,c
  1189   000D58  1004               	iorwf	(_r+3)^0,w,c
  1190   000D5A  A4D8               	btfss	status,2,c
  1191   000D5C  D00A               	goto	l1876
  1192                           
  1193                           ;Laboratorio4.c: 148: EscribeLCD_c('I');
  1194   000D5E  0E49               	movlw	73
  1195   000D60  ECA8  F008         	call	_EscribeLCD_c
  1196                           
  1197                           ;Laboratorio4.c: 149: EscribeLCD_c('N');
  1198   000D64  0E4E               	movlw	78
  1199   000D66  ECA8  F008         	call	_EscribeLCD_c
  1200                           
  1201                           ;Laboratorio4.c: 150: EscribeLCD_c('F');
  1202   000D6A  0E46               	movlw	70
  1203   000D6C  ECA8  F008         	call	_EscribeLCD_c
  1204                           
  1205                           ;Laboratorio4.c: 151: }else{
  1206   000D70  D01B               	goto	l1884
  1207   000D72                     l1876:
  1208                           
  1209                           ;Laboratorio4.c: 152: if(r==1001){
  1210   000D72  0EE9               	movlw	233
  1211   000D74  1801               	xorwf	_r^0,w,c
  1212   000D76  E110               	bnz	l1880
  1213   000D78  0E03               	movlw	3
  1214   000D7A  1802               	xorwf	(_r+1)^0,w,c
  1215   000D7C  1003               	iorwf	(_r+2)^0,w,c
  1216   000D7E  1004               	iorwf	(_r+3)^0,w,c
  1217   000D80  A4D8               	btfss	status,2,c
  1218   000D82  D00A               	goto	l1880
  1219                           
  1220                           ;Laboratorio4.c: 153: EscribeLCD_c('I');
  1221   000D84  0E49               	movlw	73
  1222   000D86  ECA8  F008         	call	_EscribeLCD_c
  1223                           
  1224                           ;Laboratorio4.c: 154: EscribeLCD_c('N');
  1225   000D8A  0E4E               	movlw	78
  1226   000D8C  ECA8  F008         	call	_EscribeLCD_c
  1227                           
  1228                           ;Laboratorio4.c: 155: EscribeLCD_c('D');
  1229   000D90  0E44               	movlw	68
  1230   000D92  ECA8  F008         	call	_EscribeLCD_c
  1231                           
  1232                           ;Laboratorio4.c: 156: }else{
  1233   000D96  D008               	goto	l1884
  1234   000D98                     l1880:
  1235                           
  1236                           ;Laboratorio4.c: 157: EscribeLCD_c(r+'0');
  1237   000D98  5001               	movf	_r^0,w,c
  1238   000D9A  0F30               	addlw	48
  1239   000D9C  ECA8  F008         	call	_EscribeLCD_c
  1240   000DA0  D003               	goto	l1884
  1241   000DA2                     l1882:
  1242                           
  1243                           ;Laboratorio4.c: 163: EscribeLCD_c('W');
  1244   000DA2  0E57               	movlw	87
  1245   000DA4  ECA8  F008         	call	_EscribeLCD_c
  1246   000DA8                     l1884:
  1247                           
  1248                           ;Laboratorio4.c: 164: };Laboratorio4.c: 165: _delay((unsigned long)((700)*(1000000/4000.
      +                          0)));
  1249   000DA8  0EE4               	movlw	228
  1250   000DAA  6E27               	movwf	??_main^0,c
  1251   000DAC  0E44               	movlw	68
  1252   000DAE                     u1517:
  1253   000DAE  2EE8               	decfsz	wreg,f,c
  1254   000DB0  D7FE               	bra	u1517
  1255   000DB2  2E27               	decfsz	??_main^0,f,c
  1256   000DB4  D7FC               	bra	u1517
  1257   000DB6  D000               	nop2	
  1258   000DB8  D55E               	goto	l1674
  1259   000DBA                     __end_of_main:
  1260                           	callstack 0
  1261                           
  1262 ;; *************** function ___wmul *****************
  1263 ;; Defined at:
  1264 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  multiplier      2    0[COMRAM] unsigned int 
  1267 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  product         2    4[COMRAM] unsigned int 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2    0[COMRAM] unsigned int 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, prodl, prodh
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:         4       0       0       0       0       0       0       0       0
  1280 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1282 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1283 ;;Total ram usage:        6 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text1
  1294   00112A                     __ptext1:
  1295                           	callstack 0
  1296   00112A                     ___wmul:
  1297                           	callstack 29
  1298                           
  1299                           ;incstack = 0
  1300   00112A  501A               	movf	___wmul@multiplier^0,w,c
  1301   00112C  021C               	mulwf	___wmul@multiplicand^0,c
  1302   00112E  CFF3 F01E          	movff	prodl,___wmul@product
  1303   001132  CFF4 F01F          	movff	prodh,___wmul@product+1
  1304   001136  501A               	movf	___wmul@multiplier^0,w,c
  1305   001138  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  1306   00113A  50F3               	movf	243,w,c
  1307   00113C  261F               	addwf	(___wmul@product+1)^0,f,c
  1308   00113E  501B               	movf	(___wmul@multiplier+1)^0,w,c
  1309   001140  021C               	mulwf	___wmul@multiplicand^0,c
  1310   001142  50F3               	movf	243,w,c
  1311   001144  261F               	addwf	(___wmul@product+1)^0,f,c
  1312   001146  C01E  F01A         	movff	___wmul@product,?___wmul
  1313   00114A  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  1314   00114E  0012               	return		;funcret
  1315   001150                     __end_of___wmul:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function ___lwmod *****************
  1319 ;; Defined at:
  1320 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  dividend        2    0[COMRAM] unsigned int 
  1323 ;;  divisor         2    2[COMRAM] unsigned int 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  counter         1    4[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    0[COMRAM] unsigned int 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         4       0       0       0       0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1338 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1339 ;;Total ram usage:        5 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text2
  1350   001036                     __ptext2:
  1351                           	callstack 0
  1352   001036                     ___lwmod:
  1353                           	callstack 29
  1354                           
  1355                           ;incstack = 0
  1356   001036  501C               	movf	___lwmod@divisor^0,w,c
  1357   001038  101D               	iorwf	(___lwmod@divisor+1)^0,w,c
  1358   00103A  B4D8               	btfsc	status,2,c
  1359   00103C  D018               	goto	l750
  1360   00103E  0E01               	movlw	1
  1361   001040  6E1E               	movwf	___lwmod@counter^0,c
  1362   001042  D004               	goto	l1638
  1363   001044                     l1636:
  1364   001044  90D8               	bcf	status,0,c
  1365   001046  361C               	rlcf	___lwmod@divisor^0,f,c
  1366   001048  361D               	rlcf	(___lwmod@divisor+1)^0,f,c
  1367   00104A  2A1E               	incf	___lwmod@counter^0,f,c
  1368   00104C                     l1638:
  1369   00104C  AE1D               	btfss	(___lwmod@divisor+1)^0,7,c
  1370   00104E  D7FA               	goto	l1636
  1371   001050                     u970:
  1372   001050  501C               	movf	___lwmod@divisor^0,w,c
  1373   001052  5C1A               	subwf	___lwmod@dividend^0,w,c
  1374   001054  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1375   001056  581B               	subwfb	(___lwmod@dividend+1)^0,w,c
  1376   001058  A0D8               	btfss	status,0,c
  1377   00105A  D004               	goto	l1644
  1378   00105C  501C               	movf	___lwmod@divisor^0,w,c
  1379   00105E  5E1A               	subwf	___lwmod@dividend^0,f,c
  1380   001060  501D               	movf	(___lwmod@divisor+1)^0,w,c
  1381   001062  5A1B               	subwfb	(___lwmod@dividend+1)^0,f,c
  1382   001064                     l1644:
  1383   001064  90D8               	bcf	status,0,c
  1384   001066  321D               	rrcf	(___lwmod@divisor+1)^0,f,c
  1385   001068  321C               	rrcf	___lwmod@divisor^0,f,c
  1386   00106A  2E1E               	decfsz	___lwmod@counter^0,f,c
  1387   00106C  D7F1               	goto	u970
  1388   00106E                     l750:
  1389   00106E  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1390   001072  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1391   001076  0012               	return		;funcret
  1392   001078                     __end_of___lwmod:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function ___lwdiv *****************
  1396 ;; Defined at:
  1397 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  dividend        2    6[COMRAM] unsigned int 
  1400 ;;  divisor         2    8[COMRAM] unsigned int 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  quotient        2   10[COMRAM] unsigned int 
  1403 ;;  counter         1   12[COMRAM] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2    6[COMRAM] unsigned int 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1413 ;;      Params:         4       0       0       0       0       0       0       0       0
  1414 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1416 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1417 ;;Total ram usage:        7 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428   000FE4                     __ptext3:
  1429                           	callstack 0
  1430   000FE4                     ___lwdiv:
  1431                           	callstack 29
  1432                           
  1433                           ;incstack = 0
  1434   000FE4  0E00               	movlw	0
  1435   000FE6  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  1436   000FE8  0E00               	movlw	0
  1437   000FEA  6E24               	movwf	___lwdiv@quotient^0,c
  1438   000FEC  5022               	movf	___lwdiv@divisor^0,w,c
  1439   000FEE  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1440   000FF0  B4D8               	btfsc	status,2,c
  1441   000FF2  D01C               	goto	l740
  1442   000FF4  0E01               	movlw	1
  1443   000FF6  6E26               	movwf	___lwdiv@counter^0,c
  1444   000FF8  D004               	goto	l1618
  1445   000FFA                     l1616:
  1446   000FFA  90D8               	bcf	status,0,c
  1447   000FFC  3622               	rlcf	___lwdiv@divisor^0,f,c
  1448   000FFE  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1449   001000  2A26               	incf	___lwdiv@counter^0,f,c
  1450   001002                     l1618:
  1451   001002  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  1452   001004  D7FA               	goto	l1616
  1453   001006                     u940:
  1454   001006  90D8               	bcf	status,0,c
  1455   001008  3624               	rlcf	___lwdiv@quotient^0,f,c
  1456   00100A  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1457   00100C  5022               	movf	___lwdiv@divisor^0,w,c
  1458   00100E  5C20               	subwf	___lwdiv@dividend^0,w,c
  1459   001010  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1460   001012  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1461   001014  A0D8               	btfss	status,0,c
  1462   001016  D005               	goto	l1628
  1463   001018  5022               	movf	___lwdiv@divisor^0,w,c
  1464   00101A  5E20               	subwf	___lwdiv@dividend^0,f,c
  1465   00101C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1466   00101E  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1467   001020  8024               	bsf	___lwdiv@quotient^0,0,c
  1468   001022                     l1628:
  1469   001022  90D8               	bcf	status,0,c
  1470   001024  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1471   001026  3222               	rrcf	___lwdiv@divisor^0,f,c
  1472   001028  2E26               	decfsz	___lwdiv@counter^0,f,c
  1473   00102A  D7ED               	goto	u940
  1474   00102C                     l740:
  1475   00102C  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  1476   001030  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1477   001034  0012               	return		;funcret
  1478   001036                     __end_of___lwdiv:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function ___lmul *****************
  1482 ;; Defined at:
  1483 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  multiplier      4    0[COMRAM] unsigned long 
  1486 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  product         4    8[COMRAM] unsigned long 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  4    0[COMRAM] unsigned long 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         8       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1501 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:       12 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text4
  1513   000F38                     __ptext4:
  1514                           	callstack 0
  1515   000F38                     ___lmul:
  1516                           	callstack 29
  1517                           
  1518                           ;incstack = 0
  1519   000F38  0E00               	movlw	0
  1520   000F3A  6E22               	movwf	___lmul@product^0,c
  1521   000F3C  0E00               	movlw	0
  1522   000F3E  6E23               	movwf	(___lmul@product+1)^0,c
  1523   000F40  0E00               	movlw	0
  1524   000F42  6E24               	movwf	(___lmul@product+2)^0,c
  1525   000F44  0E00               	movlw	0
  1526   000F46  6E25               	movwf	(___lmul@product+3)^0,c
  1527   000F48                     l1602:
  1528   000F48  A01A               	btfss	___lmul@multiplier^0,0,c
  1529   000F4A  D008               	goto	l1606
  1530   000F4C  501E               	movf	___lmul@multiplicand^0,w,c
  1531   000F4E  2622               	addwf	___lmul@product^0,f,c
  1532   000F50  501F               	movf	(___lmul@multiplicand+1)^0,w,c
  1533   000F52  2223               	addwfc	(___lmul@product+1)^0,f,c
  1534   000F54  5020               	movf	(___lmul@multiplicand+2)^0,w,c
  1535   000F56  2224               	addwfc	(___lmul@product+2)^0,f,c
  1536   000F58  5021               	movf	(___lmul@multiplicand+3)^0,w,c
  1537   000F5A  2225               	addwfc	(___lmul@product+3)^0,f,c
  1538   000F5C                     l1606:
  1539   000F5C  90D8               	bcf	status,0,c
  1540   000F5E  361E               	rlcf	___lmul@multiplicand^0,f,c
  1541   000F60  361F               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1542   000F62  3620               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1543   000F64  3621               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1544   000F66  90D8               	bcf	status,0,c
  1545   000F68  321D               	rrcf	(___lmul@multiplier+3)^0,f,c
  1546   000F6A  321C               	rrcf	(___lmul@multiplier+2)^0,f,c
  1547   000F6C  321B               	rrcf	(___lmul@multiplier+1)^0,f,c
  1548   000F6E  321A               	rrcf	___lmul@multiplier^0,f,c
  1549   000F70  501A               	movf	___lmul@multiplier^0,w,c
  1550   000F72  101B               	iorwf	(___lmul@multiplier+1)^0,w,c
  1551   000F74  101C               	iorwf	(___lmul@multiplier+2)^0,w,c
  1552   000F76  101D               	iorwf	(___lmul@multiplier+3)^0,w,c
  1553   000F78  A4D8               	btfss	status,2,c
  1554   000F7A  D7E6               	goto	l1602
  1555   000F7C  C022  F01A         	movff	___lmul@product,?___lmul
  1556   000F80  C023  F01B         	movff	___lmul@product+1,?___lmul+1
  1557   000F84  C024  F01C         	movff	___lmul@product+2,?___lmul+2
  1558   000F88  C025  F01D         	movff	___lmul@product+3,?___lmul+3
  1559   000F8C  0012               	return		;funcret
  1560   000F8E                     __end_of___lmul:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _MensajeLCD_Word *****************
  1564 ;; Defined at:
  1565 ;;		line 239 in file "LibLCDXC8.h"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  a               1    4[COMRAM] PTR unsigned char 
  1568 ;;		 -> STR_2(17), STR_1(11), 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  i               2    6[COMRAM] int 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         1       0       0       0       0       0       0       0       0
  1581 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1583 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:        4 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 4
  1587 ;; This function calls:
  1588 ;;		_EscribeLCD_c
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text5
  1595   0010F4                     __ptext5:
  1596                           	callstack 0
  1597   0010F4                     _MensajeLCD_Word:
  1598                           	callstack 26
  1599                           
  1600                           ;LibLCDXC8.h: 243: for(int i = 0; i<16; i++){
  1601                           
  1602                           ;incstack = 0
  1603   0010F4  0E00               	movlw	0
  1604   0010F6  6E21               	movwf	(MensajeLCD_Word@i+1)^0,c
  1605   0010F8  0E00               	movlw	0
  1606   0010FA  6E20               	movwf	MensajeLCD_Word@i^0,c
  1607   0010FC                     l1588:
  1608                           
  1609                           ;LibLCDXC8.h: 245: EscribeLCD_c(a[i]);
  1610   0010FC  501E               	movf	MensajeLCD_Word@a^0,w,c
  1611   0010FE  2420               	addwf	MensajeLCD_Word@i^0,w,c
  1612   001100  6E1F               	movwf	??_MensajeLCD_Word^0,c
  1613   001102  C01F  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1614   001106                     	if	1	;There is more than 1 active tblptr byte
  1615   001106  0E08               	movlw	high __smallconst
  1616   001108  6EF7               	movwf	tblptrh,c
  1617   00110A                     	endif
  1618   00110A                     	if	0	;tblptru may be non-zero
  1619   00110A                     	endif
  1620   00110A                     	if	0	;tblptru may be non-zero
  1621   00110A                     	endif
  1622   00110A  0008               	tblrd		*
  1623   00110C  50F5               	movf	tablat,w,c
  1624   00110E  ECA8  F008         	call	_EscribeLCD_c
  1625   001112  4A20               	infsnz	MensajeLCD_Word@i^0,f,c
  1626   001114  2A21               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1627   001116  BE21               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1628   001118  D7F1               	goto	l1588
  1629   00111A  5021               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1630   00111C  E105               	bnz	u900
  1631   00111E  0E10               	movlw	16
  1632   001120  5C20               	subwf	MensajeLCD_Word@i^0,w,c
  1633   001122  B0D8               	btfsc	status,0,c
  1634   001124  0012               	return	
  1635   001126  D7EA               	goto	l1588
  1636   001128                     u900:
  1637   001128  0012               	return		;funcret
  1638   00112A                     __end_of_MensajeLCD_Word:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _EscribeLCD_c *****************
  1642 ;; Defined at:
  1643 ;;		line 140 in file "LibLCDXC8.h"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  a               1    wreg     unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  a               1    3[COMRAM] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0
  1658 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1660 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 3
  1664 ;; This function calls:
  1665 ;;		_EnviaDato
  1666 ;;		_HabilitaLCD
  1667 ;;		_RetardoLCD
  1668 ;; This function is called by:
  1669 ;;		_MensajeLCD_Word
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text6
  1675   001150                     __ptext6:
  1676                           	callstack 0
  1677   001150                     _EscribeLCD_c:
  1678                           	callstack 26
  1679                           
  1680                           ;incstack = 0
  1681                           ;EscribeLCD_c@a stored from wreg
  1682   001150  6E1D               	movwf	EscribeLCD_c@a^0,c
  1683                           
  1684                           ;LibLCDXC8.h: 144: LATE0=1;
  1685   001152  808D               	bsf	3981,0,c	;volatile
  1686                           
  1687                           ;LibLCDXC8.h: 145: EnviaDato(a);
  1688   001154  501D               	movf	EscribeLCD_c@a^0,w,c
  1689   001156  ECCF  F008         	call	_EnviaDato
  1690                           
  1691                           ;LibLCDXC8.h: 146: HabilitaLCD();
  1692   00115A  ECC8  F008         	call	_HabilitaLCD	;wreg free
  1693                           
  1694                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  1695   00115E  0E04               	movlw	4
  1696   001160  ECC7  F007         	call	_RetardoLCD
  1697   001164  0012               	return		;funcret
  1698   001166                     __end_of_EscribeLCD_c:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _LeerTeclado *****************
  1702 ;; Defined at:
  1703 ;;		line 171 in file "Laboratorio4.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      unsigned char 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text7
  1732   000DBA                     __ptext7:
  1733                           	callstack 0
  1734   000DBA                     _LeerTeclado:
  1735                           	callstack 29
  1736                           
  1737                           ;Laboratorio4.c: 172: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1738                           
  1739                           ;incstack = 0
  1740   000DBA  B881               	btfsc	3969,4,c	;volatile
  1741   000DBC  AA81               	btfss	3969,5,c	;volatile
  1742   000DBE  D004               	goto	u50
  1743   000DC0  AC81               	btfss	3969,6,c	;volatile
  1744   000DC2  D002               	goto	u50
  1745   000DC4  BE81               	btfsc	3969,7,c	;volatile
  1746   000DC6  D7F9               	goto	__ptext7
  1747   000DC8                     u50:
  1748                           
  1749                           ;Laboratorio4.c: 173: verificador = 1;
  1750   000DC8  0E00               	movlw	0
  1751   000DCA  6E0A               	movwf	(_verificador+1)^0,c
  1752   000DCC  0E01               	movlw	1
  1753   000DCE  6E09               	movwf	_verificador^0,c
  1754                           
  1755                           ;Laboratorio4.c: 174: LATB=0b11111110;
  1756   000DD0  0EFE               	movlw	254
  1757   000DD2  6E8A               	movwf	138,c	;volatile
  1758                           
  1759                           ;Laboratorio4.c: 175: if(RB4==0) return '1';
  1760   000DD4  B881               	btfsc	3969,4,c	;volatile
  1761   000DD6  D002               	goto	l202
  1762   000DD8  0E31               	movlw	49
  1763   000DDA  0012               	return	
  1764   000DDC                     l202:
  1765                           
  1766                           ;Laboratorio4.c: 176: else if(RB5==0) return '2';
  1767   000DDC  BA81               	btfsc	3969,5,c	;volatile
  1768   000DDE  D002               	goto	l205
  1769   000DE0  0E32               	movlw	50
  1770   000DE2  0012               	return	
  1771   000DE4                     l205:
  1772                           
  1773                           ;Laboratorio4.c: 177: else if(RB6==0) return '3';
  1774   000DE4  BC81               	btfsc	3969,6,c	;volatile
  1775   000DE6  D002               	goto	l207
  1776   000DE8  0E33               	movlw	51
  1777   000DEA  0012               	return	
  1778   000DEC                     l207:
  1779                           
  1780                           ;Laboratorio4.c: 178: else if(RB7==0) return '+';
  1781   000DEC  BE81               	btfsc	3969,7,c	;volatile
  1782   000DEE  D002               	goto	l1152
  1783   000DF0  0E2B               	movlw	43
  1784   000DF2  0012               	return	
  1785   000DF4                     l1152:
  1786                           
  1787                           ;Laboratorio4.c: 179: else{;Laboratorio4.c: 180: LATB=0b11111101;
  1788   000DF4  0EFD               	movlw	253
  1789   000DF6  6E8A               	movwf	138,c	;volatile
  1790                           
  1791                           ;Laboratorio4.c: 181: if(RB4==0) return '4';
  1792   000DF8  B881               	btfsc	3969,4,c	;volatile
  1793   000DFA  D002               	goto	l211
  1794   000DFC  0E34               	movlw	52
  1795   000DFE  0012               	return	
  1796   000E00                     l211:
  1797                           
  1798                           ;Laboratorio4.c: 182: else if(RB5==0) return '5';
  1799   000E00  BA81               	btfsc	3969,5,c	;volatile
  1800   000E02  D002               	goto	l213
  1801   000E04  0E35               	movlw	53
  1802   000E06  0012               	return	
  1803   000E08                     l213:
  1804                           
  1805                           ;Laboratorio4.c: 183: else if(RB6==0) return '6';
  1806   000E08  BC81               	btfsc	3969,6,c	;volatile
  1807   000E0A  D002               	goto	l215
  1808   000E0C  0E36               	movlw	54
  1809   000E0E  0012               	return	
  1810   000E10                     l215:
  1811                           
  1812                           ;Laboratorio4.c: 184: else if(RB7==0) return '-';
  1813   000E10  BE81               	btfsc	3969,7,c	;volatile
  1814   000E12  D002               	goto	l1180
  1815   000E14  0E2D               	movlw	45
  1816   000E16  0012               	return	
  1817   000E18                     l1180:
  1818                           
  1819                           ;Laboratorio4.c: 185: else{;Laboratorio4.c: 186: LATB=0b11111011;
  1820   000E18  0EFB               	movlw	251
  1821   000E1A  6E8A               	movwf	138,c	;volatile
  1822                           
  1823                           ;Laboratorio4.c: 187: if(RB4==0) return '7';
  1824   000E1C  B881               	btfsc	3969,4,c	;volatile
  1825   000E1E  D002               	goto	l219
  1826   000E20  0E37               	movlw	55
  1827   000E22  0012               	return	
  1828   000E24                     l219:
  1829                           
  1830                           ;Laboratorio4.c: 188: else if(RB5==0) return '8';
  1831   000E24  BA81               	btfsc	3969,5,c	;volatile
  1832   000E26  D002               	goto	l221
  1833   000E28  0E38               	movlw	56
  1834   000E2A  0012               	return	
  1835   000E2C                     l221:
  1836                           
  1837                           ;Laboratorio4.c: 189: else if(RB6==0) return '9';
  1838   000E2C  BC81               	btfsc	3969,6,c	;volatile
  1839   000E2E  D002               	goto	l223
  1840   000E30  0E39               	movlw	57
  1841   000E32  0012               	return	
  1842   000E34                     l223:
  1843                           
  1844                           ;Laboratorio4.c: 190: else if(RB7==0) return '/';
  1845   000E34  BE81               	btfsc	3969,7,c	;volatile
  1846   000E36  D002               	goto	l1208
  1847   000E38  0E2F               	movlw	47
  1848   000E3A  0012               	return	
  1849   000E3C                     l1208:
  1850                           
  1851                           ;Laboratorio4.c: 191: else{;Laboratorio4.c: 192: LATB=0b11110111;
  1852   000E3C  0EF7               	movlw	247
  1853   000E3E  6E8A               	movwf	138,c	;volatile
  1854                           
  1855                           ;Laboratorio4.c: 193: if(RB4==0) return 'C';
  1856   000E40  B881               	btfsc	3969,4,c	;volatile
  1857   000E42  D002               	goto	l227
  1858   000E44  0E43               	movlw	67
  1859   000E46  0012               	return	
  1860   000E48                     l227:
  1861                           
  1862                           ;Laboratorio4.c: 194: else if(RB5==0) return '0';
  1863   000E48  BA81               	btfsc	3969,5,c	;volatile
  1864   000E4A  D002               	goto	l229
  1865   000E4C  0E30               	movlw	48
  1866   000E4E  0012               	return	
  1867   000E50                     l229:
  1868                           
  1869                           ;Laboratorio4.c: 195: else if(RB6==0) return '=';
  1870   000E50  BC81               	btfsc	3969,6,c	;volatile
  1871   000E52  D002               	goto	l231
  1872   000E54  0E3D               	movlw	61
  1873   000E56  0012               	return	
  1874   000E58                     l231:
  1875                           
  1876                           ;Laboratorio4.c: 196: else if(RB7==0) return 'x';
  1877   000E58  BE81               	btfsc	3969,7,c	;volatile
  1878   000E5A  D002               	goto	l228
  1879   000E5C  0E78               	movlw	120
  1880   000E5E  0012               	return	
  1881   000E60                     l228:
  1882                           
  1883                           ;Laboratorio4.c: 197: };Laboratorio4.c: 198: };Laboratorio4.c: 199: };Laboratorio4.c: 20
      +                          0: return '?';
  1884   000E60  0E3F               	movlw	63
  1885   000E62  0012               	return		;funcret
  1886   000E64                     __end_of_LeerTeclado:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _InicializaLCD *****************
  1890 ;; Defined at:
  1891 ;;		line 71 in file "LibLCDXC8.h"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 4
  1912 ;; This function calls:
  1913 ;;		_BorraLCD
  1914 ;;		_EnviaDato
  1915 ;;		_HabilitaLCD
  1916 ;;		_RetardoLCD
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text8
  1923   001078                     __ptext8:
  1924                           	callstack 0
  1925   001078                     _InicializaLCD:
  1926                           	callstack 26
  1927                           
  1928                           ;LibLCDXC8.h: 73: LATE0=0;
  1929                           
  1930                           ;incstack = 0
  1931   001078  908D               	bcf	3981,0,c	;volatile
  1932                           
  1933                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1934                           
  1935                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1936   00107A  0E3F               	movlw	63
  1937   00107C  6E8C               	movwf	140,c	;volatile
  1938                           
  1939                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1940   00107E  ECC8  F008         	call	_HabilitaLCD	;wreg free
  1941                           
  1942                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1943   001082  0E01               	movlw	1
  1944   001084  ECC7  F007         	call	_RetardoLCD
  1945                           
  1946                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1947                           
  1948                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1949   001088  0E3F               	movlw	63
  1950   00108A  6E8C               	movwf	140,c	;volatile
  1951                           
  1952                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1953   00108C  ECC8  F008         	call	_HabilitaLCD	;wreg free
  1954                           
  1955                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1956   001090  0E03               	movlw	3
  1957   001092  ECC7  F007         	call	_RetardoLCD
  1958                           
  1959                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1960                           
  1961                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1962   001096  0E3F               	movlw	63
  1963   001098  6E8C               	movwf	140,c	;volatile
  1964                           
  1965                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1966   00109A  ECC8  F008         	call	_HabilitaLCD	;wreg free
  1967                           
  1968                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1969   00109E  0E04               	movlw	4
  1970   0010A0  ECC7  F007         	call	_RetardoLCD
  1971                           
  1972                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1973                           
  1974                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1975   0010A4  ECBE  F008         	call	_BorraLCD	;wreg free
  1976                           
  1977                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1978   0010A8  0E0F               	movlw	15
  1979   0010AA  ECCF  F008         	call	_EnviaDato
  1980                           
  1981                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1982   0010AE  ECC8  F008         	call	_HabilitaLCD	;wreg free
  1983                           
  1984                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1985   0010B2  0E04               	movlw	4
  1986   0010B4  ECC7  F007         	call	_RetardoLCD
  1987   0010B8  0012               	return		;funcret
  1988   0010BA                     __end_of_InicializaLCD:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _BorraLCD *****************
  1992 ;; Defined at:
  1993 ;;		line 112 in file "LibLCDXC8.h"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 3
  2014 ;; This function calls:
  2015 ;;		_EnviaDato
  2016 ;;		_HabilitaLCD
  2017 ;;		_RetardoLCD
  2018 ;; This function is called by:
  2019 ;;		_InicializaLCD
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text9
  2025   00117C                     __ptext9:
  2026                           	callstack 0
  2027   00117C                     _BorraLCD:
  2028                           	callstack 26
  2029                           
  2030                           ;LibLCDXC8.h: 114: LATE0=0;
  2031                           
  2032                           ;incstack = 0
  2033   00117C  908D               	bcf	3981,0,c	;volatile
  2034                           
  2035                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2036   00117E  0E01               	movlw	1
  2037   001180  ECCF  F008         	call	_EnviaDato
  2038                           
  2039                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2040   001184  ECC8  F008         	call	_HabilitaLCD	;wreg free
  2041                           
  2042                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2043   001188  0E02               	movlw	2
  2044   00118A  ECC7  F007         	call	_RetardoLCD
  2045   00118E  0012               	return		;funcret
  2046   001190                     __end_of_BorraLCD:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _DireccionaLCD *****************
  2050 ;; Defined at:
  2051 ;;		line 250 in file "LibLCDXC8.h"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  a               1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  a               1    3[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2068 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 3
  2072 ;; This function calls:
  2073 ;;		_EnviaDato
  2074 ;;		_HabilitaLCD
  2075 ;;		_RetardoLCD
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text10
  2082   001166                     __ptext10:
  2083                           	callstack 0
  2084   001166                     _DireccionaLCD:
  2085                           	callstack 27
  2086                           
  2087                           ;incstack = 0
  2088                           ;DireccionaLCD@a stored from wreg
  2089   001166  6E1D               	movwf	DireccionaLCD@a^0,c
  2090                           
  2091                           ;LibLCDXC8.h: 253: LATE0=0;
  2092   001168  908D               	bcf	3981,0,c	;volatile
  2093                           
  2094                           ;LibLCDXC8.h: 254: EnviaDato(a);
  2095   00116A  501D               	movf	DireccionaLCD@a^0,w,c
  2096   00116C  ECCF  F008         	call	_EnviaDato
  2097                           
  2098                           ;LibLCDXC8.h: 255: HabilitaLCD();
  2099   001170  ECC8  F008         	call	_HabilitaLCD	;wreg free
  2100                           
  2101                           ;LibLCDXC8.h: 256: RetardoLCD(4);
  2102   001174  0E04               	movlw	4
  2103   001176  ECC7  F007         	call	_RetardoLCD
  2104   00117A  0012               	return		;funcret
  2105   00117C                     __end_of_DireccionaLCD:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _EnviaDato *****************
  2109 ;; Defined at:
  2110 ;;		line 59 in file "LibLCDXC8.h"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  a               1    wreg     unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  a               1    2[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        1 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 2
  2131 ;; This function calls:
  2132 ;;		_HabilitaLCD
  2133 ;;		_RetardoLCD
  2134 ;; This function is called by:
  2135 ;;		_InicializaLCD
  2136 ;;		_BorraLCD
  2137 ;;		_EscribeLCD_c
  2138 ;;		_DireccionaLCD
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text11
  2143   00119E                     __ptext11:
  2144                           	callstack 0
  2145   00119E                     _EnviaDato:
  2146                           	callstack 26
  2147                           
  2148                           ;incstack = 0
  2149                           ;EnviaDato@a stored from wreg
  2150   00119E  6E1C               	movwf	EnviaDato@a^0,c
  2151                           
  2152                           ;LibLCDXC8.h: 68: LATD=a;
  2153                           
  2154                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2155   0011A0  C01C  FF8C         	movff	EnviaDato@a,3980	;volatile
  2156   0011A4  0012               	return		;funcret
  2157   0011A6                     __end_of_EnviaDato:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function _RetardoLCD *****************
  2161 ;; Defined at:
  2162 ;;		line 286 in file "LibLCDXC8.h"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  a               1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  a               1    1[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_EnviaDato
  2187 ;;		_InicializaLCD
  2188 ;;		_BorraLCD
  2189 ;;		_EscribeLCD_c
  2190 ;;		_DireccionaLCD
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text12
  2195   000F8E                     __ptext12:
  2196                           	callstack 0
  2197   000F8E                     _RetardoLCD:
  2198                           	callstack 27
  2199                           
  2200                           ;incstack = 0
  2201                           ;RetardoLCD@a stored from wreg
  2202   000F8E  6E1B               	movwf	RetardoLCD@a^0,c
  2203                           
  2204                           ;LibLCDXC8.h: 287: switch(a){
  2205   000F90  D01B               	goto	l1024
  2206   000F92                     l1014:
  2207   000F92  0E05               	movlw	5
  2208   000F94  6E1A               	movwf	??_RetardoLCD^0,c
  2209   000F96  0EDE               	movlw	222
  2210   000F98                     u1527:
  2211   000F98  2EE8               	decfsz	wreg,f,c
  2212   000F9A  D7FE               	bra	u1527
  2213   000F9C  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2214   000F9E  D7FC               	bra	u1527
  2215                           
  2216                           ;LibLCDXC8.h: 290: break;
  2217   000FA0  0012               	return	
  2218   000FA2                     l1016:
  2219   000FA2  0E53               	movlw	83
  2220   000FA4                     u1537:
  2221   000FA4  2EE8               	decfsz	wreg,f,c
  2222   000FA6  D7FE               	bra	u1537
  2223   000FA8  F000               	nop	
  2224                           
  2225                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2226   000FAA  0E35               	movlw	53
  2227   000FAC                     u1547:
  2228   000FAC  2EE8               	decfsz	wreg,f,c
  2229   000FAE  D7FE               	bra	u1547
  2230   000FB0  F000               	nop	
  2231                           
  2232                           ;LibLCDXC8.h: 294: break;
  2233   000FB2  0012               	return	
  2234   000FB4                     l1018:
  2235   000FB4  0E08               	movlw	8
  2236   000FB6                     u1557:
  2237   000FB6  2EE8               	decfsz	wreg,f,c
  2238   000FB8  D7FE               	bra	u1557
  2239   000FBA  F000               	nop	
  2240                           
  2241                           ;LibLCDXC8.h: 297: break;
  2242   000FBC  0012               	return	
  2243   000FBE                     l1020:
  2244   000FBE  0E03               	movlw	3
  2245   000FC0                     u1567:
  2246   000FC0  2EE8               	decfsz	wreg,f,c
  2247   000FC2  D7FE               	bra	u1567
  2248   000FC4  F000               	nop	
  2249                           
  2250                           ;LibLCDXC8.h: 300: break;
  2251   000FC6  0012               	return	
  2252   000FC8                     l1024:
  2253   000FC8  501B               	movf	RetardoLCD@a^0,w,c
  2254                           
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 4, Range of values is 1 to 4
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           13     7 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261   000FCA  0A01               	xorlw	1	; case 1
  2262   000FCC  B4D8               	btfsc	status,2,c
  2263   000FCE  D7E1               	goto	l1014
  2264   000FD0  0A03               	xorlw	3	; case 2
  2265   000FD2  B4D8               	btfsc	status,2,c
  2266   000FD4  D7E6               	goto	l1016
  2267   000FD6  0A01               	xorlw	1	; case 3
  2268   000FD8  B4D8               	btfsc	status,2,c
  2269   000FDA  D7EC               	goto	l1018
  2270   000FDC  0A07               	xorlw	7	; case 4
  2271   000FDE  A4D8               	btfss	status,2,c
  2272   000FE0  0012               	return	
  2273   000FE2  D7ED               	goto	l1020
  2274   000FE4                     __end_of_RetardoLCD:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _HabilitaLCD *****************
  2278 ;; Defined at:
  2279 ;;		line 105 in file "LibLCDXC8.h"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_EnviaDato
  2304 ;;		_InicializaLCD
  2305 ;;		_BorraLCD
  2306 ;;		_EscribeLCD_c
  2307 ;;		_DireccionaLCD
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text13
  2312   001190                     __ptext13:
  2313                           	callstack 0
  2314   001190                     _HabilitaLCD:
  2315                           	callstack 27
  2316                           
  2317                           ;LibLCDXC8.h: 107: LATE1=1;
  2318                           
  2319                           ;incstack = 0
  2320   001190  828D               	bsf	3981,1,c	;volatile
  2321                           
  2322                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2323   001192  0E03               	movlw	3
  2324   001194                     u1577:
  2325   001194  2EE8               	decfsz	wreg,f,c
  2326   001196  D7FE               	bra	u1577
  2327   001198  F000               	nop	
  2328                           
  2329                           ;LibLCDXC8.h: 110: LATE1=0;
  2330   00119A  928D               	bcf	3981,1,c	;volatile
  2331   00119C  0012               	return		;funcret
  2332   00119E                     __end_of_HabilitaLCD:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _ColorRGB *****************
  2336 ;; Defined at:
  2337 ;;		line 203 in file "Laboratorio4.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2351 ;;      Params:         0       0       0       0       0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2353 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2354 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2355 ;;Total ram usage:        2 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text14
  2366   000E64                     __ptext14:
  2367                           	callstack 0
  2368   000E64                     _ColorRGB:
  2369                           	callstack 29
  2370                           
  2371                           ;Laboratorio4.c: 204: if(color==8) color = 0;
  2372                           
  2373                           ;incstack = 0
  2374   000E64  0E08               	movlw	8
  2375   000E66  180D               	xorwf	_color^0,w,c
  2376   000E68  100E               	iorwf	(_color+1)^0,w,c
  2377   000E6A  A4D8               	btfss	status,2,c
  2378   000E6C  D014               	goto	l1260
  2379   000E6E  0E00               	movlw	0
  2380   000E70  6E0E               	movwf	(_color+1)^0,c
  2381   000E72  0E00               	movlw	0
  2382   000E74  6E0D               	movwf	_color^0,c
  2383   000E76  D00F               	goto	l1260
  2384   000E78                     l1242:
  2385                           
  2386                           ;Laboratorio4.c: 207: LATC = 0b00000000;
  2387   000E78  0E00               	movlw	0
  2388   000E7A  D00B               	goto	L9
  2389   000E7C                     l1244:
  2390                           
  2391                           ;Laboratorio4.c: 210: LATC = 0b00000101;
  2392   000E7C  0E05               	movlw	5
  2393   000E7E  D009               	goto	L9
  2394   000E80                     l1246:
  2395                           
  2396                           ;Laboratorio4.c: 213: LATC = 0b00000110;
  2397   000E80  0E06               	movlw	6
  2398   000E82  D007               	goto	L9
  2399   000E84                     l1248:
  2400                           
  2401                           ;Laboratorio4.c: 216: LATC = 0b00000011;
  2402   000E84  0E03               	movlw	3
  2403   000E86  D005               	goto	L9
  2404   000E88                     l1250:
  2405                           
  2406                           ;Laboratorio4.c: 219: LATC = 0b00000010;
  2407   000E88  0E02               	movlw	2
  2408   000E8A  D003               	goto	L9
  2409   000E8C                     l1254:
  2410                           
  2411                           ;Laboratorio4.c: 225: LATC = 0b00000100;
  2412   000E8C  0E04               	movlw	4
  2413   000E8E  D001               	goto	L9
  2414   000E90                     l1256:
  2415                           
  2416                           ;Laboratorio4.c: 228: LATC = 0b00000111;
  2417   000E90  0E07               	movlw	7
  2418   000E92                     L9:
  2419   000E92  6E8B               	movwf	139,c	;volatile
  2420                           
  2421                           ;Laboratorio4.c: 229: break;
  2422   000E94  D021               	goto	l1262
  2423   000E96                     l1260:
  2424   000E96  C00D  F01A         	movff	_color,??_ColorRGB
  2425   000E9A  C00E  F01B         	movff	_color+1,??_ColorRGB+1
  2426                           
  2427                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2428                           ; Switch size 1, requested type "simple"
  2429                           ; Number of cases is 1, Range of values is 0 to 0
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte            4     3 (average)
  2433                           ;	Chosen strategy is simple_byte
  2434   000E9E  501B               	movf	(??_ColorRGB+1)^0,w,c
  2435   000EA0  0A00               	xorlw	0	; case 0
  2436   000EA2  A4D8               	btfss	status,2,c
  2437   000EA4  D019               	goto	l1262
  2438                           
  2439                           ; Switch size 1, requested type "simple"
  2440                           ; Number of cases is 8, Range of values is 0 to 7
  2441                           ; switch strategies available:
  2442                           ; Name         Instructions Cycles
  2443                           ; simple_byte           25    13 (average)
  2444                           ;	Chosen strategy is simple_byte
  2445   000EA6  501A               	movf	??_ColorRGB^0,w,c
  2446   000EA8  0A00               	xorlw	0	; case 0
  2447   000EAA  B4D8               	btfsc	status,2,c
  2448   000EAC  D7E5               	goto	l1242
  2449   000EAE  0A01               	xorlw	1	; case 1
  2450   000EB0  B4D8               	btfsc	status,2,c
  2451   000EB2  D7E4               	goto	l1244
  2452   000EB4  0A03               	xorlw	3	; case 2
  2453   000EB6  B4D8               	btfsc	status,2,c
  2454   000EB8  D7E3               	goto	l1246
  2455   000EBA  0A01               	xorlw	1	; case 3
  2456   000EBC  B4D8               	btfsc	status,2,c
  2457   000EBE  D7E2               	goto	l1248
  2458   000EC0  0A07               	xorlw	7	; case 4
  2459   000EC2  B4D8               	btfsc	status,2,c
  2460   000EC4  D7E1               	goto	l1250
  2461   000EC6  0A01               	xorlw	1	; case 5
  2462   000EC8  B4D8               	btfsc	status,2,c
  2463   000ECA  D7DA               	goto	l1246
  2464   000ECC  0A03               	xorlw	3	; case 6
  2465   000ECE  B4D8               	btfsc	status,2,c
  2466   000ED0  D7DD               	goto	l1254
  2467   000ED2  0A01               	xorlw	1	; case 7
  2468   000ED4  B4D8               	btfsc	status,2,c
  2469   000ED6  D7DC               	goto	l1256
  2470   000ED8                     l1262:
  2471                           
  2472                           ;Laboratorio4.c: 233: color += 1;
  2473   000ED8  4A0D               	infsnz	_color^0,f,c
  2474   000EDA  2A0E               	incf	(_color+1)^0,f,c
  2475   000EDC  0012               	return		;funcret
  2476   000EDE                     __end_of_ColorRGB:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _ISR *****************
  2480 ;; Defined at:
  2481 ;;		line 236 in file "Laboratorio4.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		Interrupt level 2
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	intcode
  2509   000008                     __pintcode:
  2510                           	callstack 0
  2511   000008                     _ISR:
  2512                           	callstack 26
  2513                           
  2514                           ;incstack = 0
  2515   000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2516   00000A  ED6F  F007         	call	int_func,f	;refresh shadow registers
  2517                           
  2518                           	psect	intcode_body
  2519   000EDE                     __pintcode_body:
  2520                           	callstack 26
  2521   000EDE                     int_func:
  2522                           	callstack 26
  2523   000EDE  0006               	pop		; remove dummy address from shadow register refresh
  2524                           
  2525                           ;Laboratorio4.c: 237: if(TMR0IF==1){
  2526   000EE0  A4F2               	btfss	4082,2,c	;volatile
  2527   000EE2  D019               	goto	i2l1572
  2528                           
  2529                           ;Laboratorio4.c: 238: if(!verificador) contador = contador +1;
  2530   000EE4  5009               	movf	_verificador^0,w,c
  2531   000EE6  100A               	iorwf	(_verificador+1)^0,w,c
  2532   000EE8  A4D8               	btfss	status,2,c
  2533   000EEA  D007               	goto	i2l1566
  2534   000EEC  0E01               	movlw	1
  2535   000EEE  240B               	addwf	_contador^0,w,c
  2536   000EF0  6E0B               	movwf	_contador^0,c
  2537   000EF2  0E00               	movlw	0
  2538   000EF4  200C               	addwfc	(_contador+1)^0,w,c
  2539   000EF6  6E0C               	movwf	(_contador+1)^0,c
  2540   000EF8  D004               	goto	i2l1568
  2541   000EFA                     i2l1566:
  2542                           
  2543                           ;Laboratorio4.c: 239: else contador = 0;
  2544   000EFA  0E00               	movlw	0
  2545   000EFC  6E0C               	movwf	(_contador+1)^0,c
  2546   000EFE  0E00               	movlw	0
  2547   000F00  6E0B               	movwf	_contador^0,c
  2548   000F02                     i2l1568:
  2549                           
  2550                           ;Laboratorio4.c: 240: TMR0IF=0;
  2551   000F02  94F2               	bcf	4082,2,c	;volatile
  2552                           
  2553                           ;Laboratorio4.c: 241: LATE2 = !LATE2;
  2554   000F04  B48D               	btfsc	3981,2,c	;volatile
  2555   000F06  D002               	goto	i2u84_40
  2556   000F08  848D               	bsf	3981,2,c	;volatile
  2557   000F0A  D001               	goto	i2u85_45
  2558   000F0C                     i2u84_40:
  2559   000F0C  948D               	bcf	3981,2,c	;volatile
  2560   000F0E                     i2u85_45:
  2561                           
  2562                           ;Laboratorio4.c: 242: TMR0 = 49911;
  2563   000F0E  0EC2               	movlw	194
  2564   000F10  6ED7               	movwf	215,c	;volatile
  2565   000F12  0EF7               	movlw	247
  2566   000F14  6ED6               	movwf	214,c	;volatile
  2567   000F16                     i2l1572:
  2568                           
  2569                           ;Laboratorio4.c: 243: };Laboratorio4.c: 245: if(contador == 10){
  2570   000F16  0E0A               	movlw	10
  2571   000F18  180B               	xorwf	_contador^0,w,c
  2572   000F1A  100C               	iorwf	(_contador+1)^0,w,c
  2573   000F1C  A4D8               	btfss	status,2,c
  2574   000F1E  D00A               	goto	i2l258
  2575                           
  2576                           ;Laboratorio4.c: 246: if(!verificador){
  2577   000F20  5009               	movf	_verificador^0,w,c
  2578   000F22  100A               	iorwf	(_verificador+1)^0,w,c
  2579   000F24  A4D8               	btfss	status,2,c
  2580   000F26  D006               	goto	i2l258
  2581                           
  2582                           ;Laboratorio4.c: 247: LATC7 = !LATC7;
  2583   000F28  BE8B               	btfsc	3979,7,c	;volatile
  2584   000F2A  D002               	goto	i2u88_40
  2585   000F2C  8E8B               	bsf	3979,7,c	;volatile
  2586   000F2E  D001               	goto	i2u89_45
  2587   000F30                     i2u88_40:
  2588   000F30  9E8B               	bcf	3979,7,c	;volatile
  2589   000F32                     i2u89_45:
  2590   000F32  0003               	sleep		;# 
  2591   000F34                     i2l258:
  2592   000F34  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2593   000F36  0011               	retfie		f
  2594   000F38                     __end_of_ISR:
  2595                           	callstack 0
  2596                           
  2597                           	psect	rparam
  2598   000000                     
  2599                           	psect	temp
  2600   000031                     btemp:
  2601                           	callstack 0
  2602   000031                     	ds	1
  2603   000000                     int$flags	set	btemp
  2604   000000                     wtemp8	set	btemp+1
  2605   000000                     ttemp5	set	btemp+1
  2606   000000                     ttemp6	set	btemp+4
  2607   000000                     ttemp7	set	btemp+8
  2608                           
  2609                           	psect	idloc
  2610                           
  2611                           ;Config register IDLOC0 @ 0x200000
  2612                           ;	unspecified, using default values
  2613   200000                     	org	2097152
  2614   200000  FF                 	db	255
  2615                           
  2616                           ;Config register IDLOC1 @ 0x200001
  2617                           ;	unspecified, using default values
  2618   200001                     	org	2097153
  2619   200001  FF                 	db	255
  2620                           
  2621                           ;Config register IDLOC2 @ 0x200002
  2622                           ;	unspecified, using default values
  2623   200002                     	org	2097154
  2624   200002  FF                 	db	255
  2625                           
  2626                           ;Config register IDLOC3 @ 0x200003
  2627                           ;	unspecified, using default values
  2628   200003                     	org	2097155
  2629   200003  FF                 	db	255
  2630                           
  2631                           ;Config register IDLOC4 @ 0x200004
  2632                           ;	unspecified, using default values
  2633   200004                     	org	2097156
  2634   200004  FF                 	db	255
  2635                           
  2636                           ;Config register IDLOC5 @ 0x200005
  2637                           ;	unspecified, using default values
  2638   200005                     	org	2097157
  2639   200005  FF                 	db	255
  2640                           
  2641                           ;Config register IDLOC6 @ 0x200006
  2642                           ;	unspecified, using default values
  2643   200006                     	org	2097158
  2644   200006  FF                 	db	255
  2645                           
  2646                           ;Config register IDLOC7 @ 0x200007
  2647                           ;	unspecified, using default values
  2648   200007                     	org	2097159
  2649   200007  FF                 	db	255
  2650                           
  2651                           	psect	config
  2652                           
  2653                           ;Config register CONFIG1L @ 0x300000
  2654                           ;	unspecified, using default values
  2655                           ;	PLL Prescaler Selection bits
  2656                           ;	PLLDIV = 0x0, unprogrammed default
  2657                           ;	System Clock Postscaler Selection bits
  2658                           ;	CPUDIV = 0x0, unprogrammed default
  2659                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2660                           ;	USBDIV = 0x0, unprogrammed default
  2661   300000                     	org	3145728
  2662   300000  00                 	db	0
  2663                           
  2664                           ;Config register CONFIG1H @ 0x300001
  2665                           ;	Oscillator Selection bits
  2666                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2667                           ;	Fail-Safe Clock Monitor Enable bit
  2668                           ;	FCMEN = 0x0, unprogrammed default
  2669                           ;	Internal/External Oscillator Switchover bit
  2670                           ;	IESO = 0x0, unprogrammed default
  2671   300001                     	org	3145729
  2672   300001  09                 	db	9
  2673                           
  2674                           ;Config register CONFIG2L @ 0x300002
  2675                           ;	unspecified, using default values
  2676                           ;	Power-up Timer Enable bit
  2677                           ;	PWRT = 0x1, unprogrammed default
  2678                           ;	Brown-out Reset Enable bits
  2679                           ;	BOR = 0x3, unprogrammed default
  2680                           ;	Brown-out Reset Voltage bits
  2681                           ;	BORV = 0x3, unprogrammed default
  2682                           ;	USB Voltage Regulator Enable bit
  2683                           ;	VREGEN = 0x0, unprogrammed default
  2684   300002                     	org	3145730
  2685   300002  1F                 	db	31
  2686                           
  2687                           ;Config register CONFIG2H @ 0x300003
  2688                           ;	Watchdog Timer Enable bit
  2689                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2690                           ;	Watchdog Timer Postscale Select bits
  2691                           ;	WDTPS = 0xF, unprogrammed default
  2692   300003                     	org	3145731
  2693   300003  1E                 	db	30
  2694                           
  2695                           ; Padding undefined space
  2696   300004                     	org	3145732
  2697   300004  FF                 	db	255
  2698                           
  2699                           ;Config register CONFIG3H @ 0x300005
  2700                           ;	unspecified, using default values
  2701                           ;	CCP2 MUX bit
  2702                           ;	CCP2MX = 0x1, unprogrammed default
  2703                           ;	PORTB A/D Enable bit
  2704                           ;	PBADEN = 0x1, unprogrammed default
  2705                           ;	Low-Power Timer 1 Oscillator Enable bit
  2706                           ;	LPT1OSC = 0x0, unprogrammed default
  2707                           ;	MCLR Pin Enable bit
  2708                           ;	MCLRE = 0x1, unprogrammed default
  2709   300005                     	org	3145733
  2710   300005  83                 	db	131
  2711                           
  2712                           ;Config register CONFIG4L @ 0x300006
  2713                           ;	unspecified, using default values
  2714                           ;	Stack Full/Underflow Reset Enable bit
  2715                           ;	STVREN = 0x1, unprogrammed default
  2716                           ;	Single-Supply ICSP Enable bit
  2717                           ;	LVP = 0x1, unprogrammed default
  2718                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2719                           ;	ICPRT = 0x0, unprogrammed default
  2720                           ;	Extended Instruction Set Enable bit
  2721                           ;	XINST = 0x0, unprogrammed default
  2722                           ;	Background Debugger Enable bit
  2723                           ;	DEBUG = 0x1, unprogrammed default
  2724   300006                     	org	3145734
  2725   300006  85                 	db	133
  2726                           
  2727                           ; Padding undefined space
  2728   300007                     	org	3145735
  2729   300007  FF                 	db	255
  2730                           
  2731                           ;Config register CONFIG5L @ 0x300008
  2732                           ;	unspecified, using default values
  2733                           ;	Code Protection bit
  2734                           ;	CP0 = 0x1, unprogrammed default
  2735                           ;	Code Protection bit
  2736                           ;	CP1 = 0x1, unprogrammed default
  2737                           ;	Code Protection bit
  2738                           ;	CP2 = 0x1, unprogrammed default
  2739                           ;	Code Protection bit
  2740                           ;	CP3 = 0x1, unprogrammed default
  2741   300008                     	org	3145736
  2742   300008  0F                 	db	15
  2743                           
  2744                           ;Config register CONFIG5H @ 0x300009
  2745                           ;	unspecified, using default values
  2746                           ;	Boot Block Code Protection bit
  2747                           ;	CPB = 0x1, unprogrammed default
  2748                           ;	Data EEPROM Code Protection bit
  2749                           ;	CPD = 0x1, unprogrammed default
  2750   300009                     	org	3145737
  2751   300009  C0                 	db	192
  2752                           
  2753                           ;Config register CONFIG6L @ 0x30000A
  2754                           ;	unspecified, using default values
  2755                           ;	Write Protection bit
  2756                           ;	WRT0 = 0x1, unprogrammed default
  2757                           ;	Write Protection bit
  2758                           ;	WRT1 = 0x1, unprogrammed default
  2759                           ;	Write Protection bit
  2760                           ;	WRT2 = 0x1, unprogrammed default
  2761                           ;	Write Protection bit
  2762                           ;	WRT3 = 0x1, unprogrammed default
  2763   30000A                     	org	3145738
  2764   30000A  0F                 	db	15
  2765                           
  2766                           ;Config register CONFIG6H @ 0x30000B
  2767                           ;	unspecified, using default values
  2768                           ;	Configuration Register Write Protection bit
  2769                           ;	WRTC = 0x1, unprogrammed default
  2770                           ;	Boot Block Write Protection bit
  2771                           ;	WRTB = 0x1, unprogrammed default
  2772                           ;	Data EEPROM Write Protection bit
  2773                           ;	WRTD = 0x1, unprogrammed default
  2774   30000B                     	org	3145739
  2775   30000B  E0                 	db	224
  2776                           
  2777                           ;Config register CONFIG7L @ 0x30000C
  2778                           ;	unspecified, using default values
  2779                           ;	Table Read Protection bit
  2780                           ;	EBTR0 = 0x1, unprogrammed default
  2781                           ;	Table Read Protection bit
  2782                           ;	EBTR1 = 0x1, unprogrammed default
  2783                           ;	Table Read Protection bit
  2784                           ;	EBTR2 = 0x1, unprogrammed default
  2785                           ;	Table Read Protection bit
  2786                           ;	EBTR3 = 0x1, unprogrammed default
  2787   30000C                     	org	3145740
  2788   30000C  0F                 	db	15
  2789                           
  2790                           ;Config register CONFIG7H @ 0x30000D
  2791                           ;	unspecified, using default values
  2792                           ;	Boot Block Table Read Protection bit
  2793                           ;	EBTRB = 0x1, unprogrammed default
  2794   30000D                     	org	3145741
  2795   30000D  40                 	db	64
  2796                           tosu	equ	0xFFF
  2797                           tosh	equ	0xFFE
  2798                           tosl	equ	0xFFD
  2799                           stkptr	equ	0xFFC
  2800                           pclatu	equ	0xFFB
  2801                           pclath	equ	0xFFA
  2802                           pcl	equ	0xFF9
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           indf0	equ	0xFEF
  2810                           postinc0	equ	0xFEE
  2811                           postdec0	equ	0xFED
  2812                           preinc0	equ	0xFEC
  2813                           plusw0	equ	0xFEB
  2814                           fsr0h	equ	0xFEA
  2815                           fsr0l	equ	0xFE9
  2816                           wreg	equ	0xFE8
  2817                           indf1	equ	0xFE7
  2818                           postinc1	equ	0xFE6
  2819                           postdec1	equ	0xFE5
  2820                           preinc1	equ	0xFE4
  2821                           plusw1	equ	0xFE3
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           bsr	equ	0xFE0
  2825                           indf2	equ	0xFDF
  2826                           postinc2	equ	0xFDE
  2827                           postdec2	equ	0xFDD
  2828                           preinc2	equ	0xFDC
  2829                           plusw2	equ	0xFDB
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___wmul
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3327
                                             13 COMRAM     6     6      0
                           _BorraLCD
                           _ColorRGB
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     332
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word
     _EscribeLCD_c
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      30       1       51.1%
BITBIGSFRhlh        2A      0       0      24        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhlll      11      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      25        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      28        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 17 07:58:02 2023

                      _i 000F                        _m 0016                        _r 0001  
                     u50 0DC8                       _n1 0013                       _n2 0011  
             EnviaDato@a 001C                       _op 002F      ___wmul@multiplicand 001C  
          ??_LeerTeclado 001A                      l202 0DDC                      l211 0E00  
                    l221 0E2C                      l213 0E08                      l205 0DE4  
          _InicializaLCD 1078                      l231 0E58                      l223 0E34  
                    l215 0E10                      l207 0DEC                      l227 0E48  
                    l219 0E24                      l228 0E60                      l229 0E50  
                    l740 102C                      l750 106E                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _ISR 0008                      u900 1128  
                    u940 1006                      u970 1050                      _n1c 002E  
                    _n2c 002D                      wreg 000FE8                     ?_ISR 001A  
                   l1020 0FBE                     l1014 0F92                     l1016 0FA2  
                   l1024 0FC8                     l1018 0FB4                     l1208 0E3C  
                   l1152 0DF4                     l1250 0E88                     l1242 0E78  
                   l1244 0E7C                     l1260 0E96                     l1180 0E18  
                   l1254 0E8C                     l1246 0E80                     l1262 0ED8  
                   l1256 0E90                     l1248 0E84                     l1602 0F48  
                   l1606 0F5C                     l1616 0FFA                     l1618 1002  
                   l1628 1022                     l1644 1064                     l1636 1044  
                   l1820 0B4A                     l1812 0B28                     l1732 094C  
                   l1708 08EA                     l1638 104C                     l1830 0BCE  
                   l1806 0B14                     l1824 0B5C                     l1752 09A2  
                   l1842 0C44                     l1834 0BE2                     l1850 0C72  
                   l1826 0B78                     l1674 0876                     l1588 10FC  
                   l1862 0CCC                     l1790 0A84                     l1880 0D98  
                   l1872 0D4C                     l1776 0A08                     l1794 0A90  
                   l1786 0A36                     l1882 0DA2                     l1876 0D72  
                   l1868 0D00                     l1788 0A4E                     l1884 0DA8  
                   l1798 0AAE                     STR_1 0812                     STR_2 0801  
                   u1020 0902                     u1070 092A                     u1160 0984  
                   u1410 0C82                     u1250 09EA                     u1420 0C94  
                   u1430 0CA6                     _LATB 000F8A                     _LATC 000F8B  
                   u1440 0CDC                     _LATD 000F8C                     u1450 0CEE  
                   u1370 0BE0                     u1507 0866                     u1460 0D00  
                   u1517 0DAE                     u1527 0F98                     u1537 0FA4  
                   u1547 0FAC                     u1557 0FB6                     u1567 0FC0  
                   u1577 1194                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 001D                     _main 081E                     fsr1l 000FE1  
                   btemp 0031                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ??_ISR 001A  
         ?_InicializaLCD 001A                    ?_main 001A            EscribeLCD_c@a 001D  
                  _T0CON 000FD5                    _LATE0 007C68                    _LATE1 007C69  
                  _LATE2 007C6A                    _LATC7 007C5F          __end_of___lwdiv 1036  
        __end_of___lwmod 1078                    i2l258 0F34                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 001E                    _Tecla 0015      __end_of_LeerTeclado 0E64  
                  _color 000D                    main@i 002B                    tablat 000FF5  
            _HabilitaLCD 1190                    ttemp5 0032                    ttemp6 0035  
                  ttemp7 0039                    status 000FD8                    wtemp8 0032  
       __end_of_BorraLCD 1190         __end_of_ColorRGB 0EDE          __initialization 10BA  
           __end_of_main 0DBA                   ??_main 0027            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 001D                   i2l1572 0F16  
                 i2l1566 0EFA                   i2l1568 0F02                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
  __end_of_DireccionaLCD 117C               _RetardoLCD 0F8E                   ___lmul 0F38  
                 ___wmul 112A                ??___lwdiv 0024                ??___lwmod 001E  
        ??_InicializaLCD 001D                   clear_0 10E0                   isa$std 000001  
   __end_of_EscribeLCD_c 1166              _LeerTeclado 0DBA             __pdataCOMRAM 002D  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 10E6  
          ___rparam_used 000001           __pcstackCOMRAM 001A        __end_of_EnviaDato 11A6  
              ?_BorraLCD 001A                ?_ColorRGB 001A              ?_RetardoLCD 001A  
            RetardoLCD@a 001B                  ?___lmul 001A                  ?___wmul 001A  
         ___lmul@product 0022                  i2u84_40 0F0C                  i2u85_45 0F0E  
                i2u88_40 0F30                  i2u89_45 0F32               ??_BorraLCD 001D  
             ??_ColorRGB 001A        ??_MensajeLCD_Word 001F             ?_HabilitaLCD 001A  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0FE4  
                ___lwmod 1036             __psmallconst 0800                  __pcinit 10BA  
                __ramtop 0800                  __ptext0 081E                  __ptext1 112A  
                __ptext2 1036                  __ptext3 0FE4                  __ptext4 0F38  
                __ptext5 10F4                  __ptext6 1150                  __ptext7 0DBA  
                __ptext8 1078                  __ptext9 117C           __pintcode_body 0EDE  
   end_of_initialization 10E6            __Lmediumconst 0000                  int_func 0EDE  
           _EscribeLCD_c 1150                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 001A           __end_of___lmul 0F8E           __end_of___wmul 1150  
          __pidataCOMRAM 11A6    __end_of_InicializaLCD 10BA                _EnviaDato 119E  
    start_initialization 10BA              __end_of_ISR 0F38             ??_RetardoLCD 001A  
               ??___lmul 0022                 ??___wmul 001E          _MensajeLCD_Word 10F4  
             ?_EnviaDato 001A              __pbssCOMRAM 0001       __end_of_RetardoLCD 0FE4  
       MensajeLCD_Word@a 001E         MensajeLCD_Word@i 0020            _DireccionaLCD 1166  
       ___lwdiv@dividend 0020                __pintcode 0008                 ?___lwdiv 0020  
               ?___lwmod 001A              __smallconst 0800         ___lwdiv@quotient 0024  
         ___wmul@product 001E           ?_DireccionaLCD 001A  __end_of_MensajeLCD_Word 112A  
      ___wmul@multiplier 001A              ??_EnviaDato 001C                 _BorraLCD 117C  
               _ColorRGB 0E64        ___lmul@multiplier 001A                copy_data0 10CE  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0022  
        ___lwdiv@counter 0026                 __ptext10 1166                 __ptext11 119E  
               __ptext12 0F8E                 __ptext13 1190                 __ptext14 0E64  
               _contador 000B          ??_DireccionaLCD 001D                 _interfaz 0030  
               _partdecl 0005                 isa$xinst 000000         ?_MensajeLCD_Word 001E  
               int$flags 0031                 intlevel2 0000            ??_HabilitaLCD 001A  
       ___lwmod@dividend 001A          ___lwmod@divisor 001C          ___lwmod@counter 001E  
          ?_EscribeLCD_c 001A              _verificador 0009      __end_of_HabilitaLCD 119E  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 15 14:34:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.40
    37                           ; Generated 04/07/2022 GMT
    38                           ; 
    39                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   001176                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _n2c
    77   001176  20                 	db	32
    78                           
    79                           ;initializer for _n1c
    80   001177  20                 	db	32
    81                           
    82                           ;initializer for _op
    83   001178  20                 	db	32
    84                           
    85                           ;initializer for _interfaz
    86   001179  08                 	db	8
    87   000000                     _RB7	set	31759
    88   000000                     _RB6	set	31758
    89   000000                     _RB5	set	31757
    90   000000                     _LATE1	set	31849
    91   000000                     _LATB	set	3978
    92   000000                     _LATD	set	3980
    93   000000                     _RB4	set	31756
    94   000000                     _TRISB	set	3987
    95   000000                     _TRISD	set	3989
    96   000000                     _ADCON1	set	4033
    97   000000                     _LATE0	set	31848
    98   000000                     _RBPU	set	32655
    99   000000                     _TRISE	set	3990
   100                           
   101                           	psect	smallconst
   102   000800                     __psmallconst:
   103                           	callstack 0
   104   000800  00                 	db	0
   105   000801                     STR_2:
   106   000801  20                 	db	32
   107   000802  20                 	db	32
   108   000803  20                 	db	32
   109   000804  20                 	db	32
   110   000805  20                 	db	32
   111   000806  20                 	db	32
   112   000807  20                 	db	32
   113   000808  20                 	db	32
   114   000809  20                 	db	32
   115   00080A  20                 	db	32
   116   00080B  20                 	db	32
   117   00080C  20                 	db	32
   118   00080D  20                 	db	32
   119   00080E  20                 	db	32
   120   00080F  20                 	db	32
   121   000810  20                 	db	32
   122   000811  00                 	db	0
   123   000812                     STR_1:
   124   000812  48                 	db	72	;'H'
   125   000813  6F                 	db	111	;'o'
   126   000814  6C                 	db	108	;'l'
   127   000815  61                 	db	97	;'a'
   128   000816  20                 	db	32
   129   000817  6D                 	db	109	;'m'
   130   000818  75                 	db	117	;'u'
   131   000819  6E                 	db	110	;'n'
   132   00081A  64                 	db	100	;'d'
   133   00081B  6F                 	db	111	;'o'
   134   00081C  00                 	db	0
   135   00081D  00                 	db	0	; dummy byte at the end
   136   000000                     
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140   001060                     __pcinit:
   141                           	callstack 0
   142   001060                     start_initialization:
   143                           	callstack 0
   144   001060                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (4 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149   001060  0E76               	movlw	low __pidataCOMRAM
   150   001062  6EF6               	movwf	tblptrl,c
   151   001064  0E11               	movlw	high __pidataCOMRAM
   152   001066  6EF7               	movwf	tblptrh,c
   153   001068  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154   00106A  6EF8               	movwf	tblptru,c
   155   00106C  EE00  F02A         	lfsr	0,__pdataCOMRAM
   156   001070  EE10 F004          	lfsr	1,4
   157   001074                     copy_data0:
   158   001074  0009               	tblrd		*+
   159   001076  CFF5 FFEE          	movff	tablat,postinc0
   160   00107A  50E5               	movf	postdec1,w,c
   161   00107C  50E1               	movf	fsr1l,w,c
   162   00107E  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (12 bytes)
   165   001080  EE00  F01E         	lfsr	0,__pbssCOMRAM
   166   001084  0E0C               	movlw	12
   167   001086                     clear_0:
   168   001086  6AEE               	clrf	postinc0,c
   169   001088  06E8               	decf	wreg,f,c
   170   00108A  E1FD               	bnz	clear_0
   171   00108C                     end_of_initialization:
   172                           	callstack 0
   173   00108C                     __end_of__initialization:
   174                           	callstack 0
   175   00108C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176   00108E  6EF8               	movwf	tblptru,c
   177   001090  0100               	movlb	0
   178   001092  EF71  F007         	goto	_main	;jump to C main() function
   179                           
   180                           	psect	bssCOMRAM
   181   00001E                     __pbssCOMRAM:
   182                           	callstack 0
   183   00001E                     _d:
   184                           	callstack 0
   185   00001E                     	ds	3
   186   000021                     _i:
   187                           	callstack 0
   188   000021                     	ds	2
   189   000023                     _n2:
   190                           	callstack 0
   191   000023                     	ds	2
   192   000025                     _n1:
   193                           	callstack 0
   194   000025                     	ds	2
   195   000027                     _r:
   196                           	callstack 0
   197   000027                     	ds	2
   198   000029                     _Tecla:
   199                           	callstack 0
   200   000029                     	ds	1
   201                           
   202                           	psect	dataCOMRAM
   203   00002A                     __pdataCOMRAM:
   204                           	callstack 0
   205   00002A                     _n2c:
   206                           	callstack 0
   207   00002A                     	ds	1
   208   00002B                     _n1c:
   209                           	callstack 0
   210   00002B                     	ds	1
   211   00002C                     _op:
   212                           	callstack 0
   213   00002C                     	ds	1
   214   00002D                     _interfaz:
   215                           	callstack 0
   216   00002D                     	ds	1
   217                           
   218                           	psect	cstackCOMRAM
   219   000001                     __pcstackCOMRAM:
   220                           	callstack 0
   221   000001                     ??_RetardoLCD:
   222   000001                     ?___wmul:
   223                           	callstack 0
   224   000001                     ?___ftpack:
   225                           	callstack 0
   226   000001                     ?___fttol:
   227                           	callstack 0
   228   000001                     ___lbmod@divisor:
   229                           	callstack 0
   230   000001                     ___wmul@multiplier:
   231                           	callstack 0
   232   000001                     ___ftpack@arg:
   233                           	callstack 0
   234   000001                     ___fttol@f1:
   235                           	callstack 0
   236                           
   237                           ; 3 bytes @ 0x0
   238   000001                     	ds	1
   239   000002                     RetardoLCD@a:
   240                           	callstack 0
   241   000002                     ___lbmod@dividend:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x1
   245   000002                     	ds	1
   246   000003                     EnviaDato@a:
   247                           	callstack 0
   248   000003                     ___lbmod@counter:
   249                           	callstack 0
   250   000003                     ___wmul@multiplicand:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254   000003                     	ds	1
   255   000004                     EscribeLCD_c@a:
   256                           	callstack 0
   257   000004                     DireccionaLCD@a:
   258                           	callstack 0
   259   000004                     ___ftpack@exp:
   260                           	callstack 0
   261   000004                     ___lbmod@rem:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x3
   265   000004                     	ds	1
   266   000005                     ??___fttol:
   267   000005                     MensajeLCD_Word@a:
   268                           	callstack 0
   269   000005                     ___ftpack@sign:
   270                           	callstack 0
   271   000005                     ___lbdiv@divisor:
   272                           	callstack 0
   273   000005                     ___wmul@product:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x4
   277   000005                     	ds	1
   278   000006                     ??___ftpack:
   279   000006                     ??_MensajeLCD_Word:
   280   000006                     ___lbdiv@dividend:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x5
   284   000006                     	ds	1
   285   000007                     ___lbdiv@counter:
   286                           	callstack 0
   287   000007                     MensajeLCD_Word@i:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291   000007                     	ds	1
   292   000008                     ___lbdiv@quotient:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x7
   296   000008                     	ds	1
   297   000009                     ?___lwtoft:
   298                           	callstack 0
   299   000009                     ___lwtoft@c:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x8
   303   000009                     	ds	1
   304   00000A                     ___fttol@sign1:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x9
   308   00000A                     	ds	1
   309   00000B                     ___fttol@lval:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0xA
   313   00000B                     	ds	1
   314   00000C                     ?___ftdiv:
   315                           	callstack 0
   316   00000C                     ___ftdiv@f1:
   317                           	callstack 0
   318                           
   319                           ; 3 bytes @ 0xB
   320   00000C                     	ds	3
   321   00000F                     ___fttol@exp1:
   322                           	callstack 0
   323   00000F                     ___ftdiv@f2:
   324                           	callstack 0
   325                           
   326                           ; 3 bytes @ 0xE
   327   00000F                     	ds	1
   328   000010                     EscribeLCD_n8@b:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0xF
   332   000010                     	ds	1
   333   000011                     EscribeLCD_n8@centena:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x10
   337   000011                     	ds	1
   338   000012                     ??___ftdiv:
   339   000012                     EscribeLCD_n8@decena:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x11
   343   000012                     	ds	1
   344   000013                     EscribeLCD_n8@unidad:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x12
   348   000013                     	ds	1
   349   000014                     EscribeLCD_n8@a:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x13
   353   000014                     	ds	1
   354   000015                     ___ftdiv@cntr:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x14
   358   000015                     	ds	1
   359   000016                     ___ftdiv@f3:
   360                           	callstack 0
   361                           
   362                           ; 3 bytes @ 0x15
   363   000016                     	ds	3
   364   000019                     ___ftdiv@exp:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x18
   368   000019                     	ds	1
   369   00001A                     ___ftdiv@sign:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x19
   373   00001A                     	ds	1
   374   00001B                     Imprimir@Valor:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1A
   378   00001B                     	ds	1
   379   00001C                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x1B
   382   00001C                     	ds	2
   383                           
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 20 in file "Laboratorio4.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   403 ;;      Params:         0       0       0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels required when called: 6
   409 ;; This function calls:
   410 ;;		_BorraLCD
   411 ;;		_Borrar
   412 ;;		_Imprimir
   413 ;;		_InicializaLCD
   414 ;;		_LeerTeclado
   415 ;;		_MensajeLCD_Word
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text0
   422   000EE2                     __ptext0:
   423                           	callstack 0
   424   000EE2                     _main:
   425                           	callstack 25
   426                           
   427                           ;Laboratorio4.c: 21: ADCON1=15;
   428                           
   429                           ;incstack = 0
   430   000EE2  0E0F               	movlw	15
   431   000EE4  6EC1               	movwf	193,c	;volatile
   432                           
   433                           ;Laboratorio4.c: 22: TRISD=0;
   434   000EE6  0E00               	movlw	0
   435   000EE8  6E95               	movwf	149,c	;volatile
   436                           
   437                           ;Laboratorio4.c: 23: TRISB=0b11110000;
   438   000EEA  0EF0               	movlw	240
   439   000EEC  6E93               	movwf	147,c	;volatile
   440                           
   441                           ;Laboratorio4.c: 24: TRISE=0;
   442   000EEE  0E00               	movlw	0
   443   000EF0  6E96               	movwf	150,c	;volatile
   444                           
   445                           ;Laboratorio4.c: 25: RBPU=0;
   446   000EF2  9EF1               	bcf	4081,7,c	;volatile
   447                           
   448                           ;Laboratorio4.c: 26: InicializaLCD();
   449   000EF4  ECF2  F007         	call	_InicializaLCD	;wreg free
   450                           
   451                           ;Laboratorio4.c: 27: BorraLCD();
   452   000EF8  ECA6  F008         	call	_BorraLCD	;wreg free
   453                           
   454                           ;Laboratorio4.c: 28: MensajeLCD_Word("Hola mundo");
   455   000EFC  0E12               	movlw	low STR_1
   456   000EFE  6E05               	movwf	MensajeLCD_Word@a^0,c
   457   000F00  ECCB  F007         	call	_MensajeLCD_Word	;wreg free
   458                           
   459                           ;Laboratorio4.c: 29: _delay((unsigned long)((2000)*(1000000/4000.0)));
   460   000F04  0E03               	movlw	3
   461   000F06  6E1D               	movwf	(??_main+1)^0,c
   462   000F08  0E8A               	movlw	138
   463   000F0A  6E1C               	movwf	??_main^0,c
   464   000F0C  0E56               	movlw	86
   465   000F0E                     u1357:
   466   000F0E  2EE8               	decfsz	wreg,f,c
   467   000F10  D7FE               	bra	u1357
   468   000F12  2E1C               	decfsz	??_main^0,f,c
   469   000F14  D7FC               	bra	u1357
   470   000F16  2E1D               	decfsz	(??_main+1)^0,f,c
   471   000F18  D7FA               	bra	u1357
   472                           
   473                           ;Laboratorio4.c: 30: Borrar();
   474   000F1A  EC85  F008         	call	_Borrar	;wreg free
   475   000F1E                     l1951:
   476                           
   477                           ;Laboratorio4.c: 32: LATB=0B00000000;
   478   000F1E  0E00               	movlw	0
   479   000F20  6E8A               	movwf	138,c	;volatile
   480                           
   481                           ;Laboratorio4.c: 33: Tecla = LeerTeclado();
   482   000F22  EC20  F007         	call	_LeerTeclado	;wreg free
   483   000F26  6E29               	movwf	_Tecla^0,c
   484                           
   485                           ;Laboratorio4.c: 34: _delay((unsigned long)((200)*(1000000/4000.0)));
   486   000F28  0E41               	movlw	65
   487   000F2A  6E1C               	movwf	??_main^0,c
   488   000F2C  0EEE               	movlw	238
   489   000F2E                     u1367:
   490   000F2E  2EE8               	decfsz	wreg,f,c
   491   000F30  D7FE               	bra	u1367
   492   000F32  2E1C               	decfsz	??_main^0,f,c
   493   000F34  D7FC               	bra	u1367
   494   000F36  D000               	nop2	
   495                           
   496                           ;Laboratorio4.c: 35: Imprimir(Tecla);
   497   000F38  5029               	movf	_Tecla^0,w,c
   498   000F3A  EC0F  F004         	call	_Imprimir
   499   000F3E  D7EF               	goto	l1951
   500   000F40                     __end_of_main:
   501                           	callstack 0
   502                           
   503 ;; *************** function _LeerTeclado *****************
   504 ;; Defined at:
   505 ;;		line 139 in file "Laboratorio4.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      unsigned char 
   512 ;; Registers used:
   513 ;;		wreg, status,2
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text1
   533   000E40                     __ptext1:
   534                           	callstack 0
   535   000E40                     _LeerTeclado:
   536                           	callstack 30
   537                           
   538                           ;Laboratorio4.c: 140: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
   539                           
   540                           ;incstack = 0
   541   000E40  B881               	btfsc	3969,4,c	;volatile
   542   000E42  AA81               	btfss	3969,5,c	;volatile
   543   000E44  D004               	goto	u310
   544   000E46  AC81               	btfss	3969,6,c	;volatile
   545   000E48  D002               	goto	u310
   546   000E4A  BE81               	btfsc	3969,7,c	;volatile
   547   000E4C  D7F9               	goto	__ptext1
   548   000E4E                     u310:
   549                           
   550                           ;Laboratorio4.c: 141: LATB=0b11111110;
   551   000E4E  0EFE               	movlw	254
   552   000E50  6E8A               	movwf	138,c	;volatile
   553                           
   554                           ;Laboratorio4.c: 142: if(RB4==0) return '1';
   555   000E52  B881               	btfsc	3969,4,c	;volatile
   556   000E54  D002               	goto	l192
   557   000E56  0E31               	movlw	49
   558   000E58  0012               	return	
   559   000E5A                     l192:
   560                           
   561                           ;Laboratorio4.c: 143: else if(RB5==0) return '2';
   562   000E5A  BA81               	btfsc	3969,5,c	;volatile
   563   000E5C  D002               	goto	l195
   564   000E5E  0E32               	movlw	50
   565   000E60  0012               	return	
   566   000E62                     l195:
   567                           
   568                           ;Laboratorio4.c: 144: else if(RB6==0) return '3';
   569   000E62  BC81               	btfsc	3969,6,c	;volatile
   570   000E64  D002               	goto	l197
   571   000E66  0E33               	movlw	51
   572   000E68  0012               	return	
   573   000E6A                     l197:
   574                           
   575                           ;Laboratorio4.c: 145: else if(RB7==0) return '+';
   576   000E6A  BE81               	btfsc	3969,7,c	;volatile
   577   000E6C  D002               	goto	l1341
   578   000E6E  0E2B               	movlw	43
   579   000E70  0012               	return	
   580   000E72                     l1341:
   581                           
   582                           ;Laboratorio4.c: 146: else{;Laboratorio4.c: 147: LATB=0b11111101;
   583   000E72  0EFD               	movlw	253
   584   000E74  6E8A               	movwf	138,c	;volatile
   585                           
   586                           ;Laboratorio4.c: 148: if(RB4==0) return '4';
   587   000E76  B881               	btfsc	3969,4,c	;volatile
   588   000E78  D002               	goto	l201
   589   000E7A  0E34               	movlw	52
   590   000E7C  0012               	return	
   591   000E7E                     l201:
   592                           
   593                           ;Laboratorio4.c: 149: else if(RB5==0) return '5';
   594   000E7E  BA81               	btfsc	3969,5,c	;volatile
   595   000E80  D002               	goto	l203
   596   000E82  0E35               	movlw	53
   597   000E84  0012               	return	
   598   000E86                     l203:
   599                           
   600                           ;Laboratorio4.c: 150: else if(RB6==0) return '6';
   601   000E86  BC81               	btfsc	3969,6,c	;volatile
   602   000E88  D002               	goto	l205
   603   000E8A  0E36               	movlw	54
   604   000E8C  0012               	return	
   605   000E8E                     l205:
   606                           
   607                           ;Laboratorio4.c: 151: else if(RB7==0) return '-';
   608   000E8E  BE81               	btfsc	3969,7,c	;volatile
   609   000E90  D002               	goto	l1369
   610   000E92  0E2D               	movlw	45
   611   000E94  0012               	return	
   612   000E96                     l1369:
   613                           
   614                           ;Laboratorio4.c: 152: else{;Laboratorio4.c: 153: LATB=0b11111011;
   615   000E96  0EFB               	movlw	251
   616   000E98  6E8A               	movwf	138,c	;volatile
   617                           
   618                           ;Laboratorio4.c: 154: if(RB4==0) return '7';
   619   000E9A  B881               	btfsc	3969,4,c	;volatile
   620   000E9C  D002               	goto	l209
   621   000E9E  0E37               	movlw	55
   622   000EA0  0012               	return	
   623   000EA2                     l209:
   624                           
   625                           ;Laboratorio4.c: 155: else if(RB5==0) return '8';
   626   000EA2  BA81               	btfsc	3969,5,c	;volatile
   627   000EA4  D002               	goto	l211
   628   000EA6  0E38               	movlw	56
   629   000EA8  0012               	return	
   630   000EAA                     l211:
   631                           
   632                           ;Laboratorio4.c: 156: else if(RB6==0) return '9';
   633   000EAA  BC81               	btfsc	3969,6,c	;volatile
   634   000EAC  D002               	goto	l213
   635   000EAE  0E39               	movlw	57
   636   000EB0  0012               	return	
   637   000EB2                     l213:
   638                           
   639                           ;Laboratorio4.c: 157: else if(RB7==0) return '/';
   640   000EB2  BE81               	btfsc	3969,7,c	;volatile
   641   000EB4  D002               	goto	l1397
   642   000EB6  0E2F               	movlw	47
   643   000EB8  0012               	return	
   644   000EBA                     l1397:
   645                           
   646                           ;Laboratorio4.c: 158: else{;Laboratorio4.c: 159: LATB=0b11110111;
   647   000EBA  0EF7               	movlw	247
   648   000EBC  6E8A               	movwf	138,c	;volatile
   649                           
   650                           ;Laboratorio4.c: 160: if(RB4==0) return 'C';
   651   000EBE  B881               	btfsc	3969,4,c	;volatile
   652   000EC0  D002               	goto	l217
   653   000EC2  0E43               	movlw	67
   654   000EC4  0012               	return	
   655   000EC6                     l217:
   656                           
   657                           ;Laboratorio4.c: 161: else if(RB5==0) return '0';
   658   000EC6  BA81               	btfsc	3969,5,c	;volatile
   659   000EC8  D002               	goto	l219
   660   000ECA  0E30               	movlw	48
   661   000ECC  0012               	return	
   662   000ECE                     l219:
   663                           
   664                           ;Laboratorio4.c: 162: else if(RB6==0) return '=';
   665   000ECE  BC81               	btfsc	3969,6,c	;volatile
   666   000ED0  D002               	goto	l221
   667   000ED2  0E3D               	movlw	61
   668   000ED4  0012               	return	
   669   000ED6                     l221:
   670                           
   671                           ;Laboratorio4.c: 163: else if(RB7==0) return 'x';
   672   000ED6  BE81               	btfsc	3969,7,c	;volatile
   673   000ED8  D002               	goto	l218
   674   000EDA  0E78               	movlw	120
   675   000EDC  0012               	return	
   676   000EDE                     l218:
   677                           
   678                           ;Laboratorio4.c: 164: }}};Laboratorio4.c: 165: return '?';
   679   000EDE  0E3F               	movlw	63
   680   000EE0  0012               	return		;funcret
   681   000EE2                     __end_of_LeerTeclado:
   682                           	callstack 0
   683                           
   684 ;; *************** function _InicializaLCD *****************
   685 ;; Defined at:
   686 ;;		line 71 in file "LibLCDXC8.h"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   700 ;;      Params:         0       0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		_BorraLCD
   709 ;;		_EnviaDato
   710 ;;		_HabilitaLCD
   711 ;;		_RetardoLCD
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718   000FE4                     __ptext2:
   719                           	callstack 0
   720   000FE4                     _InicializaLCD:
   721                           	callstack 27
   722                           
   723                           ;LibLCDXC8.h: 73: LATE0=0;
   724                           
   725                           ;incstack = 0
   726   000FE4  908D               	bcf	3981,0,c	;volatile
   727                           
   728                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
   729                           
   730                           ;LibLCDXC8.h: 74: if(interfaz==4)
   731   000FE6  0E3F               	movlw	63
   732   000FE8  6E8C               	movwf	140,c	;volatile
   733                           
   734                           ;LibLCDXC8.h: 78: HabilitaLCD();
   735   000FEA  ECB0  F008         	call	_HabilitaLCD	;wreg free
   736                           
   737                           ;LibLCDXC8.h: 79: RetardoLCD(1);
   738   000FEE  0E01               	movlw	1
   739   000FF0  ECA0  F007         	call	_RetardoLCD
   740                           
   741                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
   742                           
   743                           ;LibLCDXC8.h: 80: if(interfaz==4)
   744   000FF4  0E3F               	movlw	63
   745   000FF6  6E8C               	movwf	140,c	;volatile
   746                           
   747                           ;LibLCDXC8.h: 84: HabilitaLCD();
   748   000FF8  ECB0  F008         	call	_HabilitaLCD	;wreg free
   749                           
   750                           ;LibLCDXC8.h: 85: RetardoLCD(3);
   751   000FFC  0E03               	movlw	3
   752   000FFE  ECA0  F007         	call	_RetardoLCD
   753                           
   754                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
   755                           
   756                           ;LibLCDXC8.h: 86: if(interfaz==4)
   757   001002  0E3F               	movlw	63
   758   001004  6E8C               	movwf	140,c	;volatile
   759                           
   760                           ;LibLCDXC8.h: 90: HabilitaLCD();
   761   001006  ECB0  F008         	call	_HabilitaLCD	;wreg free
   762                           
   763                           ;LibLCDXC8.h: 91: RetardoLCD(4);
   764   00100A  0E04               	movlw	4
   765   00100C  ECA0  F007         	call	_RetardoLCD
   766                           
   767                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
   768                           
   769                           ;LibLCDXC8.h: 92: if(interfaz==4){
   770   001010  ECA6  F008         	call	_BorraLCD	;wreg free
   771                           
   772                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
   773   001014  0E0F               	movlw	15
   774   001016  ECB7  F008         	call	_EnviaDato
   775                           
   776                           ;LibLCDXC8.h: 102: HabilitaLCD();
   777   00101A  ECB0  F008         	call	_HabilitaLCD	;wreg free
   778                           
   779                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   780   00101E  0E04               	movlw	4
   781   001020  ECA0  F007         	call	_RetardoLCD
   782   001024  0012               	return		;funcret
   783   001026                     __end_of_InicializaLCD:
   784                           	callstack 0
   785                           
   786 ;; *************** function _BorraLCD *****************
   787 ;; Defined at:
   788 ;;		line 112 in file "LibLCDXC8.h"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   802 ;;      Params:         0       0       0       0       0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 2
   809 ;; This function calls:
   810 ;;		_EnviaDato
   811 ;;		_HabilitaLCD
   812 ;;		_RetardoLCD
   813 ;; This function is called by:
   814 ;;		_InicializaLCD
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text3
   820   00114C                     __ptext3:
   821                           	callstack 0
   822   00114C                     _BorraLCD:
   823                           	callstack 27
   824                           
   825                           ;LibLCDXC8.h: 114: LATE0=0;
   826                           
   827                           ;incstack = 0
   828   00114C  908D               	bcf	3981,0,c	;volatile
   829                           
   830                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
   831   00114E  0E01               	movlw	1
   832   001150  ECB7  F008         	call	_EnviaDato
   833                           
   834                           ;LibLCDXC8.h: 116: HabilitaLCD();
   835   001154  ECB0  F008         	call	_HabilitaLCD	;wreg free
   836                           
   837                           ;LibLCDXC8.h: 117: RetardoLCD(2);
   838   001158  0E02               	movlw	2
   839   00115A  ECA0  F007         	call	_RetardoLCD
   840   00115E  0012               	return		;funcret
   841   001160                     __end_of_BorraLCD:
   842                           	callstack 0
   843                           
   844 ;; *************** function _Imprimir *****************
   845 ;; Defined at:
   846 ;;		line 45 in file "Laboratorio4.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  Valor           1    wreg     unsigned char 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  Valor           1   26[COMRAM] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       0       0       0       0       0       0       0       0
   861 ;;      Locals:         1       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         1       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 5
   867 ;; This function calls:
   868 ;;		_Borrar
   869 ;;		_DireccionaLCD
   870 ;;		_EscribeLCD_c
   871 ;;		_EscribeLCD_n8
   872 ;;		___ftdiv
   873 ;;		___fttol
   874 ;;		___lwtoft
   875 ;;		___wmul
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text4
   882   00081E                     __ptext4:
   883                           	callstack 0
   884   00081E                     _Imprimir:
   885                           	callstack 25
   886                           
   887                           ;incstack = 0
   888                           ;Imprimir@Valor stored from wreg
   889   00081E  6E1B               	movwf	Imprimir@Valor^0,c
   890                           
   891                           ;Laboratorio4.c: 46: if(Valor=='C'){
   892   000820  0E43               	movlw	67
   893   000822  181B               	xorwf	Imprimir@Valor^0,w,c
   894   000824  A4D8               	btfss	status,2,c
   895   000826  D015               	goto	l1817
   896                           
   897                           ;Laboratorio4.c: 47: op = ' ';
   898   000828  0E20               	movlw	32
   899   00082A  6E2C               	movwf	_op^0,c
   900                           
   901                           ;Laboratorio4.c: 48: n1c = ' ';
   902   00082C  0E20               	movlw	32
   903   00082E  6E2B               	movwf	_n1c^0,c
   904                           
   905                           ;Laboratorio4.c: 49: n2c = ' ';
   906   000830  0E20               	movlw	32
   907   000832  6E2A               	movwf	_n2c^0,c
   908                           
   909                           ;Laboratorio4.c: 50: n1 = 0;
   910   000834  0E00               	movlw	0
   911   000836  6E26               	movwf	(_n1+1)^0,c
   912   000838  0E00               	movlw	0
   913   00083A  6E25               	movwf	_n1^0,c
   914                           
   915                           ;Laboratorio4.c: 51: n2 = 0;
   916   00083C  0E00               	movlw	0
   917   00083E  6E24               	movwf	(_n2+1)^0,c
   918   000840  0E00               	movlw	0
   919   000842  6E23               	movwf	_n2^0,c
   920                           
   921                           ;Laboratorio4.c: 52: i = 0;
   922   000844  0E00               	movlw	0
   923   000846  6E22               	movwf	(_i+1)^0,c
   924   000848  0E00               	movlw	0
   925   00084A  6E21               	movwf	_i^0,c
   926                           
   927                           ;Laboratorio4.c: 53: Borrar();
   928   00084C  EC85  F008         	call	_Borrar	;wreg free
   929                           
   930                           ;Laboratorio4.c: 54: }else{
   931   000850  0012               	return	
   932   000852                     l1817:
   933                           
   934                           ;Laboratorio4.c: 55: if(n1c==' '|n2c==' '|op==' '){
   935   000852  0E20               	movlw	32
   936   000854  182B               	xorwf	_n1c^0,w,c
   937   000856  B4D8               	btfsc	status,2,c
   938   000858  D008               	goto	u1080
   939   00085A  0E20               	movlw	32
   940   00085C  182A               	xorwf	_n2c^0,w,c
   941   00085E  B4D8               	btfsc	status,2,c
   942   000860  D004               	goto	u1080
   943   000862  0E20               	movlw	32
   944   000864  182C               	xorwf	_op^0,w,c
   945   000866  A4D8               	btfss	status,2,c
   946   000868  D047               	goto	l1855
   947   00086A                     u1080:
   948                           
   949                           ;Laboratorio4.c: 56: if(op==' ' & (Valor=='+'|Valor=='-'|Valor=='/'|Valor=='x')){
   950   00086A  0E20               	movlw	32
   951   00086C  182C               	xorwf	_op^0,w,c
   952   00086E  A4D8               	btfss	status,2,c
   953   000870  D019               	goto	l1837
   954   000872  0E2B               	movlw	43
   955   000874  181B               	xorwf	Imprimir@Valor^0,w,c
   956   000876  B4D8               	btfsc	status,2,c
   957   000878  D00C               	goto	u1130
   958   00087A  0E2D               	movlw	45
   959   00087C  181B               	xorwf	Imprimir@Valor^0,w,c
   960   00087E  B4D8               	btfsc	status,2,c
   961   000880  D008               	goto	u1130
   962   000882  0E2F               	movlw	47
   963   000884  181B               	xorwf	Imprimir@Valor^0,w,c
   964   000886  B4D8               	btfsc	status,2,c
   965   000888  D004               	goto	u1130
   966   00088A  0E78               	movlw	120
   967   00088C  181B               	xorwf	Imprimir@Valor^0,w,c
   968   00088E  A4D8               	btfss	status,2,c
   969   000890  D009               	goto	l1837
   970   000892                     u1130:
   971                           
   972                           ;Laboratorio4.c: 57: DireccionaLCD(0x81);
   973   000892  0E81               	movlw	129
   974   000894  EC9B  F008         	call	_DireccionaLCD
   975                           
   976                           ;Laboratorio4.c: 58: EscribeLCD_c(Valor);
   977   000898  501B               	movf	Imprimir@Valor^0,w,c
   978   00089A  EC90  F008         	call	_EscribeLCD_c
   979                           
   980                           ;Laboratorio4.c: 59: op = Valor;
   981   00089E  C01B  F02C         	movff	Imprimir@Valor,_op
   982                           
   983                           ;Laboratorio4.c: 60: }else{
   984   0008A2  0012               	return	
   985   0008A4                     l1837:
   986                           
   987                           ;Laboratorio4.c: 61: if(n1c==' '){
   988   0008A4  0E20               	movlw	32
   989   0008A6  182B               	xorwf	_n1c^0,w,c
   990   0008A8  A4D8               	btfss	status,2,c
   991   0008AA  D00F               	goto	l1845
   992                           
   993                           ;Laboratorio4.c: 62: DireccionaLCD(0x80);
   994   0008AC  0E80               	movlw	128
   995   0008AE  EC9B  F008         	call	_DireccionaLCD
   996                           
   997                           ;Laboratorio4.c: 63: EscribeLCD_c(Valor);
   998   0008B2  501B               	movf	Imprimir@Valor^0,w,c
   999   0008B4  EC90  F008         	call	_EscribeLCD_c
  1000                           
  1001                           ;Laboratorio4.c: 64: n1c=Valor;
  1002   0008B8  C01B  F02B         	movff	Imprimir@Valor,_n1c
  1003                           
  1004                           ;Laboratorio4.c: 65: n1 = Valor-'0';
  1005   0008BC  0ED0               	movlw	208
  1006   0008BE  241B               	addwf	Imprimir@Valor^0,w,c
  1007   0008C0  6E25               	movwf	_n1^0,c
  1008   0008C2  6A26               	clrf	(_n1+1)^0,c
  1009   0008C4  0EFF               	movlw	255
  1010   0008C6  2226               	addwfc	(_n1+1)^0,f,c
  1011                           
  1012                           ;Laboratorio4.c: 66: }else{
  1013   0008C8  0012               	return	
  1014   0008CA                     l1845:
  1015                           
  1016                           ;Laboratorio4.c: 67: if(n2c==' ' & op!=' '){
  1017   0008CA  0E20               	movlw	32
  1018   0008CC  182A               	xorwf	_n2c^0,w,c
  1019   0008CE  A4D8               	btfss	status,2,c
  1020   0008D0  0012               	return	
  1021   0008D2  0E20               	movlw	32
  1022   0008D4  182C               	xorwf	_op^0,w,c
  1023   0008D6  B4D8               	btfsc	status,2,c
  1024   0008D8  0012               	return	
  1025                           
  1026                           ;Laboratorio4.c: 68: DireccionaLCD(0x82);
  1027   0008DA  0E82               	movlw	130
  1028   0008DC  EC9B  F008         	call	_DireccionaLCD
  1029                           
  1030                           ;Laboratorio4.c: 69: EscribeLCD_c(Valor);
  1031   0008E0  501B               	movf	Imprimir@Valor^0,w,c
  1032   0008E2  EC90  F008         	call	_EscribeLCD_c
  1033                           
  1034                           ;Laboratorio4.c: 70: n2c=Valor;
  1035   0008E6  C01B  F02A         	movff	Imprimir@Valor,_n2c
  1036                           
  1037                           ;Laboratorio4.c: 71: n2 = Valor-'0';
  1038   0008EA  0ED0               	movlw	208
  1039   0008EC  241B               	addwf	Imprimir@Valor^0,w,c
  1040   0008EE  6E23               	movwf	_n2^0,c
  1041   0008F0  6A24               	clrf	(_n2+1)^0,c
  1042   0008F2  0EFF               	movlw	255
  1043   0008F4  2224               	addwfc	(_n2+1)^0,f,c
  1044   0008F6  0012               	return	
  1045   0008F8                     l1855:
  1046                           
  1047                           ;Laboratorio4.c: 77: if(Valor=='='){
  1048   0008F8  0E3D               	movlw	61
  1049   0008FA  181B               	xorwf	Imprimir@Valor^0,w,c
  1050   0008FC  A4D8               	btfss	status,2,c
  1051   0008FE  0012               	return	
  1052                           
  1053                           ;Laboratorio4.c: 78: if(n1c!=' ' & n2c!=' ' & op!=' '){
  1054   000900  0E20               	movlw	32
  1055   000902  182B               	xorwf	_n1c^0,w,c
  1056   000904  B4D8               	btfsc	status,2,c
  1057   000906  0012               	return	
  1058   000908  0E20               	movlw	32
  1059   00090A  182A               	xorwf	_n2c^0,w,c
  1060   00090C  B4D8               	btfsc	status,2,c
  1061   00090E  0012               	return	
  1062   000910  0E20               	movlw	32
  1063   000912  182C               	xorwf	_op^0,w,c
  1064   000914  B4D8               	btfsc	status,2,c
  1065   000916  0012               	return	
  1066                           
  1067                           ;Laboratorio4.c: 79: DireccionaLCD(0x83);
  1068   000918  0E83               	movlw	131
  1069   00091A  EC9B  F008         	call	_DireccionaLCD
  1070                           
  1071                           ;Laboratorio4.c: 80: EscribeLCD_c('=');
  1072   00091E  0E3D               	movlw	61
  1073   000920  EC90  F008         	call	_EscribeLCD_c
  1074                           
  1075                           ;Laboratorio4.c: 81: switch(op){
  1076   000924  D062               	goto	l1893
  1077   000926                     l1865:
  1078   000926  5023               	movf	_n2^0,w,c
  1079   000928  2425               	addwf	_n1^0,w,c
  1080   00092A  6E27               	movwf	_r^0,c
  1081   00092C  5024               	movf	(_n2+1)^0,w,c
  1082   00092E  2026               	addwfc	(_n1+1)^0,w,c
  1083   000930  D005               	goto	L1
  1084   000932                     l1867:
  1085   000932  5023               	movf	_n2^0,w,c
  1086   000934  5C25               	subwf	_n1^0,w,c
  1087   000936  6E27               	movwf	_r^0,c
  1088   000938  5024               	movf	(_n2+1)^0,w,c
  1089   00093A  5826               	subwfb	(_n1+1)^0,w,c
  1090   00093C                     L1:
  1091   00093C  6E28               	movwf	(_r+1)^0,c
  1092                           
  1093                           ;Laboratorio4.c: 85: break;
  1094   00093E  D063               	goto	l1895
  1095   000940                     l1869:
  1096   000940  C025  F001         	movff	_n1,___wmul@multiplier
  1097   000944  C026  F002         	movff	_n1+1,___wmul@multiplier+1
  1098   000948  C023  F003         	movff	_n2,___wmul@multiplicand
  1099   00094C  C024  F004         	movff	_n2+1,___wmul@multiplicand+1
  1100   000950  EC60  F008         	call	___wmul	;wreg free
  1101   000954  C001  F027         	movff	?___wmul,_r
  1102   000958  C002  F028         	movff	?___wmul+1,_r+1
  1103                           
  1104                           ;Laboratorio4.c: 87: break;
  1105   00095C  D054               	goto	l1895
  1106   00095E                     l1871:
  1107                           
  1108                           ;Laboratorio4.c: 89: if(n2!=0){
  1109   00095E  5023               	movf	_n2^0,w,c
  1110   000960  1024               	iorwf	(_n2+1)^0,w,c
  1111   000962  B4D8               	btfsc	status,2,c
  1112   000964  D025               	goto	l1877
  1113                           
  1114                           ;Laboratorio4.c: 90: if(n1!=0){
  1115   000966  5025               	movf	_n1^0,w,c
  1116   000968  1026               	iorwf	(_n1+1)^0,w,c
  1117   00096A  B4D8               	btfsc	status,2,c
  1118   00096C  D04C               	goto	l1895
  1119                           
  1120                           ;Laboratorio4.c: 91: d = (float) n1/ (float) n2;
  1121   00096E  C025  F009         	movff	_n1,___lwtoft@c
  1122   000972  C026  F00A         	movff	_n1+1,___lwtoft@c+1
  1123   000976  EC73  F008         	call	___lwtoft	;wreg free
  1124   00097A  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
  1125   00097E  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
  1126   000982  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
  1127   000986  C023  F009         	movff	_n2,___lwtoft@c
  1128   00098A  C024  F00A         	movff	_n2+1,___lwtoft@c+1
  1129   00098E  EC73  F008         	call	___lwtoft	;wreg free
  1130   000992  C009  F00F         	movff	?___lwtoft,___ftdiv@f2
  1131   000996  C00A  F010         	movff	?___lwtoft+1,___ftdiv@f2+1
  1132   00099A  C00B  F011         	movff	?___lwtoft+2,___ftdiv@f2+2
  1133   00099E  EC7A  F005         	call	___ftdiv	;wreg free
  1134   0009A2  C00C  F01E         	movff	?___ftdiv,_d
  1135   0009A6  C00D  F01F         	movff	?___ftdiv+1,_d+1
  1136   0009AA  C00E  F020         	movff	?___ftdiv+2,_d+2
  1137   0009AE  D02B               	goto	l1895
  1138   0009B0                     l1877:
  1139                           
  1140                           ;Laboratorio4.c: 94: if(n1 != 0 & n2 == 0) r = 1000;
  1141   0009B0  5025               	movf	_n1^0,w,c
  1142   0009B2  1026               	iorwf	(_n1+1)^0,w,c
  1143   0009B4  B4D8               	btfsc	status,2,c
  1144   0009B6  D008               	goto	l1883
  1145   0009B8  5023               	movf	_n2^0,w,c
  1146   0009BA  1024               	iorwf	(_n2+1)^0,w,c
  1147   0009BC  A4D8               	btfss	status,2,c
  1148   0009BE  D004               	goto	l1883
  1149   0009C0  0E03               	movlw	3
  1150   0009C2  6E28               	movwf	(_r+1)^0,c
  1151   0009C4  0EE8               	movlw	232
  1152   0009C6  D00F               	goto	L3
  1153   0009C8                     l1883:
  1154                           
  1155                           ;Laboratorio4.c: 95: else if(n1 == 0 & n2 == 0) r = 1001;
  1156   0009C8  5025               	movf	_n1^0,w,c
  1157   0009CA  1026               	iorwf	(_n1+1)^0,w,c
  1158   0009CC  A4D8               	btfss	status,2,c
  1159   0009CE  D01B               	goto	l1895
  1160   0009D0  5023               	movf	_n2^0,w,c
  1161   0009D2  1024               	iorwf	(_n2+1)^0,w,c
  1162   0009D4  A4D8               	btfss	status,2,c
  1163   0009D6  D017               	goto	l1895
  1164   0009D8  0E03               	movlw	3
  1165   0009DA  6E28               	movwf	(_r+1)^0,c
  1166   0009DC  0EE9               	movlw	233
  1167   0009DE  D003               	goto	L3
  1168   0009E0                     l1889:
  1169                           
  1170                           ;Laboratorio4.c: 99: r = 0;
  1171   0009E0  0E00               	movlw	0
  1172   0009E2  6E28               	movwf	(_r+1)^0,c
  1173   0009E4  0E00               	movlw	0
  1174   0009E6                     L3:
  1175   0009E6  6E27               	movwf	_r^0,c
  1176                           
  1177                           ;Laboratorio4.c: 100: break;
  1178   0009E8  D00E               	goto	l1895
  1179   0009EA                     l1893:
  1180   0009EA  502C               	movf	_op^0,w,c
  1181                           
  1182                           ; Switch size 1, requested type "simple"
  1183                           ; Number of cases is 4, Range of values is 43 to 120
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte           13     7 (average)
  1187                           ;	Chosen strategy is simple_byte
  1188   0009EC  0A2B               	xorlw	43	; case 43
  1189   0009EE  B4D8               	btfsc	status,2,c
  1190   0009F0  D79A               	goto	l1865
  1191   0009F2  0A06               	xorlw	6	; case 45
  1192   0009F4  B4D8               	btfsc	status,2,c
  1193   0009F6  D79D               	goto	l1867
  1194   0009F8  0A02               	xorlw	2	; case 47
  1195   0009FA  B4D8               	btfsc	status,2,c
  1196   0009FC  D7B0               	goto	l1871
  1197   0009FE  0A57               	xorlw	87	; case 120
  1198   000A00  B4D8               	btfsc	status,2,c
  1199   000A02  D79E               	goto	l1869
  1200   000A04  D7ED               	goto	l1889
  1201   000A06                     l1895:
  1202                           
  1203                           ;Laboratorio4.c: 102: DireccionaLCD(0x84);
  1204   000A06  0E84               	movlw	132
  1205   000A08  EC9B  F008         	call	_DireccionaLCD
  1206                           
  1207                           ;Laboratorio4.c: 103: if(r>0x51 & r!=1000 & r !=1001){
  1208   000A0C  5028               	movf	(_r+1)^0,w,c
  1209   000A0E  E104               	bnz	u1270
  1210   000A10  0E52               	movlw	82
  1211   000A12  5C27               	subwf	_r^0,w,c
  1212   000A14  A0D8               	btfss	status,0,c
  1213   000A16  D01D               	goto	l1909
  1214   000A18                     u1270:
  1215   000A18  0EE8               	movlw	232
  1216   000A1A  1827               	xorwf	_r^0,w,c
  1217   000A1C  E104               	bnz	u1280
  1218   000A1E  0E03               	movlw	3
  1219   000A20  1828               	xorwf	(_r+1)^0,w,c
  1220   000A22  B4D8               	btfsc	status,2,c
  1221   000A24  D016               	goto	l1909
  1222   000A26                     u1280:
  1223   000A26  0EE9               	movlw	233
  1224   000A28  1827               	xorwf	_r^0,w,c
  1225   000A2A  E104               	bnz	u1290
  1226   000A2C  0E03               	movlw	3
  1227   000A2E  1828               	xorwf	(_r+1)^0,w,c
  1228   000A30  B4D8               	btfsc	status,2,c
  1229   000A32  D00F               	goto	l1909
  1230   000A34                     u1290:
  1231                           
  1232                           ;Laboratorio4.c: 104: EscribeLCD_c('-');
  1233   000A34  0E2D               	movlw	45
  1234   000A36  EC90  F008         	call	_EscribeLCD_c
  1235                           
  1236                           ;Laboratorio4.c: 105: DireccionaLCD(0x85);
  1237   000A3A  0E85               	movlw	133
  1238   000A3C  EC9B  F008         	call	_DireccionaLCD
  1239                           
  1240                           ;Laboratorio4.c: 106: r = ~r+1;
  1241   000A40  6C27               	negf	_r^0,c
  1242   000A42  1E28               	comf	(_r+1)^0,f,c
  1243   000A44  B0D8               	btfsc	status,0,c
  1244   000A46  2A28               	incf	(_r+1)^0,f,c
  1245                           
  1246                           ;Laboratorio4.c: 107: EscribeLCD_c(r+'0');
  1247   000A48  5027               	movf	_r^0,w,c
  1248   000A4A  0F30               	addlw	48
  1249   000A4C  EC90  F008         	call	_EscribeLCD_c
  1250                           
  1251                           ;Laboratorio4.c: 108: }else{
  1252   000A50  0012               	return	
  1253   000A52                     l1909:
  1254                           
  1255                           ;Laboratorio4.c: 109: if(r>0xA & r!=1000 & r !=1001){
  1256   000A52  5028               	movf	(_r+1)^0,w,c
  1257   000A54  E104               	bnz	u1300
  1258   000A56  0E0B               	movlw	11
  1259   000A58  5C27               	subwf	_r^0,w,c
  1260   000A5A  A0D8               	btfss	status,0,c
  1261   000A5C  D02C               	goto	l1919
  1262   000A5E                     u1300:
  1263   000A5E  0EE8               	movlw	232
  1264   000A60  1827               	xorwf	_r^0,w,c
  1265   000A62  E104               	bnz	u1310
  1266   000A64  0E03               	movlw	3
  1267   000A66  1828               	xorwf	(_r+1)^0,w,c
  1268   000A68  B4D8               	btfsc	status,2,c
  1269   000A6A  D025               	goto	l1919
  1270   000A6C                     u1310:
  1271   000A6C  0EE9               	movlw	233
  1272   000A6E  1827               	xorwf	_r^0,w,c
  1273   000A70  E104               	bnz	u1320
  1274   000A72  0E03               	movlw	3
  1275   000A74  1828               	xorwf	(_r+1)^0,w,c
  1276   000A76  B4D8               	btfsc	status,2,c
  1277   000A78  D01E               	goto	l1919
  1278   000A7A                     u1320:
  1279   000A7A                     l1915:
  1280                           
  1281                           ;Laboratorio4.c: 111: i = i+1;
  1282   000A7A  0E01               	movlw	1
  1283   000A7C  2421               	addwf	_i^0,w,c
  1284   000A7E  6E21               	movwf	_i^0,c
  1285   000A80  0E00               	movlw	0
  1286   000A82  2022               	addwfc	(_i+1)^0,w,c
  1287   000A84  6E22               	movwf	(_i+1)^0,c
  1288                           
  1289                           ;Laboratorio4.c: 112: r = r - 10;
  1290   000A86  0EF6               	movlw	246
  1291   000A88  2427               	addwf	_r^0,w,c
  1292   000A8A  6E27               	movwf	_r^0,c
  1293   000A8C  0EFF               	movlw	255
  1294   000A8E  2028               	addwfc	(_r+1)^0,w,c
  1295   000A90  6E28               	movwf	(_r+1)^0,c
  1296                           
  1297                           ;Laboratorio4.c: 113: }while(r>0xA);
  1298   000A92  5028               	movf	(_r+1)^0,w,c
  1299   000A94  E1F2               	bnz	l1915
  1300   000A96  0E0B               	movlw	11
  1301   000A98  5C27               	subwf	_r^0,w,c
  1302   000A9A  B0D8               	btfsc	status,0,c
  1303   000A9C  D7EE               	goto	u1320
  1304                           
  1305                           ;Laboratorio4.c: 114: EscribeLCD_c(i+'0');
  1306   000A9E  5021               	movf	_i^0,w,c
  1307   000AA0  0F30               	addlw	48
  1308   000AA2  EC90  F008         	call	_EscribeLCD_c
  1309                           
  1310                           ;Laboratorio4.c: 115: DireccionaLCD(0x85);
  1311   000AA6  0E85               	movlw	133
  1312   000AA8  EC9B  F008         	call	_DireccionaLCD
  1313                           
  1314                           ;Laboratorio4.c: 116: EscribeLCD_c(r+'0');
  1315   000AAC  5027               	movf	_r^0,w,c
  1316   000AAE  0F30               	addlw	48
  1317   000AB0  EC90  F008         	call	_EscribeLCD_c
  1318                           
  1319                           ;Laboratorio4.c: 117: }else{
  1320   000AB4  0012               	return	
  1321   000AB6                     l1919:
  1322                           
  1323                           ;Laboratorio4.c: 118: if(r==1000){
  1324   000AB6  0EE8               	movlw	232
  1325   000AB8  1827               	xorwf	_r^0,w,c
  1326   000ABA  E10E               	bnz	l1923
  1327   000ABC  0E03               	movlw	3
  1328   000ABE  1828               	xorwf	(_r+1)^0,w,c
  1329   000AC0  A4D8               	btfss	status,2,c
  1330   000AC2  D00A               	goto	l1923
  1331                           
  1332                           ;Laboratorio4.c: 119: EscribeLCD_c('I');
  1333   000AC4  0E49               	movlw	73
  1334   000AC6  EC90  F008         	call	_EscribeLCD_c
  1335                           
  1336                           ;Laboratorio4.c: 120: EscribeLCD_c('N');
  1337   000ACA  0E4E               	movlw	78
  1338   000ACC  EC90  F008         	call	_EscribeLCD_c
  1339                           
  1340                           ;Laboratorio4.c: 121: EscribeLCD_c('F');
  1341   000AD0  0E46               	movlw	70
  1342   000AD2  EC90  F008         	call	_EscribeLCD_c
  1343                           
  1344                           ;Laboratorio4.c: 122: }else{
  1345   000AD6  0012               	return	
  1346   000AD8                     l1923:
  1347                           
  1348                           ;Laboratorio4.c: 123: if(r=1001){
  1349   000AD8  0E03               	movlw	3
  1350   000ADA  6E28               	movwf	(_r+1)^0,c
  1351   000ADC  0EE9               	movlw	233
  1352   000ADE  6E27               	movwf	_r^0,c
  1353                           
  1354                           ;Laboratorio4.c: 124: EscribeLCD_c('I');
  1355   000AE0  0E49               	movlw	73
  1356   000AE2  EC90  F008         	call	_EscribeLCD_c
  1357                           
  1358                           ;Laboratorio4.c: 125: EscribeLCD_c('N');
  1359   000AE6  0E4E               	movlw	78
  1360   000AE8  EC90  F008         	call	_EscribeLCD_c
  1361                           
  1362                           ;Laboratorio4.c: 126: EscribeLCD_c('D');
  1363   000AEC  0E44               	movlw	68
  1364   000AEE  EC90  F008         	call	_EscribeLCD_c
  1365                           
  1366                           ;Laboratorio4.c: 127: }else{
  1367   000AF2  0012               	return		;funcret
  1368   000AF4                     __end_of_Imprimir:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function ___wmul *****************
  1372 ;; Defined at:
  1373 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  multiplier      2    0[COMRAM] unsigned int 
  1376 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  product         2    4[COMRAM] unsigned int 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    0[COMRAM] unsigned int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, prodl, prodh
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1388 ;;      Params:         4       0       0       0       0       0       0       0       0
  1389 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1391 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_Imprimir
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text5
  1402   0010C0                     __ptext5:
  1403                           	callstack 0
  1404   0010C0                     ___wmul:
  1405                           	callstack 29
  1406                           
  1407                           ;incstack = 0
  1408   0010C0  5001               	movf	___wmul@multiplier^0,w,c
  1409   0010C2  0203               	mulwf	___wmul@multiplicand^0,c
  1410   0010C4  CFF3 F005          	movff	prodl,___wmul@product
  1411   0010C8  CFF4 F006          	movff	prodh,___wmul@product+1
  1412   0010CC  5001               	movf	___wmul@multiplier^0,w,c
  1413   0010CE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1414   0010D0  50F3               	movf	243,w,c
  1415   0010D2  2606               	addwf	(___wmul@product+1)^0,f,c
  1416   0010D4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1417   0010D6  0203               	mulwf	___wmul@multiplicand^0,c
  1418   0010D8  50F3               	movf	243,w,c
  1419   0010DA  2606               	addwf	(___wmul@product+1)^0,f,c
  1420   0010DC  C005  F001         	movff	___wmul@product,?___wmul
  1421   0010E0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1422   0010E4  0012               	return		;funcret
  1423   0010E6                     __end_of___wmul:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function ___lwtoft *****************
  1427 ;; Defined at:
  1428 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwtoft.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  c               2    8[COMRAM] unsigned int 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  3    8[COMRAM] float 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         3       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 1
  1449 ;; This function calls:
  1450 ;;		___ftpack
  1451 ;; This function is called by:
  1452 ;;		_Imprimir
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text6
  1457   0010E6                     __ptext6:
  1458                           	callstack 0
  1459   0010E6                     ___lwtoft:
  1460                           	callstack 28
  1461                           
  1462                           ;incstack = 0
  1463   0010E6  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1464   0010EA  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1465   0010EE  6A03               	clrf	(___ftpack@arg+2)^0,c
  1466   0010F0  0E8E               	movlw	142
  1467   0010F2  6E04               	movwf	___ftpack@exp^0,c
  1468   0010F4  0E00               	movlw	0
  1469   0010F6  6E05               	movwf	___ftpack@sign^0,c
  1470   0010F8  ECC9  F006         	call	___ftpack	;wreg free
  1471   0010FC  C001  F009         	movff	?___ftpack,?___lwtoft
  1472   001100  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1473   001104  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1474   001108  0012               	return		;funcret
  1475   00110A                     __end_of___lwtoft:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function ___fttol *****************
  1479 ;; Defined at:
  1480 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  f1              3    0[COMRAM] float 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  lval            4   10[COMRAM] unsigned long 
  1485 ;;  exp1            1   14[COMRAM] unsigned char 
  1486 ;;  sign1           1    9[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  4    0[COMRAM] long 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         4       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1499 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:       15 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_Imprimir
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text7
  1510   000CC0                     __ptext7:
  1511                           	callstack 0
  1512   000CC0                     ___fttol:
  1513                           	callstack 29
  1514                           
  1515                           ;incstack = 0
  1516   000CC0  C003  F005         	movff	___fttol@f1+2,??___fttol
  1517   000CC4  6A06               	clrf	(??___fttol+1)^0,c
  1518   000CC6  6A07               	clrf	(??___fttol+2)^0,c
  1519   000CC8  3402               	rlcf	(___fttol@f1+1)^0,w,c
  1520   000CCA  3605               	rlcf	??___fttol^0,f,c
  1521   000CCC  E301               	bnc	u971
  1522   000CCE  8006               	bsf	(??___fttol+1)^0,0,c
  1523   000CD0                     u971:
  1524   000CD0  5005               	movf	??___fttol^0,w,c
  1525   000CD2  6E0F               	movwf	___fttol@exp1^0,c
  1526   000CD4  500F               	movf	___fttol@exp1^0,w,c
  1527   000CD6  A4D8               	btfss	status,2,c
  1528   000CD8  D009               	goto	l1767
  1529   000CDA                     u980:
  1530   000CDA  0E00               	movlw	0
  1531   000CDC  6E01               	movwf	?___fttol^0,c
  1532   000CDE  0E00               	movlw	0
  1533   000CE0  6E02               	movwf	(?___fttol+1)^0,c
  1534   000CE2  0E00               	movlw	0
  1535   000CE4  6E03               	movwf	(?___fttol+2)^0,c
  1536   000CE6  0E00               	movlw	0
  1537   000CE8  6E04               	movwf	(?___fttol+3)^0,c
  1538   000CEA  0012               	return	
  1539   000CEC                     l1767:
  1540   000CEC  0E17               	movlw	23
  1541   000CEE  6E05               	movwf	??___fttol^0,c
  1542   000CF0  C001  F006         	movff	___fttol@f1,??___fttol+1
  1543   000CF4  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1544   000CF8  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1545   000CFC  2805               	incf	??___fttol^0,w,c
  1546   000CFE  6E09               	movwf	(??___fttol+4)^0,c
  1547   000D00  D004               	goto	u990
  1548   000D02                     u995:
  1549   000D02  90D8               	bcf	status,0,c
  1550   000D04  3208               	rrcf	(??___fttol+3)^0,f,c
  1551   000D06  3207               	rrcf	(??___fttol+2)^0,f,c
  1552   000D08  3206               	rrcf	(??___fttol+1)^0,f,c
  1553   000D0A                     u990:
  1554   000D0A  2E09               	decfsz	(??___fttol+4)^0,f,c
  1555   000D0C  D7FA               	goto	u995
  1556   000D0E  5006               	movf	(??___fttol+1)^0,w,c
  1557   000D10  6E0A               	movwf	___fttol@sign1^0,c
  1558   000D12  8E02               	bsf	(___fttol@f1+1)^0,7,c
  1559   000D14  0EFF               	movlw	255
  1560   000D16  1601               	andwf	___fttol@f1^0,f,c
  1561   000D18  0EFF               	movlw	255
  1562   000D1A  1602               	andwf	(___fttol@f1+1)^0,f,c
  1563   000D1C  0E00               	movlw	0
  1564   000D1E  1603               	andwf	(___fttol@f1+2)^0,f,c
  1565   000D20  5001               	movf	___fttol@f1^0,w,c
  1566   000D22  6E0B               	movwf	___fttol@lval^0,c
  1567   000D24  5002               	movf	(___fttol@f1+1)^0,w,c
  1568   000D26  6E0C               	movwf	(___fttol@lval+1)^0,c
  1569   000D28  5003               	movf	(___fttol@f1+2)^0,w,c
  1570   000D2A  6E0D               	movwf	(___fttol@lval+2)^0,c
  1571   000D2C  6A0E               	clrf	(___fttol@lval+3)^0,c
  1572   000D2E  0E8E               	movlw	142
  1573   000D30  5E0F               	subwf	___fttol@exp1^0,f,c
  1574   000D32  AE0F               	btfss	___fttol@exp1^0,7,c
  1575   000D34  D00D               	goto	l1789
  1576   000D36  500F               	movf	___fttol@exp1^0,w,c
  1577   000D38  0A80               	xorlw	128
  1578   000D3A  0F8F               	addlw	143
  1579   000D3C  A0D8               	btfss	status,0,c
  1580   000D3E  D7CD               	goto	u980
  1581   000D40                     l1785:
  1582   000D40  90D8               	bcf	status,0,c
  1583   000D42  320E               	rrcf	(___fttol@lval+3)^0,f,c
  1584   000D44  320D               	rrcf	(___fttol@lval+2)^0,f,c
  1585   000D46  320C               	rrcf	(___fttol@lval+1)^0,f,c
  1586   000D48  320B               	rrcf	___fttol@lval^0,f,c
  1587   000D4A  3E0F               	incfsz	___fttol@exp1^0,f,c
  1588   000D4C  D7F9               	goto	l1785
  1589   000D4E  D00D               	goto	u1030
  1590   000D50                     l1789:
  1591   000D50  0E17               	movlw	23
  1592   000D52  640F               	cpfsgt	___fttol@exp1^0,c
  1593   000D54  D007               	goto	l1797
  1594   000D56  D7C1               	goto	u980
  1595   000D58                     l1795:
  1596   000D58  90D8               	bcf	status,0,c
  1597   000D5A  360B               	rlcf	___fttol@lval^0,f,c
  1598   000D5C  360C               	rlcf	(___fttol@lval+1)^0,f,c
  1599   000D5E  360D               	rlcf	(___fttol@lval+2)^0,f,c
  1600   000D60  360E               	rlcf	(___fttol@lval+3)^0,f,c
  1601   000D62  060F               	decf	___fttol@exp1^0,f,c
  1602   000D64                     l1797:
  1603   000D64  500F               	movf	___fttol@exp1^0,w,c
  1604   000D66  A4D8               	btfss	status,2,c
  1605   000D68  D7F7               	goto	l1795
  1606   000D6A                     u1030:
  1607   000D6A  500A               	movf	___fttol@sign1^0,w,c
  1608   000D6C  B4D8               	btfsc	status,2,c
  1609   000D6E  D008               	goto	l1803
  1610   000D70  1E0E               	comf	(___fttol@lval+3)^0,f,c
  1611   000D72  1E0D               	comf	(___fttol@lval+2)^0,f,c
  1612   000D74  1E0C               	comf	(___fttol@lval+1)^0,f,c
  1613   000D76  6C0B               	negf	___fttol@lval^0,c
  1614   000D78  0E00               	movlw	0
  1615   000D7A  220C               	addwfc	(___fttol@lval+1)^0,f,c
  1616   000D7C  220D               	addwfc	(___fttol@lval+2)^0,f,c
  1617   000D7E  220E               	addwfc	(___fttol@lval+3)^0,f,c
  1618   000D80                     l1803:
  1619   000D80  C00B  F001         	movff	___fttol@lval,?___fttol
  1620   000D84  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1621   000D88  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1622   000D8C  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1623   000D90  0012               	return		;funcret
  1624   000D92                     __end_of___fttol:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function ___ftdiv *****************
  1628 ;; Defined at:
  1629 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdiv.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  f1              3   11[COMRAM] float 
  1632 ;;  f2              3   14[COMRAM] float 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  f3              3   21[COMRAM] float 
  1635 ;;  sign            1   25[COMRAM] unsigned char 
  1636 ;;  exp             1   24[COMRAM] unsigned char 
  1637 ;;  cntr            1   20[COMRAM] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  3   11[COMRAM] float 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1647 ;;      Params:         6       0       0       0       0       0       0       0       0
  1648 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1649 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1650 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1651 ;;Total ram usage:       15 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 1
  1654 ;; This function calls:
  1655 ;;		___ftpack
  1656 ;; This function is called by:
  1657 ;;		_Imprimir
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text8
  1662   000AF4                     __ptext8:
  1663                           	callstack 0
  1664   000AF4                     ___ftdiv:
  1665                           	callstack 28
  1666                           
  1667                           ;incstack = 0
  1668   000AF4  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  1669   000AF8  6A13               	clrf	(??___ftdiv+1)^0,c
  1670   000AFA  6A14               	clrf	(??___ftdiv+2)^0,c
  1671   000AFC  340D               	rlcf	(___ftdiv@f1+1)^0,w,c
  1672   000AFE  3612               	rlcf	??___ftdiv^0,f,c
  1673   000B00  E301               	bnc	u921
  1674   000B02  8013               	bsf	(??___ftdiv+1)^0,0,c
  1675   000B04                     u921:
  1676   000B04  5012               	movf	??___ftdiv^0,w,c
  1677   000B06  6E19               	movwf	___ftdiv@exp^0,c
  1678   000B08  5019               	movf	___ftdiv@exp^0,w,c
  1679   000B0A  A4D8               	btfss	status,2,c
  1680   000B0C  D007               	goto	l1721
  1681   000B0E  0E00               	movlw	0
  1682   000B10  6E0C               	movwf	?___ftdiv^0,c
  1683   000B12  0E00               	movlw	0
  1684   000B14  6E0D               	movwf	(?___ftdiv+1)^0,c
  1685   000B16  0E00               	movlw	0
  1686   000B18  6E0E               	movwf	(?___ftdiv+2)^0,c
  1687   000B1A  0012               	return	
  1688   000B1C                     l1721:
  1689   000B1C  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  1690   000B20  6A13               	clrf	(??___ftdiv+1)^0,c
  1691   000B22  6A14               	clrf	(??___ftdiv+2)^0,c
  1692   000B24  3410               	rlcf	(___ftdiv@f2+1)^0,w,c
  1693   000B26  3612               	rlcf	??___ftdiv^0,f,c
  1694   000B28  E301               	bnc	u941
  1695   000B2A  8013               	bsf	(??___ftdiv+1)^0,0,c
  1696   000B2C                     u941:
  1697   000B2C  5012               	movf	??___ftdiv^0,w,c
  1698   000B2E  6E1A               	movwf	___ftdiv@sign^0,c
  1699   000B30  501A               	movf	___ftdiv@sign^0,w,c
  1700   000B32  A4D8               	btfss	status,2,c
  1701   000B34  D007               	goto	l1727
  1702   000B36  0E00               	movlw	0
  1703   000B38  6E0C               	movwf	?___ftdiv^0,c
  1704   000B3A  0E00               	movlw	0
  1705   000B3C  6E0D               	movwf	(?___ftdiv+1)^0,c
  1706   000B3E  0E00               	movlw	0
  1707   000B40  6E0E               	movwf	(?___ftdiv+2)^0,c
  1708   000B42  0012               	return	
  1709   000B44                     l1727:
  1710   000B44  0E00               	movlw	0
  1711   000B46  6E16               	movwf	___ftdiv@f3^0,c
  1712   000B48  0E00               	movlw	0
  1713   000B4A  6E17               	movwf	(___ftdiv@f3+1)^0,c
  1714   000B4C  0E00               	movlw	0
  1715   000B4E  6E18               	movwf	(___ftdiv@f3+2)^0,c
  1716   000B50  501A               	movf	___ftdiv@sign^0,w,c
  1717   000B52  0F89               	addlw	137
  1718   000B54  5E19               	subwf	___ftdiv@exp^0,f,c
  1719   000B56  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1720   000B5A  5011               	movf	(___ftdiv@f2+2)^0,w,c
  1721   000B5C  1A1A               	xorwf	___ftdiv@sign^0,f,c
  1722   000B5E  0E80               	movlw	128
  1723   000B60  161A               	andwf	___ftdiv@sign^0,f,c
  1724   000B62  8E0D               	bsf	(___ftdiv@f1+1)^0,7,c
  1725   000B64  0EFF               	movlw	255
  1726   000B66  160C               	andwf	___ftdiv@f1^0,f,c
  1727   000B68  0EFF               	movlw	255
  1728   000B6A  160D               	andwf	(___ftdiv@f1+1)^0,f,c
  1729   000B6C  0E00               	movlw	0
  1730   000B6E  160E               	andwf	(___ftdiv@f1+2)^0,f,c
  1731   000B70  8E10               	bsf	(___ftdiv@f2+1)^0,7,c
  1732   000B72  0EFF               	movlw	255
  1733   000B74  160F               	andwf	___ftdiv@f2^0,f,c
  1734   000B76  0EFF               	movlw	255
  1735   000B78  1610               	andwf	(___ftdiv@f2+1)^0,f,c
  1736   000B7A  0E00               	movlw	0
  1737   000B7C  1611               	andwf	(___ftdiv@f2+2)^0,f,c
  1738   000B7E  0E18               	movlw	24
  1739   000B80  6E15               	movwf	___ftdiv@cntr^0,c
  1740   000B82                     l1747:
  1741   000B82  90D8               	bcf	status,0,c
  1742   000B84  3616               	rlcf	___ftdiv@f3^0,f,c
  1743   000B86  3617               	rlcf	(___ftdiv@f3+1)^0,f,c
  1744   000B88  3618               	rlcf	(___ftdiv@f3+2)^0,f,c
  1745   000B8A  500F               	movf	___ftdiv@f2^0,w,c
  1746   000B8C  5C0C               	subwf	___ftdiv@f1^0,w,c
  1747   000B8E  5010               	movf	(___ftdiv@f2+1)^0,w,c
  1748   000B90  580D               	subwfb	(___ftdiv@f1+1)^0,w,c
  1749   000B92  5011               	movf	(___ftdiv@f2+2)^0,w,c
  1750   000B94  580E               	subwfb	(___ftdiv@f1+2)^0,w,c
  1751   000B96  A0D8               	btfss	status,0,c
  1752   000B98  D007               	goto	l567
  1753   000B9A  500F               	movf	___ftdiv@f2^0,w,c
  1754   000B9C  5E0C               	subwf	___ftdiv@f1^0,f,c
  1755   000B9E  5010               	movf	(___ftdiv@f2+1)^0,w,c
  1756   000BA0  5A0D               	subwfb	(___ftdiv@f1+1)^0,f,c
  1757   000BA2  5011               	movf	(___ftdiv@f2+2)^0,w,c
  1758   000BA4  5A0E               	subwfb	(___ftdiv@f1+2)^0,f,c
  1759   000BA6  8016               	bsf	___ftdiv@f3^0,0,c
  1760   000BA8                     l567:
  1761   000BA8  90D8               	bcf	status,0,c
  1762   000BAA  360C               	rlcf	___ftdiv@f1^0,f,c
  1763   000BAC  360D               	rlcf	(___ftdiv@f1+1)^0,f,c
  1764   000BAE  360E               	rlcf	(___ftdiv@f1+2)^0,f,c
  1765   000BB0  2E15               	decfsz	___ftdiv@cntr^0,f,c
  1766   000BB2  D7E7               	goto	l1747
  1767   000BB4  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  1768   000BB8  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1769   000BBC  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1770   000BC0  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  1771   000BC4  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  1772   000BC8  ECC9  F006         	call	___ftpack	;wreg free
  1773   000BCC  C001  F00C         	movff	?___ftpack,?___ftdiv
  1774   000BD0  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1775   000BD4  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1776   000BD8  0012               	return		;funcret
  1777   000BDA                     __end_of___ftdiv:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function ___ftpack *****************
  1781 ;; Defined at:
  1782 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  arg             3    0[COMRAM] unsigned um
  1785 ;;  exp             1    3[COMRAM] unsigned char 
  1786 ;;  sign            1    4[COMRAM] unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  3    0[COMRAM] float 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1798 ;;      Params:         5       0       0       0       0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1800 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1801 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1802 ;;Total ram usage:        8 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		___ftdiv
  1808 ;;		___lwtoft
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text9
  1813   000D92                     __ptext9:
  1814                           	callstack 0
  1815   000D92                     ___ftpack:
  1816                           	callstack 28
  1817                           
  1818                           ;incstack = 0
  1819   000D92  5004               	movf	___ftpack@exp^0,w,c
  1820   000D94  B4D8               	btfsc	status,2,c
  1821   000D96  D005               	goto	u810
  1822   000D98  5001               	movf	___ftpack@arg^0,w,c
  1823   000D9A  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  1824   000D9C  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  1825   000D9E  A4D8               	btfss	status,2,c
  1826   000DA0  D00C               	goto	l1599
  1827   000DA2                     u810:
  1828   000DA2  0E00               	movlw	0
  1829   000DA4  6E01               	movwf	?___ftpack^0,c
  1830   000DA6  0E00               	movlw	0
  1831   000DA8  6E02               	movwf	(?___ftpack+1)^0,c
  1832   000DAA  0E00               	movlw	0
  1833   000DAC  6E03               	movwf	(?___ftpack+2)^0,c
  1834   000DAE  0012               	return	
  1835   000DB0                     l1597:
  1836   000DB0  2A04               	incf	___ftpack@exp^0,f,c
  1837   000DB2  90D8               	bcf	status,0,c
  1838   000DB4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  1839   000DB6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  1840   000DB8  3201               	rrcf	___ftpack@arg^0,f,c
  1841   000DBA                     l1599:
  1842   000DBA  0E00               	movlw	0
  1843   000DBC  1401               	andwf	___ftpack@arg^0,w,c
  1844   000DBE  6E06               	movwf	??___ftpack^0,c
  1845   000DC0  0E00               	movlw	0
  1846   000DC2  1402               	andwf	(___ftpack@arg+1)^0,w,c
  1847   000DC4  6E07               	movwf	(??___ftpack+1)^0,c
  1848   000DC6  0EFE               	movlw	254
  1849   000DC8  1403               	andwf	(___ftpack@arg+2)^0,w,c
  1850   000DCA  6E08               	movwf	(??___ftpack+2)^0,c
  1851   000DCC  5006               	movf	??___ftpack^0,w,c
  1852   000DCE  1007               	iorwf	(??___ftpack+1)^0,w,c
  1853   000DD0  1008               	iorwf	(??___ftpack+2)^0,w,c
  1854   000DD2  B4D8               	btfsc	status,2,c
  1855   000DD4  D00C               	goto	l1605
  1856   000DD6  D7EC               	goto	l1597
  1857   000DD8                     l1601:
  1858   000DD8  2A04               	incf	___ftpack@exp^0,f,c
  1859   000DDA  0E01               	movlw	1
  1860   000DDC  2601               	addwf	___ftpack@arg^0,f,c
  1861   000DDE  0E00               	movlw	0
  1862   000DE0  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  1863   000DE2  0E00               	movlw	0
  1864   000DE4  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  1865   000DE6  90D8               	bcf	status,0,c
  1866   000DE8  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  1867   000DEA  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  1868   000DEC  3201               	rrcf	___ftpack@arg^0,f,c
  1869   000DEE                     l1605:
  1870   000DEE  0E00               	movlw	0
  1871   000DF0  1401               	andwf	___ftpack@arg^0,w,c
  1872   000DF2  6E06               	movwf	??___ftpack^0,c
  1873   000DF4  0E00               	movlw	0
  1874   000DF6  1402               	andwf	(___ftpack@arg+1)^0,w,c
  1875   000DF8  6E07               	movwf	(??___ftpack+1)^0,c
  1876   000DFA  0EFF               	movlw	255
  1877   000DFC  1403               	andwf	(___ftpack@arg+2)^0,w,c
  1878   000DFE  6E08               	movwf	(??___ftpack+2)^0,c
  1879   000E00  5006               	movf	??___ftpack^0,w,c
  1880   000E02  1007               	iorwf	(??___ftpack+1)^0,w,c
  1881   000E04  1008               	iorwf	(??___ftpack+2)^0,w,c
  1882   000E06  B4D8               	btfsc	status,2,c
  1883   000E08  D006               	goto	l1609
  1884   000E0A  D7E6               	goto	l1601
  1885   000E0C                     l1607:
  1886   000E0C  0604               	decf	___ftpack@exp^0,f,c
  1887   000E0E  90D8               	bcf	status,0,c
  1888   000E10  3601               	rlcf	___ftpack@arg^0,f,c
  1889   000E12  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  1890   000E14  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  1891   000E16                     l1609:
  1892   000E16  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  1893   000E18  D003               	goto	u850
  1894   000E1A  0E02               	movlw	2
  1895   000E1C  6004               	cpfslt	___ftpack@exp^0,c
  1896   000E1E  D7F6               	goto	l1607
  1897   000E20                     u850:
  1898   000E20  A004               	btfss	___ftpack@exp^0,0,c
  1899   000E22  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  1900   000E24  90D8               	bcf	status,0,c
  1901   000E26  3204               	rrcf	___ftpack@exp^0,f,c
  1902   000E28  5004               	movf	___ftpack@exp^0,w,c
  1903   000E2A  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  1904   000E2C  5005               	movf	___ftpack@sign^0,w,c
  1905   000E2E  A4D8               	btfss	status,2,c
  1906   000E30  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  1907   000E32  C001  F001         	movff	___ftpack@arg,?___ftpack
  1908   000E36  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1909   000E3A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1910   000E3E  0012               	return		;funcret
  1911   000E40                     __end_of___ftpack:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _EscribeLCD_n8 *****************
  1915 ;; Defined at:
  1916 ;;		line 150 in file "LibLCDXC8.h"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  a               1    wreg     unsigned char 
  1919 ;;  b               1   15[COMRAM] unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  a               1   19[COMRAM] unsigned char 
  1922 ;;  unidad          1   18[COMRAM] unsigned char 
  1923 ;;  decena          1   17[COMRAM] unsigned char 
  1924 ;;  centena         1   16[COMRAM] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1934 ;;      Params:         1       0       0       0       0       0       0       0       0
  1935 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1937 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1938 ;;Total ram usage:        5 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 2
  1941 ;; This function calls:
  1942 ;;		_EnviaDato
  1943 ;;		_HabilitaLCD
  1944 ;;		_RetardoLCD
  1945 ;;		___lbdiv
  1946 ;;		___lbmod
  1947 ;; This function is called by:
  1948 ;;		_Imprimir
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text10
  1953   000BDA                     __ptext10:
  1954                           	callstack 0
  1955   000BDA                     _EscribeLCD_n8:
  1956                           	callstack 27
  1957                           
  1958                           ;incstack = 0
  1959                           ;EscribeLCD_n8@a stored from wreg
  1960   000BDA  6E14               	movwf	EscribeLCD_n8@a^0,c
  1961                           
  1962                           ;LibLCDXC8.h: 155: unsigned char centena,decena,unidad;;LibLCDXC8.h: 156: LATE0=1;
  1963   000BDC  808D               	bsf	3981,0,c	;volatile
  1964                           
  1965                           ;LibLCDXC8.h: 157: switch(b){
  1966   000BDE  D065               	goto	l1701
  1967   000BE0                     l1669:
  1968   000BE0  0E0A               	movlw	10
  1969   000BE2  6E01               	movwf	___lbmod@divisor^0,c
  1970   000BE4  5014               	movf	EscribeLCD_n8@a^0,w,c
  1971   000BE6  EC4B  F008         	call	___lbmod
  1972   000BEA  6E13               	movwf	EscribeLCD_n8@unidad^0,c
  1973                           
  1974                           ;LibLCDXC8.h: 159: EnviaDato(unidad+48);
  1975   000BEC  5013               	movf	EscribeLCD_n8@unidad^0,w,c
  1976   000BEE  0F30               	addlw	48
  1977   000BF0  ECB7  F008         	call	_EnviaDato
  1978                           
  1979                           ;LibLCDXC8.h: 160: HabilitaLCD();
  1980   000BF4  ECB0  F008         	call	_HabilitaLCD	;wreg free
  1981                           
  1982                           ;LibLCDXC8.h: 161: RetardoLCD(4);
  1983   000BF8  0E04               	movlw	4
  1984   000BFA  ECA0  F007         	call	_RetardoLCD
  1985                           
  1986                           ;LibLCDXC8.h: 162: break;
  1987   000BFE  0012               	return	
  1988   000C00                     l1675:
  1989   000C00  0E0A               	movlw	10
  1990   000C02  6E05               	movwf	___lbdiv@divisor^0,c
  1991   000C04  0E64               	movlw	100
  1992   000C06  6E01               	movwf	___lbmod@divisor^0,c
  1993   000C08  5014               	movf	EscribeLCD_n8@a^0,w,c
  1994   000C0A  EC4B  F008         	call	___lbmod
  1995   000C0E  EC13  F008         	call	___lbdiv
  1996   000C12  6E12               	movwf	EscribeLCD_n8@decena^0,c
  1997                           
  1998                           ;LibLCDXC8.h: 164: unidad=a%10;
  1999   000C14  0E0A               	movlw	10
  2000   000C16  6E01               	movwf	___lbmod@divisor^0,c
  2001   000C18  5014               	movf	EscribeLCD_n8@a^0,w,c
  2002   000C1A  EC4B  F008         	call	___lbmod
  2003   000C1E  6E13               	movwf	EscribeLCD_n8@unidad^0,c
  2004                           
  2005                           ;LibLCDXC8.h: 165: EnviaDato(decena+48);
  2006   000C20  5012               	movf	EscribeLCD_n8@decena^0,w,c
  2007   000C22  0F30               	addlw	48
  2008   000C24  ECB7  F008         	call	_EnviaDato
  2009                           
  2010                           ;LibLCDXC8.h: 166: HabilitaLCD();
  2011   000C28  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2012                           
  2013                           ;LibLCDXC8.h: 167: RetardoLCD(4);
  2014   000C2C  0E04               	movlw	4
  2015   000C2E  ECA0  F007         	call	_RetardoLCD
  2016                           
  2017                           ;LibLCDXC8.h: 168: EnviaDato(unidad+48);
  2018   000C32  5013               	movf	EscribeLCD_n8@unidad^0,w,c
  2019   000C34  0F30               	addlw	48
  2020   000C36  ECB7  F008         	call	_EnviaDato
  2021                           
  2022                           ;LibLCDXC8.h: 169: HabilitaLCD();
  2023   000C3A  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2024                           
  2025                           ;LibLCDXC8.h: 170: RetardoLCD(4);
  2026   000C3E  0E04               	movlw	4
  2027   000C40  ECA0  F007         	call	_RetardoLCD
  2028                           
  2029                           ;LibLCDXC8.h: 171: break;
  2030   000C44  0012               	return	
  2031   000C46                     l1685:
  2032   000C46  0E64               	movlw	100
  2033   000C48  6E05               	movwf	___lbdiv@divisor^0,c
  2034   000C4A  5014               	movf	EscribeLCD_n8@a^0,w,c
  2035   000C4C  EC13  F008         	call	___lbdiv
  2036   000C50  6E11               	movwf	EscribeLCD_n8@centena^0,c
  2037                           
  2038                           ;LibLCDXC8.h: 173: decena=(a%100)/10;
  2039   000C52  0E0A               	movlw	10
  2040   000C54  6E05               	movwf	___lbdiv@divisor^0,c
  2041   000C56  0E64               	movlw	100
  2042   000C58  6E01               	movwf	___lbmod@divisor^0,c
  2043   000C5A  5014               	movf	EscribeLCD_n8@a^0,w,c
  2044   000C5C  EC4B  F008         	call	___lbmod
  2045   000C60  EC13  F008         	call	___lbdiv
  2046   000C64  6E12               	movwf	EscribeLCD_n8@decena^0,c
  2047                           
  2048                           ;LibLCDXC8.h: 174: unidad=a%10;
  2049   000C66  0E0A               	movlw	10
  2050   000C68  6E01               	movwf	___lbmod@divisor^0,c
  2051   000C6A  5014               	movf	EscribeLCD_n8@a^0,w,c
  2052   000C6C  EC4B  F008         	call	___lbmod
  2053   000C70  6E13               	movwf	EscribeLCD_n8@unidad^0,c
  2054                           
  2055                           ;LibLCDXC8.h: 175: EnviaDato(centena+48);
  2056   000C72  5011               	movf	EscribeLCD_n8@centena^0,w,c
  2057   000C74  0F30               	addlw	48
  2058   000C76  ECB7  F008         	call	_EnviaDato
  2059                           
  2060                           ;LibLCDXC8.h: 176: HabilitaLCD();
  2061   000C7A  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2062                           
  2063                           ;LibLCDXC8.h: 177: RetardoLCD(4);
  2064   000C7E  0E04               	movlw	4
  2065   000C80  ECA0  F007         	call	_RetardoLCD
  2066                           
  2067                           ;LibLCDXC8.h: 178: EnviaDato(decena+48);
  2068   000C84  5012               	movf	EscribeLCD_n8@decena^0,w,c
  2069   000C86  0F30               	addlw	48
  2070   000C88  ECB7  F008         	call	_EnviaDato
  2071                           
  2072                           ;LibLCDXC8.h: 179: HabilitaLCD();
  2073   000C8C  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2074                           
  2075                           ;LibLCDXC8.h: 180: RetardoLCD(4);
  2076   000C90  0E04               	movlw	4
  2077   000C92  ECA0  F007         	call	_RetardoLCD
  2078                           
  2079                           ;LibLCDXC8.h: 181: EnviaDato(unidad+48);
  2080   000C96  5013               	movf	EscribeLCD_n8@unidad^0,w,c
  2081   000C98  0F30               	addlw	48
  2082   000C9A  ECB7  F008         	call	_EnviaDato
  2083                           
  2084                           ;LibLCDXC8.h: 182: HabilitaLCD();
  2085   000C9E  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2086                           
  2087                           ;LibLCDXC8.h: 183: RetardoLCD(4);
  2088   000CA2  0E04               	movlw	4
  2089   000CA4  ECA0  F007         	call	_RetardoLCD
  2090                           
  2091                           ;LibLCDXC8.h: 184: break;
  2092   000CA8  0012               	return	
  2093   000CAA                     l1701:
  2094   000CAA  5010               	movf	EscribeLCD_n8@b^0,w,c
  2095                           
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 3, Range of values is 1 to 3
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte           10     6 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102   000CAC  0A01               	xorlw	1	; case 1
  2103   000CAE  B4D8               	btfsc	status,2,c
  2104   000CB0  D797               	goto	l1669
  2105   000CB2  0A03               	xorlw	3	; case 2
  2106   000CB4  B4D8               	btfsc	status,2,c
  2107   000CB6  D7A4               	goto	l1675
  2108   000CB8  0A01               	xorlw	1	; case 3
  2109   000CBA  A4D8               	btfss	status,2,c
  2110   000CBC  0012               	return	
  2111   000CBE  D7C3               	goto	l1685
  2112   000CC0                     __end_of_EscribeLCD_n8:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function ___lbmod *****************
  2116 ;; Defined at:
  2117 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  dividend        1    wreg     unsigned char 
  2120 ;;  divisor         1    0[COMRAM] unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  dividend        1    1[COMRAM] unsigned char 
  2123 ;;  rem             1    3[COMRAM] unsigned char 
  2124 ;;  counter         1    2[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         1       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2137 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_EscribeLCD_n8
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text11
  2148   001096                     __ptext11:
  2149                           	callstack 0
  2150   001096                     ___lbmod:
  2151                           	callstack 28
  2152                           
  2153                           ;incstack = 0
  2154                           ;___lbmod@dividend stored from wreg
  2155   001096  6E02               	movwf	___lbmod@dividend^0,c
  2156   001098  0E08               	movlw	8
  2157   00109A  6E03               	movwf	___lbmod@counter^0,c
  2158   00109C  0E00               	movlw	0
  2159   00109E  6E04               	movwf	___lbmod@rem^0,c
  2160   0010A0                     l1653:
  2161   0010A0  90D8               	bcf	status,0,c
  2162   0010A2  3402               	rlcf	___lbmod@dividend^0,w,c
  2163   0010A4  3404               	rlcf	___lbmod@rem^0,w,c
  2164   0010A6  6E04               	movwf	___lbmod@rem^0,c
  2165   0010A8  90D8               	bcf	status,0,c
  2166   0010AA  3602               	rlcf	___lbmod@dividend^0,f,c
  2167   0010AC  5001               	movf	___lbmod@divisor^0,w,c
  2168   0010AE  5C04               	subwf	___lbmod@rem^0,w,c
  2169   0010B0  A0D8               	btfss	status,0,c
  2170   0010B2  D002               	goto	l1661
  2171   0010B4  5001               	movf	___lbmod@divisor^0,w,c
  2172   0010B6  5E04               	subwf	___lbmod@rem^0,f,c
  2173   0010B8                     l1661:
  2174   0010B8  2E03               	decfsz	___lbmod@counter^0,f,c
  2175   0010BA  D7F2               	goto	l1653
  2176   0010BC  5004               	movf	___lbmod@rem^0,w,c
  2177   0010BE  0012               	return		;funcret
  2178   0010C0                     __end_of___lbmod:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function ___lbdiv *****************
  2182 ;; Defined at:
  2183 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dividend        1    wreg     unsigned char 
  2186 ;;  divisor         1    4[COMRAM] unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  dividend        1    5[COMRAM] unsigned char 
  2189 ;;  quotient        1    7[COMRAM] unsigned char 
  2190 ;;  counter         1    6[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         1       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        4 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_EscribeLCD_n8
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text12
  2214   001026                     __ptext12:
  2215                           	callstack 0
  2216   001026                     ___lbdiv:
  2217                           	callstack 28
  2218                           
  2219                           ;incstack = 0
  2220                           ;___lbdiv@dividend stored from wreg
  2221   001026  6E06               	movwf	___lbdiv@dividend^0,c
  2222   001028  0E00               	movlw	0
  2223   00102A  6E08               	movwf	___lbdiv@quotient^0,c
  2224   00102C  5005               	movf	___lbdiv@divisor^0,w,c
  2225   00102E  B4D8               	btfsc	status,2,c
  2226   001030  D015               	goto	l1647
  2227   001032  0E01               	movlw	1
  2228   001034  6E07               	movwf	___lbdiv@counter^0,c
  2229   001036  D003               	goto	l1635
  2230   001038                     l1631:
  2231   001038  90D8               	bcf	status,0,c
  2232   00103A  3605               	rlcf	___lbdiv@divisor^0,f,c
  2233   00103C  2A07               	incf	___lbdiv@counter^0,f,c
  2234   00103E                     l1635:
  2235   00103E  AE05               	btfss	___lbdiv@divisor^0,7,c
  2236   001040  D7FB               	goto	l1631
  2237   001042                     u890:
  2238   001042  90D8               	bcf	status,0,c
  2239   001044  3608               	rlcf	___lbdiv@quotient^0,f,c
  2240   001046  5005               	movf	___lbdiv@divisor^0,w,c
  2241   001048  5C06               	subwf	___lbdiv@dividend^0,w,c
  2242   00104A  A0D8               	btfss	status,0,c
  2243   00104C  D003               	goto	l1643
  2244   00104E  5005               	movf	___lbdiv@divisor^0,w,c
  2245   001050  5E06               	subwf	___lbdiv@dividend^0,f,c
  2246   001052  8008               	bsf	___lbdiv@quotient^0,0,c
  2247   001054                     l1643:
  2248   001054  90D8               	bcf	status,0,c
  2249   001056  3205               	rrcf	___lbdiv@divisor^0,f,c
  2250   001058  2E07               	decfsz	___lbdiv@counter^0,f,c
  2251   00105A  D7F3               	goto	u890
  2252   00105C                     l1647:
  2253   00105C  5008               	movf	___lbdiv@quotient^0,w,c
  2254   00105E  0012               	return		;funcret
  2255   001060                     __end_of___lbdiv:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _Borrar *****************
  2259 ;; Defined at:
  2260 ;;		line 39 in file "Laboratorio4.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 4
  2281 ;; This function calls:
  2282 ;;		_DireccionaLCD
  2283 ;;		_MensajeLCD_Word
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;;		_Imprimir
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text13
  2291   00110A                     __ptext13:
  2292                           	callstack 0
  2293   00110A                     _Borrar:
  2294                           	callstack 25
  2295                           
  2296                           ;Laboratorio4.c: 40: DireccionaLCD(0x80);
  2297                           
  2298                           ;incstack = 0
  2299   00110A  0E80               	movlw	128
  2300   00110C  EC9B  F008         	call	_DireccionaLCD
  2301                           
  2302                           ;Laboratorio4.c: 41: MensajeLCD_Word("                ");
  2303   001110  0E01               	movlw	low STR_2
  2304   001112  6E05               	movwf	MensajeLCD_Word@a^0,c
  2305   001114  ECCB  F007         	call	_MensajeLCD_Word	;wreg free
  2306                           
  2307                           ;Laboratorio4.c: 42: DireccionaLCD(0x80);
  2308   001118  0E80               	movlw	128
  2309   00111A  EC9B  F008         	call	_DireccionaLCD
  2310   00111E  0012               	return		;funcret
  2311   001120                     __end_of_Borrar:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _MensajeLCD_Word *****************
  2315 ;; Defined at:
  2316 ;;		line 241 in file "LibLCDXC8.h"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  a               1    4[COMRAM] PTR unsigned char 
  2319 ;;		 -> STR_2(17), STR_1(11), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  i               2    6[COMRAM] int 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         1       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        4 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 3
  2338 ;; This function calls:
  2339 ;;		_EscribeLCD_c
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;;		_Borrar
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text14
  2347   000F96                     __ptext14:
  2348                           	callstack 0
  2349   000F96                     _MensajeLCD_Word:
  2350                           	callstack 27
  2351                           
  2352                           ;LibLCDXC8.h: 245: for(int i = 0; i<16; i++){
  2353                           
  2354                           ;incstack = 0
  2355   000F96  0E00               	movlw	0
  2356   000F98  6E08               	movwf	(MensajeLCD_Word@i+1)^0,c
  2357   000F9A  0E00               	movlw	0
  2358   000F9C  6E07               	movwf	MensajeLCD_Word@i^0,c
  2359   000F9E                     l1581:
  2360                           
  2361                           ;LibLCDXC8.h: 246: if(a[i]!=0){
  2362   000F9E  5005               	movf	MensajeLCD_Word@a^0,w,c
  2363   000FA0  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2364   000FA2  6E06               	movwf	??_MensajeLCD_Word^0,c
  2365   000FA4  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2366   000FA8                     	if	1	;There is more than 1 active tblptr byte
  2367   000FA8  0E08               	movlw	high __smallconst
  2368   000FAA  6EF7               	movwf	tblptrh,c
  2369   000FAC                     	endif
  2370   000FAC                     	if	0	;tblptru may be non-zero
  2371   000FAC                     	endif
  2372   000FAC                     	if	0	;tblptru may be non-zero
  2373   000FAC                     	endif
  2374   000FAC  0008               	tblrd		*
  2375   000FAE  50F5               	movf	tablat,w,c
  2376   000FB0  0900               	iorlw	0
  2377   000FB2  B4D8               	btfsc	status,2,c
  2378   000FB4  D00B               	goto	l1585
  2379                           
  2380                           ;LibLCDXC8.h: 247: EscribeLCD_c(a[i]);
  2381   000FB6  5005               	movf	MensajeLCD_Word@a^0,w,c
  2382   000FB8  2407               	addwf	MensajeLCD_Word@i^0,w,c
  2383   000FBA  6E06               	movwf	??_MensajeLCD_Word^0,c
  2384   000FBC  C006  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2385   000FC0                     	if	1	;There is more than 1 active tblptr byte
  2386   000FC0  0E08               	movlw	high __smallconst
  2387   000FC2  6EF7               	movwf	tblptrh,c
  2388   000FC4                     	endif
  2389   000FC4                     	if	0	;tblptru may be non-zero
  2390   000FC4                     	endif
  2391   000FC4                     	if	0	;tblptru may be non-zero
  2392   000FC4                     	endif
  2393   000FC4  0008               	tblrd		*
  2394   000FC6  50F5               	movf	tablat,w,c
  2395   000FC8  EC90  F008         	call	_EscribeLCD_c
  2396   000FCC                     l1585:
  2397   000FCC  4A07               	infsnz	MensajeLCD_Word@i^0,f,c
  2398   000FCE  2A08               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2399   000FD0  BE08               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2400   000FD2  D7E5               	goto	l1581
  2401   000FD4  5008               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2402   000FD6  E105               	bnz	u790
  2403   000FD8  0E10               	movlw	16
  2404   000FDA  5C07               	subwf	MensajeLCD_Word@i^0,w,c
  2405   000FDC  B0D8               	btfsc	status,0,c
  2406   000FDE  0012               	return	
  2407   000FE0  D7DE               	goto	l1581
  2408   000FE2                     u790:
  2409   000FE2  0012               	return		;funcret
  2410   000FE4                     __end_of_MensajeLCD_Word:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _EscribeLCD_c *****************
  2414 ;; Defined at:
  2415 ;;		line 140 in file "LibLCDXC8.h"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  a               1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  a               1    3[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 2
  2436 ;; This function calls:
  2437 ;;		_EnviaDato
  2438 ;;		_HabilitaLCD
  2439 ;;		_RetardoLCD
  2440 ;; This function is called by:
  2441 ;;		_MensajeLCD_Word
  2442 ;;		_Imprimir
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text15
  2447   001120                     __ptext15:
  2448                           	callstack 0
  2449   001120                     _EscribeLCD_c:
  2450                           	callstack 27
  2451                           
  2452                           ;incstack = 0
  2453                           ;EscribeLCD_c@a stored from wreg
  2454   001120  6E04               	movwf	EscribeLCD_c@a^0,c
  2455                           
  2456                           ;LibLCDXC8.h: 144: LATE0=1;
  2457   001122  808D               	bsf	3981,0,c	;volatile
  2458                           
  2459                           ;LibLCDXC8.h: 145: EnviaDato(a);
  2460   001124  5004               	movf	EscribeLCD_c@a^0,w,c
  2461   001126  ECB7  F008         	call	_EnviaDato
  2462                           
  2463                           ;LibLCDXC8.h: 146: HabilitaLCD();
  2464   00112A  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2465                           
  2466                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  2467   00112E  0E04               	movlw	4
  2468   001130  ECA0  F007         	call	_RetardoLCD
  2469   001134  0012               	return		;funcret
  2470   001136                     __end_of_EscribeLCD_c:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _DireccionaLCD *****************
  2474 ;; Defined at:
  2475 ;;		line 252 in file "LibLCDXC8.h"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  a               1    wreg     unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  a               1    3[COMRAM] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0
  2490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2493 ;;Total ram usage:        1 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 2
  2496 ;; This function calls:
  2497 ;;		_EnviaDato
  2498 ;;		_HabilitaLCD
  2499 ;;		_RetardoLCD
  2500 ;; This function is called by:
  2501 ;;		_Borrar
  2502 ;;		_Imprimir
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text16
  2507   001136                     __ptext16:
  2508                           	callstack 0
  2509   001136                     _DireccionaLCD:
  2510                           	callstack 27
  2511                           
  2512                           ;incstack = 0
  2513                           ;DireccionaLCD@a stored from wreg
  2514   001136  6E04               	movwf	DireccionaLCD@a^0,c
  2515                           
  2516                           ;LibLCDXC8.h: 255: LATE0=0;
  2517   001138  908D               	bcf	3981,0,c	;volatile
  2518                           
  2519                           ;LibLCDXC8.h: 256: EnviaDato(a);
  2520   00113A  5004               	movf	DireccionaLCD@a^0,w,c
  2521   00113C  ECB7  F008         	call	_EnviaDato
  2522                           
  2523                           ;LibLCDXC8.h: 257: HabilitaLCD();
  2524   001140  ECB0  F008         	call	_HabilitaLCD	;wreg free
  2525                           
  2526                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  2527   001144  0E04               	movlw	4
  2528   001146  ECA0  F007         	call	_RetardoLCD
  2529   00114A  0012               	return		;funcret
  2530   00114C                     __end_of_DireccionaLCD:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _EnviaDato *****************
  2534 ;; Defined at:
  2535 ;;		line 59 in file "LibLCDXC8.h"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  a               1    wreg     unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  a               1    2[COMRAM] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2549 ;;      Params:         0       0       0       0       0       0       0       0       0
  2550 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2552 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2553 ;;Total ram usage:        1 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 1
  2556 ;; This function calls:
  2557 ;;		_HabilitaLCD
  2558 ;;		_RetardoLCD
  2559 ;; This function is called by:
  2560 ;;		_InicializaLCD
  2561 ;;		_BorraLCD
  2562 ;;		_EscribeLCD_c
  2563 ;;		_EscribeLCD_n8
  2564 ;;		_DireccionaLCD
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text17
  2569   00116E                     __ptext17:
  2570                           	callstack 0
  2571   00116E                     _EnviaDato:
  2572                           	callstack 27
  2573                           
  2574                           ;incstack = 0
  2575                           ;EnviaDato@a stored from wreg
  2576   00116E  6E03               	movwf	EnviaDato@a^0,c
  2577                           
  2578                           ;LibLCDXC8.h: 68: LATD=a;
  2579                           
  2580                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2581   001170  C003  FF8C         	movff	EnviaDato@a,3980	;volatile
  2582   001174  0012               	return		;funcret
  2583   001176                     __end_of_EnviaDato:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _RetardoLCD *****************
  2587 ;; Defined at:
  2588 ;;		line 288 in file "LibLCDXC8.h"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  a               1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  a               1    1[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_EnviaDato
  2612 ;;		_InicializaLCD
  2613 ;;		_BorraLCD
  2614 ;;		_EscribeLCD_c
  2615 ;;		_EscribeLCD_n8
  2616 ;;		_DireccionaLCD
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text18
  2621   000F40                     __ptext18:
  2622                           	callstack 0
  2623   000F40                     _RetardoLCD:
  2624                           	callstack 28
  2625                           
  2626                           ;incstack = 0
  2627                           ;RetardoLCD@a stored from wreg
  2628   000F40  6E02               	movwf	RetardoLCD@a^0,c
  2629                           
  2630                           ;LibLCDXC8.h: 289: switch(a){
  2631   000F42  D01B               	goto	l989
  2632   000F44                     l979:
  2633   000F44  0E05               	movlw	5
  2634   000F46  6E01               	movwf	??_RetardoLCD^0,c
  2635   000F48  0EDE               	movlw	222
  2636   000F4A                     u1377:
  2637   000F4A  2EE8               	decfsz	wreg,f,c
  2638   000F4C  D7FE               	bra	u1377
  2639   000F4E  2E01               	decfsz	??_RetardoLCD^0,f,c
  2640   000F50  D7FC               	bra	u1377
  2641                           
  2642                           ;LibLCDXC8.h: 292: break;
  2643   000F52  0012               	return	
  2644   000F54                     l981:
  2645   000F54  0E53               	movlw	83
  2646   000F56                     u1387:
  2647   000F56  2EE8               	decfsz	wreg,f,c
  2648   000F58  D7FE               	bra	u1387
  2649   000F5A  F000               	nop	
  2650                           
  2651                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2652   000F5C  0E35               	movlw	53
  2653   000F5E                     u1397:
  2654   000F5E  2EE8               	decfsz	wreg,f,c
  2655   000F60  D7FE               	bra	u1397
  2656   000F62  F000               	nop	
  2657                           
  2658                           ;LibLCDXC8.h: 296: break;
  2659   000F64  0012               	return	
  2660   000F66                     l983:
  2661   000F66  0E08               	movlw	8
  2662   000F68                     u1407:
  2663   000F68  2EE8               	decfsz	wreg,f,c
  2664   000F6A  D7FE               	bra	u1407
  2665   000F6C  F000               	nop	
  2666                           
  2667                           ;LibLCDXC8.h: 299: break;
  2668   000F6E  0012               	return	
  2669   000F70                     l985:
  2670   000F70  0E03               	movlw	3
  2671   000F72                     u1417:
  2672   000F72  2EE8               	decfsz	wreg,f,c
  2673   000F74  D7FE               	bra	u1417
  2674   000F76  F000               	nop	
  2675                           
  2676                           ;LibLCDXC8.h: 302: break;
  2677   000F78  0012               	return	
  2678   000F7A                     l989:
  2679   000F7A  5002               	movf	RetardoLCD@a^0,w,c
  2680                           
  2681                           ; Switch size 1, requested type "simple"
  2682                           ; Number of cases is 4, Range of values is 1 to 4
  2683                           ; switch strategies available:
  2684                           ; Name         Instructions Cycles
  2685                           ; simple_byte           13     7 (average)
  2686                           ;	Chosen strategy is simple_byte
  2687   000F7C  0A01               	xorlw	1	; case 1
  2688   000F7E  B4D8               	btfsc	status,2,c
  2689   000F80  D7E1               	goto	l979
  2690   000F82  0A03               	xorlw	3	; case 2
  2691   000F84  B4D8               	btfsc	status,2,c
  2692   000F86  D7E6               	goto	l981
  2693   000F88  0A01               	xorlw	1	; case 3
  2694   000F8A  B4D8               	btfsc	status,2,c
  2695   000F8C  D7EC               	goto	l983
  2696   000F8E  0A07               	xorlw	7	; case 4
  2697   000F90  A4D8               	btfss	status,2,c
  2698   000F92  0012               	return	
  2699   000F94  D7ED               	goto	l985
  2700   000F96                     __end_of_RetardoLCD:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _HabilitaLCD *****************
  2704 ;; Defined at:
  2705 ;;		line 105 in file "LibLCDXC8.h"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_EnviaDato
  2729 ;;		_InicializaLCD
  2730 ;;		_BorraLCD
  2731 ;;		_EscribeLCD_c
  2732 ;;		_EscribeLCD_n8
  2733 ;;		_DireccionaLCD
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text19
  2738   001160                     __ptext19:
  2739                           	callstack 0
  2740   001160                     _HabilitaLCD:
  2741                           	callstack 28
  2742                           
  2743                           ;LibLCDXC8.h: 107: LATE1=1;
  2744                           
  2745                           ;incstack = 0
  2746   001160  828D               	bsf	3981,1,c	;volatile
  2747                           
  2748                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2749   001162  0E03               	movlw	3
  2750   001164                     u1427:
  2751   001164  2EE8               	decfsz	wreg,f,c
  2752   001166  D7FE               	bra	u1427
  2753   001168  F000               	nop	
  2754                           
  2755                           ;LibLCDXC8.h: 110: LATE1=0;
  2756   00116A  928D               	bcf	3981,1,c	;volatile
  2757   00116C  0012               	return		;funcret
  2758   00116E                     __end_of_HabilitaLCD:
  2759                           	callstack 0
  2760                           
  2761                           	psect	rparam
  2762   000000                     
  2763                           	psect	idloc
  2764                           
  2765                           ;Config register IDLOC0 @ 0x200000
  2766                           ;	unspecified, using default values
  2767   200000                     	org	2097152
  2768   200000  FF                 	db	255
  2769                           
  2770                           ;Config register IDLOC1 @ 0x200001
  2771                           ;	unspecified, using default values
  2772   200001                     	org	2097153
  2773   200001  FF                 	db	255
  2774                           
  2775                           ;Config register IDLOC2 @ 0x200002
  2776                           ;	unspecified, using default values
  2777   200002                     	org	2097154
  2778   200002  FF                 	db	255
  2779                           
  2780                           ;Config register IDLOC3 @ 0x200003
  2781                           ;	unspecified, using default values
  2782   200003                     	org	2097155
  2783   200003  FF                 	db	255
  2784                           
  2785                           ;Config register IDLOC4 @ 0x200004
  2786                           ;	unspecified, using default values
  2787   200004                     	org	2097156
  2788   200004  FF                 	db	255
  2789                           
  2790                           ;Config register IDLOC5 @ 0x200005
  2791                           ;	unspecified, using default values
  2792   200005                     	org	2097157
  2793   200005  FF                 	db	255
  2794                           
  2795                           ;Config register IDLOC6 @ 0x200006
  2796                           ;	unspecified, using default values
  2797   200006                     	org	2097158
  2798   200006  FF                 	db	255
  2799                           
  2800                           ;Config register IDLOC7 @ 0x200007
  2801                           ;	unspecified, using default values
  2802   200007                     	org	2097159
  2803   200007  FF                 	db	255
  2804                           
  2805                           	psect	config
  2806                           
  2807                           ;Config register CONFIG1L @ 0x300000
  2808                           ;	unspecified, using default values
  2809                           ;	PLL Prescaler Selection bits
  2810                           ;	PLLDIV = 0x0, unprogrammed default
  2811                           ;	System Clock Postscaler Selection bits
  2812                           ;	CPUDIV = 0x0, unprogrammed default
  2813                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2814                           ;	USBDIV = 0x0, unprogrammed default
  2815   300000                     	org	3145728
  2816   300000  00                 	db	0
  2817                           
  2818                           ;Config register CONFIG1H @ 0x300001
  2819                           ;	Oscillator Selection bits
  2820                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2821                           ;	Fail-Safe Clock Monitor Enable bit
  2822                           ;	FCMEN = 0x0, unprogrammed default
  2823                           ;	Internal/External Oscillator Switchover bit
  2824                           ;	IESO = 0x0, unprogrammed default
  2825   300001                     	org	3145729
  2826   300001  09                 	db	9
  2827                           
  2828                           ;Config register CONFIG2L @ 0x300002
  2829                           ;	unspecified, using default values
  2830                           ;	Power-up Timer Enable bit
  2831                           ;	PWRT = 0x1, unprogrammed default
  2832                           ;	Brown-out Reset Enable bits
  2833                           ;	BOR = 0x3, unprogrammed default
  2834                           ;	Brown-out Reset Voltage bits
  2835                           ;	BORV = 0x3, unprogrammed default
  2836                           ;	USB Voltage Regulator Enable bit
  2837                           ;	VREGEN = 0x0, unprogrammed default
  2838   300002                     	org	3145730
  2839   300002  1F                 	db	31
  2840                           
  2841                           ;Config register CONFIG2H @ 0x300003
  2842                           ;	Watchdog Timer Enable bit
  2843                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2844                           ;	Watchdog Timer Postscale Select bits
  2845                           ;	WDTPS = 0xF, unprogrammed default
  2846   300003                     	org	3145731
  2847   300003  1E                 	db	30
  2848                           
  2849                           ; Padding undefined space
  2850   300004                     	org	3145732
  2851   300004  FF                 	db	255
  2852                           
  2853                           ;Config register CONFIG3H @ 0x300005
  2854                           ;	unspecified, using default values
  2855                           ;	CCP2 MUX bit
  2856                           ;	CCP2MX = 0x1, unprogrammed default
  2857                           ;	PORTB A/D Enable bit
  2858                           ;	PBADEN = 0x1, unprogrammed default
  2859                           ;	Low-Power Timer 1 Oscillator Enable bit
  2860                           ;	LPT1OSC = 0x0, unprogrammed default
  2861                           ;	MCLR Pin Enable bit
  2862                           ;	MCLRE = 0x1, unprogrammed default
  2863   300005                     	org	3145733
  2864   300005  83                 	db	131
  2865                           
  2866                           ;Config register CONFIG4L @ 0x300006
  2867                           ;	unspecified, using default values
  2868                           ;	Stack Full/Underflow Reset Enable bit
  2869                           ;	STVREN = 0x1, unprogrammed default
  2870                           ;	Single-Supply ICSP Enable bit
  2871                           ;	LVP = 0x1, unprogrammed default
  2872                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2873                           ;	ICPRT = 0x0, unprogrammed default
  2874                           ;	Extended Instruction Set Enable bit
  2875                           ;	XINST = 0x0, unprogrammed default
  2876                           ;	Background Debugger Enable bit
  2877                           ;	DEBUG = 0x1, unprogrammed default
  2878   300006                     	org	3145734
  2879   300006  85                 	db	133
  2880                           
  2881                           ; Padding undefined space
  2882   300007                     	org	3145735
  2883   300007  FF                 	db	255
  2884                           
  2885                           ;Config register CONFIG5L @ 0x300008
  2886                           ;	unspecified, using default values
  2887                           ;	Code Protection bit
  2888                           ;	CP0 = 0x1, unprogrammed default
  2889                           ;	Code Protection bit
  2890                           ;	CP1 = 0x1, unprogrammed default
  2891                           ;	Code Protection bit
  2892                           ;	CP2 = 0x1, unprogrammed default
  2893                           ;	Code Protection bit
  2894                           ;	CP3 = 0x1, unprogrammed default
  2895   300008                     	org	3145736
  2896   300008  0F                 	db	15
  2897                           
  2898                           ;Config register CONFIG5H @ 0x300009
  2899                           ;	unspecified, using default values
  2900                           ;	Boot Block Code Protection bit
  2901                           ;	CPB = 0x1, unprogrammed default
  2902                           ;	Data EEPROM Code Protection bit
  2903                           ;	CPD = 0x1, unprogrammed default
  2904   300009                     	org	3145737
  2905   300009  C0                 	db	192
  2906                           
  2907                           ;Config register CONFIG6L @ 0x30000A
  2908                           ;	unspecified, using default values
  2909                           ;	Write Protection bit
  2910                           ;	WRT0 = 0x1, unprogrammed default
  2911                           ;	Write Protection bit
  2912                           ;	WRT1 = 0x1, unprogrammed default
  2913                           ;	Write Protection bit
  2914                           ;	WRT2 = 0x1, unprogrammed default
  2915                           ;	Write Protection bit
  2916                           ;	WRT3 = 0x1, unprogrammed default
  2917   30000A                     	org	3145738
  2918   30000A  0F                 	db	15
  2919                           
  2920                           ;Config register CONFIG6H @ 0x30000B
  2921                           ;	unspecified, using default values
  2922                           ;	Configuration Register Write Protection bit
  2923                           ;	WRTC = 0x1, unprogrammed default
  2924                           ;	Boot Block Write Protection bit
  2925                           ;	WRTB = 0x1, unprogrammed default
  2926                           ;	Data EEPROM Write Protection bit
  2927                           ;	WRTD = 0x1, unprogrammed default
  2928   30000B                     	org	3145739
  2929   30000B  E0                 	db	224
  2930                           
  2931                           ;Config register CONFIG7L @ 0x30000C
  2932                           ;	unspecified, using default values
  2933                           ;	Table Read Protection bit
  2934                           ;	EBTR0 = 0x1, unprogrammed default
  2935                           ;	Table Read Protection bit
  2936                           ;	EBTR1 = 0x1, unprogrammed default
  2937                           ;	Table Read Protection bit
  2938                           ;	EBTR2 = 0x1, unprogrammed default
  2939                           ;	Table Read Protection bit
  2940                           ;	EBTR3 = 0x1, unprogrammed default
  2941   30000C                     	org	3145740
  2942   30000C  0F                 	db	15
  2943                           
  2944                           ;Config register CONFIG7H @ 0x30000D
  2945                           ;	unspecified, using default values
  2946                           ;	Boot Block Table Read Protection bit
  2947                           ;	EBTRB = 0x1, unprogrammed default
  2948   30000D                     	org	3145741
  2949   30000D  40                 	db	64
  2950                           tosu	equ	0xFFF
  2951                           tosh	equ	0xFFE
  2952                           tosl	equ	0xFFD
  2953                           stkptr	equ	0xFFC
  2954                           pclatu	equ	0xFFB
  2955                           pclath	equ	0xFFA
  2956                           pcl	equ	0xFF9
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           indf0	equ	0xFEF
  2964                           postinc0	equ	0xFEE
  2965                           postdec0	equ	0xFED
  2966                           preinc0	equ	0xFEC
  2967                           plusw0	equ	0xFEB
  2968                           fsr0h	equ	0xFEA
  2969                           fsr0l	equ	0xFE9
  2970                           wreg	equ	0xFE8
  2971                           indf1	equ	0xFE7
  2972                           postinc1	equ	0xFE6
  2973                           postdec1	equ	0xFE5
  2974                           preinc1	equ	0xFE4
  2975                           plusw1	equ	0xFE3
  2976                           fsr1h	equ	0xFE2
  2977                           fsr1l	equ	0xFE1
  2978                           bsr	equ	0xFE0
  2979                           indf2	equ	0xFDF
  2980                           postinc2	equ	0xFDE
  2981                           postdec2	equ	0xFDD
  2982                           preinc2	equ	0xFDC
  2983                           plusw2	equ	0xFDB
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _EscribeLCD_n8->___fttol
    ___lbdiv->___lbmod
    _Borrar->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10298
                                             27 COMRAM     2     2      0
                           _BorraLCD
                             _Borrar
                           _Imprimir
                      _InicializaLCD
                        _LeerTeclado
                    _MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir                                             1     1      0    9231
                                             26 COMRAM     1     1      0
                             _Borrar
                      _DireccionaLCD
                       _EscribeLCD_c
                      _EscribeLCD_n8
                            ___ftdiv
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2940
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3326
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2766
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1372
                                             15 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___fttol (ARG)
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Borrar                                               0     0      0     466
                      _DireccionaLCD
                    _MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Word                                      4     3      1     376
                                              4 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              3 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _Borrar
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _MensajeLCD_Word
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
   _Imprimir
     _Borrar
     _DireccionaLCD
     _EscribeLCD_c
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___fttol (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
     ___lwtoft
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Word

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      2D       1       47.4%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      28        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 15 14:34:52 2023

                      _d 001E                        _i 0021                        _r 0027  
                     _n1 0025                       _n2 0023               EnviaDato@a 0003  
                     _op 002C      ___wmul@multiplicand 0003            ??_LeerTeclado 0001  
                    l201 0E7E                      l211 0EAA                      l203 0E86  
                    l221 0ED6                      l213 0EB2                      l205 0E8E  
          _InicializaLCD 0FE4                      l217 0EC6                      l209 0EA2  
                    l218 0EDE                      l219 0ECE                      l192 0E5A  
                    l195 0E62                      l197 0E6A                      l567 0BA8  
                    l981 0F54                      l983 0F66                      l985 0F70  
                    l979 0F44                      l989 0F7A                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RB7 007C0F  
                    u310 0E4E                      u810 0DA2                      u921 0B04  
                    u850 0E20                      u941 0B2C                      u790 0FE2  
                    u890 1042                      u971 0CD0                      u980 0CDA  
                    u990 0D0A                      u995 0D02                      _n1c 002B  
                    _n2c 002A                      wreg 000FE8             ___ftdiv@cntr 0015  
           ___ftdiv@sign 001A                     l1341 0E72                     l1601 0DD8  
                   l1701 0CAA                     l1605 0DEE                     l1631 1038  
                   l1607 0E0C                     l1609 0E16                     l1721 0B1C  
                   l1369 0E96                     l1643 1054                     l1635 103E  
                   l1803 0D80                     l1581 0F9E                     l1661 10B8  
                   l1653 10A0                     l1397 0EBA                     l1647 105C  
                   l1727 0B44                     l1585 0FCC                     l1817 0852  
                   l1675 0C00                     l1747 0B82                     l1923 0AD8  
                   l1915 0A7A                     l1685 0C46                     l1669 0BE0  
                   l1597 0DB0                     l1909 0A52                     l1845 08CA  
                   l1837 08A4                     l1599 0DBA                     l1767 0CEC  
                   l1919 0AB6                     l1871 095E                     l1855 08F8  
                   l1951 0F1E                     l1785 0D40                     l1865 0926  
                   l1795 0D58                     l1883 09C8                     l1867 0932  
                   l1797 0D64                     l1789 0D50                     l1877 09B0  
                   l1869 0940                     l1893 09EA                     l1895 0A06  
                   l1889 09E0                     STR_1 0812                     STR_2 0801  
                   u1030 0D6A                     u1130 0892                     u1300 0A5E  
                   u1310 0A6C                     u1320 0A7A                     u1080 086A  
                   u1270 0A18                     _LATB 000F8A                     u1407 0F68  
                   u1280 0A26                     _LATD 000F8C                     u1417 0F72  
                   u1290 0A34                     u1427 1164                     u1357 0F0E  
                   u1367 0F2E                     u1377 0F4A                     u1387 0F56  
                   u1397 0F5E                     _RBPU 007F8F           ??_EscribeLCD_c 0004  
                   _main 0EE2             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   fsr1l 000FE1                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000             ___fttol@exp1 000F  
           ___fttol@lval 000B           ?_InicializaLCD 0001                    ?_main 0001  
        __end_of___lbdiv 1060            EscribeLCD_c@a 0004          __end_of___lbmod 10C0  
        __end_of___ftdiv 0BDA          __end_of___fttol 0D92                    _LATE0 007C68  
                  _LATE1 007C69                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96          ??_EscribeLCD_n8 0011                    _Tecla 0029  
    __end_of_LeerTeclado 0EE2            ___ftpack@sign 0005                    tablat 000FF5  
            _HabilitaLCD 1160                    status 000FD8          ___lbdiv@divisor 0005  
        ___lbdiv@counter 0007         __end_of_BorraLCD 1160          __initialization 1060  
           __end_of_main 0F40         __end_of_Imprimir 0AF4                   ??_main 001C  
          ___fttol@sign1 000A            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0004           EscribeLCD_n8@a 0014           EscribeLCD_n8@b 0010  
       __end_of___ftpack 0E40         __end_of___lwtoft 110A    __end_of_DireccionaLCD 114C  
             _RetardoLCD 0F40                   _Borrar 110A     EscribeLCD_n8@centena 0011  
                 ___wmul 10C0                ??___lbdiv 0006                ??___lbmod 0002  
              ??___ftdiv 0012                ??___fttol 0005          ??_InicializaLCD 0004  
                 clear_0 1086                   isa$std 000001     __end_of_EscribeLCD_c 1136  
            _LeerTeclado 0E40             __pdataCOMRAM 002A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       ___lbdiv@dividend 0006          ___lbmod@divisor 0001               __accesstop 0060  
__end_of__initialization 108C          ___lbmod@counter 0003            ___rparam_used 000001  
             ___ftdiv@f1 000C               ___ftdiv@f2 000F               ___ftdiv@f3 0016  
             ___fttol@f1 0001           __pcstackCOMRAM 0001        __end_of_EnviaDato 1176  
       ___lbdiv@quotient 0008               ___lwtoft@c 0009                ?_BorraLCD 0001  
            ?_RetardoLCD 0001                ?_Imprimir 0001              RetardoLCD@a 0002  
                ?_Borrar 0001                  ?___wmul 0001                ?___ftpack 0001  
              ?___lwtoft 0009               ??_BorraLCD 0004        ??_MensajeLCD_Word 0006  
           ?_HabilitaLCD 0001               ??_Imprimir 001B                  __Hparam 0000  
                __Lparam 0000                  ___lbdiv 1026                  ___lbmod 1096  
                ___ftdiv 0AF4                  ___fttol 0CC0             __psmallconst 0800  
                __pcinit 1060               ??___ftpack 0006                  __ramtop 0800  
                __ptext0 0EE2                  __ptext1 0E40                  __ptext2 0FE4  
                __ptext3 114C                  __ptext4 081E                  __ptext5 10C0  
                __ptext6 10E6                  __ptext7 0CC0                  __ptext8 0AF4  
                __ptext9 0D92               ??___lwtoft 000C    __end_of_EscribeLCD_n8 0CC0  
   end_of_initialization 108C            __Lmediumconst 0000             _EscribeLCD_c 1120  
                postdec1 000FE5                  postinc0 000FEE             ?_LeerTeclado 0001  
       ___lbmod@dividend 0002              ___lbmod@rem 0004              ___ftdiv@exp 0019  
         __end_of_Borrar 1120           __end_of___wmul 10E6            __pidataCOMRAM 1176  
  __end_of_InicializaLCD 1026                _EnviaDato 116E      start_initialization 1060  
           ??_RetardoLCD 0001                 ??_Borrar 0009      EscribeLCD_n8@decena 0012  
               ??___wmul 0005      EscribeLCD_n8@unidad 0013          _MensajeLCD_Word 0F96  
             ?_EnviaDato 0001              __pbssCOMRAM 001E       __end_of_RetardoLCD 0F96  
       MensajeLCD_Word@a 0005         MensajeLCD_Word@i 0007            _DireccionaLCD 1136  
               ?___lbdiv 0005                 ?___lbmod 0001                 ?___ftdiv 000C  
               ?___fttol 0001              __smallconst 0800           ___wmul@product 0005  
         ?_DireccionaLCD 0001  __end_of_MensajeLCD_Word 0FE4        ___wmul@multiplier 0001  
            ??_EnviaDato 0003            Imprimir@Valor 001B                 _BorraLCD 114C  
              copy_data0 1074                 _Imprimir 081E                 __Hrparam 0000  
               __Lrparam 0000                 ___ftpack 0D92                 ___lwtoft 10E6  
               __ptext10 0BDA                 __ptext11 1096                 __ptext12 1026  
               __ptext13 110A                 __ptext14 0F96                 __ptext15 1120  
               __ptext16 1136                 __ptext17 116E                 __ptext18 0F40  
               __ptext19 1160          ??_DireccionaLCD 0004                 _interfaz 002D  
               isa$xinst 000000         ?_MensajeLCD_Word 0005            _EscribeLCD_n8 0BDA  
          ??_HabilitaLCD 0001           ?_EscribeLCD_n8 0010            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 116E  
